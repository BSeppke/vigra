<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="classvigra_1_1StandardAccessor" kind="class" prot="public">
    <compoundname>vigra::StandardAccessor</compoundname>
    <includes refid="accessor_8hxx" local="no">vigra/accessor.hxx</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>VALUETYPE</declname>
        <defname>VALUETYPE</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classvigra_1_1StandardAccessor_1ad81add7f462b51d2bedbccd43c12e32a" prot="public" static="no">
        <type>VALUETYPE</type>
        <definition>typedef VALUETYPE value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the value_type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" line="137" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" bodystart="137" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvigra_1_1StandardAccessor_1a7185a8540aa9b9eff7646eaf17da2b33" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ITERATOR</type>
          </param>
        </templateparamlist>
        <type>VALUETYPE const &amp;</type>
        <definition>VALUETYPE const&amp; operator()</definition>
        <argsstring>(ITERATOR const &amp;i) const </argsstring>
        <name>operator()</name>
        <param>
          <type>ITERATOR const &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>read the current data item </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" line="142" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1StandardAccessor_1ab04eb46243731d05b605996d0d423692" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>VALUETYPE const &amp;</type>
        <definition>VALUETYPE const&amp; operator()</definition>
        <argsstring>(VALUETYPE const *i) const </argsstring>
        <name>operator()</name>
        <param>
          <type>VALUETYPE const *</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" line="144" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" bodystart="144" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1StandardAccessor_1ac33fe3dcf9a78edeb4c32a423acfe2e2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ITERATOR</type>
          </param>
          <param>
            <type>class DIFFERENCE</type>
          </param>
        </templateparamlist>
        <type>VALUETYPE const &amp;</type>
        <definition>VALUETYPE const&amp; operator()</definition>
        <argsstring>(ITERATOR const &amp;i, DIFFERENCE const &amp;diff) const </argsstring>
        <name>operator()</name>
        <param>
          <type>ITERATOR const &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>DIFFERENCE const &amp;</type>
          <declname>diff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>read the data item at an offset (can be 1D or 2D or higher order difference). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" line="150" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1StandardAccessor_1a7cb2c9deaa4edb5bf641f1a190c76685" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class ITERATOR</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void set</definition>
        <argsstring>(V const &amp;value, ITERATOR const &amp;i) const </argsstring>
        <name>set</name>
        <param>
          <type>V const &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>ITERATOR const &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write the current data item. The type <computeroutput>V</computeroutput> of the passed in <computeroutput>value</computeroutput> is automatically converted to <computeroutput>VALUETYPE</computeroutput>. In case of a conversion floating point -&gt; integral this includes rounding and clipping. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" line="160" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" bodystart="159" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1StandardAccessor_1a3f5b81992ea9ecceb42c0cd607074355" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class ITERATOR</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void set</definition>
        <argsstring>(V const &amp;value, ITERATOR &amp;i) const </argsstring>
        <name>set</name>
        <param>
          <type>V const &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>ITERATOR &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" line="165" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" bodystart="164" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1StandardAccessor_1a548cdb2243d69b4cce0fa66084d0bee9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class ITERATOR</type>
          </param>
          <param>
            <type>class DIFFERENCE</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void set</definition>
        <argsstring>(V const &amp;value, ITERATOR const &amp;i, DIFFERENCE const &amp;diff) const </argsstring>
        <name>set</name>
        <param>
          <type>V const &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>ITERATOR const &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>DIFFERENCE const &amp;</type>
          <declname>diff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write the data item at an offset (can be 1D or 2D or higher order difference).. The type <computeroutput>V</computeroutput> of the passed in <computeroutput>value</computeroutput> is automatically converted to <computeroutput>VALUETYPE</computeroutput>. In case of a conversion floating point -&gt; integral this includes rounding and clipping. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" line="174" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" bodystart="173" bodyend="176"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Encapsulate access to the values an iterator points to. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="classvigra_1_1StandardAccessor" kindref="compound">StandardAccessor</ref> is a trivial accessor that simply encapsulates the iterator&apos;s operator*() and operator[]() in its read and write functions. It passes its arguments <emphasis>by reference</emphasis>. If you want to return items by value, you must use <ref refid="classvigra_1_1StandardValueAccessor" kindref="compound">StandardValueAccessor</ref> instead of <ref refid="classvigra_1_1StandardAccessor" kindref="compound">StandardAccessor</ref>. Both accessors have different optimization properties <ndash/> <ref refid="classvigra_1_1StandardAccessor" kindref="compound">StandardAccessor</ref> is usually faster for compound pixel types, while <ref refid="classvigra_1_1StandardValueAccessor" kindref="compound">StandardValueAccessor</ref> is faster for the built-in types.</para><para>When a floating point number is assigned by means of an accessor with integral value_type, the value is rounded and clipped as appropriate.</para><para><bold>#include</bold> &lt;<ref refid="accessor_8hxx_source" kindref="compound">vigra/accessor.hxx</ref>&gt;<linebreak/>
 Namespace: vigra </para>    </detaileddescription>
    <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" line="133" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" bodystart="132" bodyend="177"/>
    <listofallmembers>
      <member refid="classvigra_1_1StandardAccessor_1a7185a8540aa9b9eff7646eaf17da2b33" prot="public" virt="non-virtual"><scope>vigra::StandardAccessor</scope><name>operator()</name></member>
      <member refid="classvigra_1_1StandardAccessor_1ab04eb46243731d05b605996d0d423692" prot="public" virt="non-virtual"><scope>vigra::StandardAccessor</scope><name>operator()</name></member>
      <member refid="classvigra_1_1StandardAccessor_1ac33fe3dcf9a78edeb4c32a423acfe2e2" prot="public" virt="non-virtual"><scope>vigra::StandardAccessor</scope><name>operator()</name></member>
      <member refid="classvigra_1_1StandardAccessor_1a7cb2c9deaa4edb5bf641f1a190c76685" prot="public" virt="non-virtual"><scope>vigra::StandardAccessor</scope><name>set</name></member>
      <member refid="classvigra_1_1StandardAccessor_1a3f5b81992ea9ecceb42c0cd607074355" prot="public" virt="non-virtual"><scope>vigra::StandardAccessor</scope><name>set</name></member>
      <member refid="classvigra_1_1StandardAccessor_1a548cdb2243d69b4cce0fa66084d0bee9" prot="public" virt="non-virtual"><scope>vigra::StandardAccessor</scope><name>set</name></member>
      <member refid="classvigra_1_1StandardAccessor_1ad81add7f462b51d2bedbccd43c12e32a" prot="public" virt="non-virtual"><scope>vigra::StandardAccessor</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
