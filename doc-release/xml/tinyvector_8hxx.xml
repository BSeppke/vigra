<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="tinyvector_8hxx" kind="file">
    <compoundname>tinyvector.hxx</compoundname>
    <includes local="no">cmath</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">iosfwd</includes>
    <includes local="no">algorithm</includes>
    <includes refid="config_8hxx" local="yes">config.hxx</includes>
    <includes refid="error_8hxx" local="yes">error.hxx</includes>
    <includes refid="metaprogramming_8hxx" local="yes">metaprogramming.hxx</includes>
    <includes refid="numerictraits_8hxx" local="yes">numerictraits.hxx</includes>
    <includes refid="memory_8hxx" local="yes">memory.hxx</includes>
    <includes refid="mathutil_8hxx" local="yes">mathutil.hxx</includes>
    <includes refid="diff2d_8hxx" local="yes">diff2d.hxx</includes>
    <includedby refid="multi__array_8hxx" local="yes">vigra/multi_array.hxx</includedby>
    <includedby refid="rgbvalue_8hxx" local="yes">vigra/rgbvalue.hxx</includedby>
    <includedby refid="multi__iterator_8hxx" local="yes">vigra/multi_iterator.hxx</includedby>
    <includedby refid="affine__registration_8hxx" local="yes">vigra/affine_registration.hxx</includedby>
    <includedby refid="splineimageview_8hxx" local="yes">vigra/splineimageview.hxx</includedby>
    <includedby refid="affinegeometry_8hxx" local="yes">vigra/affinegeometry.hxx</includedby>
    <includedby refid="box_8hxx" local="yes">vigra/box.hxx</includedby>
    <includedby refid="coordinate__iterator_8hxx" local="yes">vigra/coordinate_iterator.hxx</includedby>
    <includedby refid="impex_8hxx" local="yes">vigra/impex.hxx</includedby>
    <includedby refid="invariant__features3D_8hxx" local="yes">vigra/invariant_features3D.hxx</includedby>
    <includedby refid="quaternion_8hxx" local="yes">vigra/quaternion.hxx</includedby>
    <includedby refid="voxelneighborhood_8hxx" local="yes">vigra/voxelneighborhood.hxx</includedby>
    <includedby refid="meshgrid_8hxx" local="yes">vigra/meshgrid.hxx</includedby>
    <includedby refid="multi__convolution_8hxx" local="yes">vigra/multi_convolution.hxx</includedby>
    <includedby refid="multi__math_8hxx" local="yes">vigra/multi_math.hxx</includedby>
    <includedby refid="noise__normalization_8hxx" local="yes">vigra/noise_normalization.hxx</includedby>
    <includedby refid="python__utility_8hxx" local="yes">vigra/python_utility.hxx</includedby>
    <includedby refid="wigner-matrix_8hxx" local="yes">vigra/wigner-matrix.hxx</includedby>
    <incdepgraph>
      <node id="8889">
        <label>functional</label>
      </node>
      <node id="8877">
        <label>limits</label>
      </node>
      <node id="8881">
        <label>sized_int.hxx</label>
        <link refid="sized__int_8hxx_source"/>
        <childnode refid="8875" relation="include">
        </childnode>
        <childnode refid="8877" relation="include">
        </childnode>
      </node>
      <node id="8890">
        <label>iterator</label>
      </node>
      <node id="8888">
        <label>inspector_passes.hxx</label>
        <link refid="inspector__passes_8hxx_source"/>
        <childnode refid="8875" relation="include">
        </childnode>
      </node>
      <node id="8882">
        <label>promote_traits.hxx</label>
        <link refid="promote__traits_8hxx_source"/>
      </node>
      <node id="8887">
        <label>algorithm.hxx</label>
        <link refid="algorithm_8hxx_source"/>
        <childnode refid="8881" relation="include">
        </childnode>
        <childnode refid="8878" relation="include">
        </childnode>
        <childnode refid="8888" relation="include">
        </childnode>
        <childnode refid="8868" relation="include">
        </childnode>
        <childnode refid="8889" relation="include">
        </childnode>
        <childnode refid="8890" relation="include">
        </childnode>
      </node>
      <node id="8865">
        <label>cmath</label>
      </node>
      <node id="8871">
        <label>stdexcept</label>
      </node>
      <node id="8892">
        <label>iteratortags.hxx</label>
        <link refid="iteratortags_8hxx_source"/>
        <childnode refid="8890" relation="include">
        </childnode>
      </node>
      <node id="8874">
        <label>string</label>
      </node>
      <node id="8893">
        <label>iteratortraits.hxx</label>
        <link refid="iteratortraits_8hxx_source"/>
        <childnode refid="8894" relation="include">
        </childnode>
        <childnode refid="8895" relation="include">
        </childnode>
      </node>
      <node id="8879">
        <label>cfloat</label>
      </node>
      <node id="8870">
        <label>vigra/configVersion.hxx</label>
        <link refid="configVersion_8hxx_source"/>
      </node>
      <node id="8885">
        <label>tuple.hxx</label>
        <link refid="tuple_8hxx_source"/>
        <childnode refid="8886" relation="include">
        </childnode>
      </node>
      <node id="8864">
        <label>vigra/tinyvector.hxx</label>
        <link refid="tinyvector.hxx"/>
        <childnode refid="8865" relation="include">
        </childnode>
        <childnode refid="8866" relation="include">
        </childnode>
        <childnode refid="8867" relation="include">
        </childnode>
        <childnode refid="8868" relation="include">
        </childnode>
        <childnode refid="8869" relation="include">
        </childnode>
        <childnode refid="8872" relation="include">
        </childnode>
        <childnode refid="8875" relation="include">
        </childnode>
        <childnode refid="8878" relation="include">
        </childnode>
        <childnode refid="8883" relation="include">
        </childnode>
        <childnode refid="8884" relation="include">
        </childnode>
        <childnode refid="8891" relation="include">
        </childnode>
      </node>
      <node id="8884">
        <label>mathutil.hxx</label>
        <link refid="mathutil_8hxx_source"/>
        <childnode refid="8865" relation="include">
        </childnode>
        <childnode refid="8866" relation="include">
        </childnode>
        <childnode refid="8880" relation="include">
        </childnode>
        <childnode refid="8869" relation="include">
        </childnode>
        <childnode refid="8872" relation="include">
        </childnode>
        <childnode refid="8885" relation="include">
        </childnode>
        <childnode refid="8881" relation="include">
        </childnode>
        <childnode refid="8878" relation="include">
        </childnode>
        <childnode refid="8887" relation="include">
        </childnode>
      </node>
      <node id="8869">
        <label>config.hxx</label>
        <link refid="config_8hxx_source"/>
        <childnode refid="8870" relation="include">
        </childnode>
        <childnode refid="8871" relation="include">
        </childnode>
      </node>
      <node id="8878">
        <label>numerictraits.hxx</label>
        <link refid="numerictraits_8hxx_source"/>
        <childnode refid="8876" relation="include">
        </childnode>
        <childnode refid="8877" relation="include">
        </childnode>
        <childnode refid="8879" relation="include">
        </childnode>
        <childnode refid="8880" relation="include">
        </childnode>
        <childnode refid="8875" relation="include">
        </childnode>
        <childnode refid="8881" relation="include">
        </childnode>
        <childnode refid="8882" relation="include">
        </childnode>
      </node>
      <node id="8896">
        <label>iteratoradapter.hxx</label>
        <link refid="iteratoradapter_8hxx_source"/>
      </node>
      <node id="8895">
        <label>imageiteratoradapter.hxx</label>
        <link refid="imageiteratoradapter_8hxx_source"/>
        <childnode refid="8890" relation="include">
        </childnode>
      </node>
      <node id="8886">
        <label>utility</label>
      </node>
      <node id="8873">
        <label>sstream</label>
      </node>
      <node id="8891">
        <label>diff2d.hxx</label>
        <link refid="diff2d_8hxx_source"/>
        <childnode refid="8865" relation="include">
        </childnode>
        <childnode refid="8867" relation="include">
        </childnode>
        <childnode refid="8869" relation="include">
        </childnode>
        <childnode refid="8892" relation="include">
        </childnode>
        <childnode refid="8893" relation="include">
        </childnode>
        <childnode refid="8896" relation="include">
        </childnode>
        <childnode refid="8885" relation="include">
        </childnode>
      </node>
      <node id="8872">
        <label>error.hxx</label>
        <link refid="error_8hxx_source"/>
        <childnode refid="8871" relation="include">
        </childnode>
        <childnode refid="8873" relation="include">
        </childnode>
        <childnode refid="8874" relation="include">
        </childnode>
        <childnode refid="8869" relation="include">
        </childnode>
      </node>
      <node id="8867">
        <label>iosfwd</label>
      </node>
      <node id="8866">
        <label>cstdlib</label>
      </node>
      <node id="8876">
        <label>climits</label>
      </node>
      <node id="8875">
        <label>metaprogramming.hxx</label>
        <link refid="metaprogramming_8hxx_source"/>
        <childnode refid="8869" relation="include">
        </childnode>
        <childnode refid="8876" relation="include">
        </childnode>
        <childnode refid="8877" relation="include">
        </childnode>
        <childnode refid="8868" relation="include">
        </childnode>
      </node>
      <node id="8880">
        <label>complex</label>
      </node>
      <node id="8868">
        <label>algorithm</label>
      </node>
      <node id="8883">
        <label>memory.hxx</label>
        <link refid="memory_8hxx_source"/>
        <childnode refid="8875" relation="include">
        </childnode>
      </node>
      <node id="8894">
        <label>accessor.hxx</label>
        <link refid="accessor_8hxx_source"/>
        <childnode refid="8875" relation="include">
        </childnode>
        <childnode refid="8878" relation="include">
        </childnode>
        <childnode refid="8885" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8935">
        <label>vigra/splineimageview.hxx</label>
        <link refid="splineimageview_8hxx_source"/>
        <childnode refid="8900" relation="include">
        </childnode>
        <childnode refid="8913" relation="include">
        </childnode>
      </node>
      <node id="8917">
        <label>vigra/quaternion.hxx</label>
        <link refid="quaternion_8hxx_source"/>
        <childnode refid="8916" relation="include">
        </childnode>
        <childnode refid="8918" relation="include">
        </childnode>
      </node>
      <node id="8900">
        <label>vigra/affine_registration.hxx</label>
        <link refid="affine__registration_8hxx_source"/>
      </node>
      <node id="8925">
        <label>vigra/multi_pointoperators.hxx</label>
        <link refid="multi__pointoperators_8hxx_source"/>
        <childnode refid="8899" relation="include">
        </childnode>
        <childnode refid="8926" relation="include">
        </childnode>
        <childnode refid="8928" relation="include">
        </childnode>
        <childnode refid="8929" relation="include">
        </childnode>
        <childnode refid="8930" relation="include">
        </childnode>
        <childnode refid="8931" relation="include">
        </childnode>
        <childnode refid="8932" relation="include">
        </childnode>
        <childnode refid="8933" relation="include">
        </childnode>
      </node>
      <node id="8959">
        <label>vigra/symmetry.hxx</label>
        <link refid="symmetry_8hxx_source"/>
      </node>
      <node id="8980">
        <label>vigra/python_utility.hxx</label>
        <link refid="python__utility_8hxx_source"/>
        <childnode refid="8944" relation="include">
        </childnode>
        <childnode refid="8981" relation="include">
        </childnode>
      </node>
      <node id="8977">
        <label>vigra/box.hxx</label>
        <link refid="box_8hxx_source"/>
      </node>
      <node id="8970">
        <label>vigra/orientedtensorfilters.hxx</label>
        <link refid="orientedtensorfilters_8hxx_source"/>
      </node>
      <node id="8962">
        <label>vigra/resizeimage.hxx</label>
        <link refid="resizeimage_8hxx_source"/>
        <childnode refid="8953" relation="include">
        </childnode>
        <childnode refid="8963" relation="include">
        </childnode>
      </node>
      <node id="8968">
        <label>vigra/basicgeometry.hxx</label>
        <link refid="basicgeometry_8hxx_source"/>
        <childnode refid="8903" relation="include">
        </childnode>
      </node>
      <node id="8898">
        <label>vigra/multi_array.hxx</label>
        <link refid="multi__array_8hxx_source"/>
        <childnode refid="8899" relation="include">
        </childnode>
        <childnode refid="8925" relation="include">
        </childnode>
        <childnode refid="8935" relation="include">
        </childnode>
        <childnode refid="8936" relation="include">
        </childnode>
        <childnode refid="8937" relation="include">
        </childnode>
        <childnode refid="8927" relation="include">
        </childnode>
        <childnode refid="8926" relation="include">
        </childnode>
        <childnode refid="8938" relation="include">
        </childnode>
        <childnode refid="8928" relation="include">
        </childnode>
        <childnode refid="8929" relation="include">
        </childnode>
        <childnode refid="8942" relation="include">
        </childnode>
        <childnode refid="8940" relation="include">
        </childnode>
        <childnode refid="8943" relation="include">
        </childnode>
        <childnode refid="8930" relation="include">
        </childnode>
        <childnode refid="8944" relation="include">
        </childnode>
        <childnode refid="8946" relation="include">
        </childnode>
        <childnode refid="8947" relation="include">
        </childnode>
        <childnode refid="8920" relation="include">
        </childnode>
        <childnode refid="8949" relation="include">
        </childnode>
        <childnode refid="8950" relation="include">
        </childnode>
        <childnode refid="8915" relation="include">
        </childnode>
        <childnode refid="8934" relation="include">
        </childnode>
      </node>
      <node id="8916">
        <label>vigra/invariant_features3D.hxx</label>
        <link refid="invariant__features3D_8hxx_source"/>
      </node>
      <node id="8913">
        <label>vigra/affinegeometry.hxx</label>
        <link refid="affinegeometry_8hxx_source"/>
      </node>
      <node id="8905">
        <label>vigra/noise_normalization.hxx</label>
        <link refid="noise__normalization_8hxx_source"/>
      </node>
      <node id="8906">
        <label>vigra/quadprog.hxx</label>
        <link refid="quadprog_8hxx_source"/>
      </node>
      <node id="8923">
        <label>vigra/random_forest/rf_region.hxx</label>
        <link refid="rf__region_8hxx_source"/>
        <childnode refid="8922" relation="include">
        </childnode>
        <childnode refid="8909" relation="include">
        </childnode>
      </node>
      <node id="8981">
        <label>vigra/numpy_array_taggedshape.hxx</label>
        <link refid="numpy__array__taggedshape_8hxx_source"/>
        <childnode refid="8946" relation="include">
        </childnode>
        <childnode refid="8944" relation="include">
        </childnode>
      </node>
      <node id="8963">
        <label>vigra/multi_resize.hxx</label>
        <link refid="multi__resize_8hxx_source"/>
      </node>
      <node id="8904">
        <label>vigra/linear_algebra.hxx</label>
        <link refid="linear__algebra_8hxx_source"/>
      </node>
      <node id="8939">
        <label>vigra/localminmax.hxx</label>
        <link refid="localminmax_8hxx_source"/>
        <childnode refid="8940" relation="include">
        </childnode>
        <childnode refid="8905" relation="include">
        </childnode>
        <childnode refid="8941" relation="include">
        </childnode>
      </node>
      <node id="8922">
        <label>vigra/random_forest/rf_split.hxx</label>
        <link refid="rf__split_8hxx_source"/>
        <childnode refid="8908" relation="include">
        </childnode>
        <childnode refid="8909" relation="include">
        </childnode>
      </node>
      <node id="8965">
        <label>vigra/gaborfilter.hxx</label>
        <link refid="gaborfilter_8hxx_source"/>
      </node>
      <node id="8938">
        <label>vigra/labelvolume.hxx</label>
        <link refid="labelvolume_8hxx_source"/>
        <childnode refid="8939" relation="include">
        </childnode>
        <childnode refid="8934" relation="include">
        </childnode>
      </node>
      <node id="8910">
        <label>vigra/random_forest_hdf5_impex.hxx</label>
        <link refid="random__forest__hdf5__impex_8hxx_source"/>
      </node>
      <node id="8953">
        <label>vigra/stdimagefunctions.hxx</label>
        <link refid="stdimagefunctions_8hxx_source"/>
        <childnode refid="8954" relation="include">
        </childnode>
        <childnode refid="8902" relation="include">
        </childnode>
        <childnode refid="8960" relation="include">
        </childnode>
        <childnode refid="8933" relation="include">
        </childnode>
      </node>
      <node id="8901">
        <label>vigra/linear_solve.hxx</label>
        <link refid="linear__solve_8hxx_source"/>
        <childnode refid="8900" relation="include">
        </childnode>
        <childnode refid="8902" relation="include">
        </childnode>
        <childnode refid="8904" relation="include">
        </childnode>
        <childnode refid="8905" relation="include">
        </childnode>
        <childnode refid="8906" relation="include">
        </childnode>
        <childnode refid="8907" relation="include">
        </childnode>
        <childnode refid="8903" relation="include">
        </childnode>
      </node>
      <node id="8949">
        <label>vigra/random_forest/rf_online_prediction_set.hxx</label>
        <link refid="rf__online__prediction__set_8hxx_source"/>
        <childnode refid="8909" relation="include">
        </childnode>
      </node>
      <node id="8934">
        <label>vigra/watersheds3d.hxx</label>
        <link refid="watersheds3d_8hxx_source"/>
      </node>
      <node id="8943">
        <label>vigra/multi_math.hxx</label>
        <link refid="multi__math_8hxx_source"/>
        <childnode refid="8915" relation="include">
        </childnode>
      </node>
      <node id="8911">
        <label>vigra/singular_value_decomposition.hxx</label>
        <link refid="singular__value__decomposition_8hxx_source"/>
        <childnode refid="8901" relation="include">
        </childnode>
        <childnode refid="8907" relation="include">
        </childnode>
        <childnode refid="8912" relation="include">
        </childnode>
      </node>
      <node id="8972">
        <label>vigra/labelimage.hxx</label>
        <link refid="labelimage_8hxx_source"/>
        <childnode refid="8902" relation="include">
        </childnode>
        <childnode refid="8939" relation="include">
        </childnode>
        <childnode refid="8941" relation="include">
        </childnode>
      </node>
      <node id="8956">
        <label>vigra/boundarytensor.hxx</label>
        <link refid="boundarytensor_8hxx_source"/>
      </node>
      <node id="8902">
        <label>vigra/edgedetection.hxx</label>
        <link refid="edgedetection_8hxx_source"/>
        <childnode refid="8903" relation="include">
        </childnode>
      </node>
      <node id="8918">
        <label>vigra/wigner-matrix.hxx</label>
        <link refid="wigner-matrix_8hxx_source"/>
      </node>
      <node id="8952">
        <label>vigra/transformimage.hxx</label>
        <link refid="transformimage_8hxx_source"/>
        <childnode refid="8925" relation="include">
        </childnode>
        <childnode refid="8953" relation="include">
        </childnode>
        <childnode refid="8961" relation="include">
        </childnode>
        <childnode refid="8964" relation="include">
        </childnode>
        <childnode refid="8965" relation="include">
        </childnode>
        <childnode refid="8937" relation="include">
        </childnode>
        <childnode refid="8905" relation="include">
        </childnode>
        <childnode refid="8903" relation="include">
        </childnode>
      </node>
      <node id="8942">
        <label>vigra/multi_fft.hxx</label>
        <link refid="multi__fft_8hxx_source"/>
      </node>
      <node id="8955">
        <label>vigra/convolution.hxx</label>
        <link refid="convolution_8hxx_source"/>
        <childnode refid="8956" relation="include">
        </childnode>
        <childnode refid="8957" relation="include">
        </childnode>
        <childnode refid="8902" relation="include">
        </childnode>
        <childnode refid="8958" relation="include">
        </childnode>
        <childnode refid="8959" relation="include">
        </childnode>
        <childnode refid="8915" relation="include">
        </childnode>
      </node>
      <node id="8954">
        <label>vigra/nonlineardiffusion.hxx</label>
        <link refid="nonlineardiffusion_8hxx_source"/>
        <childnode refid="8955" relation="include">
        </childnode>
      </node>
      <node id="8945">
        <label>vigra/numpy_array_converters.hxx</label>
        <link refid="numpy__array__converters_8hxx_source"/>
      </node>
      <node id="8971">
        <label>vigra/distancetransform.hxx</label>
        <link refid="distancetransform_8hxx_source"/>
      </node>
      <node id="8897">
        <label>vigra/tinyvector.hxx</label>
        <link refid="tinyvector.hxx"/>
        <childnode refid="8898" relation="include">
        </childnode>
        <childnode refid="8951" relation="include">
        </childnode>
        <childnode refid="8975" relation="include">
        </childnode>
        <childnode refid="8900" relation="include">
        </childnode>
        <childnode refid="8935" relation="include">
        </childnode>
        <childnode refid="8913" relation="include">
        </childnode>
        <childnode refid="8977" relation="include">
        </childnode>
        <childnode refid="8936" relation="include">
        </childnode>
        <childnode refid="8937" relation="include">
        </childnode>
        <childnode refid="8916" relation="include">
        </childnode>
        <childnode refid="8917" relation="include">
        </childnode>
        <childnode refid="8978" relation="include">
        </childnode>
        <childnode refid="8979" relation="include">
        </childnode>
        <childnode refid="8928" relation="include">
        </childnode>
        <childnode refid="8943" relation="include">
        </childnode>
        <childnode refid="8905" relation="include">
        </childnode>
        <childnode refid="8980" relation="include">
        </childnode>
        <childnode refid="8918" relation="include">
        </childnode>
      </node>
      <node id="8961">
        <label>vigra/resampling_convolution.hxx</label>
        <link refid="resampling__convolution_8hxx_source"/>
        <childnode refid="8962" relation="include">
        </childnode>
      </node>
      <node id="8903">
        <label>vigra/slanted_edge_mtf.hxx</label>
        <link refid="slanted__edge__mtf_8hxx_source"/>
      </node>
      <node id="8928">
        <label>vigra/multi_convolution.hxx</label>
        <link refid="multi__convolution_8hxx_source"/>
      </node>
      <node id="8967">
        <label>vigra/stdimage.hxx</label>
        <link refid="stdimage_8hxx_source"/>
        <childnode refid="8968" relation="include">
        </childnode>
        <childnode refid="8969" relation="include">
        </childnode>
        <childnode refid="8954" relation="include">
        </childnode>
        <childnode refid="8962" relation="include">
        </childnode>
        <childnode refid="8961" relation="include">
        </childnode>
        <childnode refid="8957" relation="include">
        </childnode>
        <childnode refid="8971" relation="include">
        </childnode>
        <childnode refid="8902" relation="include">
        </childnode>
        <childnode refid="8972" relation="include">
        </childnode>
        <childnode refid="8964" relation="include">
        </childnode>
        <childnode refid="8965" relation="include">
        </childnode>
        <childnode refid="8937" relation="include">
        </childnode>
        <childnode refid="8939" relation="include">
        </childnode>
        <childnode refid="8905" relation="include">
        </childnode>
        <childnode refid="8960" relation="include">
        </childnode>
        <childnode refid="8933" relation="include">
        </childnode>
        <childnode refid="8903" relation="include">
        </childnode>
        <childnode refid="8959" relation="include">
        </childnode>
        <childnode refid="8941" relation="include">
        </childnode>
      </node>
      <node id="8966">
        <label>vigra/inspectimage.hxx</label>
        <link refid="inspectimage_8hxx_source"/>
        <childnode refid="8952" relation="include">
        </childnode>
        <childnode refid="8925" relation="include">
        </childnode>
        <childnode refid="8953" relation="include">
        </childnode>
        <childnode refid="8937" relation="include">
        </childnode>
      </node>
      <node id="8924">
        <label>vigra/random_forest_deprec.hxx</label>
        <link refid="random__forest__deprec_8hxx_source"/>
      </node>
      <node id="8950">
        <label>vigra/sifImport.hxx</label>
        <link refid="sifImport_8hxx_source"/>
      </node>
      <node id="8908">
        <label>vigra/random_forest/rf_ridge_split.hxx</label>
        <link refid="rf__ridge__split_8hxx_source"/>
        <childnode refid="8909" relation="include">
        </childnode>
      </node>
      <node id="8921">
        <label>vigra/random_forest/rf_nodeproxy.hxx</label>
        <link refid="rf__nodeproxy_8hxx_source"/>
        <childnode refid="8920" relation="include">
        </childnode>
        <childnode refid="8922" relation="include">
        </childnode>
        <childnode refid="8908" relation="include">
        </childnode>
        <childnode refid="8909" relation="include">
        </childnode>
      </node>
      <node id="8978">
        <label>vigra/voxelneighborhood.hxx</label>
        <link refid="voxelneighborhood_8hxx_source"/>
        <childnode refid="8938" relation="include">
        </childnode>
        <childnode refid="8939" relation="include">
        </childnode>
        <childnode refid="8933" relation="include">
        </childnode>
        <childnode refid="8934" relation="include">
        </childnode>
      </node>
      <node id="8912">
        <label>vigra/unsupervised_decomposition.hxx</label>
        <link refid="unsupervised__decomposition_8hxx_source"/>
      </node>
      <node id="8948">
        <label>vigra/random_forest/rf_algorithm.hxx</label>
        <link refid="rf__algorithm_8hxx_source"/>
        <childnode refid="8909" relation="include">
        </childnode>
      </node>
      <node id="8909">
        <label>vigra/random_forest.hxx</label>
        <link refid="random__forest_8hxx_source"/>
        <childnode refid="8910" relation="include">
        </childnode>
      </node>
      <node id="8974">
        <label>vigra/tiff.hxx</label>
        <link refid="tiff_8hxx_source"/>
      </node>
      <node id="8976">
        <label>vigra/imageinfo.hxx</label>
        <link refid="imageinfo_8hxx_source"/>
        <childnode refid="8937" relation="include">
        </childnode>
      </node>
      <node id="8907">
        <label>vigra/regression.hxx</label>
        <link refid="regression_8hxx_source"/>
        <childnode refid="8908" relation="include">
        </childnode>
      </node>
      <node id="8919">
        <label>vigra/matlab.hxx</label>
        <link refid="matlab_8hxx_source"/>
      </node>
      <node id="8951">
        <label>vigra/rgbvalue.hxx</label>
        <link refid="rgbvalue_8hxx_source"/>
        <childnode refid="8898" relation="include">
        </childnode>
        <childnode refid="8952" relation="include">
        </childnode>
        <childnode refid="8966" relation="include">
        </childnode>
        <childnode refid="8967" relation="include">
        </childnode>
        <childnode refid="8973" relation="include">
        </childnode>
        <childnode refid="8943" relation="include">
        </childnode>
        <childnode refid="8974" relation="include">
        </childnode>
      </node>
      <node id="8920">
        <label>vigra/random_forest/rf_decisionTree.hxx</label>
        <link refid="rf__decisionTree_8hxx_source"/>
        <childnode refid="8909" relation="include">
        </childnode>
      </node>
      <node id="8929">
        <label>vigra/multi_distance.hxx</label>
        <link refid="multi__distance_8hxx_source"/>
        <childnode refid="8930" relation="include">
        </childnode>
      </node>
      <node id="8915">
        <label>vigra/tv_filter.hxx</label>
        <link refid="tv__filter_8hxx_source"/>
      </node>
      <node id="8979">
        <label>vigra/meshgrid.hxx</label>
        <link refid="meshgrid_8hxx_source"/>
      </node>
      <node id="8975">
        <label>vigra/multi_iterator.hxx</label>
        <link refid="multi__iterator_8hxx_source"/>
        <childnode refid="8898" relation="include">
        </childnode>
        <childnode refid="8936" relation="include">
        </childnode>
        <childnode refid="8976" relation="include">
        </childnode>
      </node>
      <node id="8937">
        <label>vigra/impex.hxx</label>
        <link refid="impex_8hxx"/>
        <childnode refid="8927" relation="include">
        </childnode>
        <childnode refid="8926" relation="include">
        </childnode>
        <childnode refid="8915" relation="include">
        </childnode>
      </node>
      <node id="8930">
        <label>vigra/multi_morphology.hxx</label>
        <link refid="multi__morphology_8hxx_source"/>
      </node>
      <node id="8960">
        <label>vigra/seededregiongrowing.hxx</label>
        <link refid="seededregiongrowing_8hxx_source"/>
        <childnode refid="8933" relation="include">
        </childnode>
        <childnode refid="8941" relation="include">
        </childnode>
      </node>
      <node id="8947">
        <label>vigra/random_forest/splices.hxx</label>
        <link refid="splices_8hxx_source"/>
        <childnode refid="8948" relation="include">
        </childnode>
      </node>
      <node id="8940">
        <label>vigra/multi_localminmax.hxx</label>
        <link refid="multi__localminmax_8hxx_source"/>
        <childnode refid="8934" relation="include">
        </childnode>
      </node>
      <node id="8933">
        <label>vigra/seededregiongrowing3d.hxx</label>
        <link refid="seededregiongrowing3d_8hxx_source"/>
        <childnode refid="8934" relation="include">
        </childnode>
      </node>
      <node id="8958">
        <label>vigra/gradient_energy_tensor.hxx</label>
        <link refid="gradient__energy__tensor_8hxx_source"/>
      </node>
      <node id="8946">
        <label>vigra/numpy_array_traits.hxx</label>
        <link refid="numpy__array__traits_8hxx_source"/>
        <childnode refid="8944" relation="include">
        </childnode>
      </node>
      <node id="8969">
        <label>vigra/stdconvolution.hxx</label>
        <link refid="stdconvolution_8hxx_source"/>
        <childnode refid="8955" relation="include">
        </childnode>
        <childnode refid="8970" relation="include">
        </childnode>
      </node>
      <node id="8941">
        <label>vigra/watersheds.hxx</label>
        <link refid="watersheds_8hxx_source"/>
        <childnode refid="8934" relation="include">
        </childnode>
      </node>
      <node id="8914">
        <label>vigra/eigensystem.hxx</label>
        <link refid="eigensystem_8hxx_source"/>
        <childnode refid="8904" relation="include">
        </childnode>
        <childnode refid="8915" relation="include">
        </childnode>
      </node>
      <node id="8957">
        <label>vigra/cornerdetection.hxx</label>
        <link refid="cornerdetection_8hxx_source"/>
      </node>
      <node id="8931">
        <label>vigra/multi_tensorutilities.hxx</label>
        <link refid="multi__tensorutilities_8hxx_source"/>
      </node>
      <node id="8973">
        <label>vigra/colorconversions.hxx</label>
        <link refid="colorconversions_8hxx_source"/>
      </node>
      <node id="8936">
        <label>vigra/coordinate_iterator.hxx</label>
        <link refid="coordinate__iterator_8hxx_source"/>
      </node>
      <node id="8899">
        <label>vigra/matrix.hxx</label>
        <link refid="matrix_8hxx_source"/>
        <childnode refid="8900" relation="include">
        </childnode>
        <childnode refid="8901" relation="include">
        </childnode>
        <childnode refid="8911" relation="include">
        </childnode>
        <childnode refid="8913" relation="include">
        </childnode>
        <childnode refid="8914" relation="include">
        </childnode>
        <childnode refid="8916" relation="include">
        </childnode>
        <childnode refid="8917" relation="include">
        </childnode>
        <childnode refid="8904" relation="include">
        </childnode>
        <childnode refid="8919" relation="include">
        </childnode>
        <childnode refid="8906" relation="include">
        </childnode>
        <childnode refid="8920" relation="include">
        </childnode>
        <childnode refid="8921" relation="include">
        </childnode>
        <childnode refid="8923" relation="include">
        </childnode>
        <childnode refid="8922" relation="include">
        </childnode>
        <childnode refid="8907" relation="include">
        </childnode>
        <childnode refid="8909" relation="include">
        </childnode>
        <childnode refid="8924" relation="include">
        </childnode>
        <childnode refid="8912" relation="include">
        </childnode>
        <childnode refid="8918" relation="include">
        </childnode>
      </node>
      <node id="8932">
        <label>vigra/random_forest/rf_visitors.hxx</label>
        <link refid="rf__visitors_8hxx_source"/>
        <childnode refid="8920" relation="include">
        </childnode>
        <childnode refid="8909" relation="include">
        </childnode>
      </node>
      <node id="8927">
        <label>vigra/hdf5impex.hxx</label>
        <link refid="hdf5impex_8hxx_source"/>
        <childnode refid="8910" relation="include">
        </childnode>
      </node>
      <node id="8926">
        <label>vigra/multi_impex.hxx</label>
        <link refid="multi__impex_8hxx_source"/>
        <childnode refid="8927" relation="include">
        </childnode>
      </node>
      <node id="8944">
        <label>vigra/numpy_array.hxx</label>
        <link refid="numpy__array_8hxx_source"/>
        <childnode refid="8945" relation="include">
        </childnode>
      </node>
      <node id="8964">
        <label>vigra/fftw3.hxx</label>
        <link refid="fftw3_8hxx_source"/>
        <childnode refid="8942" relation="include">
        </childnode>
        <childnode refid="8903" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structvigra_1_1CanSkipInitialization_3_01TinyVector_3_01T_00_01SIZE_01_4_01_4" prot="public">vigra::CanSkipInitialization&lt; TinyVector&lt; T, SIZE &gt; &gt;</innerclass>
    <innerclass refid="structvigra_1_1CanSkipInitialization_3_01TinyVectorView_3_01T_00_01SIZE_01_4_01_4" prot="public">vigra::CanSkipInitialization&lt; TinyVectorView&lt; T, SIZE &gt; &gt;</innerclass>
    <innerclass refid="structvigra_1_1NormTraits_3_01TinyVector_3_01T_00_01SIZE_01_4_01_4" prot="public">vigra::NormTraits&lt; TinyVector&lt; T, SIZE &gt; &gt;</innerclass>
    <innerclass refid="structvigra_1_1NormTraits_3_01TinyVectorView_3_01T_00_01SIZE_01_4_01_4" prot="public">vigra::NormTraits&lt; TinyVectorView&lt; T, SIZE &gt; &gt;</innerclass>
    <innerclass refid="structvigra_1_1NumericTraits_3_01TinyVector_3_01T_00_01SIZE_01_4_01_4" prot="public">vigra::NumericTraits&lt; TinyVector&lt; T, SIZE &gt; &gt;</innerclass>
    <innerclass refid="structvigra_1_1NumericTraits_3_01TinyVectorView_3_01T_00_01SIZE_01_4_01_4" prot="public">vigra::NumericTraits&lt; TinyVectorView&lt; T, SIZE &gt; &gt;</innerclass>
    <innerclass refid="structvigra_1_1PromoteTraits_3_01double_00_01TinyVector_3_01T_00_01SIZE_01_4_01_4" prot="public">vigra::PromoteTraits&lt; double, TinyVector&lt; T, SIZE &gt; &gt;</innerclass>
    <innerclass refid="structvigra_1_1PromoteTraits_3_01double_00_01TinyVectorView_3_01T_00_01SIZE_01_4_01_4" prot="public">vigra::PromoteTraits&lt; double, TinyVectorView&lt; T, SIZE &gt; &gt;</innerclass>
    <innerclass refid="structvigra_1_1PromoteTraits_3_01TinyVector_3_01T_00_01SIZE_01_4_00_01double_01_4" prot="public">vigra::PromoteTraits&lt; TinyVector&lt; T, SIZE &gt;, double &gt;</innerclass>
    <innerclass refid="structvigra_1_1PromoteTraits_3_01TinyVector_3_01T1_00_01SIZE_01_4_00_01TinyVector_3_01T2_00_01SIZE_01_4_01_4" prot="public">vigra::PromoteTraits&lt; TinyVector&lt; T1, SIZE &gt;, TinyVector&lt; T2, SIZE &gt; &gt;</innerclass>
    <innerclass refid="structvigra_1_1PromoteTraits_3_01TinyVector_3_01T1_00_01SIZE_01_4_00_01TinyVectorView_3_01T2_00_01SIZE_01_4_01_4" prot="public">vigra::PromoteTraits&lt; TinyVector&lt; T1, SIZE &gt;, TinyVectorView&lt; T2, SIZE &gt; &gt;</innerclass>
    <innerclass refid="structvigra_1_1PromoteTraits_3_01TinyVectorView_3_01T_00_01SIZE_01_4_00_01double_01_4" prot="public">vigra::PromoteTraits&lt; TinyVectorView&lt; T, SIZE &gt;, double &gt;</innerclass>
    <innerclass refid="structvigra_1_1PromoteTraits_3_01TinyVectorView_3_01T1_00_01SIZE_01_4_00_01TinyVector_3_01T2_00_01SIZE_01_4_01_4" prot="public">vigra::PromoteTraits&lt; TinyVectorView&lt; T1, SIZE &gt;, TinyVector&lt; T2, SIZE &gt; &gt;</innerclass>
    <innerclass refid="structvigra_1_1PromoteTraits_3_01TinyVectorView_3_01T1_00_01SIZE_01_4_00_01TinyVectorView_3_01T2_00_01SIZE_01_4_01_4" prot="public">vigra::PromoteTraits&lt; TinyVectorView&lt; T1, SIZE &gt;, TinyVectorView&lt; T2, SIZE &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1TinyVector" prot="public">vigra::TinyVector</innerclass>
    <innerclass refid="classvigra_1_1TinyVectorBase" prot="public">vigra::TinyVectorBase</innerclass>
    <innerclass refid="classvigra_1_1TinyVectorView" prot="public">vigra::TinyVectorView</innerclass>
    <innernamespace refid="namespacevigra">vigra</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="tinyvector_8hxx_1ab8d99bf80e6ae6e0fb26656b1fcf8697" prot="public" static="no">
        <name>VIGRA_ASSERT_INSIDE</name>
        <param><defname>diff</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/tinyvector.hxx" line="57" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/tinyvector.hxx" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyvector_8hxx_1ad34b3f1424dc8a8f30388f78f8db14d7" prot="public" static="no">
        <name>VIGRA_EXEC_LOOP</name>
        <param><defname>NAME</defname></param>
        <param><defname>OPER</defname></param>
        <initializer>template &lt;class T1, class T2&gt;  \
    static void NAME(T1 * left, T2 const * right)  \
    {  \
        for(int i=0; i&lt;LEVEL; ++i)  \
            (left[i]) OPER (right[i]);  \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/tinyvector.hxx" line="91" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/tinyvector.hxx" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyvector_8hxx_1ac675a9da10a7fa9e269a25b8630fb44e" prot="public" static="no">
        <name>VIGRA_EXEC_LOOP_SCALAR</name>
        <param><defname>NAME</defname></param>
        <param><defname>OPER</defname></param>
        <initializer>template &lt;class T1, class T2&gt;  \
    static void NAME(T1 * left, T2 right)  \
    {  \
        for(int i=0; i&lt;LEVEL; ++i)  \
            (left[i]) = detail::RequiresExplicitCast&lt;T1&gt;::cast((left[i]) OPER (right));  \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/tinyvector.hxx" line="99" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/tinyvector.hxx" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyvector_8hxx_1a7d3c27fdaa69eea5834039b515230902" prot="public" static="no">
        <name>VIGRA_UNROLL_LOOP</name>
        <param><defname>NAME</defname></param>
        <param><defname>OPER</defname></param>
        <initializer>template &lt;class T1, class T2&gt;  \
    static void NAME(T1 * left, T2 const * right)  \
    {  \
        (*left) OPER (*right);  \
        UnrollLoop&lt;LEVEL-1&gt;::NAME(left+1, right+1); \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/tinyvector.hxx" line="305" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/tinyvector.hxx" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tinyvector_8hxx_1a3d59c5c08664e069854fbe65427f1ddc" prot="public" static="no">
        <name>VIGRA_UNROLL_LOOP_SCALAR</name>
        <param><defname>NAME</defname></param>
        <param><defname>OPER</defname></param>
        <initializer>template &lt;class T1, class T2&gt;  \
    static void NAME(T1 * left, T2 right)  \
    {  \
        (*left) = detail::RequiresExplicitCast&lt;T1&gt;::cast((*left) OPER (right));  \
        UnrollLoop&lt;LEVEL-1&gt;::NAME(left+1, right); \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/tinyvector.hxx" line="313" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/tinyvector.hxx" bodystart="307" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>1998-2002<sp/>by<sp/>Ullrich<sp/>Koethe<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>VIGRA<sp/>computer<sp/>vision<sp/>library.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>The<sp/>VIGRA<sp/>Website<sp/>is<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://hci.iwr.uni-heidelberg.de/vigra/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Please<sp/>direct<sp/>questions,<sp/>bug<sp/>reports,<sp/>and<sp/>contributions<sp/>to<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ullrich.koethe@iwr.uni-heidelberg.de<sp/><sp/><sp/><sp/>or<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra@informatik.uni-hamburg.de<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>conditions:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Software.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VIGRA_TINYVECTOR_HXX</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_TINYVECTOR_HXX</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>abs(double)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>abs(int)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iosfwd&gt;</highlight><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ostream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;error.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;metaprogramming.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;numerictraits.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;memory.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mathutil.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;diff2d.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VIGRA_CHECK_BOUNDS</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_ASSERT_INSIDE(diff)<sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/>vigra_precondition(diff<sp/>&gt;=<sp/>0,<sp/>&quot;Index<sp/>out<sp/>of<sp/>bounds&quot;);\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"><sp/><sp/>vigra_precondition(diff<sp/>&lt;<sp/>SIZE,<sp/>&quot;Index<sp/>out<sp/>of<sp/>bounds&quot;);</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_ASSERT_INSIDE(diff)</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vigra<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>mask<sp/>cl.exe<sp/>shortcomings<sp/>[begin]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warning(<sp/>push<sp/>)</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warning(<sp/>disable<sp/>:<sp/>4503<sp/>)</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="group__FFTWComplexOperators_1ga6f4ef274842b6153923f02a6cd264576" kindref="member" tooltip="absolute value (= magnitude)">VIGRA_CSTD::abs</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="group__FixedPointOperations_1ga14fe7b9ffa21e091c6ff4ede68717c30" kindref="member" tooltip="rounding up.">VIGRA_CSTD::ceil</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="group__FixedPointOperations_1gaf8fe85520fc0bc2d77ec8e6cf26f3c5d" kindref="member" tooltip="rounding down.">VIGRA_CSTD::floor</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="group__FixedPointOperations_1ga22d75753836176f3d172f58be11ecc4c" kindref="member" tooltip="square root.">VIGRA_CSTD::sqrt</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2&gt;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TinyVectorBase;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2&gt;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TinyVectorBase&lt;V1,<sp/>SIZE,<sp/>D1,<sp/>D2&gt;::SquaredNormType</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><ref refid="group__FFTWComplexOperators_1ga484df995dad9821aac02ec42cd58f7eb" kindref="member" tooltip="squared norm (= squared magnitude)">squaredNorm</ref>(TinyVectorBase&lt;V1,<sp/>SIZE,<sp/>D1,<sp/>D2&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>t);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_EXEC_LOOP(NAME,<sp/>OPER)<sp/>\</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>T1,<sp/>class<sp/>T2&gt;<sp/><sp/>\</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>void<sp/>NAME(T1<sp/>*<sp/>left,<sp/>T2<sp/>const<sp/>*<sp/>right)<sp/><sp/>\</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/>\</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>i=0;<sp/>i&lt;LEVEL;<sp/>++i)<sp/><sp/>\</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(left[i])<sp/>OPER<sp/>(right[i]);<sp/><sp/>\</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_EXEC_LOOP_SCALAR(NAME,<sp/>OPER)<sp/>\</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>T1,<sp/>class<sp/>T2&gt;<sp/><sp/>\</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>void<sp/>NAME(T1<sp/>*<sp/>left,<sp/>T2<sp/>right)<sp/><sp/>\</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/>\</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>i=0;<sp/>i&lt;LEVEL;<sp/>++i)<sp/><sp/>\</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(left[i])<sp/>=<sp/>detail::RequiresExplicitCast&lt;T1&gt;::cast((left[i])<sp/>OPER<sp/>(right));<sp/><sp/>\</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LEVEL&gt;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ExecLoop</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assignCast(T1<sp/>*<sp/>left,<sp/>T2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>right)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;LEVEL;<sp/>++i)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left[i]<sp/>=<sp/>detail::RequiresExplicitCast&lt;T1&gt;::cast(right[i]);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reverseAssign(T1<sp/>*<sp/>left,<sp/>T2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>right)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;LEVEL;<sp/>++i)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left[i]<sp/>=<sp/>right[-i];</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assignScalar(T1<sp/>*<sp/>left,<sp/>T2<sp/>right)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;LEVEL;<sp/>++i)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left[i]<sp/>=<sp/>detail::RequiresExplicitCast&lt;T1&gt;::cast(right);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>VIGRA_EXEC_LOOP(assign,<sp/>=)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>VIGRA_EXEC_LOOP(<ref refid="group__FixedPointOperations_1ga95690fd14be4c66dbf3d3afbc852b15c" kindref="member" tooltip="addition with enforced result type.">add</ref>,<sp/>+=)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>VIGRA_EXEC_LOOP(<ref refid="group__FixedPointOperations_1gaa403dd4b5533c2e3000ade778bbf6f81" kindref="member" tooltip="subtraction with enforced result type.">sub</ref>,<sp/>-=)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>VIGRA_EXEC_LOOP(<ref refid="group__FixedPointOperations_1ga71573012351636ef982341cf3eb1d669" kindref="member" tooltip="multiplication with enforced result type.">mul</ref>,<sp/>*=)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>VIGRA_EXEC_LOOP(<ref refid="group__FixedPoint16Operations_1gac71b069a80f6decdb6fad1cfd508f5f8" kindref="member" tooltip="division with enforced result type.">div</ref>,<sp/>/=)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>VIGRA_EXEC_LOOP(neg,<sp/>=<sp/>-)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>VIGRA_EXEC_LOOP(<ref refid="group__FFTWComplexOperators_1ga6f4ef274842b6153923f02a6cd264576" kindref="member" tooltip="absolute value (= magnitude)">abs</ref>,<sp/>=<sp/>vigra::abs)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>VIGRA_EXEC_LOOP(<ref refid="group__FixedPointOperations_1gaf8fe85520fc0bc2d77ec8e6cf26f3c5d" kindref="member" tooltip="rounding down.">floor</ref>,<sp/>=<sp/>vigra::floor)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>VIGRA_EXEC_LOOP(<ref refid="group__FixedPointOperations_1ga14fe7b9ffa21e091c6ff4ede68717c30" kindref="member" tooltip="rounding up.">ceil</ref>,<sp/>=<sp/>vigra::ceil)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>VIGRA_EXEC_LOOP(<ref refid="group__FixedPointOperations_1ga22d75753836176f3d172f58be11ecc4c" kindref="member" tooltip="square root.">sqrt</ref>,<sp/>=<sp/>vigra::sqrt)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>VIGRA_EXEC_LOOP(fromPromote,<sp/>=<sp/>NumericTraits&lt;T1&gt;::fromPromote)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>VIGRA_EXEC_LOOP(fromRealPromote,<sp/>=<sp/>NumericTraits&lt;T1&gt;::fromRealPromote)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>VIGRA_EXEC_LOOP_SCALAR(mulScalar,<sp/>*)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>VIGRA_EXEC_LOOP_SCALAR(divScalar,<sp/>/)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>T&gt;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/>T<sp/>const<sp/>&amp;<sp/>minimum(T<sp/>const<sp/>*<sp/>p)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*std::min_element(p,<sp/>p+LEVEL);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>maximum(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*std::max_element(p,<sp/>p+LEVEL);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>notEqual(T1<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>left,<sp/>T2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>right)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;LEVEL;<sp/>++i)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(left[i]<sp/>!=<sp/>right[i])</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>less(T1<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>left,<sp/>T2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>right)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;LEVEL;<sp/>++i)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(left[i]<sp/>&lt;<sp/>right[i])</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(right[i]<sp/>&lt;<sp/>left[i])</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::Promote</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__RGBValueOperators_1gaabe9d910ba7a54cbf606254a81e409e6" kindref="member" tooltip="dot product">dot</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>d)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::Promote<sp/><sp/>res(*d<sp/>*<sp/>*d);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;LEVEL;<sp/>++i)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>+=<sp/>d[i]<sp/>*<sp/>d[i];</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PromoteTraits&lt;T1,<sp/>T2&gt;::Promote</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__RGBValueOperators_1gaabe9d910ba7a54cbf606254a81e409e6" kindref="member" tooltip="dot product">dot</ref>(T1<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>left,<sp/>T2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>right)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PromoteTraits&lt;T1,<sp/>T2&gt;::Promote<sp/>res(*left<sp/>*<sp/>*right);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;LEVEL;<sp/>++i)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>+=<sp/>left[i]<sp/>*<sp/>right[i];</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NormTraits&lt;T&gt;::SquaredNormType</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__FFTWComplexOperators_1ga484df995dad9821aac02ec42cd58f7eb" kindref="member" tooltip="squared norm (= squared magnitude)">squaredNorm</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>d)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NormTraits&lt;T&gt;::SquaredNormType<sp/><sp/>res<sp/>=<sp/><ref refid="group__FFTWComplexOperators_1ga484df995dad9821aac02ec42cd58f7eb" kindref="member" tooltip="squared norm (= squared magnitude)">vigra::squaredNorm</ref>(*d);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;LEVEL;<sp/>++i)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>+=<sp/><ref refid="group__FFTWComplexOperators_1ga484df995dad9821aac02ec42cd58f7eb" kindref="member" tooltip="squared norm (= squared magnitude)">vigra::squaredNorm</ref>(d[i]);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal">};</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LEVEL&gt;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">UnrollScalarResult</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::Promote</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__RGBValueOperators_1gaabe9d910ba7a54cbf606254a81e409e6" kindref="member" tooltip="dot product">dot</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>d)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*d<sp/>*<sp/>*d<sp/>+<sp/><ref refid="group__RGBValueOperators_1gaabe9d910ba7a54cbf606254a81e409e6" kindref="member" tooltip="dot product">UnrollScalarResult&lt;LEVEL-1&gt;::dot</ref>(d+1);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PromoteTraits&lt;T1,<sp/>T2&gt;::Promote</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__RGBValueOperators_1gaabe9d910ba7a54cbf606254a81e409e6" kindref="member" tooltip="dot product">dot</ref>(T1<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>left,<sp/>T2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>right)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*left<sp/>*<sp/>*right<sp/>+<sp/><ref refid="group__RGBValueOperators_1gaabe9d910ba7a54cbf606254a81e409e6" kindref="member" tooltip="dot product">UnrollScalarResult&lt;LEVEL-1&gt;::dot</ref>(left+1,<sp/>right+1);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NormTraits&lt;T&gt;::SquaredNormType</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__FFTWComplexOperators_1ga484df995dad9821aac02ec42cd58f7eb" kindref="member" tooltip="squared norm (= squared magnitude)">squaredNorm</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>d)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__FFTWComplexOperators_1ga484df995dad9821aac02ec42cd58f7eb" kindref="member" tooltip="squared norm (= squared magnitude)">vigra::squaredNorm</ref>(*d)<sp/>+<sp/><ref refid="group__FFTWComplexOperators_1ga484df995dad9821aac02ec42cd58f7eb" kindref="member" tooltip="squared norm (= squared magnitude)">UnrollScalarResult&lt;LEVEL-1&gt;::squaredNorm</ref>(d+1);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::ptrdiff_t</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__FFTWComplexOperators_1ga484df995dad9821aac02ec42cd58f7eb" kindref="member" tooltip="squared norm (= squared magnitude)">squaredNorm</ref>(std::ptrdiff_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>d)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*d)*(*d)<sp/>+<sp/><ref refid="group__FFTWComplexOperators_1ga484df995dad9821aac02ec42cd58f7eb" kindref="member" tooltip="squared norm (= squared magnitude)">UnrollScalarResult&lt;LEVEL-1&gt;::squaredNorm</ref>(d+1);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>minimum(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>m<sp/>=<sp/>UnrollScalarResult&lt;LEVEL<sp/>-<sp/>1&gt;::minimum(p+1);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*p<sp/>&lt;<sp/>m</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>*p</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>maximum(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>m<sp/>=<sp/>UnrollScalarResult&lt;LEVEL<sp/>-<sp/>1&gt;::maximum(p+1);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*p<sp/>&gt;<sp/>m</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>*p</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal">};</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">UnrollScalarResult&lt;1&gt;</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::Promote</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__RGBValueOperators_1gaabe9d910ba7a54cbf606254a81e409e6" kindref="member" tooltip="dot product">dot</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>d)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*d<sp/>*<sp/>*d<sp/>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PromoteTraits&lt;T1,<sp/>T2&gt;::Promote</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__RGBValueOperators_1gaabe9d910ba7a54cbf606254a81e409e6" kindref="member" tooltip="dot product">dot</ref>(T1<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>left,<sp/>T2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>right)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*left<sp/>*<sp/>*right;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NormTraits&lt;T&gt;::SquaredNormType</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__FFTWComplexOperators_1ga484df995dad9821aac02ec42cd58f7eb" kindref="member" tooltip="squared norm (= squared magnitude)">squaredNorm</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>d)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__FFTWComplexOperators_1ga484df995dad9821aac02ec42cd58f7eb" kindref="member" tooltip="squared norm (= squared magnitude)">vigra::squaredNorm</ref>(*d);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::ptrdiff_t</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__FFTWComplexOperators_1ga484df995dad9821aac02ec42cd58f7eb" kindref="member" tooltip="squared norm (= squared magnitude)">squaredNorm</ref>(std::ptrdiff_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>d)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*d)*(*d);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>minimum(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*p;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>maximum(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*p;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal">};</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_EXEC_LOOP</highlight></codeline>
<codeline lineno="297"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_EXEC_LOOP_SCALAR</highlight></codeline>
<codeline lineno="298"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_UNROLL_LOOP(NAME,<sp/>OPER)<sp/>\</highlight></codeline>
<codeline lineno="300"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>T1,<sp/>class<sp/>T2&gt;<sp/><sp/>\</highlight></codeline>
<codeline lineno="301"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>void<sp/>NAME(T1<sp/>*<sp/>left,<sp/>T2<sp/>const<sp/>*<sp/>right)<sp/><sp/>\</highlight></codeline>
<codeline lineno="302"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/>\</highlight></codeline>
<codeline lineno="303"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*left)<sp/>OPER<sp/>(*right);<sp/><sp/>\</highlight></codeline>
<codeline lineno="304"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnrollLoop&lt;LEVEL-1&gt;::NAME(left+1,<sp/>right+1);<sp/>\</highlight></codeline>
<codeline lineno="305"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_UNROLL_LOOP_SCALAR(NAME,<sp/>OPER)<sp/>\</highlight></codeline>
<codeline lineno="308"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>T1,<sp/>class<sp/>T2&gt;<sp/><sp/>\</highlight></codeline>
<codeline lineno="309"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>void<sp/>NAME(T1<sp/>*<sp/>left,<sp/>T2<sp/>right)<sp/><sp/>\</highlight></codeline>
<codeline lineno="310"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/>\</highlight></codeline>
<codeline lineno="311"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*left)<sp/>=<sp/>detail::RequiresExplicitCast&lt;T1&gt;::cast((*left)<sp/>OPER<sp/>(right));<sp/><sp/>\</highlight></codeline>
<codeline lineno="312"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnrollLoop&lt;LEVEL-1&gt;::NAME(left+1,<sp/>right);<sp/>\</highlight></codeline>
<codeline lineno="313"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LEVEL&gt;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">UnrollLoop</highlight></codeline>
<codeline lineno="318"><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reverseAssign(T1<sp/>*<sp/>left,<sp/>T2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>right)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*left<sp/>=<sp/>*right;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnrollLoop&lt;LEVEL-1&gt;::reverseAssign(left+1,<sp/>right-1);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assignCast(T1<sp/>*<sp/>left,<sp/>T2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>right)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*left<sp/>=<sp/>detail::RequiresExplicitCast&lt;T1&gt;::cast(*right);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnrollLoop&lt;LEVEL-1&gt;::assignCast(left+1,<sp/>right+1);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assignScalar(T1<sp/>*<sp/>left,<sp/>T2<sp/>right)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*left<sp/>=<sp/>detail::RequiresExplicitCast&lt;T1&gt;::cast(right);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UnrollLoop&lt;LEVEL-1&gt;::assignScalar(left+1,<sp/>right);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>VIGRA_UNROLL_LOOP(assign,<sp/>=)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>VIGRA_UNROLL_LOOP(<ref refid="group__FixedPointOperations_1ga95690fd14be4c66dbf3d3afbc852b15c" kindref="member" tooltip="addition with enforced result type.">add</ref>,<sp/>+=)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>VIGRA_UNROLL_LOOP(<ref refid="group__FixedPointOperations_1gaa403dd4b5533c2e3000ade778bbf6f81" kindref="member" tooltip="subtraction with enforced result type.">sub</ref>,<sp/>-=)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>VIGRA_UNROLL_LOOP(<ref refid="group__FixedPointOperations_1ga71573012351636ef982341cf3eb1d669" kindref="member" tooltip="multiplication with enforced result type.">mul</ref>,<sp/>*=)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>VIGRA_UNROLL_LOOP(<ref refid="group__FixedPoint16Operations_1gac71b069a80f6decdb6fad1cfd508f5f8" kindref="member" tooltip="division with enforced result type.">div</ref>,<sp/>/=)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>VIGRA_UNROLL_LOOP(neg,<sp/>=<sp/>-)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>VIGRA_UNROLL_LOOP(<ref refid="group__FFTWComplexOperators_1ga6f4ef274842b6153923f02a6cd264576" kindref="member" tooltip="absolute value (= magnitude)">abs</ref>,<sp/>=<sp/>vigra::abs)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>VIGRA_UNROLL_LOOP(<ref refid="group__FixedPointOperations_1gaf8fe85520fc0bc2d77ec8e6cf26f3c5d" kindref="member" tooltip="rounding down.">floor</ref>,<sp/>=<sp/>vigra::floor)</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>VIGRA_UNROLL_LOOP(<ref refid="group__FixedPointOperations_1ga14fe7b9ffa21e091c6ff4ede68717c30" kindref="member" tooltip="rounding up.">ceil</ref>,<sp/>=<sp/>vigra::ceil)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>VIGRA_UNROLL_LOOP(<ref refid="group__FixedPointOperations_1ga22d75753836176f3d172f58be11ecc4c" kindref="member" tooltip="square root.">sqrt</ref>,<sp/>=<sp/>vigra::sqrt)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>VIGRA_UNROLL_LOOP(fromPromote,<sp/>=<sp/>NumericTraits&lt;T1&gt;::fromPromote)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>VIGRA_UNROLL_LOOP(fromRealPromote,<sp/>=<sp/>NumericTraits&lt;T1&gt;::fromRealPromote)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>VIGRA_UNROLL_LOOP_SCALAR(mulScalar,<sp/>*)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>VIGRA_UNROLL_LOOP_SCALAR(divScalar,<sp/>/)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>T&gt;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/>T<sp/>const<sp/>&amp;<sp/>minimum(T<sp/>const<sp/>*<sp/>p)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>UnrollScalarResult&lt;LEVEL&gt;::minimum(p);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>maximum(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>UnrollScalarResult&lt;LEVEL&gt;::maximum(p);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>notEqual(T1<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>left,<sp/>T2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>right)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*left<sp/>!=<sp/>*right)<sp/>||<sp/>UnrollLoop&lt;LEVEL<sp/>-<sp/>1&gt;::notEqual(left+1,<sp/>right+1);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>less(T1<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>left,<sp/>T2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>right)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*left<sp/>&lt;<sp/>*right)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*right<sp/>&lt;<sp/>*left)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>UnrollLoop&lt;LEVEL<sp/>-<sp/>1&gt;::less(left+1,<sp/>right+1);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::Promote</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__RGBValueOperators_1gaabe9d910ba7a54cbf606254a81e409e6" kindref="member" tooltip="dot product">dot</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>d)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__RGBValueOperators_1gaabe9d910ba7a54cbf606254a81e409e6" kindref="member" tooltip="dot product">UnrollScalarResult&lt;LEVEL&gt;::dot</ref>(d);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PromoteTraits&lt;T1,<sp/>T2&gt;::Promote</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__RGBValueOperators_1gaabe9d910ba7a54cbf606254a81e409e6" kindref="member" tooltip="dot product">dot</ref>(T1<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>left,<sp/>T2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>right)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__RGBValueOperators_1gaabe9d910ba7a54cbf606254a81e409e6" kindref="member" tooltip="dot product">UnrollScalarResult&lt;LEVEL&gt;::dot</ref>(left,<sp/>right);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NormTraits&lt;T&gt;::SquaredNormType</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__FFTWComplexOperators_1ga484df995dad9821aac02ec42cd58f7eb" kindref="member" tooltip="squared norm (= squared magnitude)">squaredNorm</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>d)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__FFTWComplexOperators_1ga484df995dad9821aac02ec42cd58f7eb" kindref="member" tooltip="squared norm (= squared magnitude)">UnrollScalarResult&lt;LEVEL&gt;::squaredNorm</ref>(d);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal">};</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_UNROLL_LOOP</highlight></codeline>
<codeline lineno="406"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_UNROLL_LOOP_SCALAR</highlight></codeline>
<codeline lineno="407"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">UnrollLoop&lt;0&gt;</highlight></codeline>
<codeline lineno="410"><highlight class="normal">{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reverseAssign(T1,<sp/>T2)<sp/>{}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assignCast(T1,<sp/>T2)<sp/>{}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assign(T1,<sp/>T2)<sp/>{}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assignScalar(T1,<sp/>T2)<sp/>{}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__FixedPointOperations_1ga95690fd14be4c66dbf3d3afbc852b15c" kindref="member" tooltip="addition with enforced result type.">add</ref>(T1,<sp/>T2)<sp/>{}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__FixedPointOperations_1gaa403dd4b5533c2e3000ade778bbf6f81" kindref="member" tooltip="subtraction with enforced result type.">sub</ref>(T1,<sp/>T2)<sp/>{}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__FixedPointOperations_1ga71573012351636ef982341cf3eb1d669" kindref="member" tooltip="multiplication with enforced result type.">mul</ref>(T1,<sp/>T2)<sp/>{}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>mulScalar(T1,<sp/>T2)<sp/>{}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__FixedPoint16Operations_1gac71b069a80f6decdb6fad1cfd508f5f8" kindref="member" tooltip="division with enforced result type.">div</ref>(T1,<sp/>T2)<sp/>{}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>divScalar(T1,<sp/>T2)<sp/>{}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fromPromote(T1,<sp/>T2)<sp/>{}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fromRealPromote(T1,<sp/>T2)<sp/>{}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>neg(T1,<sp/>T2)<sp/>{}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__FFTWComplexOperators_1ga6f4ef274842b6153923f02a6cd264576" kindref="member" tooltip="absolute value (= magnitude)">abs</ref>(T1,<sp/>T2)<sp/>{}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__FixedPointOperations_1gaf8fe85520fc0bc2d77ec8e6cf26f3c5d" kindref="member" tooltip="rounding down.">floor</ref>(T1,<sp/>T2)<sp/>{}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__FixedPointOperations_1ga14fe7b9ffa21e091c6ff4ede68717c30" kindref="member" tooltip="rounding up.">ceil</ref>(T1,<sp/>T2)<sp/>{}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__FixedPointOperations_1ga22d75753836176f3d172f58be11ecc4c" kindref="member" tooltip="square root.">sqrt</ref>(T1,<sp/>T2)<sp/>{}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>notEqual(T1,<sp/>T2)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>less(T1,<sp/>T2)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/>minimum(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">NumericTraits&lt;T&gt;::max</ref>();</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/>maximum(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>p)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">NumericTraits&lt;T&gt;::min</ref>();</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal">};</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">LoopType</highlight></codeline>
<codeline lineno="463"><highlight class="normal">{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IfBool&lt;(SIZE<sp/>&lt;=<sp/>5),<sp/>UnrollLoop&lt;SIZE&gt;,<sp/>ExecLoop&lt;SIZE&gt;<sp/>&gt;::type<sp/>type;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal">};</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">DontInit<sp/>{};</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>DontInit<sp/>dontInit()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DontInit();<sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TinyVector;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TinyVectorView;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TinyVectorBase<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="486"><highlight class="comment">/**<sp/>\brief<sp/>Base<sp/>class<sp/>for<sp/>fixed<sp/>size<sp/>vectors.</highlight></codeline>
<codeline lineno="487"><highlight class="comment"></highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>class<sp/>contains<sp/>functionality<sp/>shared<sp/>by</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/><sp/><sp/><sp/>\ref<sp/>TinyVector<sp/>and<sp/>\ref<sp/>TinyVectorView,<sp/>and<sp/>enables<sp/>these<sp/>classes</highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/><sp/><sp/><sp/>to<sp/>be<sp/>freely<sp/>mixed<sp/>within<sp/>expressions.<sp/>It<sp/>is<sp/>typically<sp/>not<sp/>used<sp/>directly.</highlight></codeline>
<codeline lineno="491"><highlight class="comment"></highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/tinyvector.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="494"><highlight class="comment">**/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUETYPE,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DATA,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DERIVED&gt;</highlight></codeline>
<codeline lineno="496" refid="classvigra_1_1TinyVectorBase" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase</ref></highlight></codeline>
<codeline lineno="497"><highlight class="normal">{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase</ref>(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;);<sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase</ref><sp/>&amp;<sp/>operator=(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>other);<sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>detail::LoopType&lt;SIZE&gt;::type<sp/>Loop;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase</ref>()</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="510"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>STL-compatible<sp/>definition<sp/>of<sp/>valuetype</highlight></codeline>
<codeline lineno="511"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512" refid="classvigra_1_1TinyVectorBase_1ad81add7f462b51d2bedbccd43c12e32a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUETYPE<sp/><ref refid="classvigra_1_1TinyVectorBase_1ad81add7f462b51d2bedbccd43c12e32a" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="514"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>reference<sp/>(return<sp/>of<sp/>operator[]).</highlight></codeline>
<codeline lineno="515"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516" refid="classvigra_1_1TinyVectorBase_1a5cc9035ae36e93a575d4fe8e1dbfe55d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUETYPE<sp/>&amp;<sp/><ref refid="classvigra_1_1TinyVectorBase_1a5cc9035ae36e93a575d4fe8e1dbfe55d" kindref="member">reference</ref>;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="518"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>const<sp/>reference<sp/>(return<sp/>of<sp/>operator[]<sp/>const).</highlight></codeline>
<codeline lineno="519"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520" refid="classvigra_1_1TinyVectorBase_1a4bc49d740bad1cb75776bcfac2c40f26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUETYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="classvigra_1_1TinyVectorBase_1a4bc49d740bad1cb75776bcfac2c40f26" kindref="member">const_reference</ref>;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="522"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>pointer<sp/>(return<sp/>of<sp/>operator-&gt;).</highlight></codeline>
<codeline lineno="523"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524" refid="classvigra_1_1TinyVectorBase_1abf6e21ead96acfe1ce6770f74a6685fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUETYPE<sp/>*<sp/><ref refid="classvigra_1_1TinyVectorBase_1abf6e21ead96acfe1ce6770f74a6685fc" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="526"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>const<sp/>pointer<sp/>(return<sp/>of<sp/>operator-&gt;<sp/>const).</highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528" refid="classvigra_1_1TinyVectorBase_1ab652b7cfcfeac13226e0ee07931da4d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUETYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classvigra_1_1TinyVectorBase_1ab652b7cfcfeac13226e0ee07931da4d4" kindref="member">const_pointer</ref>;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="530"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>STL-compatible<sp/>definition<sp/>of<sp/>iterator</highlight></codeline>
<codeline lineno="531"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532" refid="classvigra_1_1TinyVectorBase_1a4b0424da8c99197075d119ba0959bf1e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1ad81add7f462b51d2bedbccd43c12e32a" kindref="member">value_type</ref><sp/>*<sp/><ref refid="classvigra_1_1TinyVectorBase_1a4b0424da8c99197075d119ba0959bf1e" kindref="member">iterator</ref>;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="534"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>STL-compatible<sp/>definition<sp/>of<sp/>const<sp/>iterator</highlight></codeline>
<codeline lineno="535"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536" refid="classvigra_1_1TinyVectorBase_1a8d3921909325ec56e10da00c0d6b1f08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1ad81add7f462b51d2bedbccd43c12e32a" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classvigra_1_1TinyVectorBase_1a8d3921909325ec56e10da00c0d6b1f08" kindref="member">const_iterator</ref>;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="538"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>STL-compatible<sp/>definition<sp/>of<sp/>size_type</highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540" refid="classvigra_1_1TinyVectorBase_1ada51e68d31936547d3729c82daf6b7c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1ada51e68d31936547d3729c82daf6b7c6" kindref="member">size_type</ref>;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>STL-compatible<sp/>definition<sp/>of<sp/>difference_type</highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544" refid="classvigra_1_1TinyVectorBase_1ad319fc54a93a2c7058c70e40428ed2e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::ptrdiff_t<sp/><ref refid="classvigra_1_1TinyVectorBase_1ad319fc54a93a2c7058c70e40428ed2e2" kindref="member">difference_type</ref>;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="546"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>scalar<sp/>type<sp/>for<sp/>the<sp/>outer<sp/>product</highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548" refid="classvigra_1_1TinyVectorBase_1add69d58b47c0e2e51b5c1cdad6d51fd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1add69d58b47c0e2e51b5c1cdad6d51fd8" kindref="member">scalar_multiplier</ref>;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="550"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>vector&apos;s<sp/>squared<sp/>norm<sp/>type</highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552" refid="classvigra_1_1TinyVectorBase_1a687349cd43a37b847414648089fd0a6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NormTraits&lt;VALUETYPE&gt;::SquaredNormType<sp/><ref refid="classvigra_1_1TinyVectorBase_1a687349cd43a37b847414648089fd0a6a" kindref="member">SquaredNormType</ref>;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>vector&apos;s<sp/>norm<sp/>type</highlight></codeline>
<codeline lineno="555"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556" refid="classvigra_1_1TinyVectorBase_1a3aaf2f56b74ba07badf36ce76715e460" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SquareRootTraits&lt;SquaredNormType&gt;::SquareRootResult<sp/><ref refid="classvigra_1_1TinyVectorBase_1a3aaf2f56b74ba07badf36ce76715e460" kindref="member">NormType</ref>;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="558"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>vector&apos;s<sp/>size</highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>static_size<sp/>=<sp/>SIZE<sp/>};</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Initialize<sp/>from<sp/>another<sp/>sequence<sp/>(must<sp/>have<sp/>length<sp/>SIZE!)</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Iterator&gt;</highlight></codeline>
<codeline lineno="565" refid="classvigra_1_1TinyVectorBase_1a5cdf4fd70a8962218c77deb30edce0b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1a5cdf4fd70a8962218c77deb30edce0b5" kindref="member">init</ref>(Iterator<sp/>i,<sp/>Iterator<sp/><ref refid="classvigra_1_1TinyVectorBase_1acad38d52497a975bfb6f2f6acd76631f" kindref="member">end</ref>)</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra_precondition(end-i<sp/>==<sp/>SIZE,</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;TinyVector::init():<sp/>Sequence<sp/>has<sp/>wrong<sp/>size.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Loop::assignCast(data_,<sp/>i);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="572"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Initialize<sp/>with<sp/>constant<sp/>value</highlight></codeline>
<codeline lineno="573"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574" refid="classvigra_1_1TinyVectorBase_1ad8e08b8eaa8d5765d11de7344a018613" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1a5cdf4fd70a8962218c77deb30edce0b5" kindref="member">init</ref>(<ref refid="classvigra_1_1TinyVectorBase_1ad81add7f462b51d2bedbccd43c12e32a" kindref="member">value_type</ref><sp/>initial)</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Loop::assignScalar(data_,<sp/>initial);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Component-wise<sp/>add-assignment</highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2&gt;</highlight></codeline>
<codeline lineno="582" refid="classvigra_1_1TinyVectorBase_1a9bde39ba39082812af1ec50d7dbe8436" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>DERIVED<sp/>&amp;<sp/><ref refid="classvigra_1_1TinyVectorBase_1a9bde39ba39082812af1ec50d7dbe8436" kindref="member">operator+=</ref>(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;T1, SIZE, D1, D2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__FixedPointOperations_1ga95690fd14be4c66dbf3d3afbc852b15c" kindref="member" tooltip="addition with enforced result type.">Loop::add</ref>(data_,<sp/>r.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>());</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">DERIVED<sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="588"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Component-wise<sp/>subtract-assignment</highlight></codeline>
<codeline lineno="589"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2&gt;</highlight></codeline>
<codeline lineno="591" refid="classvigra_1_1TinyVectorBase_1a5b918c0cb3d061b9ceb9968ad0bb0e5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>DERIVED<sp/>&amp;<sp/><ref refid="classvigra_1_1TinyVectorBase_1a5b918c0cb3d061b9ceb9968ad0bb0e5c" kindref="member">operator-=</ref>(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;T1, SIZE, D1, D2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__FixedPointOperations_1gaa403dd4b5533c2e3000ade778bbf6f81" kindref="member" tooltip="subtraction with enforced result type.">Loop::sub</ref>(data_,<sp/>r.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>());</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">DERIVED<sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Component-wise<sp/>multiply-assignment</highlight></codeline>
<codeline lineno="598"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2&gt;</highlight></codeline>
<codeline lineno="600" refid="classvigra_1_1TinyVectorBase_1aa88a2ee7578dac50baf55ab6ec2532e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>DERIVED<sp/>&amp;<sp/><ref refid="classvigra_1_1TinyVectorBase_1aa88a2ee7578dac50baf55ab6ec2532e5" kindref="member">operator*=</ref>(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;T1, SIZE, D1, D2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__FixedPointOperations_1ga71573012351636ef982341cf3eb1d669" kindref="member" tooltip="multiplication with enforced result type.">Loop::mul</ref>(data_,<sp/>r.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>());</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">DERIVED<sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="606"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Component-wise<sp/>divide-assignment</highlight></codeline>
<codeline lineno="607"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2&gt;</highlight></codeline>
<codeline lineno="609" refid="classvigra_1_1TinyVectorBase_1a2b5024ff0b4ffe93430cf14e39584929" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>DERIVED<sp/>&amp;<sp/><ref refid="classvigra_1_1TinyVectorBase_1a2b5024ff0b4ffe93430cf14e39584929" kindref="member">operator/=</ref>(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;T1, SIZE, D1, D2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__FixedPoint16Operations_1gac71b069a80f6decdb6fad1cfd508f5f8" kindref="member" tooltip="division with enforced result type.">Loop::div</ref>(data_,<sp/>r.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>());</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">DERIVED<sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="615"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Component-wise<sp/>scalar<sp/>multiply-assignment</highlight></codeline>
<codeline lineno="616"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617" refid="classvigra_1_1TinyVectorBase_1a79a2f305963885081f260ab8354bb3e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>DERIVED<sp/>&amp;<sp/><ref refid="classvigra_1_1TinyVectorBase_1aa88a2ee7578dac50baf55ab6ec2532e5" kindref="member">operator*=</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r)</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Loop::mulScalar(data_,<sp/>r);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">DERIVED<sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="623"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Component-wise<sp/>scalar<sp/>divide-assignment</highlight></codeline>
<codeline lineno="624"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625" refid="classvigra_1_1TinyVectorBase_1a050b22df740bf19289a2ef06d33fdab1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>DERIVED<sp/>&amp;<sp/><ref refid="classvigra_1_1TinyVectorBase_1a2b5024ff0b4ffe93430cf14e39584929" kindref="member">operator/=</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r)</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Loop::divScalar(data_,<sp/>r);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">DERIVED<sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="631"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Calculate<sp/>magnitude.</highlight></codeline>
<codeline lineno="632"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633" refid="classvigra_1_1TinyVectorBase_1aa9f35e702c4ae0fb038461f6af25fc9f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorBase_1a3aaf2f56b74ba07badf36ce76715e460" kindref="member">NormType</ref><sp/><ref refid="classvigra_1_1TinyVectorBase_1aa9f35e702c4ae0fb038461f6af25fc9f" kindref="member">magnitude</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="634"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__FixedPointOperations_1ga22d75753836176f3d172f58be11ecc4c" kindref="member" tooltip="square root.">sqrt</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">typename</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SquareRootTraits&lt;SquaredNormType&gt;::SquareRootArgument</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classvigra_1_1TinyVectorBase_1ad3541cb08b6fe60edd5c2532f5c167c8" kindref="member">squaredMagnitude</ref>()));</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Calculate<sp/>squared<sp/>magnitude.</highlight></codeline>
<codeline lineno="640"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641" refid="classvigra_1_1TinyVectorBase_1ad3541cb08b6fe60edd5c2532f5c167c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorBase_1a687349cd43a37b847414648089fd0a6a" kindref="member">SquaredNormType</ref><sp/><ref refid="classvigra_1_1TinyVectorBase_1ad3541cb08b6fe60edd5c2532f5c167c8" kindref="member">squaredMagnitude</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="642"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__FFTWComplexOperators_1ga484df995dad9821aac02ec42cd58f7eb" kindref="member" tooltip="squared norm (= squared magnitude)">Loop::squaredNorm</ref>(data_);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="646"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Return<sp/>the<sp/>minimal<sp/>element.</highlight></codeline>
<codeline lineno="647"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648" refid="classvigra_1_1TinyVectorBase_1ac5b93cc371537a7772a60cc0d3be43f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>VALUETYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="classvigra_1_1TinyVectorBase_1ac5b93cc371537a7772a60cc0d3be43f8" kindref="member">minimum</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="649"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1ac5b93cc371537a7772a60cc0d3be43f8" kindref="member">Loop::minimum</ref>(data_);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="653"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Return<sp/>the<sp/>maximal<sp/>element.</highlight></codeline>
<codeline lineno="654"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655" refid="classvigra_1_1TinyVectorBase_1a0626973e733c59d2dcf29679b6542db3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>VALUETYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="classvigra_1_1TinyVectorBase_1a0626973e733c59d2dcf29679b6542db3" kindref="member">maximum</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="656"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1a0626973e733c59d2dcf29679b6542db3" kindref="member">Loop::maximum</ref>(data_);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="660"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Access<sp/>component<sp/>by<sp/>index.</highlight></codeline>
<codeline lineno="661"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662" refid="classvigra_1_1TinyVectorBase_1aa2454492558f0f1b146ed554017ca033" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorBase_1a5cc9035ae36e93a575d4fe8e1dbfe55d" kindref="member">reference</ref><sp/><ref refid="classvigra_1_1TinyVectorBase_1aa2454492558f0f1b146ed554017ca033" kindref="member">operator[]</ref>(<ref refid="classvigra_1_1TinyVectorBase_1ad319fc54a93a2c7058c70e40428ed2e2" kindref="member">difference_type</ref><sp/>i)</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VIGRA_ASSERT_INSIDE(i);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_[i];</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="668"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Get<sp/>component<sp/>by<sp/>index.</highlight></codeline>
<codeline lineno="669"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670" refid="classvigra_1_1TinyVectorBase_1a3b782fefbfb41b6f90a060a292839975" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorBase_1a4bc49d740bad1cb75776bcfac2c40f26" kindref="member">const_reference</ref><sp/><ref refid="classvigra_1_1TinyVectorBase_1aa2454492558f0f1b146ed554017ca033" kindref="member">operator[]</ref>(<ref refid="classvigra_1_1TinyVectorBase_1ad319fc54a93a2c7058c70e40428ed2e2" kindref="member">difference_type</ref><sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="671"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VIGRA_ASSERT_INSIDE(i);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_[i];</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="676"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Get<sp/>random<sp/>access<sp/>iterator<sp/>to<sp/>begin<sp/>of<sp/>vector.</highlight></codeline>
<codeline lineno="677"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678" refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorBase_1a4b0424da8c99197075d119ba0959bf1e" kindref="member">iterator</ref><sp/><ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_;<sp/>}</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="679"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Get<sp/>random<sp/>access<sp/>iterator<sp/>past-the-end<sp/>of<sp/>vector.</highlight></codeline>
<codeline lineno="680"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681" refid="classvigra_1_1TinyVectorBase_1acad38d52497a975bfb6f2f6acd76631f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorBase_1a4b0424da8c99197075d119ba0959bf1e" kindref="member">iterator</ref><sp/><ref refid="classvigra_1_1TinyVectorBase_1acad38d52497a975bfb6f2f6acd76631f" kindref="member">end</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_<sp/>+<sp/>SIZE;<sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="683"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Get<sp/>const<sp/>random<sp/>access<sp/>iterator<sp/>to<sp/>begin<sp/>of<sp/>vector.</highlight></codeline>
<codeline lineno="684"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685" refid="classvigra_1_1TinyVectorBase_1aa4b02d4f1a8500fb07a551069060709f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorBase_1a8d3921909325ec56e10da00c0d6b1f08" kindref="member">const_iterator</ref><sp/><ref refid="classvigra_1_1TinyVectorBase_1aa4b02d4f1a8500fb07a551069060709f" kindref="member">begin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_;<sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="687"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Get<sp/>const<sp/>random<sp/>access<sp/>iterator<sp/>past-the-end<sp/>of<sp/>vector.</highlight></codeline>
<codeline lineno="688"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689" refid="classvigra_1_1TinyVectorBase_1a350132543d80a1c1e5be844e6d2878ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorBase_1a8d3921909325ec56e10da00c0d6b1f08" kindref="member">const_iterator</ref><sp/><ref refid="classvigra_1_1TinyVectorBase_1a350132543d80a1c1e5be844e6d2878ea" kindref="member">end</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_<sp/>+<sp/>SIZE;<sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="691"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Size<sp/>of<sp/>TinyVector<sp/>vector<sp/>always<sp/>equals<sp/>the<sp/>template<sp/>parameter<sp/>SIZE.</highlight></codeline>
<codeline lineno="692"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693" refid="classvigra_1_1TinyVectorBase_1a503ab01f6c0142145d3434f6924714e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorBase_1ada51e68d31936547d3729c82daf6b7c6" kindref="member">size_type</ref><sp/><ref refid="classvigra_1_1TinyVectorBase_1a503ab01f6c0142145d3434f6924714e7" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SIZE;<sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorBase_1abf6e21ead96acfe1ce6770f74a6685fc" kindref="member">pointer</ref><sp/>data()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_;<sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorBase_1ab652b7cfcfeac13226e0ee07931da4d4" kindref="member">const_pointer</ref><sp/>data()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_;<sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>DATA<sp/>data_;</highlight></codeline>
<codeline lineno="702"><highlight class="normal">};</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="704"><highlight class="comment">/**<sp/>\brief<sp/>Class<sp/>for<sp/>fixed<sp/>size<sp/>vectors.</highlight></codeline>
<codeline lineno="705"><highlight class="comment"><sp/><sp/><sp/><sp/>\ingroup<sp/>RangesAndPoints</highlight></codeline>
<codeline lineno="706"><highlight class="comment"></highlight></codeline>
<codeline lineno="707"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>class<sp/>contains<sp/>an<sp/>array<sp/>of<sp/>size<sp/>SIZE<sp/>of<sp/>the<sp/>specified<sp/>VALUETYPE.</highlight></codeline>
<codeline lineno="708"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>interface<sp/>conforms<sp/>to<sp/>STL<sp/>vector,<sp/>except<sp/>that<sp/>there<sp/>are<sp/>no<sp/>functions</highlight></codeline>
<codeline lineno="709"><highlight class="comment"><sp/><sp/><sp/><sp/>that<sp/>change<sp/>the<sp/>size<sp/>of<sp/>a<sp/>TinyVector.</highlight></codeline>
<codeline lineno="710"><highlight class="comment"></highlight></codeline>
<codeline lineno="711"><highlight class="comment"><sp/><sp/><sp/><sp/>\ref<sp/>TinyVectorOperators<sp/>&quot;Arithmetic<sp/>operations&quot;</highlight></codeline>
<codeline lineno="712"><highlight class="comment"><sp/><sp/><sp/><sp/>on<sp/>TinyVectors<sp/>are<sp/>defined<sp/>as<sp/>component-wise<sp/>applications<sp/>of<sp/>these</highlight></codeline>
<codeline lineno="713"><highlight class="comment"><sp/><sp/><sp/><sp/>operations.<sp/>Addition<sp/>and<sp/>subtraction<sp/>of<sp/>two<sp/>TinyVectors</highlight></codeline>
<codeline lineno="714"><highlight class="comment"><sp/><sp/><sp/><sp/>(+=,<sp/>-=,<sp/>+,<sp/>-,<sp/>unary<sp/>-),<sp/>multiplication<sp/>and<sp/>division<sp/>of<sp/>an</highlight></codeline>
<codeline lineno="715"><highlight class="comment"><sp/><sp/><sp/><sp/>TinyVector<sp/>with<sp/>a<sp/>double,<sp/>and<sp/>NumericTraits/PromoteTraits<sp/>are<sp/>defined,</highlight></codeline>
<codeline lineno="716"><highlight class="comment"><sp/><sp/><sp/><sp/>so<sp/>that<sp/>TinyVector<sp/>fulfills<sp/>the<sp/>requirements<sp/>of<sp/>\ref<sp/>LinearAlgebraConcept<sp/>&quot;Linear<sp/>Algebra&quot;.</highlight></codeline>
<codeline lineno="717"><highlight class="comment"></highlight></codeline>
<codeline lineno="718"><highlight class="comment"><sp/><sp/><sp/><sp/>VIGRA<sp/>algorithms<sp/>typically<sp/>use<sp/>\ref<sp/>vigra::VectorAccessor<sp/>to<sp/>access</highlight></codeline>
<codeline lineno="719"><highlight class="comment"><sp/><sp/><sp/><sp/>TinyVectors<sp/>as<sp/>a<sp/>whole,<sp/>or<sp/>specific<sp/>components<sp/>of<sp/>them.</highlight></codeline>
<codeline lineno="720"><highlight class="comment"></highlight></codeline>
<codeline lineno="721"><highlight class="comment"><sp/><sp/><sp/><sp/>See<sp/>also:&lt;br&gt;</highlight></codeline>
<codeline lineno="722"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;UL<sp/>style=&quot;list-style-image:url(documents/bullet.gif)&quot;&gt;</highlight></codeline>
<codeline lineno="723"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>vigra::TinyVectorBase</highlight></codeline>
<codeline lineno="724"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>vigra::TinyVectorView</highlight></codeline>
<codeline lineno="725"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>TinyVectorTraits</highlight></codeline>
<codeline lineno="726"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>TinyVectorOperators</highlight></codeline>
<codeline lineno="727"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/UL&gt;</highlight></codeline>
<codeline lineno="728"><highlight class="comment"></highlight></codeline>
<codeline lineno="729"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/tinyvector.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="730"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="731"><highlight class="comment">**/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="733" refid="classvigra_1_1TinyVector" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector</ref></highlight></codeline>
<codeline lineno="734"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase</ref>&lt;T,<sp/>SIZE,<sp/>T[SIZE],<sp/>TinyVector&lt;T,<sp/>SIZE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="735"><highlight class="normal">{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;T, SIZE, T[SIZE], TinyVector&lt;T, SIZE&gt;</ref><sp/>&gt;<sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound">BaseType</ref>;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BaseType::Loop<sp/>Loop;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1ad81add7f462b51d2bedbccd43c12e32a" kindref="member">BaseType::value_type</ref><sp/>value_type;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1a5cc9035ae36e93a575d4fe8e1dbfe55d" kindref="member">BaseType::reference</ref><sp/>reference;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1a4bc49d740bad1cb75776bcfac2c40f26" kindref="member">BaseType::const_reference</ref><sp/>const_reference;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1abf6e21ead96acfe1ce6770f74a6685fc" kindref="member">BaseType::pointer</ref><sp/>pointer;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1ab652b7cfcfeac13226e0ee07931da4d4" kindref="member">BaseType::const_pointer</ref><sp/>const_pointer;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1a4b0424da8c99197075d119ba0959bf1e" kindref="member">BaseType::iterator</ref><sp/>iterator;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1a8d3921909325ec56e10da00c0d6b1f08" kindref="member">BaseType::const_iterator</ref><sp/>const_iterator;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1ada51e68d31936547d3729c82daf6b7c6" kindref="member">BaseType::size_type</ref><sp/>size_type;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1ad319fc54a93a2c7058c70e40428ed2e2" kindref="member">BaseType::difference_type</ref><sp/>difference_type;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1add69d58b47c0e2e51b5c1cdad6d51fd8" kindref="member">BaseType::scalar_multiplier</ref><sp/>scalar_multiplier;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1a687349cd43a37b847414648089fd0a6a" kindref="member">BaseType::SquaredNormType</ref><sp/>SquaredNormType;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1a3aaf2f56b74ba07badf36ce76715e460" kindref="member">BaseType::NormType</ref><sp/>NormType;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ReverseCopyTag<sp/>{<sp/>ReverseCopy<sp/>};</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="756"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Construction<sp/>with<sp/>constant<sp/>value.</highlight></codeline>
<codeline lineno="757"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="758"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initializes<sp/>all<sp/>vector<sp/>elements<sp/>with<sp/>the<sp/>given<sp/>value.</highlight></codeline>
<codeline lineno="759"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760" refid="classvigra_1_1TinyVector_1a0d619106c79b2c05a2d517824c84b4d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector_1ae93f6df5295ff8a1dd3dda5069093037" kindref="member">TinyVector</ref>(<ref refid="classvigra_1_1TinyVectorBase_1ad81add7f462b51d2bedbccd43c12e32a" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>initial)</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound">BaseType</ref>()</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Loop::assignScalar(<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">BaseType::begin</ref>(),<sp/>initial);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="766"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Construction<sp/>with<sp/>Diff2D.</highlight></codeline>
<codeline lineno="767"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="768"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>only<sp/>when<sp/>&lt;tt&gt;SIZE<sp/>==<sp/>2&lt;/tt&gt;.</highlight></codeline>
<codeline lineno="769"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770" refid="classvigra_1_1TinyVector_1ad63e1c90f3c96e348692cf0a9926d911" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector_1ae93f6df5295ff8a1dd3dda5069093037" kindref="member">TinyVector</ref>(<ref refid="classvigra_1_1Diff2D" kindref="compound" tooltip="Two dimensional difference vector.">Diff2D</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>initial)</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound">BaseType</ref>()</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseType::data_[0]<sp/>=<sp/>detail::RequiresExplicitCast&lt;T&gt;::cast(initial.<ref refid="classvigra_1_1Diff2D_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseType::data_[1]<sp/>=<sp/>detail::RequiresExplicitCast&lt;T&gt;::cast(initial.<ref refid="classvigra_1_1Diff2D_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="777"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Construction<sp/>with<sp/>explicit<sp/>values.</highlight></codeline>
<codeline lineno="778"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Call<sp/>only<sp/>if<sp/>SIZE<sp/>==<sp/>2</highlight></codeline>
<codeline lineno="779"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780" refid="classvigra_1_1TinyVector_1ac56e970db55176861493d7c91c553cbe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector_1ae93f6df5295ff8a1dd3dda5069093037" kindref="member">TinyVector</ref>(<ref refid="classvigra_1_1TinyVectorBase_1ad81add7f462b51d2bedbccd43c12e32a" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i1,<sp/><ref refid="classvigra_1_1TinyVectorBase_1ad81add7f462b51d2bedbccd43c12e32a" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i2)</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound">BaseType</ref>()</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseType::data_[0]<sp/>=<sp/>i1;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseType::data_[1]<sp/>=<sp/>i2;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="787"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Construction<sp/>with<sp/>explicit<sp/>values.</highlight></codeline>
<codeline lineno="788"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Call<sp/>only<sp/>if<sp/>SIZE<sp/>==<sp/>3</highlight></codeline>
<codeline lineno="789"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790" refid="classvigra_1_1TinyVector_1ad0d832a1b050244940b10567ab83c302" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector_1ae93f6df5295ff8a1dd3dda5069093037" kindref="member">TinyVector</ref>(<ref refid="classvigra_1_1TinyVectorBase_1ad81add7f462b51d2bedbccd43c12e32a" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i1,<sp/><ref refid="classvigra_1_1TinyVectorBase_1ad81add7f462b51d2bedbccd43c12e32a" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i2,<sp/><ref refid="classvigra_1_1TinyVectorBase_1ad81add7f462b51d2bedbccd43c12e32a" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i3)</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound">BaseType</ref>()</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseType::data_[0]<sp/>=<sp/>i1;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseType::data_[1]<sp/>=<sp/>i2;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseType::data_[2]<sp/>=<sp/>i3;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="798"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Construction<sp/>with<sp/>explicit<sp/>values.</highlight></codeline>
<codeline lineno="799"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Call<sp/>only<sp/>if<sp/>SIZE<sp/>==<sp/>4</highlight></codeline>
<codeline lineno="800"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801" refid="classvigra_1_1TinyVector_1af2bdf399dabd31eaa8a19a3029198e72" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector_1ae93f6df5295ff8a1dd3dda5069093037" kindref="member">TinyVector</ref>(<ref refid="classvigra_1_1TinyVectorBase_1ad81add7f462b51d2bedbccd43c12e32a" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i1,<sp/><ref refid="classvigra_1_1TinyVectorBase_1ad81add7f462b51d2bedbccd43c12e32a" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i2,</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorBase_1ad81add7f462b51d2bedbccd43c12e32a" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i3,<sp/><ref refid="classvigra_1_1TinyVectorBase_1ad81add7f462b51d2bedbccd43c12e32a" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i4)</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound">BaseType</ref>()</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseType::data_[0]<sp/>=<sp/>i1;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseType::data_[1]<sp/>=<sp/>i2;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseType::data_[2]<sp/>=<sp/>i3;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseType::data_[3]<sp/>=<sp/>i4;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="811"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Construction<sp/>with<sp/>explicit<sp/>values.</highlight></codeline>
<codeline lineno="812"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Call<sp/>only<sp/>if<sp/>SIZE<sp/>==<sp/>5</highlight></codeline>
<codeline lineno="813"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814" refid="classvigra_1_1TinyVector_1ad551e87362be8826bbafab1513981c21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector_1ae93f6df5295ff8a1dd3dda5069093037" kindref="member">TinyVector</ref>(<ref refid="classvigra_1_1TinyVectorBase_1ad81add7f462b51d2bedbccd43c12e32a" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i1,<sp/><ref refid="classvigra_1_1TinyVectorBase_1ad81add7f462b51d2bedbccd43c12e32a" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i2,</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorBase_1ad81add7f462b51d2bedbccd43c12e32a" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i3,<sp/><ref refid="classvigra_1_1TinyVectorBase_1ad81add7f462b51d2bedbccd43c12e32a" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i4,</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorBase_1ad81add7f462b51d2bedbccd43c12e32a" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i5)</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound">BaseType</ref>()</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseType::data_[0]<sp/>=<sp/>i1;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseType::data_[1]<sp/>=<sp/>i2;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseType::data_[2]<sp/>=<sp/>i3;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseType::data_[3]<sp/>=<sp/>i4;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseType::data_[4]<sp/>=<sp/>i5;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="826"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Default<sp/>constructor<sp/>(initializes<sp/>all<sp/>elements<sp/>with<sp/>zero).</highlight></codeline>
<codeline lineno="827"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828" refid="classvigra_1_1TinyVector_1ae93f6df5295ff8a1dd3dda5069093037" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector_1ae93f6df5295ff8a1dd3dda5069093037" kindref="member">TinyVector</ref>()</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound">BaseType</ref>()</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Loop::assignScalar(BaseType::data_,<sp/>NumericTraits&lt;value_type&gt;::zero());</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="834"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Construct<sp/>without<sp/>initializing<sp/>the<sp/>vector<sp/>elements.</highlight></codeline>
<codeline lineno="835"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836" refid="classvigra_1_1TinyVector_1a2c2b4c129f76203b44510d08bd977377" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector_1ae93f6df5295ff8a1dd3dda5069093037" kindref="member">TinyVector</ref>(SkipInitializationTag)</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound">BaseType</ref>()</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector_1ae93f6df5295ff8a1dd3dda5069093037" kindref="member">TinyVector</ref>(detail::DontInit)</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>BaseType()</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="844"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Copy<sp/>constructor.</highlight></codeline>
<codeline lineno="845"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846" refid="classvigra_1_1TinyVector_1a3f8067135bd93604bda318c676eee705" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector_1ae93f6df5295ff8a1dd3dda5069093037" kindref="member">TinyVector</ref>(<ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound">BaseType</ref>()</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Loop::assign(BaseType::data_,<sp/>r.data_);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="852"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Constructor<sp/>from<sp/>C<sp/>array.</highlight></codeline>
<codeline lineno="853"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854" refid="classvigra_1_1TinyVector_1aef936a2c5fa2e3de4d55e6f2e43d331f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector_1ae93f6df5295ff8a1dd3dda5069093037" kindref="member">TinyVector</ref>(<ref refid="classvigra_1_1TinyVectorBase_1ab652b7cfcfeac13226e0ee07931da4d4" kindref="member">const_pointer</ref><sp/>data)</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound">BaseType</ref>()</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Loop::assign(BaseType::data_,<sp/>data);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="860"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Constructor<sp/>by<sp/>reverse<sp/>copy<sp/>from<sp/>C<sp/>array.</highlight></codeline>
<codeline lineno="861"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="862"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Usage:</highlight></codeline>
<codeline lineno="863"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="864"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TinyVector&lt;int,<sp/>3&gt;<sp/>v(1,2,3);</highlight></codeline>
<codeline lineno="865"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TinyVector&lt;int,<sp/>3&gt;<sp/>reverse(v.begin(),<sp/>TinyVector&lt;int,<sp/>3&gt;::ReverseCopy);</highlight></codeline>
<codeline lineno="866"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="867"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868" refid="classvigra_1_1TinyVector_1adaa6b977d19361598c1f39c76ef3865b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector_1ae93f6df5295ff8a1dd3dda5069093037" kindref="member">TinyVector</ref>(<ref refid="classvigra_1_1TinyVectorBase_1ab652b7cfcfeac13226e0ee07931da4d4" kindref="member">const_pointer</ref><sp/>data,<sp/>ReverseCopyTag)</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound">BaseType</ref>()</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Loop::reverseAssign(BaseType::data_,<sp/>data+SIZE-1);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="874"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Copy<sp/>with<sp/>type<sp/>conversion.</highlight></codeline>
<codeline lineno="875"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DATA,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DERIVED&gt;</highlight></codeline>
<codeline lineno="877" refid="classvigra_1_1TinyVector_1af33ba05fb7ae6210290af7816614760e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector_1ae93f6df5295ff8a1dd3dda5069093037" kindref="member">TinyVector</ref>(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;U, SIZE, DATA, DERIVED&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound">BaseType</ref>()</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Loop::assignCast(BaseType::data_,<sp/>r.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>());</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="883"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Copy<sp/>assignment.</highlight></codeline>
<codeline lineno="884"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885" refid="classvigra_1_1TinyVector_1a3171b3e8894a7cf4fd240875d96877e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1TinyVector_1a3171b3e8894a7cf4fd240875d96877e3" kindref="member">operator=</ref>(<ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Loop::assign(BaseType::data_,<sp/>r.data_);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="891"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Copy<sp/>assignment<sp/>with<sp/>type<sp/>conversion.</highlight></codeline>
<codeline lineno="892"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DATA,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DERIVED&gt;</highlight></codeline>
<codeline lineno="894" refid="classvigra_1_1TinyVector_1ae1607f15b916540c5a1fb644d362f466" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1TinyVector_1a3171b3e8894a7cf4fd240875d96877e3" kindref="member">operator=</ref>(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;U, SIZE, DATA, DERIVED&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Loop::assignCast(BaseType::data_,<sp/>r.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>());</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="900"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Assignment<sp/>from<sp/>Diff2D.</highlight></codeline>
<codeline lineno="901"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="902"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>only<sp/>when<sp/>&lt;tt&gt;SIZE<sp/>==<sp/>2&lt;/tt&gt;.</highlight></codeline>
<codeline lineno="903"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904" refid="classvigra_1_1TinyVector_1a226a3f4b47d526610702caa2738358a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1TinyVector_1a3171b3e8894a7cf4fd240875d96877e3" kindref="member">operator=</ref>(<ref refid="classvigra_1_1Diff2D" kindref="compound" tooltip="Two dimensional difference vector.">Diff2D</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseType::data_[0]<sp/>=<sp/>detail::RequiresExplicitCast&lt;T&gt;::cast(r.<ref refid="classvigra_1_1Diff2D_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseType::data_[1]<sp/>=<sp/>detail::RequiresExplicitCast&lt;T&gt;::cast(r.<ref refid="classvigra_1_1Diff2D_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="911"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Copy<sp/>from<sp/>a<sp/>TinyVector<sp/>with<sp/>a<sp/>different<sp/>number<sp/>of<sp/>elements.</highlight></codeline>
<codeline lineno="912"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="913"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Only<sp/>the<sp/>first<sp/>&lt;tt&gt;min(SIZE,<sp/>USIZE)&lt;/tt&gt;<sp/>elements<sp/>are<sp/>copied.</highlight></codeline>
<codeline lineno="914"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>USIZE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DATA,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DERIVED&gt;</highlight></codeline>
<codeline lineno="916" refid="classvigra_1_1TinyVector_1aa3f1dd1091b459deaab1fa22d8084021" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1TinyVector_1aa3f1dd1091b459deaab1fa22d8084021" kindref="member">copy</ref>(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;U, USIZE, DATA, DERIVED&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minSize<sp/>=<sp/>USIZE<sp/>&lt;<sp/>SIZE</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>USIZE</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>SIZE;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>detail::LoopType&lt;minSize&gt;::type<sp/>MinLoop;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MinLoop::assignCast(BaseType::data_,<sp/>r.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>());</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal">};</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="928"><highlight class="comment">/**<sp/>\brief<sp/>Wrapper<sp/>for<sp/>fixed<sp/>size<sp/>vectors.</highlight></codeline>
<codeline lineno="929"><highlight class="comment"></highlight></codeline>
<codeline lineno="930"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>class<sp/>wraps<sp/>an<sp/>array<sp/>of<sp/>size<sp/>SIZE<sp/>of<sp/>the<sp/>specified<sp/>VALUETYPE.</highlight></codeline>
<codeline lineno="931"><highlight class="comment"><sp/><sp/><sp/><sp/>Thus,<sp/>the<sp/>array<sp/>can<sp/>be<sp/>accessed<sp/>with<sp/>an<sp/>interface<sp/>similar<sp/>to</highlight></codeline>
<codeline lineno="932"><highlight class="comment"><sp/><sp/><sp/><sp/>that<sp/>of<sp/>std::vector<sp/>(except<sp/>that<sp/>there<sp/>are<sp/>no<sp/>functions</highlight></codeline>
<codeline lineno="933"><highlight class="comment"><sp/><sp/><sp/><sp/>that<sp/>change<sp/>the<sp/>size<sp/>of<sp/>a<sp/>TinyVectorView).<sp/>The<sp/>TinyVectorView</highlight></codeline>
<codeline lineno="934"><highlight class="comment"><sp/><sp/><sp/><sp/>does<sp/>&lt;em&gt;not&lt;/em&gt;<sp/>assume<sp/>ownership<sp/>of<sp/>the<sp/>given<sp/>memory.</highlight></codeline>
<codeline lineno="935"><highlight class="comment"></highlight></codeline>
<codeline lineno="936"><highlight class="comment"><sp/><sp/><sp/><sp/>\ref<sp/>TinyVectorOperators<sp/>&quot;Arithmetic<sp/>operations&quot;</highlight></codeline>
<codeline lineno="937"><highlight class="comment"><sp/><sp/><sp/><sp/>on<sp/>TinyVectorViews<sp/>are<sp/>defined<sp/>as<sp/>component-wise<sp/>applications<sp/>of<sp/>these</highlight></codeline>
<codeline lineno="938"><highlight class="comment"><sp/><sp/><sp/><sp/>operations.<sp/>Addition<sp/>and<sp/>subtraction<sp/>of<sp/>two<sp/>TinyVectorViews</highlight></codeline>
<codeline lineno="939"><highlight class="comment"><sp/><sp/><sp/><sp/>(+=,<sp/>-=,<sp/>+,<sp/>-,<sp/>unary<sp/>-),<sp/>multiplication<sp/>and<sp/>division<sp/>of<sp/>an</highlight></codeline>
<codeline lineno="940"><highlight class="comment"><sp/><sp/><sp/><sp/>TinyVectorViews<sp/>with<sp/>a<sp/>double,<sp/>and<sp/>NumericTraits/PromoteTraits<sp/>are<sp/>defined,</highlight></codeline>
<codeline lineno="941"><highlight class="comment"><sp/><sp/><sp/><sp/>so<sp/>that<sp/>TinyVectorView<sp/>fulfills<sp/>the<sp/>requirements<sp/>of<sp/>\ref<sp/>LinearAlgebraConcept<sp/>&quot;Linear<sp/>Algebra&quot;.</highlight></codeline>
<codeline lineno="942"><highlight class="comment"></highlight></codeline>
<codeline lineno="943"><highlight class="comment"><sp/><sp/><sp/><sp/>VIGRA<sp/>algorithms<sp/>typically<sp/>use<sp/>\ref<sp/>vigra::VectorAccessor<sp/>to<sp/>access</highlight></codeline>
<codeline lineno="944"><highlight class="comment"><sp/><sp/><sp/><sp/>TinyVectorViews<sp/>as<sp/>a<sp/>whole,<sp/>or<sp/>specific<sp/>components<sp/>of<sp/>them.</highlight></codeline>
<codeline lineno="945"><highlight class="comment"></highlight></codeline>
<codeline lineno="946"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;See<sp/>also:&lt;/b&gt;</highlight></codeline>
<codeline lineno="947"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="948"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;li&gt;<sp/>\ref<sp/>vigra::TinyVectorBase</highlight></codeline>
<codeline lineno="949"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;li&gt;<sp/>\ref<sp/>vigra::TinyVector</highlight></codeline>
<codeline lineno="950"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;li&gt;<sp/>\ref<sp/>TinyVectorTraits</highlight></codeline>
<codeline lineno="951"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;li&gt;<sp/>\ref<sp/>TinyVectorOperators</highlight></codeline>
<codeline lineno="952"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="953"><highlight class="comment"></highlight></codeline>
<codeline lineno="954"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/tinyvector.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="955"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="956"><highlight class="comment">**/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="958" refid="classvigra_1_1TinyVectorView" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1TinyVectorView" kindref="compound" tooltip="Wrapper for fixed size vectors.">TinyVectorView</ref></highlight></codeline>
<codeline lineno="959"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase</ref>&lt;T,<sp/>SIZE,<sp/>T<sp/>*,<sp/>TinyVectorView&lt;T,<sp/>SIZE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="960"><highlight class="normal">{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;T, SIZE, T *, TinyVectorView&lt;T, SIZE&gt;</ref><sp/>&gt;<sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound">BaseType</ref>;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BaseType::Loop<sp/>Loop;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1ad81add7f462b51d2bedbccd43c12e32a" kindref="member">BaseType::value_type</ref><sp/>value_type;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1a5cc9035ae36e93a575d4fe8e1dbfe55d" kindref="member">BaseType::reference</ref><sp/>reference;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1a4bc49d740bad1cb75776bcfac2c40f26" kindref="member">BaseType::const_reference</ref><sp/>const_reference;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1abf6e21ead96acfe1ce6770f74a6685fc" kindref="member">BaseType::pointer</ref><sp/>pointer;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1ab652b7cfcfeac13226e0ee07931da4d4" kindref="member">BaseType::const_pointer</ref><sp/>const_pointer;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1a4b0424da8c99197075d119ba0959bf1e" kindref="member">BaseType::iterator</ref><sp/>iterator;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1a8d3921909325ec56e10da00c0d6b1f08" kindref="member">BaseType::const_iterator</ref><sp/>const_iterator;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1ada51e68d31936547d3729c82daf6b7c6" kindref="member">BaseType::size_type</ref><sp/>size_type;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1ad319fc54a93a2c7058c70e40428ed2e2" kindref="member">BaseType::difference_type</ref><sp/>difference_type;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1add69d58b47c0e2e51b5c1cdad6d51fd8" kindref="member">BaseType::scalar_multiplier</ref><sp/>scalar_multiplier;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1a687349cd43a37b847414648089fd0a6a" kindref="member">BaseType::SquaredNormType</ref><sp/>SquaredNormType;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVectorBase_1a3aaf2f56b74ba07badf36ce76715e460" kindref="member">BaseType::NormType</ref><sp/>NormType;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="979"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Default<sp/>constructor</highlight></codeline>
<codeline lineno="980"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pointer<sp/>to<sp/>wrapped<sp/>data<sp/>is<sp/>NULL).</highlight></codeline>
<codeline lineno="981"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982" refid="classvigra_1_1TinyVectorView_1abf5b62d7084dd6978e47f0f9de3e1526" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorView_1abf5b62d7084dd6978e47f0f9de3e1526" kindref="member">TinyVectorView</ref>()</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound">BaseType</ref>()</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseType::data_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="988"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Construct<sp/>view<sp/>for<sp/>given<sp/>data<sp/>array</highlight></codeline>
<codeline lineno="989"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990" refid="classvigra_1_1TinyVectorView_1a6809da7e5284ec51b53b4112becb5b1e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorView_1abf5b62d7084dd6978e47f0f9de3e1526" kindref="member">TinyVectorView</ref>(const_pointer<sp/>data)</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound">BaseType</ref>()</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseType::data_<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">pointer</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="996"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Copy<sp/>constructor<sp/>(shallow<sp/>copy).</highlight></codeline>
<codeline lineno="997"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998" refid="classvigra_1_1TinyVectorView_1af0ea6dc567fef128699615ded73ddf0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorView_1abf5b62d7084dd6978e47f0f9de3e1526" kindref="member">TinyVectorView</ref>(<ref refid="classvigra_1_1TinyVectorView" kindref="compound" tooltip="Wrapper for fixed size vectors.">TinyVectorView</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound">BaseType</ref>()</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseType::data_<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">pointer</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(other.data_);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1004"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Construct<sp/>view<sp/>from<sp/>other<sp/>TinyVector.</highlight></codeline>
<codeline lineno="1005"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DATA,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DERIVED&gt;</highlight></codeline>
<codeline lineno="1007" refid="classvigra_1_1TinyVectorView_1a87a08c6957c1107fc61c0f6f3ceb2bf2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorView_1abf5b62d7084dd6978e47f0f9de3e1526" kindref="member">TinyVectorView</ref>(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;T, SIZE, DATA, DERIVED&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound">BaseType</ref>()</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseType::data_<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">pointer</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(other.data());</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1013"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Copy<sp/>the<sp/>data<sp/>(not<sp/>the<sp/>pointer)<sp/>of<sp/>the<sp/>rhs.</highlight></codeline>
<codeline lineno="1014"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015" refid="classvigra_1_1TinyVectorView_1aff537979e1d83bb68ba4ba8121a01846" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorView" kindref="compound" tooltip="Wrapper for fixed size vectors.">TinyVectorView</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1TinyVectorView_1aff537979e1d83bb68ba4ba8121a01846" kindref="member">operator=</ref>(<ref refid="classvigra_1_1TinyVectorView" kindref="compound" tooltip="Wrapper for fixed size vectors.">TinyVectorView</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Loop::assign(BaseType::data_,<sp/>r.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>());</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1021"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Copy<sp/>the<sp/>data<sp/>of<sp/>the<sp/>rhs<sp/>with<sp/>cast.</highlight></codeline>
<codeline lineno="1022"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DATA,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DERIVED&gt;</highlight></codeline>
<codeline lineno="1024" refid="classvigra_1_1TinyVectorView_1a3fb032ce7bb07efa7714198f54802d2d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorView" kindref="compound" tooltip="Wrapper for fixed size vectors.">TinyVectorView</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1TinyVectorView_1aff537979e1d83bb68ba4ba8121a01846" kindref="member">operator=</ref>(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;U, SIZE, DATA, DERIVED&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Loop::assignCast(BaseType::data_,<sp/>r.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>());</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TinyVector<sp/>Comparison<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1037"><highlight class="comment">/**<sp/>\addtogroup<sp/>TinyVectorOperators<sp/>Functions<sp/>for<sp/>TinyVector</highlight></codeline>
<codeline lineno="1038"><highlight class="comment"></highlight></codeline>
<codeline lineno="1039"><highlight class="comment"><sp/><sp/><sp/><sp/>\brief<sp/>Implement<sp/>basic<sp/>arithmetic<sp/>and<sp/>equality<sp/>for<sp/>TinyVector.</highlight></codeline>
<codeline lineno="1040"><highlight class="comment"></highlight></codeline>
<codeline lineno="1041"><highlight class="comment"><sp/><sp/><sp/><sp/>These<sp/>functions<sp/>fulfill<sp/>the<sp/>requirements<sp/>of<sp/>a<sp/>Linear<sp/>Space<sp/>(vector<sp/>space).</highlight></codeline>
<codeline lineno="1042"><highlight class="comment"><sp/><sp/><sp/><sp/>Return<sp/>types<sp/>are<sp/>determined<sp/>according<sp/>to<sp/>\ref<sp/>TinyVectorTraits.</highlight></codeline>
<codeline lineno="1043"><highlight class="comment"></highlight></codeline>
<codeline lineno="1044"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/tinyvector.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="1045"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="1046"><highlight class="comment">*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1047"><highlight class="comment">//@{</highlight></codeline>
<codeline lineno="1048"><highlight class="comment"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>component-wise<sp/>equal</highlight></codeline>
<codeline lineno="1049"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D3,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D4&gt;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1051" refid="group__TinyVectorOperators_1ga523b7e8e929b8d7b2adc9997ab320511" refkind="member"><highlight class="normal"><ref refid="group__FFTWComplexOperators_1ga51aa30ebec3e036cbd162a05d9a34f7f" kindref="member" tooltip="equal">operator==</ref>(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V1, SIZE, D1, D2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>l,</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V2, SIZE, D3, D4&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight></codeline>
<codeline lineno="1053"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(l<sp/>!=<sp/>r);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1057"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>component-wise<sp/>not<sp/>equal</highlight></codeline>
<codeline lineno="1058"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D3,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D4&gt;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060" refid="group__TinyVectorOperators_1gae697cc76c952868b590f677c4e9f5087" refkind="member"><highlight class="normal"><ref refid="group__FFTWComplexOperators_1gab6fe0235404f2cfe54c027ce7cb1c048" kindref="member" tooltip="not equal">operator!=</ref>(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V1, SIZE, D1, D2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>l,</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V2, SIZE, D3, D4&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight></codeline>
<codeline lineno="1062"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>detail::LoopType&lt;SIZE&gt;::type<sp/>ltype;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ltype::notEqual(l.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>(),<sp/>r.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>());</highlight></codeline>
<codeline lineno="1065"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1067"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>component-wise<sp/>lexicographical<sp/>comparison</highlight></codeline>
<codeline lineno="1068"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D3,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D4&gt;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070" refid="group__TinyVectorOperators_1gaab9f59f79fcac91811fe216014d6721a" refkind="member"><highlight class="normal">operator&lt;(TinyVectorBase&lt;V1,<sp/>SIZE,<sp/>D1,<sp/>D2&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>l,</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V2, SIZE, D3, D4&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight></codeline>
<codeline lineno="1072"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>detail::LoopType&lt;SIZE&gt;::type<sp/>ltype;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ltype::less(l.begin(),<sp/>r.begin());</highlight></codeline>
<codeline lineno="1075"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TinyVector<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1083"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>stream<sp/>output</highlight></codeline>
<codeline lineno="1084"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DATA,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DERIVED&gt;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal">std::ostream<sp/>&amp;</highlight></codeline>
<codeline lineno="1086" refid="group__TinyVectorOperators_1gabadf6d027d9060e22c4f1042f682febe" refkind="member"><highlight class="normal">operator&lt;&lt;(std::ostream<sp/>&amp;<sp/>out,<sp/>TinyVectorBase&lt;V1,<sp/>SIZE,<sp/>DATA,<sp/>DERIVED&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>l)</highlight></codeline>
<codeline lineno="1087"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;SIZE-1;<sp/>++i)</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>l[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>l[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal">}</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1095"><highlight class="comment">//@}</highlight></codeline>
<codeline lineno="1096"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TinyVector-Traits<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1103"><highlight class="comment">/**<sp/>\page<sp/>TinyVectorTraits<sp/>Numeric<sp/>and<sp/>Promote<sp/>Traits<sp/>of<sp/>TinyVector</highlight></codeline>
<codeline lineno="1104"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>numeric<sp/>and<sp/>promote<sp/>traits<sp/>for<sp/>TinyVectors<sp/>follow</highlight></codeline>
<codeline lineno="1105"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>general<sp/>specifications<sp/>for<sp/>\ref<sp/>NumericPromotionTraits.</highlight></codeline>
<codeline lineno="1106"><highlight class="comment"><sp/><sp/><sp/><sp/>They<sp/>are<sp/>implemented<sp/>in<sp/>terms<sp/>of<sp/>the<sp/>traits<sp/>of<sp/>the<sp/>basic<sp/>types<sp/>by</highlight></codeline>
<codeline lineno="1107"><highlight class="comment"><sp/><sp/><sp/><sp/>partial<sp/>template<sp/>specialization:</highlight></codeline>
<codeline lineno="1108"><highlight class="comment"></highlight></codeline>
<codeline lineno="1109"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1110"><highlight class="comment"></highlight></codeline>
<codeline lineno="1111"><highlight class="comment"><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>T,<sp/>int<sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="1112"><highlight class="comment"><sp/><sp/><sp/><sp/>struct<sp/>NumericTraits&lt;TinyVector&lt;T,<sp/>SIZE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1113"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>TinyVector&lt;typename<sp/>NumericTraits&lt;T&gt;::Promote,<sp/>SIZE&gt;<sp/>Promote;</highlight></codeline>
<codeline lineno="1115"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>TinyVector&lt;typename<sp/>NumericTraits&lt;T&gt;::RealPromote,<sp/>SIZE&gt;<sp/>RealPromote;</highlight></codeline>
<codeline lineno="1116"><highlight class="comment"></highlight></codeline>
<codeline lineno="1117"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>NumericTraits&lt;T&gt;::isIntegral<sp/>isIntegral;</highlight></codeline>
<codeline lineno="1118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>VigraFalseType<sp/>isScalar;</highlight></codeline>
<codeline lineno="1119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>NumericTraits&lt;T&gt;::isSigned<sp/>isSigned;</highlight></codeline>
<codeline lineno="1120"><highlight class="comment"></highlight></codeline>
<codeline lineno="1121"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>etc.</highlight></codeline>
<codeline lineno="1122"><highlight class="comment"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1123"><highlight class="comment"></highlight></codeline>
<codeline lineno="1124"><highlight class="comment"><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>T,<sp/>int<sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="1125"><highlight class="comment"><sp/><sp/><sp/><sp/>struct<sp/>NormTraits&lt;TinyVector&lt;T,<sp/>SIZE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1126"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1127"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>TinyVector&lt;T,<sp/>SIZE&gt;<sp/>Type;</highlight></codeline>
<codeline lineno="1128"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>Type::SquaredNormType<sp/><sp/><sp/><sp/>SquaredNormType;</highlight></codeline>
<codeline lineno="1129"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>Type::NormType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NormType;</highlight></codeline>
<codeline lineno="1130"><highlight class="comment"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1131"><highlight class="comment"></highlight></codeline>
<codeline lineno="1132"><highlight class="comment"><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>T1,<sp/>class<sp/>T2,<sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="1133"><highlight class="comment"><sp/><sp/><sp/><sp/>struct<sp/>PromoteTraits&lt;TinyVector&lt;T1,<sp/>SIZE&gt;,<sp/>TinyVector&lt;T2,<sp/>SIZE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1134"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1135"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>TinyVector&lt;typename<sp/>PromoteTraits&lt;T1,<sp/>T2&gt;::Promote,<sp/>SIZE&gt;<sp/>Promote;</highlight></codeline>
<codeline lineno="1136"><highlight class="comment"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1137"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1138"><highlight class="comment"></highlight></codeline>
<codeline lineno="1139"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/tinyvector.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="1140"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="1141"><highlight class="comment"></highlight></codeline>
<codeline lineno="1142"><highlight class="comment"><sp/><sp/><sp/><sp/>On<sp/>compilers<sp/>that<sp/>don&apos;t<sp/>support<sp/>partial<sp/>template<sp/>specialization<sp/>(e.g.</highlight></codeline>
<codeline lineno="1143"><highlight class="comment"><sp/><sp/><sp/><sp/>MS<sp/>VisualC++),<sp/>the<sp/>traits<sp/>classes<sp/>are<sp/>explicitly<sp/>specialized<sp/>for</highlight></codeline>
<codeline lineno="1144"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;TT&gt;TinyVector&lt;VALUETYPE,<sp/>SIZE&gt;&lt;/TT&gt;<sp/>with</highlight></codeline>
<codeline lineno="1145"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;TT&gt;VALUETYPE<sp/>=<sp/>unsigned<sp/>char<sp/>|<sp/>int<sp/>|<sp/>float<sp/>|<sp/>double&lt;/TT&gt;<sp/>and<sp/>&lt;TT&gt;SIZE<sp/>=<sp/>2<sp/>|<sp/>3<sp/>|<sp/>4&lt;/TT&gt;.</highlight></codeline>
<codeline lineno="1146"><highlight class="comment"></highlight></codeline>
<codeline lineno="1147"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(NO_PARTIAL_TEMPLATE_SPECIALIZATION)</highlight></codeline>
<codeline lineno="1150"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">NumericTraits&lt;TinyVector&lt;T,<sp/>SIZE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;T,<sp/>SIZE&gt;<sp/>Type;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;typename<sp/>NumericTraits&lt;T&gt;::Promote,<sp/>SIZE&gt;<sp/>Promote;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;typename<sp/>NumericTraits&lt;T&gt;::RealPromote,<sp/>SIZE&gt;<sp/>RealPromote;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;typename<sp/>NumericTraits&lt;T&gt;::ComplexPromote,<sp/>SIZE&gt;<sp/>ComplexPromote;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/>ValueType;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::isIntegral<sp/>isIntegral;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraFalseType<sp/>isScalar;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::isSigned<sp/>isSigned;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isOrdered;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraFalseType<sp/>isComplex;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>TinyVector&lt;T,<sp/>SIZE&gt;<sp/>zero()</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TinyVector&lt;T,<sp/>SIZE&gt;(NumericTraits&lt;T&gt;::zero());</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>TinyVector&lt;T,<sp/>SIZE&gt;<sp/>one()</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TinyVector&lt;T,<sp/>SIZE&gt;(NumericTraits&lt;T&gt;::one());</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>TinyVector&lt;T,<sp/>SIZE&gt;<sp/>nonZero()</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TinyVector&lt;T,<sp/>SIZE&gt;(NumericTraits&lt;T&gt;::nonZero());</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>TinyVector&lt;T,<sp/>SIZE&gt;<sp/><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">min</ref>()</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TinyVector&lt;T,<sp/>SIZE&gt;(<ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">NumericTraits&lt;T&gt;::min</ref>());</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>TinyVector&lt;T,<sp/>SIZE&gt;<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>()</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TinyVector&lt;T,<sp/>SIZE&gt;(<ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">NumericTraits&lt;T&gt;::max</ref>());</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2&gt;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Promote<sp/>toPromote(TinyVectorBase&lt;T,<sp/>SIZE,<sp/>D1,<sp/>D2&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Promote(v);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2&gt;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>RealPromote<sp/>toRealPromote(TinyVectorBase&lt;T,<sp/>SIZE,<sp/>D1,<sp/>D2&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RealPromote(v);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2&gt;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>TinyVector&lt;T,<sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/>fromPromote(TinyVectorBase&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::Promote,<sp/>SIZE,<sp/>D1,<sp/>D2&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TinyVector&lt;T,<sp/>SIZE&gt;<sp/>res(detail::dontInit());</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>detail::LoopType&lt;SIZE&gt;::type<sp/>ltype;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ltype::fromPromote(res.begin(),<sp/>v.begin());</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2&gt;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>TinyVector&lt;T,<sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/>fromRealPromote(TinyVectorBase&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::RealPromote,<sp/>SIZE,<sp/>D1,<sp/>D2&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TinyVector&lt;T,<sp/>SIZE&gt;<sp/>res(detail::dontInit());</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>detail::LoopType&lt;SIZE&gt;::type<sp/>ltype;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ltype::fromRealPromote(res.begin(),<sp/>v.begin());</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1219"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">NumericTraits&lt;TinyVectorView&lt;T,<sp/>SIZE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>NumericTraits&lt;TinyVector&lt;T,<sp/>SIZE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;T,<sp/>SIZE&gt;<sp/>Type;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;typename<sp/>NumericTraits&lt;T&gt;::Promote,<sp/>SIZE&gt;<sp/>Promote;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;typename<sp/>NumericTraits&lt;T&gt;::RealPromote,<sp/>SIZE&gt;<sp/>RealPromote;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;typename<sp/>NumericTraits&lt;T&gt;::ComplexPromote,<sp/>SIZE&gt;<sp/>ComplexPromote;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/>ValueType;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::isIntegral<sp/>isIntegral;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraFalseType<sp/>isScalar;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::isSigned<sp/>isSigned;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraFalseType<sp/>isOrdered;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraFalseType<sp/>isComplex;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">NormTraits&lt;TinyVector&lt;T,<sp/>SIZE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;T,<sp/>SIZE&gt;<sp/>Type;</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Type::SquaredNormType<sp/><sp/><sp/><sp/>SquaredNormType;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Type::NormType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NormType;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">NormTraits&lt;TinyVectorView&lt;T,<sp/>SIZE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;T,<sp/>SIZE&gt;<sp/>Type;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Type::SquaredNormType<sp/><sp/><sp/><sp/>SquaredNormType;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Type::NormType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NormType;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PromoteTraits&lt;TinyVector&lt;T1,<sp/>SIZE&gt;,<sp/>TinyVector&lt;T2,<sp/>SIZE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;typename<sp/>PromoteTraits&lt;T1,<sp/>T2&gt;::Promote,<sp/>SIZE&gt;<sp/>Promote;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PromoteTraits&lt;TinyVectorView&lt;T1,<sp/>SIZE&gt;,<sp/>TinyVectorView&lt;T2,<sp/>SIZE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;typename<sp/>PromoteTraits&lt;T1,<sp/>T2&gt;::Promote,<sp/>SIZE&gt;<sp/>Promote;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PromoteTraits&lt;TinyVectorView&lt;T1,<sp/>SIZE&gt;,<sp/>TinyVector&lt;T2,<sp/>SIZE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;typename<sp/>PromoteTraits&lt;T1,<sp/>T2&gt;::Promote,<sp/>SIZE&gt;<sp/>Promote;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PromoteTraits&lt;TinyVector&lt;T1,<sp/>SIZE&gt;,<sp/>TinyVectorView&lt;T2,<sp/>SIZE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;typename<sp/>PromoteTraits&lt;T1,<sp/>T2&gt;::Promote,<sp/>SIZE&gt;<sp/>Promote;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PromoteTraits&lt;TinyVector&lt;T,<sp/>SIZE&gt;,<sp/>double<sp/>&gt;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;typename<sp/>NumericTraits&lt;T&gt;::RealPromote,<sp/>SIZE&gt;<sp/>Promote;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PromoteTraits&lt;double,<sp/>TinyVector&lt;T,<sp/>SIZE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;typename<sp/>NumericTraits&lt;T&gt;::RealPromote,<sp/>SIZE&gt;<sp/>Promote;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PromoteTraits&lt;TinyVectorView&lt;T,<sp/>SIZE&gt;,<sp/>double<sp/>&gt;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;typename<sp/>NumericTraits&lt;T&gt;::RealPromote,<sp/>SIZE&gt;<sp/>Promote;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PromoteTraits&lt;double,<sp/>TinyVectorView&lt;T,<sp/>SIZE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;typename<sp/>NumericTraits&lt;T&gt;::RealPromote,<sp/>SIZE&gt;<sp/>Promote;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CanSkipInitialization&lt;TinyVectorView&lt;T,<sp/>SIZE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CanSkipInitialization&lt;T&gt;::type<sp/>type;</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>type::asBool;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CanSkipInitialization&lt;TinyVector&lt;T,<sp/>SIZE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CanSkipInitialization&lt;T&gt;::type<sp/>type;</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>type::asBool;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/>//<sp/>NO_PARTIAL_TEMPLATE_SPECIALIZATION</highlight></codeline>
<codeline lineno="1319"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYVECTOR_NUMTRAITS(T,<sp/>SIZE)<sp/>\</highlight></codeline>
<codeline lineno="1322"><highlight class="preprocessor">template&lt;&gt;\</highlight></codeline>
<codeline lineno="1323"><highlight class="preprocessor">struct<sp/>NumericTraits&lt;TinyVector&lt;T,<sp/>SIZE&gt;<sp/>&gt;\</highlight></codeline>
<codeline lineno="1324"><highlight class="preprocessor">{\</highlight></codeline>
<codeline lineno="1325"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typedef<sp/>TinyVector&lt;T,<sp/>SIZE&gt;<sp/>Type;\</highlight></codeline>
<codeline lineno="1326"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typedef<sp/>TinyVector&lt;NumericTraits&lt;T&gt;::Promote,<sp/>SIZE&gt;<sp/>Promote;\</highlight></codeline>
<codeline lineno="1327"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typedef<sp/>TinyVector&lt;NumericTraits&lt;T&gt;::RealPromote,<sp/>SIZE&gt;<sp/>RealPromote;\</highlight></codeline>
<codeline lineno="1328"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typedef<sp/>TinyVector&lt;NumericTraits&lt;T&gt;::ComplexPromote,<sp/>SIZE&gt;<sp/>ComplexPromote;\</highlight></codeline>
<codeline lineno="1329"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typedef<sp/>T<sp/>ValueType;<sp/>\</highlight></codeline>
<codeline lineno="1330"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typedef<sp/>NumericTraits&lt;T&gt;::isIntegral<sp/>isIntegral;\</highlight></codeline>
<codeline lineno="1331"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typedef<sp/>VigraFalseType<sp/>isScalar;\</highlight></codeline>
<codeline lineno="1332"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typedef<sp/>NumericTraits&lt;T&gt;::isSigned<sp/>isSigned;<sp/>\</highlight></codeline>
<codeline lineno="1333"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typedef<sp/>VigraFalseType<sp/>isOrdered;\</highlight></codeline>
<codeline lineno="1334"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typedef<sp/>VigraFalseType<sp/>isComplex;\</highlight></codeline>
<codeline lineno="1335"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1336"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>TinyVector&lt;T,<sp/>SIZE&gt;<sp/>zero()<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="1337"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>TinyVector&lt;T,<sp/>SIZE&gt;(NumericTraits&lt;T&gt;::zero());<sp/>\</highlight></codeline>
<codeline lineno="1338"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1339"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>TinyVector&lt;T,<sp/>SIZE&gt;<sp/>one()<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="1340"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>TinyVector&lt;T,<sp/>SIZE&gt;(NumericTraits&lt;T&gt;::one());<sp/>\</highlight></codeline>
<codeline lineno="1341"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1342"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>TinyVector&lt;T,<sp/>SIZE&gt;<sp/>nonZero()<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="1343"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>TinyVector&lt;T,<sp/>SIZE&gt;(NumericTraits&lt;T&gt;::nonZero());<sp/>\</highlight></codeline>
<codeline lineno="1344"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1345"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1346"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>Promote<sp/>toPromote(TinyVector&lt;T,<sp/>SIZE&gt;<sp/>const<sp/>&amp;<sp/>v)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="1347"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>Promote(v);<sp/>\</highlight></codeline>
<codeline lineno="1348"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1349"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>RealPromote<sp/>toRealPromote(TinyVector&lt;T,<sp/>SIZE&gt;<sp/>const<sp/>&amp;<sp/>v)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="1350"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>RealPromote(v);<sp/>\</highlight></codeline>
<codeline lineno="1351"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1352"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>TinyVector&lt;T,<sp/>SIZE&gt;<sp/>fromPromote(Promote<sp/>const<sp/>&amp;<sp/>v)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="1353"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TinyVector&lt;T,<sp/>SIZE&gt;<sp/>res;\</highlight></codeline>
<codeline lineno="1354"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TinyVector&lt;T,<sp/>SIZE&gt;::iterator<sp/>d<sp/>=<sp/>res.begin(),<sp/>dend<sp/>=<sp/>res.end();\</highlight></codeline>
<codeline lineno="1355"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Promote::const_iterator<sp/>s<sp/>=<sp/>v.begin();\</highlight></codeline>
<codeline lineno="1356"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(;<sp/>d<sp/>!=<sp/>dend;<sp/>++d,<sp/>++s)\</highlight></codeline>
<codeline lineno="1357"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*d<sp/>=<sp/>NumericTraits&lt;T&gt;::fromPromote(*s);\</highlight></codeline>
<codeline lineno="1358"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>res;\</highlight></codeline>
<codeline lineno="1359"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1360"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>TinyVector&lt;T,<sp/>SIZE&gt;<sp/>fromRealPromote(RealPromote<sp/>const<sp/>&amp;<sp/>v)<sp/>{\</highlight></codeline>
<codeline lineno="1361"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TinyVector&lt;T,<sp/>SIZE&gt;<sp/>res;\</highlight></codeline>
<codeline lineno="1362"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TinyVector&lt;T,<sp/>SIZE&gt;::iterator<sp/>d<sp/>=<sp/>res.begin(),<sp/>dend<sp/>=<sp/>res.end();\</highlight></codeline>
<codeline lineno="1363"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RealPromote::const_iterator<sp/>s<sp/>=<sp/>v.begin();\</highlight></codeline>
<codeline lineno="1364"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(;<sp/>d<sp/>!=<sp/>dend;<sp/>++d,<sp/>++s)\</highlight></codeline>
<codeline lineno="1365"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*d<sp/>=<sp/>NumericTraits&lt;T&gt;::fromRealPromote(*s);\</highlight></codeline>
<codeline lineno="1366"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>res;\</highlight></codeline>
<codeline lineno="1367"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="1368"><highlight class="preprocessor">};<sp/>\</highlight></codeline>
<codeline lineno="1369"><highlight class="preprocessor">template&lt;&gt;\</highlight></codeline>
<codeline lineno="1370"><highlight class="preprocessor">struct<sp/>NormTraits&lt;TinyVector&lt;T,<sp/>SIZE&gt;<sp/>&gt;\</highlight></codeline>
<codeline lineno="1371"><highlight class="preprocessor">{\</highlight></codeline>
<codeline lineno="1372"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typedef<sp/>TinyVector&lt;T,<sp/>SIZE&gt;<sp/>Type;\</highlight></codeline>
<codeline lineno="1373"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typedef<sp/>Type::SquaredNormType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SquaredNormType;<sp/>\</highlight></codeline>
<codeline lineno="1374"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typedef<sp/>Type::NormType<sp/>NormType;<sp/>\</highlight></codeline>
<codeline lineno="1375"><highlight class="preprocessor">};</highlight></codeline>
<codeline lineno="1376"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYVECTOR_PROMTRAITS1(type1,<sp/>SIZE)<sp/>\</highlight></codeline>
<codeline lineno="1378"><highlight class="preprocessor">template&lt;&gt;<sp/>\</highlight></codeline>
<codeline lineno="1379"><highlight class="preprocessor">struct<sp/>PromoteTraits&lt;TinyVector&lt;type1,<sp/>SIZE&gt;,<sp/>TinyVector&lt;type1,<sp/>SIZE&gt;<sp/>&gt;<sp/>\</highlight></codeline>
<codeline lineno="1380"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="1381"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typedef<sp/>TinyVector&lt;PromoteTraits&lt;type1,<sp/>type1&gt;::Promote,<sp/>SIZE&gt;<sp/>Promote;<sp/>\</highlight></codeline>
<codeline lineno="1382"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>Promote<sp/>toPromote(TinyVector&lt;type1,<sp/>SIZE&gt;<sp/>const<sp/>&amp;<sp/>v)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="1383"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>static_cast&lt;Promote&gt;(v);<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="1384"><highlight class="preprocessor">};</highlight></codeline>
<codeline lineno="1385"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYVECTOR_PROMTRAITS2(type1,<sp/>type2,<sp/>SIZE)<sp/>\</highlight></codeline>
<codeline lineno="1387"><highlight class="preprocessor">template&lt;&gt;<sp/>\</highlight></codeline>
<codeline lineno="1388"><highlight class="preprocessor">struct<sp/>PromoteTraits&lt;TinyVector&lt;type1,<sp/>SIZE&gt;,<sp/>TinyVector&lt;type2,<sp/>SIZE&gt;<sp/>&gt;<sp/>\</highlight></codeline>
<codeline lineno="1389"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="1390"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typedef<sp/>TinyVector&lt;PromoteTraits&lt;type1,<sp/>type2&gt;::Promote,<sp/>SIZE&gt;<sp/>Promote;<sp/>\</highlight></codeline>
<codeline lineno="1391"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>Promote<sp/>toPromote(TinyVector&lt;type1,<sp/>SIZE&gt;<sp/>const<sp/>&amp;<sp/>v)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="1392"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>static_cast&lt;Promote&gt;(v);<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="1393"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>Promote<sp/>toPromote(TinyVector&lt;type2,<sp/>SIZE&gt;<sp/>const<sp/>&amp;<sp/>v)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="1394"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>static_cast&lt;Promote&gt;(v);<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="1395"><highlight class="preprocessor">};</highlight></codeline>
<codeline lineno="1396"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TINYVECTOR_TRAITS(SIZE)<sp/>\</highlight></codeline>
<codeline lineno="1398"><highlight class="preprocessor">TINYVECTOR_NUMTRAITS(unsigned<sp/>char,<sp/>SIZE)\</highlight></codeline>
<codeline lineno="1399"><highlight class="preprocessor">TINYVECTOR_NUMTRAITS(int,<sp/>SIZE)\</highlight></codeline>
<codeline lineno="1400"><highlight class="preprocessor">TINYVECTOR_NUMTRAITS(float,<sp/>SIZE)\</highlight></codeline>
<codeline lineno="1401"><highlight class="preprocessor">TINYVECTOR_NUMTRAITS(double,<sp/>SIZE)\</highlight></codeline>
<codeline lineno="1402"><highlight class="preprocessor">TINYVECTOR_PROMTRAITS1(unsigned<sp/>char,<sp/>SIZE)\</highlight></codeline>
<codeline lineno="1403"><highlight class="preprocessor">TINYVECTOR_PROMTRAITS1(int,<sp/>SIZE)\</highlight></codeline>
<codeline lineno="1404"><highlight class="preprocessor">TINYVECTOR_PROMTRAITS1(float,<sp/>SIZE)\</highlight></codeline>
<codeline lineno="1405"><highlight class="preprocessor">TINYVECTOR_PROMTRAITS1(double,<sp/>SIZE)\</highlight></codeline>
<codeline lineno="1406"><highlight class="preprocessor">TINYVECTOR_PROMTRAITS2(float,<sp/>unsigned<sp/>char,<sp/>SIZE)\</highlight></codeline>
<codeline lineno="1407"><highlight class="preprocessor">TINYVECTOR_PROMTRAITS2(unsigned<sp/>char,<sp/>float,<sp/>SIZE)\</highlight></codeline>
<codeline lineno="1408"><highlight class="preprocessor">TINYVECTOR_PROMTRAITS2(int,<sp/>unsigned<sp/>char,<sp/>SIZE)\</highlight></codeline>
<codeline lineno="1409"><highlight class="preprocessor">TINYVECTOR_PROMTRAITS2(unsigned<sp/>char,<sp/>int,<sp/>SIZE)\</highlight></codeline>
<codeline lineno="1410"><highlight class="preprocessor">TINYVECTOR_PROMTRAITS2(int,<sp/>float,<sp/>SIZE)\</highlight></codeline>
<codeline lineno="1411"><highlight class="preprocessor">TINYVECTOR_PROMTRAITS2(float,<sp/>int,<sp/>SIZE)\</highlight></codeline>
<codeline lineno="1412"><highlight class="preprocessor">TINYVECTOR_PROMTRAITS2(double,<sp/>unsigned<sp/>char,<sp/>SIZE)\</highlight></codeline>
<codeline lineno="1413"><highlight class="preprocessor">TINYVECTOR_PROMTRAITS2(unsigned<sp/>char,<sp/>double,<sp/>SIZE)\</highlight></codeline>
<codeline lineno="1414"><highlight class="preprocessor">TINYVECTOR_PROMTRAITS2(int,<sp/>double,<sp/>SIZE)\</highlight></codeline>
<codeline lineno="1415"><highlight class="preprocessor">TINYVECTOR_PROMTRAITS2(double,<sp/>int,<sp/>SIZE)\</highlight></codeline>
<codeline lineno="1416"><highlight class="preprocessor">TINYVECTOR_PROMTRAITS2(double,<sp/>float,<sp/>SIZE)\</highlight></codeline>
<codeline lineno="1417"><highlight class="preprocessor">TINYVECTOR_PROMTRAITS2(float,<sp/>double,<sp/>SIZE)</highlight></codeline>
<codeline lineno="1418"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal">TINYVECTOR_TRAITS(2)</highlight></codeline>
<codeline lineno="1420"><highlight class="normal">TINYVECTOR_TRAITS(3)</highlight></codeline>
<codeline lineno="1421"><highlight class="normal">TINYVECTOR_TRAITS(4)</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>TINYVECTOR_NUMTRAITS</highlight></codeline>
<codeline lineno="1424"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>TINYVECTOR_PROMTRAITS1</highlight></codeline>
<codeline lineno="1425"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>TINYVECTOR_PROMTRAITS2</highlight></codeline>
<codeline lineno="1426"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>TINYVECTOR_TRAITS</highlight></codeline>
<codeline lineno="1427"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>NO_PARTIAL_TEMPLATE_SPECIALIZATION</highlight></codeline>
<codeline lineno="1429"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TinyVector-Arithmetic<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1437"><highlight class="comment">/**<sp/>\addtogroup<sp/>TinyVectorOperators</highlight></codeline>
<codeline lineno="1438"><highlight class="comment"><sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1439"><highlight class="comment">//@{</highlight></codeline>
<codeline lineno="1440"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1441"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>component-wise<sp/>addition</highlight></codeline>
<codeline lineno="1442"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D3,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D4&gt;</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PromoteTraits&lt;TinyVector&lt;V1,<sp/>SIZE&gt;,<sp/>TinyVector&lt;V2,<sp/>SIZE&gt;<sp/>&gt;::Promote</highlight></codeline>
<codeline lineno="1445" refid="group__TinyVectorOperators_1ga74f6096f6858b0a6c41d22d5e653a2ba" refkind="member"><highlight class="normal"><ref refid="group__RangesAndPoints_1gaae0d5ddc9e1bb121fcd46339a797795d" kindref="member">operator+</ref>(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V1, SIZE, D1, D2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>l,</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V2, SIZE, D3, D4&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight></codeline>
<codeline lineno="1447"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PromoteTraits&lt;TinyVector&lt;V1,<sp/>SIZE&gt;,<sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;V2 , SIZE&gt;</ref><sp/>&gt;::Promote(l)<sp/>+=<sp/>r;</highlight></codeline>
<codeline lineno="1449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1451"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>component-wise<sp/>subtraction</highlight></codeline>
<codeline lineno="1452"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D3,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D4&gt;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PromoteTraits&lt;TinyVector&lt;V1,<sp/>SIZE&gt;,<sp/>TinyVector&lt;V2,<sp/>SIZE&gt;<sp/>&gt;::Promote</highlight></codeline>
<codeline lineno="1455" refid="group__TinyVectorOperators_1gaba242b4501a425ad4499e0a24f76c502" refkind="member"><highlight class="normal"><ref refid="group__RangesAndPoints_1ga8bc0dbe52072019f3c87980a96db2ddd" kindref="member">operator-</ref>(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V1, SIZE, D1, D2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>l,</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V2, SIZE, D3, D4&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight></codeline>
<codeline lineno="1457"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PromoteTraits&lt;TinyVector&lt;V1,<sp/>SIZE&gt;,<sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;V2 , SIZE&gt;</ref><sp/>&gt;::Promote(l)<sp/>-=<sp/>r;</highlight></codeline>
<codeline lineno="1459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1461"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>component-wise<sp/>multiplication</highlight></codeline>
<codeline lineno="1462"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D3,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D4&gt;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PromoteTraits&lt;TinyVector&lt;V1,<sp/>SIZE&gt;,<sp/>TinyVector&lt;V2,<sp/>SIZE&gt;<sp/>&gt;::Promote</highlight></codeline>
<codeline lineno="1465" refid="group__TinyVectorOperators_1ga1831eb2cff2b875b02a852a45132ccfe" refkind="member"><highlight class="normal">operator*(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V1, SIZE, D1, D2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>l,</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V2, SIZE, D3, D4&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight></codeline>
<codeline lineno="1467"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PromoteTraits&lt;TinyVector&lt;V1,<sp/>SIZE&gt;,<sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;V2 , SIZE&gt;</ref><sp/>&gt;::Promote(l)<sp/>*=<sp/>r;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1471"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>component-wise<sp/>division</highlight></codeline>
<codeline lineno="1472"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D3,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D4&gt;</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PromoteTraits&lt;TinyVector&lt;V1,<sp/>SIZE&gt;,<sp/>TinyVector&lt;V2,<sp/>SIZE&gt;<sp/>&gt;::Promote</highlight></codeline>
<codeline lineno="1475" refid="group__TinyVectorOperators_1ga3fc9256d555f34a0668c51221601379b" refkind="member"><highlight class="normal">operator/(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V1, SIZE, D1, D2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>l,</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V2, SIZE, D3, D4&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight></codeline>
<codeline lineno="1477"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PromoteTraits&lt;TinyVector&lt;V1,<sp/>SIZE&gt;,<sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;V2 , SIZE&gt;</ref><sp/>&gt;::Promote(l)<sp/>/=<sp/>r;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1481"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>component-wise<sp/>left<sp/>scalar<sp/>multiplication</highlight></codeline>
<codeline lineno="1482"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2&gt;</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;TinyVector&lt;V,<sp/>SIZE&gt;<sp/>&gt;::RealPromote</highlight></codeline>
<codeline lineno="1485" refid="group__TinyVectorOperators_1ga8e3fd2ac6dc4d55ec2725743ec69a9b6" refkind="member"><highlight class="normal">operator*(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v,<sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V, SIZE, D1, D2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight></codeline>
<codeline lineno="1486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;TinyVector&lt;V,<sp/>SIZE&gt;<sp/>&gt;::RealPromote(r)<sp/>*=<sp/>v;</highlight></codeline>
<codeline lineno="1488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1490"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>component-wise<sp/>right<sp/>scalar<sp/>multiplication</highlight></codeline>
<codeline lineno="1491"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2&gt;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;TinyVector&lt;V,<sp/>SIZE&gt;<sp/>&gt;::RealPromote</highlight></codeline>
<codeline lineno="1494" refid="group__TinyVectorOperators_1gaba145924900b8d5cc36c8ba6e404a036" refkind="member"><highlight class="normal">operator*(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V, SIZE, D1, D2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>l,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v)</highlight></codeline>
<codeline lineno="1495"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;TinyVector&lt;V,<sp/>SIZE&gt;<sp/>&gt;::RealPromote(l)<sp/>*=<sp/>v;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1499"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>component-wise<sp/>scalar<sp/>division</highlight></codeline>
<codeline lineno="1500"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2&gt;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;TinyVector&lt;V,<sp/>SIZE&gt;<sp/>&gt;::RealPromote</highlight></codeline>
<codeline lineno="1503" refid="group__TinyVectorOperators_1ga2aa838f98ff3d77c35d48976b59c1f47" refkind="member"><highlight class="normal">operator/(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V, SIZE, D1, D2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>l,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v)</highlight></codeline>
<codeline lineno="1504"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;TinyVector&lt;V,<sp/>SIZE&gt;<sp/>&gt;::RealPromote(l)<sp/>/=<sp/>v;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1508"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>component-wise<sp/>scalar<sp/>division<sp/>without<sp/>type<sp/>promotion</highlight></codeline>
<codeline lineno="1509"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2&gt;</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal">TinyVector&lt;V,<sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="1512" refid="group__TinyVectorOperators_1ga7f6e870704c4feed9cb10b4e6a88f537" refkind="member"><highlight class="normal"><ref refid="group__FixedPoint16Operations_1gac71b069a80f6decdb6fad1cfd508f5f8" kindref="member" tooltip="division with enforced result type.">div</ref>(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V, SIZE, D1, D2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>l,<sp/>V<sp/>v)</highlight></codeline>
<codeline lineno="1513"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;V, SIZE&gt;</ref><sp/>result(l);</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>detail::LoopType&lt;SIZE&gt;::type<sp/>Loop;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/>Loop::divScalar(result.data(),<sp/>v);</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1521"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>Unary<sp/>negation<sp/>(construct<sp/>TinyVector<sp/>with<sp/>negative<sp/>values)</highlight></codeline>
<codeline lineno="1522"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2&gt;</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal">TinyVector&lt;V,<sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="1526" refid="group__TinyVectorOperators_1gae825420f3495f62f52712f8d3d0cd68e" refkind="member"><highlight class="normal"><ref refid="group__RangesAndPoints_1ga8bc0dbe52072019f3c87980a96db2ddd" kindref="member">operator-</ref>(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V, SIZE, D1, D2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="1527"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;V, SIZE&gt;</ref><sp/>res(detail::dontInit());</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>detail::LoopType&lt;SIZE&gt;::type<sp/>ltype;</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/>ltype::neg(res.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>(),<sp/>v.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>());</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1534"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>component-wise<sp/>absolute<sp/>value</highlight></codeline>
<codeline lineno="1535"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2&gt;</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal">TinyVector&lt;V,<sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="1538" refid="group__TinyVectorOperators_1ga739deb1c35a7b178dfd7b7e2402dff08" refkind="member"><highlight class="normal"><ref refid="group__FFTWComplexOperators_1ga6f4ef274842b6153923f02a6cd264576" kindref="member" tooltip="absolute value (= magnitude)">abs</ref>(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V, SIZE, D1, D2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="1539"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;V, SIZE&gt;</ref><sp/>res(detail::dontInit());</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>detail::LoopType&lt;SIZE&gt;::type<sp/>ltype;</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__FFTWComplexOperators_1ga6f4ef274842b6153923f02a6cd264576" kindref="member" tooltip="absolute value (= magnitude)">ltype::abs</ref>(res.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>(),<sp/>v.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>());</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1546"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>Apply<sp/>ceil()<sp/>function<sp/>to<sp/>each<sp/>vector<sp/>component.</highlight></codeline>
<codeline lineno="1547"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2&gt;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal">TinyVector&lt;V,<sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="1551" refid="group__TinyVectorOperators_1ga4e0bd0391f6a2d5e9347c2daa7a8d05e" refkind="member"><highlight class="normal"><ref refid="group__FixedPointOperations_1ga14fe7b9ffa21e091c6ff4ede68717c30" kindref="member" tooltip="rounding up.">ceil</ref>(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V, SIZE, D1, D2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="1552"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;V, SIZE&gt;</ref><sp/>res(detail::dontInit());</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>detail::LoopType&lt;SIZE&gt;::type<sp/>ltype;</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__FixedPointOperations_1ga14fe7b9ffa21e091c6ff4ede68717c30" kindref="member" tooltip="rounding up.">ltype::ceil</ref>(res.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>(),<sp/>v.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>());</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1559"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>Apply<sp/>floor()<sp/>function<sp/>to<sp/>each<sp/>vector<sp/>component.</highlight></codeline>
<codeline lineno="1560"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2&gt;</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal">TinyVector&lt;V,<sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="1564" refid="group__TinyVectorOperators_1gae9236ef4cc1620991693a0ed032042f0" refkind="member"><highlight class="normal"><ref refid="group__FixedPointOperations_1gaf8fe85520fc0bc2d77ec8e6cf26f3c5d" kindref="member" tooltip="rounding down.">floor</ref>(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V, SIZE, D1, D2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="1565"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;V, SIZE&gt;</ref><sp/>res(detail::dontInit());</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>detail::LoopType&lt;SIZE&gt;::type<sp/>ltype;</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__FixedPointOperations_1gaf8fe85520fc0bc2d77ec8e6cf26f3c5d" kindref="member" tooltip="rounding down.">ltype::floor</ref>(res.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>(),<sp/>v.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>());</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1572"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>Apply<sp/>sqrt()<sp/>function<sp/>to<sp/>each<sp/>vector<sp/>component.</highlight></codeline>
<codeline lineno="1573"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2&gt;</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal">TinyVector&lt;V,<sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="1577" refid="group__TinyVectorOperators_1ga5e7ad02cda9d7d9be09a5be092ebb520" refkind="member"><highlight class="normal"><ref refid="group__FixedPointOperations_1ga22d75753836176f3d172f58be11ecc4c" kindref="member" tooltip="square root.">sqrt</ref>(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V, SIZE, D1, D2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="1578"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;V, SIZE&gt;</ref><sp/>res(detail::dontInit());</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>detail::LoopType&lt;SIZE&gt;::type<sp/>ltype;</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__FixedPointOperations_1ga22d75753836176f3d172f58be11ecc4c" kindref="member" tooltip="square root.">ltype::sqrt</ref>(res.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>(),<sp/>v.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>());</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1585"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>cross<sp/>product</highlight></codeline>
<codeline lineno="1586"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D3,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D4&gt;</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal">TinyVector&lt;typename<sp/>PromoteTraits&lt;V1,<sp/>V2&gt;::Promote,<sp/>3&gt;</highlight></codeline>
<codeline lineno="1589" refid="group__TinyVectorOperators_1ga170cec3becfca7bd00faa56db0e811f8" refkind="member"><highlight class="normal"><ref refid="group__RGBValueOperators_1ga63c949faa1c424c07a7c3907f061b5f5" kindref="member" tooltip="cross product">cross</ref>(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V1, 3, D1, D2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r1,</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V2, 3, D3, D4&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r2)</highlight></codeline>
<codeline lineno="1591"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;typename PromoteTraits&lt;V1, V2&gt;::Promote</ref>,<sp/>3&gt;</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Res;</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>Res(r1[1]*r2[2]<sp/>-<sp/>r1[2]*r2[1],</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r1[2]*r2[0]<sp/>-<sp/>r1[0]*r2[2],</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r1[0]*r2[1]<sp/>-<sp/>r1[1]*r2[0]);</highlight></codeline>
<codeline lineno="1597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1599"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>dot<sp/>product</highlight></codeline>
<codeline lineno="1600"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D3,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D4&gt;</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PromoteTraits&lt;V1,<sp/>V2&gt;::Promote</highlight></codeline>
<codeline lineno="1603" refid="group__TinyVectorOperators_1ga5daa9ccf920ad84e68f5eb0d2df5be53" refkind="member"><highlight class="normal"><ref refid="group__RGBValueOperators_1gaabe9d910ba7a54cbf606254a81e409e6" kindref="member" tooltip="dot product">dot</ref>(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V1, SIZE, D1, D2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>l,</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V2, SIZE, D3, D4&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight></codeline>
<codeline lineno="1605"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>detail::LoopType&lt;SIZE&gt;::type<sp/>ltype;</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__RGBValueOperators_1gaabe9d910ba7a54cbf606254a81e409e6" kindref="member" tooltip="dot product">ltype::dot</ref>(l.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>(),<sp/>r.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>());</highlight></codeline>
<codeline lineno="1608"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1610"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>sum<sp/>of<sp/>the<sp/>vector&apos;s<sp/>elements</highlight></codeline>
<codeline lineno="1611"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2&gt;</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;V&gt;::Promote</highlight></codeline>
<codeline lineno="1614" refid="group__TinyVectorOperators_1ga202143b556e7388b4895f457317eb086" refkind="member"><highlight class="normal"><ref refid="group__TinyVectorOperators_1ga202143b556e7388b4895f457317eb086" kindref="member" tooltip="sum of the vector&amp;#39;s elements">sum</ref>(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V, SIZE, D1, D2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>l)</highlight></codeline>
<codeline lineno="1615"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;V&gt;::Promote<sp/>res<sp/>=<sp/>l[0];</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=1;<sp/>k&lt;SIZE;<sp/>++k)</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>+=<sp/>l[k];</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1622"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>cumulative<sp/>sum<sp/>of<sp/>the<sp/>vector&apos;s<sp/>elements</highlight></codeline>
<codeline lineno="1623"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2&gt;</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal">TinyVector&lt;typename<sp/>NumericTraits&lt;V&gt;::Promote,<sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="1626" refid="group__TinyVectorOperators_1ga66c60fc6c941a7461281dae96e15a378" refkind="member"><highlight class="normal"><ref refid="group__TinyVectorOperators_1ga66c60fc6c941a7461281dae96e15a378" kindref="member" tooltip="cumulative sum of the vector&amp;#39;s elements">cumsum</ref>(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V, SIZE, D1, D2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>l)</highlight></codeline>
<codeline lineno="1627"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;typename NumericTraits&lt;V&gt;::Promote</ref>,<sp/>SIZE&gt;<sp/>res(l);</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=1;<sp/>k&lt;SIZE;<sp/>++k)</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[k]<sp/>+=<sp/>res[k-1];</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1634"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>product<sp/>of<sp/>the<sp/>vector&apos;s<sp/>elements</highlight></codeline>
<codeline lineno="1635"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2&gt;</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;V&gt;::Promote</highlight></codeline>
<codeline lineno="1638" refid="group__TinyVectorOperators_1gaa49e08e69b54385f9434ffe32a32f299" refkind="member"><highlight class="normal"><ref refid="group__TinyVectorOperators_1gaa49e08e69b54385f9434ffe32a32f299" kindref="member" tooltip="product of the vector&amp;#39;s elements">prod</ref>(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V, SIZE, D1, D2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>l)</highlight></codeline>
<codeline lineno="1639"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;V&gt;::Promote<sp/>res<sp/>=<sp/>l[0];</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=1;<sp/>k&lt;SIZE;<sp/>++k)</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>*=<sp/>l[k];</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1646"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>cumulative<sp/>product<sp/>of<sp/>the<sp/>vector&apos;s<sp/>elements</highlight></codeline>
<codeline lineno="1647"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2&gt;</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal">TinyVector&lt;typename<sp/>NumericTraits&lt;V&gt;::Promote,<sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="1650" refid="group__TinyVectorOperators_1gad3c7573bdce62caf4167e7c797e5b0fc" refkind="member"><highlight class="normal"><ref refid="group__TinyVectorOperators_1gad3c7573bdce62caf4167e7c797e5b0fc" kindref="member" tooltip="cumulative product of the vector&amp;#39;s elements">cumprod</ref>(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V, SIZE, D1, D2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>l)</highlight></codeline>
<codeline lineno="1651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;typename NumericTraits&lt;V&gt;::Promote</ref>,<sp/>SIZE&gt;<sp/>res(l);</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=1;<sp/>k&lt;SIZE;<sp/>++k)</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[k]<sp/>*=<sp/>res[k-1];</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1658"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>element-wise<sp/>minimum</highlight></codeline>
<codeline lineno="1659"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D3,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D4&gt;</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal">TinyVector&lt;typename<sp/>PromoteTraits&lt;V1,<sp/>V2&gt;::Promote,<sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="1662" refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" refkind="member"><highlight class="normal"><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">min</ref>(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V1, SIZE, D1, D2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>l,</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V2, SIZE, D3, D4&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight></codeline>
<codeline lineno="1664"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;typename PromoteTraits&lt;V1, V2&gt;::Promote</ref>,<sp/>SIZE&gt;<sp/>res(l);</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k&lt;SIZE;<sp/>++k)</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r[k]<sp/>&lt;<sp/>res[k])</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[k]<sp/>=<sp/>r[k];</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1670"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1672"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>minimum<sp/>element</highlight></codeline>
<codeline lineno="1673"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2&gt;</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal">V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;</highlight></codeline>
<codeline lineno="1676" refid="group__TinyVectorOperators_1gad64049e837827b5ee36a30be305bf459" refkind="member"><highlight class="normal"><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">min</ref>(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V, SIZE, D1, D2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>l)</highlight></codeline>
<codeline lineno="1677"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>l.<ref refid="classvigra_1_1TinyVectorBase_1ac5b93cc371537a7772a60cc0d3be43f8" kindref="member">minimum</ref>();</highlight></codeline>
<codeline lineno="1679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1681"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>element-wise<sp/>maximum</highlight></codeline>
<codeline lineno="1682"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D3,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D4&gt;</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal">TinyVector&lt;typename<sp/>PromoteTraits&lt;V1,<sp/>V2&gt;::Promote,<sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="1685" refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" refkind="member"><highlight class="normal"><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V1, SIZE, D1, D2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>l,</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V2, SIZE, D3, D4&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight></codeline>
<codeline lineno="1687"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;typename PromoteTraits&lt;V1, V2&gt;::Promote</ref>,<sp/>SIZE&gt;<sp/>res(l);</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k&lt;SIZE;<sp/>++k)</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(res[k]<sp/>&lt;<sp/>r[k])</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[k]<sp/>=<sp/>r[k];</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1693"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1695"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>maximum<sp/>element</highlight></codeline>
<codeline lineno="1696"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2&gt;</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal">V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;</highlight></codeline>
<codeline lineno="1699" refid="group__TinyVectorOperators_1ga79c34e138b3cea6683b4ffae03deaf1d" refkind="member"><highlight class="normal"><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V, SIZE, D1, D2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>l)</highlight></codeline>
<codeline lineno="1700"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>l.<ref refid="classvigra_1_1TinyVectorBase_1a0626973e733c59d2dcf29679b6542db3" kindref="member">maximum</ref>();</highlight></codeline>
<codeline lineno="1702"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1704"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>squared<sp/>norm</highlight></codeline>
<codeline lineno="1705"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2&gt;</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TinyVectorBase&lt;V1,<sp/>SIZE,<sp/>D1,<sp/>D2&gt;::SquaredNormType</highlight></codeline>
<codeline lineno="1708" refid="group__TinyVectorOperators_1ga435a208ecc16dacbb7e8c20f4c6a530d" refkind="member"><highlight class="normal"><ref refid="group__FFTWComplexOperators_1ga484df995dad9821aac02ec42cd58f7eb" kindref="member" tooltip="squared norm (= squared magnitude)">squaredNorm</ref>(<ref refid="classvigra_1_1TinyVectorBase" kindref="compound" tooltip="Base class for fixed size vectors.">TinyVectorBase&lt;V1, SIZE, D1, D2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>t)</highlight></codeline>
<codeline lineno="1709"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t.<ref refid="classvigra_1_1TinyVectorBase_1ad3541cb08b6fe60edd5c2532f5c167c8" kindref="member">squaredMagnitude</ref>();</highlight></codeline>
<codeline lineno="1711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1713"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>squared<sp/>norm</highlight></codeline>
<codeline lineno="1714"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TinyVector&lt;V,<sp/>SIZE&gt;::SquaredNormType</highlight></codeline>
<codeline lineno="1717" refid="group__TinyVectorOperators_1gabe11a15981a8e3a4e9715ea8de51f5fb" refkind="member"><highlight class="normal"><ref refid="group__FFTWComplexOperators_1ga484df995dad9821aac02ec42cd58f7eb" kindref="member" tooltip="squared norm (= squared magnitude)">squaredNorm</ref>(<ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;V, SIZE&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>t)</highlight></codeline>
<codeline lineno="1718"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t.<ref refid="classvigra_1_1TinyVectorBase_1ad3541cb08b6fe60edd5c2532f5c167c8" kindref="member">squaredMagnitude</ref>();</highlight></codeline>
<codeline lineno="1720"><highlight class="normal">}</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1721"><highlight class="comment">//@}</highlight></codeline>
<codeline lineno="1722"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"></highlight><highlight class="comment">//<sp/>mask<sp/>cl.exe<sp/>shortcomings<sp/>[end]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)</highlight></codeline>
<codeline lineno="1725"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warning(<sp/>pop<sp/>)</highlight></codeline>
<codeline lineno="1726"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1727"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1728"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>vigra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1729"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_ASSERT_INSIDE</highlight></codeline>
<codeline lineno="1730"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>VIGRA_TINYVECTOR_HXX</highlight></codeline>
    </programlisting>
    <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/tinyvector.hxx"/>
  </compounddef>
</doxygen>
