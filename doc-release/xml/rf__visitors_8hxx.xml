<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="rf__visitors_8hxx" kind="file">
    <compoundname>rf_visitors.hxx</compoundname>
    <includes local="no">vigra/windows.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">iomanip</includes>
    <includes refid="multi__pointoperators_8hxx" local="no">vigra/multi_pointoperators.hxx</includes>
    <includes refid="timing_8hxx" local="no">vigra/timing.hxx</includes>
    <includedby refid="rf__decisionTree_8hxx" local="yes">vigra/random_forest/rf_decisionTree.hxx</includedby>
    <includedby refid="random__forest_8hxx" local="yes">vigra/random_forest.hxx</includedby>
    <incdepgraph>
      <node id="7037">
        <label>vigra/multi_pointoperators.hxx</label>
        <link refid="multi__pointoperators_8hxx_source"/>
        <childnode refid="7038" relation="include">
        </childnode>
        <childnode refid="7072" relation="include">
        </childnode>
        <childnode refid="7073" relation="include">
        </childnode>
        <childnode refid="7080" relation="include">
        </childnode>
        <childnode refid="7078" relation="include">
        </childnode>
        <childnode refid="7081" relation="include">
        </childnode>
        <childnode refid="7046" relation="include">
        </childnode>
        <childnode refid="7069" relation="include">
        </childnode>
      </node>
      <node id="7070">
        <label>functional</label>
      </node>
      <node id="7036">
        <label>iomanip</label>
      </node>
      <node id="7048">
        <label>limits</label>
      </node>
      <node id="7062">
        <label>sized_int.hxx</label>
        <link refid="sized__int_8hxx_source"/>
        <childnode refid="7046" relation="include">
        </childnode>
        <childnode refid="7048" relation="include">
        </childnode>
      </node>
      <node id="7056">
        <label>iterator</label>
      </node>
      <node id="7081">
        <label>multi_array.hxx</label>
        <link refid="multi__array_8hxx_source"/>
        <childnode refid="7082" relation="include">
        </childnode>
        <childnode refid="7049" relation="include">
        </childnode>
        <childnode refid="7058" relation="include">
        </childnode>
        <childnode refid="7075" relation="include">
        </childnode>
        <childnode refid="7074" relation="include">
        </childnode>
        <childnode refid="7083" relation="include">
        </childnode>
        <childnode refid="7084" relation="include">
        </childnode>
        <childnode refid="7059" relation="include">
        </childnode>
        <childnode refid="7085" relation="include">
        </childnode>
        <childnode refid="7046" relation="include">
        </childnode>
        <childnode refid="7066" relation="include">
        </childnode>
      </node>
      <node id="7069">
        <label>inspector_passes.hxx</label>
        <link refid="inspector__passes_8hxx_source"/>
        <childnode refid="7046" relation="include">
        </childnode>
      </node>
      <node id="7063">
        <label>promote_traits.hxx</label>
        <link refid="promote__traits_8hxx_source"/>
      </node>
      <node id="7038">
        <label>initimage.hxx</label>
        <link refid="initimage_8hxx_source"/>
        <childnode refid="7039" relation="include">
        </childnode>
        <childnode refid="7057" relation="include">
        </childnode>
        <childnode refid="7071" relation="include">
        </childnode>
      </node>
      <node id="7068">
        <label>algorithm.hxx</label>
        <link refid="algorithm_8hxx_source"/>
        <childnode refid="7062" relation="include">
        </childnode>
        <childnode refid="7059" relation="include">
        </childnode>
        <childnode refid="7069" relation="include">
        </childnode>
        <childnode refid="7049" relation="include">
        </childnode>
        <childnode refid="7070" relation="include">
        </childnode>
        <childnode refid="7056" relation="include">
        </childnode>
      </node>
      <node id="7053">
        <label>cmath</label>
      </node>
      <node id="7042">
        <label>stdexcept</label>
      </node>
      <node id="7071">
        <label>functortraits.hxx</label>
        <link refid="functortraits_8hxx_source"/>
        <childnode refid="7070" relation="include">
        </childnode>
        <childnode refid="7046" relation="include">
        </childnode>
      </node>
      <node id="7055">
        <label>iteratortags.hxx</label>
        <link refid="iteratortags_8hxx_source"/>
        <childnode refid="7056" relation="include">
        </childnode>
      </node>
      <node id="7045">
        <label>string</label>
      </node>
      <node id="7072">
        <label>copyimage.hxx</label>
        <link refid="copyimage_8hxx_source"/>
        <childnode refid="7039" relation="include">
        </childnode>
      </node>
      <node id="7083">
        <label>basicimageview.hxx</label>
        <link refid="basicimageview_8hxx_source"/>
        <childnode refid="7084" relation="include">
        </childnode>
        <childnode refid="7038" relation="include">
        </childnode>
      </node>
      <node id="7057">
        <label>iteratortraits.hxx</label>
        <link refid="iteratortraits_8hxx_source"/>
        <childnode refid="7058" relation="include">
        </childnode>
        <childnode refid="7064" relation="include">
        </childnode>
      </node>
      <node id="7060">
        <label>cfloat</label>
      </node>
      <node id="7039">
        <label>utilities.hxx</label>
        <link refid="utilities_8hxx_source"/>
        <childnode refid="7040" relation="include">
        </childnode>
        <childnode refid="7043" relation="include">
        </childnode>
        <childnode refid="7046" relation="include">
        </childnode>
        <childnode refid="7050" relation="include">
        </childnode>
        <childnode refid="7052" relation="include">
        </childnode>
        <childnode refid="7066" relation="include">
        </childnode>
        <childnode refid="7045" relation="include">
        </childnode>
        <childnode refid="7044" relation="include">
        </childnode>
      </node>
      <node id="7041">
        <label>vigra/configVersion.hxx</label>
        <link refid="configVersion_8hxx_source"/>
      </node>
      <node id="7073">
        <label>transformimage.hxx</label>
        <link refid="transformimage_8hxx_source"/>
        <childnode refid="7039" relation="include">
        </childnode>
        <childnode refid="7059" relation="include">
        </childnode>
        <childnode refid="7057" relation="include">
        </childnode>
        <childnode refid="7074" relation="include">
        </childnode>
        <childnode refid="7071" relation="include">
        </childnode>
        <childnode refid="7078" relation="include">
        </childnode>
      </node>
      <node id="7050">
        <label>tuple.hxx</label>
        <link refid="tuple_8hxx_source"/>
        <childnode refid="7051" relation="include">
        </childnode>
      </node>
      <node id="7075">
        <label>tinyvector.hxx</label>
        <link refid="tinyvector_8hxx_source"/>
        <childnode refid="7053" relation="include">
        </childnode>
        <childnode refid="7067" relation="include">
        </childnode>
        <childnode refid="7054" relation="include">
        </childnode>
        <childnode refid="7049" relation="include">
        </childnode>
        <childnode refid="7040" relation="include">
        </childnode>
        <childnode refid="7043" relation="include">
        </childnode>
        <childnode refid="7046" relation="include">
        </childnode>
        <childnode refid="7059" relation="include">
        </childnode>
        <childnode refid="7076" relation="include">
        </childnode>
        <childnode refid="7066" relation="include">
        </childnode>
        <childnode refid="7052" relation="include">
        </childnode>
      </node>
      <node id="7034">
        <label>vigra/windows.h</label>
      </node>
      <node id="7086">
        <label>sys/types.h</label>
      </node>
      <node id="7078">
        <label>inspectimage.hxx</label>
        <link refid="inspectimage_8hxx_source"/>
        <childnode refid="7079" relation="include">
        </childnode>
        <childnode refid="7049" relation="include">
        </childnode>
        <childnode refid="7039" relation="include">
        </childnode>
        <childnode refid="7059" relation="include">
        </childnode>
        <childnode refid="7057" relation="include">
        </childnode>
        <childnode refid="7071" relation="include">
        </childnode>
        <childnode refid="7074" relation="include">
        </childnode>
        <childnode refid="7069" relation="include">
        </childnode>
      </node>
      <node id="7066">
        <label>mathutil.hxx</label>
        <link refid="mathutil_8hxx_source"/>
        <childnode refid="7053" relation="include">
        </childnode>
        <childnode refid="7067" relation="include">
        </childnode>
        <childnode refid="7061" relation="include">
        </childnode>
        <childnode refid="7040" relation="include">
        </childnode>
        <childnode refid="7043" relation="include">
        </childnode>
        <childnode refid="7050" relation="include">
        </childnode>
        <childnode refid="7062" relation="include">
        </childnode>
        <childnode refid="7059" relation="include">
        </childnode>
        <childnode refid="7068" relation="include">
        </childnode>
      </node>
      <node id="7040">
        <label>config.hxx</label>
        <link refid="config_8hxx_source"/>
        <childnode refid="7041" relation="include">
        </childnode>
        <childnode refid="7042" relation="include">
        </childnode>
      </node>
      <node id="7059">
        <label>numerictraits.hxx</label>
        <link refid="numerictraits_8hxx_source"/>
        <childnode refid="7047" relation="include">
        </childnode>
        <childnode refid="7048" relation="include">
        </childnode>
        <childnode refid="7060" relation="include">
        </childnode>
        <childnode refid="7061" relation="include">
        </childnode>
        <childnode refid="7046" relation="include">
        </childnode>
        <childnode refid="7062" relation="include">
        </childnode>
        <childnode refid="7063" relation="include">
        </childnode>
      </node>
      <node id="7079">
        <label>vector</label>
      </node>
      <node id="7084">
        <label>imageiterator.hxx</label>
        <link refid="imageiterator_8hxx_source"/>
        <childnode refid="7039" relation="include">
        </childnode>
        <childnode refid="7058" relation="include">
        </childnode>
        <childnode refid="7057" relation="include">
        </childnode>
        <childnode refid="7046" relation="include">
        </childnode>
      </node>
      <node id="7065">
        <label>iteratoradapter.hxx</label>
        <link refid="iteratoradapter_8hxx_source"/>
      </node>
      <node id="7064">
        <label>imageiteratoradapter.hxx</label>
        <link refid="imageiteratoradapter_8hxx_source"/>
        <childnode refid="7056" relation="include">
        </childnode>
      </node>
      <node id="7051">
        <label>utility</label>
      </node>
      <node id="7044">
        <label>sstream</label>
      </node>
      <node id="7074">
        <label>rgbvalue.hxx</label>
        <link refid="rgbvalue_8hxx_source"/>
        <childnode refid="7053" relation="include">
        </childnode>
        <childnode refid="7067" relation="include">
        </childnode>
        <childnode refid="7040" relation="include">
        </childnode>
        <childnode refid="7059" relation="include">
        </childnode>
        <childnode refid="7058" relation="include">
        </childnode>
        <childnode refid="7075" relation="include">
        </childnode>
        <childnode refid="7077" relation="include">
        </childnode>
      </node>
      <node id="7052">
        <label>diff2d.hxx</label>
        <link refid="diff2d_8hxx_source"/>
        <childnode refid="7053" relation="include">
        </childnode>
        <childnode refid="7054" relation="include">
        </childnode>
        <childnode refid="7040" relation="include">
        </childnode>
        <childnode refid="7055" relation="include">
        </childnode>
        <childnode refid="7057" relation="include">
        </childnode>
        <childnode refid="7065" relation="include">
        </childnode>
        <childnode refid="7050" relation="include">
        </childnode>
      </node>
      <node id="7043">
        <label>error.hxx</label>
        <link refid="error_8hxx_source"/>
        <childnode refid="7042" relation="include">
        </childnode>
        <childnode refid="7044" relation="include">
        </childnode>
        <childnode refid="7045" relation="include">
        </childnode>
        <childnode refid="7040" relation="include">
        </childnode>
      </node>
      <node id="7077">
        <label>static_assert.hxx</label>
        <link refid="static__assert_8hxx_source"/>
      </node>
      <node id="7054">
        <label>iosfwd</label>
      </node>
      <node id="7067">
        <label>cstdlib</label>
      </node>
      <node id="7088">
        <label>sys/time.h</label>
      </node>
      <node id="7035">
        <label>iostream</label>
      </node>
      <node id="7085">
        <label>multi_iterator.hxx</label>
        <link refid="multi__iterator_8hxx_source"/>
        <childnode refid="7086" relation="include">
        </childnode>
        <childnode refid="7075" relation="include">
        </childnode>
        <childnode refid="7055" relation="include">
        </childnode>
      </node>
      <node id="7047">
        <label>climits</label>
      </node>
      <node id="7046">
        <label>metaprogramming.hxx</label>
        <link refid="metaprogramming_8hxx_source"/>
        <childnode refid="7040" relation="include">
        </childnode>
        <childnode refid="7047" relation="include">
        </childnode>
        <childnode refid="7048" relation="include">
        </childnode>
        <childnode refid="7049" relation="include">
        </childnode>
      </node>
      <node id="7087">
        <label>vigra/timing.hxx</label>
        <link refid="timing_8hxx"/>
        <childnode refid="7035" relation="include">
        </childnode>
        <childnode refid="7044" relation="include">
        </childnode>
        <childnode refid="7079" relation="include">
        </childnode>
        <childnode refid="7088" relation="include">
        </childnode>
      </node>
      <node id="7080">
        <label>combineimages.hxx</label>
        <link refid="combineimages_8hxx_source"/>
        <childnode refid="7039" relation="include">
        </childnode>
        <childnode refid="7059" relation="include">
        </childnode>
        <childnode refid="7071" relation="include">
        </childnode>
        <childnode refid="7053" relation="include">
        </childnode>
      </node>
      <node id="7061">
        <label>complex</label>
      </node>
      <node id="7049">
        <label>algorithm</label>
      </node>
      <node id="7076">
        <label>memory.hxx</label>
        <link refid="memory_8hxx_source"/>
        <childnode refid="7046" relation="include">
        </childnode>
      </node>
      <node id="7033">
        <label>vigra/random_forest/rf_visitors.hxx</label>
        <link refid="rf_visitors.hxx"/>
        <childnode refid="7034" relation="include">
        </childnode>
        <childnode refid="7035" relation="include">
        </childnode>
        <childnode refid="7036" relation="include">
        </childnode>
        <childnode refid="7037" relation="include">
        </childnode>
        <childnode refid="7087" relation="include">
        </childnode>
      </node>
      <node id="7058">
        <label>accessor.hxx</label>
        <link refid="accessor_8hxx_source"/>
        <childnode refid="7046" relation="include">
        </childnode>
        <childnode refid="7059" relation="include">
        </childnode>
        <childnode refid="7050" relation="include">
        </childnode>
      </node>
      <node id="7082">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7092">
        <label>vigra/random_forest_hdf5_impex.hxx</label>
        <link refid="random__forest__hdf5__impex_8hxx_source"/>
      </node>
      <node id="7091">
        <label>vigra/random_forest.hxx</label>
        <link refid="random__forest_8hxx_source"/>
        <childnode refid="7092" relation="include">
        </childnode>
      </node>
      <node id="7090">
        <label>vigra/random_forest/rf_decisionTree.hxx</label>
        <link refid="rf__decisionTree_8hxx_source"/>
        <childnode refid="7091" relation="include">
        </childnode>
      </node>
      <node id="7089">
        <label>vigra/random_forest/rf_visitors.hxx</label>
        <link refid="rf_visitors.hxx"/>
        <childnode refid="7090" relation="include">
        </childnode>
        <childnode refid="7091" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classvigra_1_1rf_1_1visitors_1_1CompleteOOBInfo" prot="public">vigra::rf::visitors::CompleteOOBInfo</innerclass>
    <innerclass refid="classvigra_1_1rf_1_1visitors_1_1CorrelationVisitor" prot="public">vigra::rf::visitors::CorrelationVisitor</innerclass>
    <innerclass refid="structvigra_1_1rf_1_1visitors_1_1OnlineLearnVisitor_1_1MarginalDistribution" prot="public">vigra::rf::visitors::OnlineLearnVisitor::MarginalDistribution</innerclass>
    <innerclass refid="classvigra_1_1rf_1_1visitors_1_1OnlineLearnVisitor" prot="public">vigra::rf::visitors::OnlineLearnVisitor</innerclass>
    <innerclass refid="classvigra_1_1rf_1_1visitors_1_1OOB__Error" prot="public">vigra::rf::visitors::OOB_Error</innerclass>
    <innerclass refid="classvigra_1_1rf_1_1visitors_1_1OOB__PerTreeError" prot="public">vigra::rf::visitors::OOB_PerTreeError</innerclass>
    <innerclass refid="classvigra_1_1rf_1_1visitors_1_1RandomForestProgressVisitor" prot="public">vigra::rf::visitors::RandomForestProgressVisitor</innerclass>
    <innerclass refid="classvigra_1_1rf_1_1visitors_1_1StopVisiting" prot="public">vigra::rf::visitors::StopVisiting</innerclass>
    <innerclass refid="structvigra_1_1rf_1_1visitors_1_1OnlineLearnVisitor_1_1TreeOnlineInformation" prot="public">vigra::rf::visitors::OnlineLearnVisitor::TreeOnlineInformation</innerclass>
    <innerclass refid="classvigra_1_1rf_1_1visitors_1_1VariableImportanceVisitor" prot="public">vigra::rf::visitors::VariableImportanceVisitor</innerclass>
    <innerclass refid="classvigra_1_1rf_1_1visitors_1_1VisitorBase" prot="public">vigra::rf::visitors::VisitorBase</innerclass>
    <innerclass refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" prot="public">vigra::rf::visitors::detail::VisitorNode</innerclass>
    <innernamespace refid="namespacevigra">vigra</innernamespace>
    <innernamespace refid="namespacevigra_1_1rf">vigra::rf</innernamespace>
    <innernamespace refid="namespacevigra_1_1rf_1_1visitors">vigra::rf::visitors</innernamespace>
    <innernamespace refid="namespacevigra_1_1rf_1_1visitors_1_1detail">vigra::rf::visitors::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>2008-2009<sp/>by<sp/><sp/>Ullrich<sp/>Koethe<sp/>and<sp/>Rahul<sp/>Nair<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>VIGRA<sp/>computer<sp/>vision<sp/>library.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>The<sp/>VIGRA<sp/>Website<sp/>is<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://hci.iwr.uni-heidelberg.de/vigra/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Please<sp/>direct<sp/>questions,<sp/>bug<sp/>reports,<sp/>and<sp/>contributions<sp/>to<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ullrich.koethe@iwr.uni-heidelberg.de<sp/><sp/><sp/><sp/>or<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra@informatik.uni-hamburg.de<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>conditions:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Software.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RF_VISITORS_HXX</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>RF_VISITORS_HXX</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HasHDF5</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&quot;vigra/hdf5impex.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>HasHDF5</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;vigra/windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vigra/multi_pointoperators.hxx&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="timing_8hxx" kindref="compound">vigra/timing.hxx</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vigra</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">rf</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="52"><highlight class="comment">/**<sp/>\addtogroup<sp/>MachineLearning<sp/>Machine<sp/>Learning</highlight></codeline>
<codeline lineno="53"><highlight class="comment">**/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="54"><highlight class="comment">//@{</highlight></codeline>
<codeline lineno="55"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="56"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>namespace<sp/>contains<sp/>all<sp/>classes<sp/>and<sp/>methods<sp/>related<sp/>to<sp/>extracting<sp/>information<sp/>during<sp/></highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/><sp/>learning<sp/>of<sp/>the<sp/>random<sp/>forest.<sp/>All<sp/>Visitors<sp/>share<sp/>the<sp/>same<sp/>interface<sp/>defined<sp/>in<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/>visitors::VisitorBase.<sp/>The<sp/>member<sp/>methods<sp/>are<sp/>invoked<sp/>at<sp/>certain<sp/>points<sp/>of<sp/>the<sp/>main<sp/>code<sp/>in<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>order<sp/>they<sp/>were<sp/>supplied.</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/>For<sp/>the<sp/>Random<sp/>Forest<sp/>the<sp/><sp/>Visitor<sp/>concept<sp/>is<sp/>implemented<sp/>as<sp/>a<sp/>statically<sp/>linked<sp/>list<sp/></highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/>(Using<sp/>templates).<sp/>Each<sp/>Visitor<sp/>object<sp/>is<sp/>encapsulated<sp/>in<sp/>a<sp/>detail::VisitorNode<sp/>object.<sp/>The<sp/></highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/>VisitorNode<sp/>object<sp/>calls<sp/>the<sp/>Next<sp/>Visitor<sp/>after<sp/>one<sp/>of<sp/>its<sp/>visit()<sp/>methods<sp/>have<sp/>terminated.</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/>To<sp/>simplify<sp/>usage<sp/>create_visitor()<sp/>factory<sp/>methods<sp/>are<sp/>supplied.</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/>Use<sp/>the<sp/>create_visitor()<sp/>method<sp/>to<sp/>supply<sp/>visitor<sp/>objects<sp/>to<sp/>the<sp/>RandomForest::learn()<sp/>method.</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/><sp/>It<sp/>is<sp/>possible<sp/>to<sp/>supply<sp/>more<sp/>than<sp/>one<sp/>visitor.<sp/>They<sp/>will<sp/>then<sp/>be<sp/>invoked<sp/>in<sp/>serial<sp/>order.</highlight></codeline>
<codeline lineno="69"><highlight class="comment"></highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>calculated<sp/>information<sp/>are<sp/>stored<sp/>as<sp/>public<sp/>data<sp/>members<sp/>of<sp/>the<sp/>class.<sp/>-<sp/>see<sp/>documentation</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/>of<sp/>the<sp/>individual<sp/>visitors</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/>While<sp/>creating<sp/>a<sp/>new<sp/>visitor<sp/>the<sp/>new<sp/>class<sp/>should<sp/>therefore<sp/>publicly<sp/>inherit<sp/>from<sp/>this<sp/>class<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/>(i.e.:<sp/>see<sp/>visitors::OOB_Error).</highlight></codeline>
<codeline lineno="75"><highlight class="comment"></highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="77"><highlight class="comment"></highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>xxx<sp/>feature_t<sp/>\\<sp/>replace<sp/>xxx<sp/>with<sp/>whichever<sp/>type</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>yyy<sp/>label_t<sp/><sp/><sp/>\\<sp/>meme<sp/>chose.<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,<sp/>feature_t&gt;<sp/>f<sp/>=<sp/>get_some_features();</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,<sp/>label_t&gt;<sp/><sp/><sp/>l<sp/>=<sp/>get_some_labels();</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>RandomForest&lt;&gt;<sp/>rf()</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//calculate<sp/>OOB<sp/>Error</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>visitors::OOB_Error<sp/>oob_v;</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//calculate<sp/>Variable<sp/>Importance</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>visitors::VariableImportanceVisitor<sp/>varimp_v;</highlight></codeline>
<codeline lineno="88"><highlight class="comment"></highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>oob_error<sp/>=<sp/>rf.learn(f,<sp/>l,<sp/>visitors::create_visitor(oob_v,<sp/>varimp_v);</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//the<sp/>data<sp/>can<sp/>be<sp/>found<sp/>in<sp/>the<sp/>attributes<sp/>of<sp/>oob_v<sp/>and<sp/>varimp_v<sp/>now</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="93"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="namespacevigra_1_1rf_1_1visitors" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">visitors</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="98"><highlight class="comment">/**<sp/>Base<sp/>Class<sp/>from<sp/>which<sp/>all<sp/>Visitors<sp/>derive.<sp/>Can<sp/>be<sp/>used<sp/>as<sp/>a<sp/>template<sp/>to<sp/>create<sp/>new<sp/></highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/>Visitors.</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="classvigra_1_1rf_1_1visitors_1_1VisitorBase" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1rf_1_1visitors_1_1VisitorBase" kindref="compound">VisitorBase</ref></highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>active_;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_active()</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>active_;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_value()</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1VisitorBase" kindref="compound">VisitorBase</ref>()</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>active_(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deactivate()</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>active_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>activate()</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>active_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>do<sp/>something<sp/>after<sp/>the<sp/>the<sp/>Split<sp/>has<sp/>decided<sp/>how<sp/>to<sp/>process<sp/>the<sp/>Region</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>(Stack<sp/>entry)</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\param<sp/>tree<sp/><sp/><sp/><sp/><sp/><sp/>reference<sp/>to<sp/>the<sp/>tree<sp/>that<sp/>is<sp/>currently<sp/>being<sp/>learned</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\param<sp/>split<sp/><sp/><sp/><sp/><sp/>reference<sp/>to<sp/>the<sp/>split<sp/>object</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\param<sp/>parent<sp/><sp/><sp/><sp/>current<sp/>stack<sp/>entry<sp/><sp/>which<sp/>was<sp/>used<sp/>to<sp/>decide<sp/>the<sp/>split</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\param<sp/>leftChild<sp/>left<sp/>stack<sp/>entry<sp/>that<sp/>will<sp/>be<sp/>pushed</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\param<sp/>rightChild</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right<sp/>stack<sp/>entry<sp/>that<sp/>will<sp/>be<sp/>pushed.</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\param<sp/>features<sp/><sp/>features<sp/>matrix</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\param<sp/>labels<sp/><sp/><sp/><sp/>label<sp/>matrix</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\sa<sp/>RF_Traits::StackEntry_t</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Tree,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Split,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Region,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Feature_t,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Label_t&gt;</highlight></codeline>
<codeline lineno="142" refid="group__MachineLearning_1ga32301fb47981050340e6a927d78a2a77" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__MachineLearning_1ga32301fb47981050340e6a927d78a2a77" kindref="member">visit_after_split</ref>(<sp/>Tree<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>tree,<sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Split<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>split,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Region<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>parent,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Region<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>leftChild,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Region<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>rightChild,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Feature_t<sp/><sp/><sp/><sp/><sp/>&amp;<sp/>features,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Label_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>labels)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>do<sp/>something<sp/>after<sp/>each<sp/>tree<sp/>has<sp/>been<sp/>learned</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\param<sp/>rf<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reference<sp/>to<sp/>the<sp/>random<sp/>forest<sp/>object<sp/>that<sp/>called<sp/>this</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visitor</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\param<sp/>pr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reference<sp/>to<sp/>the<sp/>preprocessor<sp/>that<sp/>processed<sp/>the<sp/>input</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\param<sp/>sm<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reference<sp/>to<sp/>the<sp/>sampler<sp/>object</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\param<sp/>st<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reference<sp/>to<sp/>the<sp/>first<sp/>stack<sp/>entry</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\param<sp/>index<sp/><sp/><sp/><sp/><sp/>index<sp/>of<sp/>current<sp/>tree</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RF,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SM,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ST&gt;</highlight></codeline>
<codeline lineno="161" refid="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76" kindref="member">visit_after_tree</ref>(RF&amp;<sp/>rf,<sp/>PR<sp/>&amp;<sp/>pr,<sp/><sp/>SM<sp/>&amp;<sp/>sm,<sp/>ST<sp/>&amp;<sp/>st,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>do<sp/>something<sp/>after<sp/>all<sp/>trees<sp/>have<sp/>been<sp/>learned</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\param<sp/>rf<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reference<sp/>to<sp/>the<sp/>random<sp/>forest<sp/>object<sp/>that<sp/>called<sp/>this</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visitor</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\param<sp/>pr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reference<sp/>to<sp/>the<sp/>preprocessor<sp/>that<sp/>processed<sp/>the<sp/>input</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RF,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PR&gt;</highlight></codeline>
<codeline lineno="171" refid="group__MachineLearning_1gab8c2515ae9343881cc5999fc61821fdc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__MachineLearning_1gab8c2515ae9343881cc5999fc61821fdc" kindref="member">visit_at_end</ref>(RF<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rf,<sp/>PR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>pr)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>do<sp/>something<sp/>before<sp/>learning<sp/>starts<sp/></highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\param<sp/>rf<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reference<sp/>to<sp/>the<sp/>random<sp/>forest<sp/>object<sp/>that<sp/>called<sp/>this</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visitor</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\param<sp/>pr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reference<sp/>to<sp/>the<sp/>Processor<sp/>class<sp/>used.</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RF,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PR&gt;</highlight></codeline>
<codeline lineno="181" refid="group__MachineLearning_1ga0bb047133b5a592d0ade412044bd1495" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__MachineLearning_1ga0bb047133b5a592d0ade412044bd1495" kindref="member">visit_at_beginning</ref>(RF<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rf,<sp/>PR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>pr)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>do<sp/>some<sp/>thing<sp/>while<sp/>traversing<sp/>tree<sp/>after<sp/>it<sp/>has<sp/>been<sp/>learned<sp/></highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>(external<sp/>nodes)</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\param<sp/>tr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reference<sp/>to<sp/>the<sp/>tree<sp/>object<sp/>that<sp/>called<sp/>this<sp/>visitor</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\param<sp/>index<sp/><sp/><sp/><sp/><sp/>index<sp/>in<sp/>the<sp/>topology_<sp/>array<sp/>we<sp/>currently<sp/>are<sp/>at</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\param<sp/>node_t<sp/><sp/><sp/><sp/>type<sp/>of<sp/>node<sp/>we<sp/>have<sp/>(will<sp/>be<sp/>e_....<sp/>-<sp/>)</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\param<sp/>features<sp/><sp/>feature<sp/>matrix</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\sa<sp/><sp/>NodeTags;</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>you<sp/>can<sp/>create<sp/>the<sp/>node<sp/>by<sp/>using<sp/>a<sp/>switch<sp/>on<sp/>node_tag<sp/>and<sp/>using<sp/>the<sp/></highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>corresponding<sp/>Node<sp/>objects.<sp/>Or<sp/>-<sp/>if<sp/>you<sp/>do<sp/>not<sp/>care<sp/>about<sp/>the<sp/>type<sp/></highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>use<sp/>the<sp/>NodeBase<sp/>class.</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>IntT,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TopT,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Feat&gt;</highlight></codeline>
<codeline lineno="197" refid="group__MachineLearning_1ga29d5e6cebbbae7f0a170f82ed7a98fc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__MachineLearning_1ga29d5e6cebbbae7f0a170f82ed7a98fc3" kindref="member">visit_external_node</ref>(TR<sp/>&amp;<sp/>tr,<sp/>IntT<sp/>index,<sp/>TopT<sp/>node_t,Feat<sp/>&amp;<sp/>features)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>do<sp/>something<sp/>when<sp/>visiting<sp/>a<sp/>internal<sp/>node<sp/>after<sp/>it<sp/>has<sp/>been<sp/>learned</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\sa<sp/>visit_external_node</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>IntT,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TopT,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Feat&gt;</highlight></codeline>
<codeline lineno="205" refid="group__MachineLearning_1ga0be1525336a154f011efa8f86e56db7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__MachineLearning_1ga0be1525336a154f011efa8f86e56db7c" kindref="member">visit_internal_node</ref>(TR<sp/>&amp;<sp/>tr,<sp/>IntT<sp/>index,<sp/>TopT<sp/>node_t,Feat<sp/>&amp;<sp/>features)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>return<sp/>a<sp/>double<sp/>value.<sp/><sp/>The<sp/>value<sp/>of<sp/>the<sp/>first<sp/></highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>visitor<sp/>encountered<sp/>that<sp/>has<sp/>a<sp/>return<sp/>value<sp/>is<sp/>returned<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>RandomForest::learn()<sp/>method<sp/>-<sp/>or<sp/>-1.0<sp/>if<sp/>no<sp/>return<sp/>value<sp/>visitor</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>existed.<sp/>This<sp/>functionality<sp/>basically<sp/>only<sp/>exists<sp/>so<sp/>that<sp/>the<sp/></highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>OOB<sp/>-<sp/>visitor<sp/>can<sp/>return<sp/>the<sp/>oob<sp/>error<sp/>rate<sp/>like<sp/>in<sp/>the<sp/>old<sp/>version<sp/></highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>of<sp/>the<sp/>random<sp/>forest.</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="group__MachineLearning_1gad23fdebbe022fdb6fee05ddede523bdc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="group__MachineLearning_1gad23fdebbe022fdb6fee05ddede523bdc" kindref="member">return_val</ref>()</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal">};</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="222"><highlight class="comment">/**<sp/>Last<sp/>Visitor<sp/>that<sp/>should<sp/>be<sp/>called<sp/>to<sp/>stop<sp/>the<sp/>recursion.</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="classvigra_1_1rf_1_1visitors_1_1StopVisiting" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1rf_1_1visitors_1_1StopVisiting" kindref="compound">StopVisiting</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1VisitorBase" kindref="compound">VisitorBase</ref></highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_value()</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231" refid="group__MachineLearning_1gad23fdebbe022fdb6fee05ddede523bdc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="group__MachineLearning_1gad23fdebbe022fdb6fee05ddede523bdc" kindref="member">return_val</ref>()</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal">};</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="238"><highlight class="comment">/**<sp/>Container<sp/>elements<sp/>of<sp/>the<sp/>statically<sp/>linked<sp/>Visitor<sp/>list.</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*<sp/>use<sp/>the<sp/>create_visitor()<sp/>factory<sp/>functions<sp/>to<sp/>create<sp/>visitors<sp/>up<sp/>to<sp/>size<sp/>10;</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Visitor,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Next<sp/>=<sp/>StopVisiting&gt;</highlight></codeline>
<codeline lineno="244" refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">VisitorNode</ref></highlight></codeline>
<codeline lineno="245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1StopVisiting" kindref="compound">StopVisiting</ref><sp/><sp/><sp/><sp/>stop_;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>Next<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>Visitor<sp/>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>visitor_;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">VisitorNode</ref>(Visitor<sp/>&amp;<sp/>visitor,<sp/>Next<sp/>&amp;<sp/>next)<sp/></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_(next),<sp/>visitor_(visitor)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">VisitorNode</ref>(Visitor<sp/>&amp;<sp/><sp/>visitor)<sp/></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_(stop_),<sp/>visitor_(visitor)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Tree,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Split,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Region,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Feature_t,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Label_t&gt;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>visit_after_split(<sp/>Tree<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>tree,<sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Split<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>split,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Region<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>parent,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Region<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>leftChild,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Region<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>rightChild,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Feature_t<sp/><sp/><sp/><sp/><sp/>&amp;<sp/>features,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Label_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>labels)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(visitor_.is_active())</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visitor_.visit_after_split(tree,<sp/>split,<sp/></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent,<sp/>leftChild,<sp/>rightChild,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>features,<sp/>labels);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_.visit_after_split(tree,<sp/>split,<sp/>parent,<sp/>leftChild,<sp/>rightChild,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>features,<sp/>labels);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RF,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SM,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ST&gt;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>visit_after_tree(RF&amp;<sp/>rf,<sp/>PR<sp/>&amp;<sp/>pr,<sp/><sp/>SM<sp/>&amp;<sp/>sm,<sp/>ST<sp/>&amp;<sp/>st,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(visitor_.is_active())</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visitor_.visit_after_tree(rf,<sp/>pr,<sp/>sm,<sp/>st,<sp/>index);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_.visit_after_tree(rf,<sp/>pr,<sp/>sm,<sp/>st,<sp/>index);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RF,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PR&gt;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>visit_at_beginning(RF<sp/>&amp;<sp/>rf,<sp/>PR<sp/>&amp;<sp/>pr)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(visitor_.is_active())</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visitor_.visit_at_beginning(rf,<sp/>pr);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_.visit_at_beginning(rf,<sp/>pr);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RF,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PR&gt;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>visit_at_end(RF<sp/>&amp;<sp/>rf,<sp/>PR<sp/>&amp;<sp/>pr)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(visitor_.is_active())</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visitor_.visit_at_end(rf,<sp/>pr);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_.visit_at_end(rf,<sp/>pr);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>IntT,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TopT,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Feat&gt;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>visit_external_node(TR<sp/>&amp;<sp/>tr,<sp/>IntT<sp/>&amp;<sp/>index,<sp/>TopT<sp/>&amp;<sp/>node_t,Feat<sp/>&amp;<sp/>features)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(visitor_.is_active())</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visitor_.visit_external_node(tr,<sp/>index,<sp/>node_t,features);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_.visit_external_node(tr,<sp/>index,<sp/>node_t,features);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>IntT,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TopT,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Feat&gt;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>visit_internal_node(TR<sp/>&amp;<sp/>tr,<sp/>IntT<sp/>&amp;<sp/>index,<sp/>TopT<sp/>&amp;<sp/>node_t,Feat<sp/>&amp;<sp/>features)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(visitor_.is_active())</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>visitor_.visit_internal_node(tr,<sp/>index,<sp/>node_t,features);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_.visit_internal_node(tr,<sp/>index,<sp/>node_t,features);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>return_val()</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(visitor_.is_active()<sp/>&amp;&amp;<sp/>visitor_.has_value())</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>visitor_.return_val();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next_.return_val();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal">};</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal">}<sp/></highlight><highlight class="comment">//namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="326"><highlight class="comment">//////////////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="327"><highlight class="comment"></highlight><highlight class="comment">//<sp/><sp/>Visitor<sp/>Factory<sp/>function<sp/>up<sp/>to<sp/>10<sp/>visitors<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="328"><highlight class="comment">//////////////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="329"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="330"><highlight class="comment">/**<sp/>factory<sp/>method<sp/>to<sp/>to<sp/>be<sp/>used<sp/>with<sp/>RandomForest::learn()</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;A&gt;</ref></highlight></codeline>
<codeline lineno="334" refid="group__MachineLearning_1gafee5cad59894c439573770103eacfbc4" refkind="member"><highlight class="normal"><ref refid="group__MachineLearning_1gafee5cad59894c439573770103eacfbc4" kindref="member">create_visitor</ref>(A<sp/>&amp;<sp/>a)</highlight></codeline>
<codeline lineno="335"><highlight class="normal">{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;A&gt;</ref><sp/>_0_t;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/>_0_t<sp/>_0(a);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_0;</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="342"><highlight class="comment">/**<sp/>factory<sp/>method<sp/>to<sp/>to<sp/>be<sp/>used<sp/>with<sp/>RandomForest::learn()</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>A,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>B&gt;</highlight></codeline>
<codeline lineno="345"><highlight class="normal">detail::VisitorNode&lt;A,<sp/>detail::VisitorNode&lt;B&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="346" refid="group__MachineLearning_1ga1dce33feda060f316c9a629200cd595a" refkind="member"><highlight class="normal"><ref refid="group__MachineLearning_1gafee5cad59894c439573770103eacfbc4" kindref="member">create_visitor</ref>(A<sp/>&amp;<sp/>a,<sp/>B<sp/>&amp;<sp/>b)</highlight></codeline>
<codeline lineno="347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;B&gt;</ref><sp/>_1_t;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/>_1_t<sp/>_1(b);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;A, _1_t&gt;</ref><sp/>_0_t;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/>_0_t<sp/>_0(a,<sp/>_1);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_0;</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="356"><highlight class="comment">/**<sp/>factory<sp/>method<sp/>to<sp/>to<sp/>be<sp/>used<sp/>with<sp/>RandomForest::learn()</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>A,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>B,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C&gt;</highlight></codeline>
<codeline lineno="359"><highlight class="normal">detail::VisitorNode&lt;A,<sp/>detail::VisitorNode&lt;B,<sp/>detail::VisitorNode&lt;C&gt;<sp/>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="360" refid="group__MachineLearning_1gaf2acbad174f2838cb87965604a01a0f7" refkind="member"><highlight class="normal"><ref refid="group__MachineLearning_1gafee5cad59894c439573770103eacfbc4" kindref="member">create_visitor</ref>(A<sp/>&amp;<sp/>a,<sp/>B<sp/>&amp;<sp/>b,<sp/>C<sp/>&amp;<sp/>c)</highlight></codeline>
<codeline lineno="361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;C&gt;</ref><sp/>_2_t;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/>_2_t<sp/>_2(c);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;B, _2_t&gt;</ref><sp/>_1_t;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/>_1_t<sp/>_1(b,<sp/>_2);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;A, _1_t&gt;</ref><sp/>_0_t;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/>_0_t<sp/>_0(a,<sp/>_1);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_0;</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="372"><highlight class="comment">/**<sp/>factory<sp/>method<sp/>to<sp/>to<sp/>be<sp/>used<sp/>with<sp/>RandomForest::learn()</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>A,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>B,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D&gt;</highlight></codeline>
<codeline lineno="375"><highlight class="normal">detail::VisitorNode&lt;A,<sp/>detail::VisitorNode&lt;B,<sp/>detail::VisitorNode&lt;C,<sp/></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::VisitorNode&lt;D&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="377" refid="group__MachineLearning_1ga58e4a960053285ee48ba63c86ffe4dd5" refkind="member"><highlight class="normal"><ref refid="group__MachineLearning_1gafee5cad59894c439573770103eacfbc4" kindref="member">create_visitor</ref>(A<sp/>&amp;<sp/>a,<sp/>B<sp/>&amp;<sp/>b,<sp/>C<sp/>&amp;<sp/>c,<sp/>D<sp/>&amp;<sp/>d)</highlight></codeline>
<codeline lineno="378"><highlight class="normal">{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;D&gt;</ref><sp/>_3_t;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/>_3_t<sp/>_3(d);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;C, _3_t&gt;</ref><sp/>_2_t;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/>_2_t<sp/>_2(c,<sp/>_3);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;B, _2_t&gt;</ref><sp/>_1_t;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/>_1_t<sp/>_1(b,<sp/>_2);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;A, _1_t&gt;</ref><sp/>_0_t;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/>_0_t<sp/>_0(a,<sp/>_1);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_0;</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="391"><highlight class="comment">/**<sp/>factory<sp/>method<sp/>to<sp/>to<sp/>be<sp/>used<sp/>with<sp/>RandomForest::learn()</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>A,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>B,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>E&gt;</highlight></codeline>
<codeline lineno="394"><highlight class="normal">detail::VisitorNode&lt;A,<sp/>detail::VisitorNode&lt;B,<sp/>detail::VisitorNode&lt;C,<sp/></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::VisitorNode&lt;D,<sp/>detail::VisitorNode&lt;E&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="396" refid="group__MachineLearning_1ga2c777463415e56d7f988eb345bf49e72" refkind="member"><highlight class="normal"><ref refid="group__MachineLearning_1gafee5cad59894c439573770103eacfbc4" kindref="member">create_visitor</ref>(A<sp/>&amp;<sp/>a,<sp/>B<sp/>&amp;<sp/>b,<sp/>C<sp/>&amp;<sp/>c,<sp/></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D<sp/>&amp;<sp/>d,<sp/>E<sp/>&amp;<sp/>e)</highlight></codeline>
<codeline lineno="398"><highlight class="normal">{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;E&gt;</ref><sp/>_4_t;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/>_4_t<sp/>_4(e);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;D, _4_t&gt;</ref><sp/>_3_t;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/>_3_t<sp/>_3(d,<sp/>_4);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;C, _3_t&gt;</ref><sp/>_2_t;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/>_2_t<sp/>_2(c,<sp/>_3);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;B, _2_t&gt;</ref><sp/>_1_t;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/>_1_t<sp/>_1(b,<sp/>_2);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;A, _1_t&gt;</ref><sp/>_0_t;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/>_0_t<sp/>_0(a,<sp/>_1);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_0;</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="413"><highlight class="comment">/**<sp/>factory<sp/>method<sp/>to<sp/>to<sp/>be<sp/>used<sp/>with<sp/>RandomForest::learn()</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">A,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">B,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">C,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">D,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">E,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F&gt;</highlight></codeline>
<codeline lineno="417"><highlight class="normal">detail::VisitorNode&lt;A,<sp/>detail::VisitorNode&lt;B,<sp/>detail::VisitorNode&lt;C,<sp/></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::VisitorNode&lt;D,<sp/>detail::VisitorNode&lt;E,<sp/>detail::VisitorNode&lt;F&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="419" refid="group__MachineLearning_1ga65a28eb722429876459b7067d7c293ef" refkind="member"><highlight class="normal"><ref refid="group__MachineLearning_1gafee5cad59894c439573770103eacfbc4" kindref="member">create_visitor</ref>(A<sp/>&amp;<sp/>a,<sp/>B<sp/>&amp;<sp/>b,<sp/>C<sp/>&amp;<sp/>c,<sp/></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D<sp/>&amp;<sp/>d,<sp/>E<sp/>&amp;<sp/>e,<sp/>F<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;F&gt;</ref><sp/>_5_t;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/>_5_t<sp/>_5(f);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;E, _5_t&gt;</ref><sp/>_4_t;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/>_4_t<sp/>_4(e,<sp/>_5);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;D, _4_t&gt;</ref><sp/>_3_t;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/>_3_t<sp/>_3(d,<sp/>_4);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;C, _3_t&gt;</ref><sp/>_2_t;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/>_2_t<sp/>_2(c,<sp/>_3);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;B, _2_t&gt;</ref><sp/>_1_t;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/>_1_t<sp/>_1(b,<sp/>_2);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;A, _1_t&gt;</ref><sp/>_0_t;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/>_0_t<sp/>_0(a,<sp/>_1);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_0;</highlight></codeline>
<codeline lineno="435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="438"><highlight class="comment">/**<sp/>factory<sp/>method<sp/>to<sp/>to<sp/>be<sp/>used<sp/>with<sp/>RandomForest::learn()</highlight></codeline>
<codeline lineno="439"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">A,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">B,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">C,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">D,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">E,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">G&gt;</highlight></codeline>
<codeline lineno="442"><highlight class="normal">detail::VisitorNode&lt;A,<sp/>detail::VisitorNode&lt;B,<sp/>detail::VisitorNode&lt;C,<sp/></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::VisitorNode&lt;D,<sp/>detail::VisitorNode&lt;E,<sp/>detail::VisitorNode&lt;F,<sp/></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::VisitorNode&lt;G&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="445" refid="group__MachineLearning_1ga597964fa099dc42046df99ca10df587d" refkind="member"><highlight class="normal"><ref refid="group__MachineLearning_1gafee5cad59894c439573770103eacfbc4" kindref="member">create_visitor</ref>(A<sp/>&amp;<sp/>a,<sp/>B<sp/>&amp;<sp/>b,<sp/>C<sp/>&amp;<sp/>c,<sp/></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D<sp/>&amp;<sp/>d,<sp/>E<sp/>&amp;<sp/>e,<sp/>F<sp/>&amp;<sp/>f,<sp/>G<sp/>&amp;<sp/>g)</highlight></codeline>
<codeline lineno="447"><highlight class="normal">{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;G&gt;</ref><sp/>_6_t;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/>_6_t<sp/>_6(g);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;F, _6_t&gt;</ref><sp/>_5_t;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/>_5_t<sp/>_5(f,<sp/>_6);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;E, _5_t&gt;</ref><sp/>_4_t;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/>_4_t<sp/>_4(e,<sp/>_5);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;D, _4_t&gt;</ref><sp/>_3_t;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/>_3_t<sp/>_3(d,<sp/>_4);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;C, _3_t&gt;</ref><sp/>_2_t;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/>_2_t<sp/>_2(c,<sp/>_3);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;B, _2_t&gt;</ref><sp/>_1_t;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/>_1_t<sp/>_1(b,<sp/>_2);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;A, _1_t&gt;</ref><sp/>_0_t;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/>_0_t<sp/>_0(a,<sp/>_1);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_0;</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="466"><highlight class="comment">/**<sp/>factory<sp/>method<sp/>to<sp/>to<sp/>be<sp/>used<sp/>with<sp/>RandomForest::learn()</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">A,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">B,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">C,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">D,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">E,</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">G,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">H&gt;</highlight></codeline>
<codeline lineno="470"><highlight class="normal">detail::VisitorNode&lt;A,<sp/>detail::VisitorNode&lt;B,<sp/>detail::VisitorNode&lt;C,<sp/></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::VisitorNode&lt;D,<sp/>detail::VisitorNode&lt;E,<sp/>detail::VisitorNode&lt;F,<sp/></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::VisitorNode&lt;G,<sp/>detail::VisitorNode&lt;H&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="473" refid="group__MachineLearning_1gae5fe6a588e964ed4fb049c1a7880b4ea" refkind="member"><highlight class="normal"><ref refid="group__MachineLearning_1gafee5cad59894c439573770103eacfbc4" kindref="member">create_visitor</ref>(A<sp/>&amp;<sp/>a,<sp/>B<sp/>&amp;<sp/>b,<sp/>C<sp/>&amp;<sp/>c,<sp/></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D<sp/>&amp;<sp/>d,<sp/>E<sp/>&amp;<sp/>e,<sp/>F<sp/>&amp;<sp/>f,<sp/></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G<sp/>&amp;<sp/>g,<sp/>H<sp/>&amp;<sp/>h)</highlight></codeline>
<codeline lineno="476"><highlight class="normal">{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;H&gt;</ref><sp/>_7_t;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/>_7_t<sp/>_7(h);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;G, _7_t&gt;</ref><sp/>_6_t;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/>_6_t<sp/>_6(g,<sp/>_7);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;F, _6_t&gt;</ref><sp/>_5_t;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/>_5_t<sp/>_5(f,<sp/>_6);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;E, _5_t&gt;</ref><sp/>_4_t;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/>_4_t<sp/>_4(e,<sp/>_5);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;D, _4_t&gt;</ref><sp/>_3_t;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/>_3_t<sp/>_3(d,<sp/>_4);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;C, _3_t&gt;</ref><sp/>_2_t;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/>_2_t<sp/>_2(c,<sp/>_3);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;B, _2_t&gt;</ref><sp/>_1_t;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/>_1_t<sp/>_1(b,<sp/>_2);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;A, _1_t&gt;</ref><sp/>_0_t;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/>_0_t<sp/>_0(a,<sp/>_1);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_0;</highlight></codeline>
<codeline lineno="494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="497"><highlight class="comment">/**<sp/>factory<sp/>method<sp/>to<sp/>to<sp/>be<sp/>used<sp/>with<sp/>RandomForest::learn()</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">A,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">B,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">C,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">D,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">E,</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">G,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">H,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">I&gt;</highlight></codeline>
<codeline lineno="501"><highlight class="normal">detail::VisitorNode&lt;A,<sp/>detail::VisitorNode&lt;B,<sp/>detail::VisitorNode&lt;C,<sp/></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::VisitorNode&lt;D,<sp/>detail::VisitorNode&lt;E,<sp/>detail::VisitorNode&lt;F,<sp/></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::VisitorNode&lt;G,<sp/>detail::VisitorNode&lt;H,<sp/>detail::VisitorNode&lt;I&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="504" refid="group__MachineLearning_1gad1084832eeb142bde98f01307ca847c2" refkind="member"><highlight class="normal"><ref refid="group__MachineLearning_1gafee5cad59894c439573770103eacfbc4" kindref="member">create_visitor</ref>(A<sp/>&amp;<sp/>a,<sp/>B<sp/>&amp;<sp/>b,<sp/>C<sp/>&amp;<sp/>c,<sp/></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D<sp/>&amp;<sp/>d,<sp/>E<sp/>&amp;<sp/>e,<sp/>F<sp/>&amp;<sp/>f,<sp/></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G<sp/>&amp;<sp/>g,<sp/>H<sp/>&amp;<sp/>h,<sp/>I<sp/>&amp;<sp/>i)</highlight></codeline>
<codeline lineno="507"><highlight class="normal">{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;I&gt;</ref><sp/>_8_t;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/>_8_t<sp/>_8(i);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;H, _8_t&gt;</ref><sp/>_7_t;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/>_7_t<sp/>_7(h,<sp/>_8);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;G, _7_t&gt;</ref><sp/>_6_t;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/>_6_t<sp/>_6(g,<sp/>_7);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;F, _6_t&gt;</ref><sp/>_5_t;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/>_5_t<sp/>_5(f,<sp/>_6);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;E, _5_t&gt;</ref><sp/>_4_t;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/>_4_t<sp/>_4(e,<sp/>_5);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;D, _4_t&gt;</ref><sp/>_3_t;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/>_3_t<sp/>_3(d,<sp/>_4);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;C, _3_t&gt;</ref><sp/>_2_t;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/>_2_t<sp/>_2(c,<sp/>_3);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;B, _2_t&gt;</ref><sp/>_1_t;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/>_1_t<sp/>_1(b,<sp/>_2);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;A, _1_t&gt;</ref><sp/>_0_t;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/>_0_t<sp/>_0(a,<sp/>_1);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_0;</highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="529"><highlight class="comment">/**<sp/>factory<sp/>method<sp/>to<sp/>to<sp/>be<sp/>used<sp/>with<sp/>RandomForest::learn()</highlight></codeline>
<codeline lineno="530"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">A,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">B,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">C,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">D,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">E,</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">G,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">H,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">I,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">J&gt;</highlight></codeline>
<codeline lineno="533"><highlight class="normal">detail::VisitorNode&lt;A,<sp/>detail::VisitorNode&lt;B,<sp/>detail::VisitorNode&lt;C,<sp/></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::VisitorNode&lt;D,<sp/>detail::VisitorNode&lt;E,<sp/>detail::VisitorNode&lt;F,<sp/></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::VisitorNode&lt;G,<sp/>detail::VisitorNode&lt;H,<sp/>detail::VisitorNode&lt;I,</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::VisitorNode&lt;J&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="537" refid="group__MachineLearning_1ga69a71a1a184e60e44d24d18dd67d8a60" refkind="member"><highlight class="normal"><ref refid="group__MachineLearning_1gafee5cad59894c439573770103eacfbc4" kindref="member">create_visitor</ref>(A<sp/>&amp;<sp/>a,<sp/>B<sp/>&amp;<sp/>b,<sp/>C<sp/>&amp;<sp/>c,<sp/></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D<sp/>&amp;<sp/>d,<sp/>E<sp/>&amp;<sp/>e,<sp/>F<sp/>&amp;<sp/>f,<sp/></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G<sp/>&amp;<sp/>g,<sp/>H<sp/>&amp;<sp/>h,<sp/>I<sp/>&amp;<sp/>i,</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>J<sp/>&amp;<sp/>j)</highlight></codeline>
<codeline lineno="541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;J&gt;</ref><sp/>_9_t;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/>_9_t<sp/>_9(j);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;I, _9_t&gt;</ref><sp/>_8_t;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/>_8_t<sp/>_8(i,<sp/>_9);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;H, _8_t&gt;</ref><sp/>_7_t;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/>_7_t<sp/>_7(h,<sp/>_8);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;G, _7_t&gt;</ref><sp/>_6_t;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/>_6_t<sp/>_6(g,<sp/>_7);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;F, _6_t&gt;</ref><sp/>_5_t;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/>_5_t<sp/>_5(f,<sp/>_6);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;E, _5_t&gt;</ref><sp/>_4_t;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/>_4_t<sp/>_4(e,<sp/>_5);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;D, _4_t&gt;</ref><sp/>_3_t;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/>_3_t<sp/>_3(d,<sp/>_4);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;C, _3_t&gt;</ref><sp/>_2_t;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/>_2_t<sp/>_2(c,<sp/>_3);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;B, _2_t&gt;</ref><sp/>_1_t;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/>_1_t<sp/>_1(b,<sp/>_2);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" kindref="compound">detail::VisitorNode&lt;A, _1_t&gt;</ref><sp/>_0_t;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/>_0_t<sp/>_0(a,<sp/>_1);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_0;</highlight></codeline>
<codeline lineno="563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="565"><highlight class="comment">//////////////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="566"><highlight class="comment"></highlight><highlight class="comment">//<sp/>Visitors<sp/>of<sp/>communal<sp/>interest.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="567"><highlight class="comment">//////////////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="568"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="570"><highlight class="comment">/**<sp/>Visitor<sp/>to<sp/>gain<sp/>information,<sp/>later<sp/>needed<sp/>for<sp/>online<sp/>learning.</highlight></codeline>
<codeline lineno="571"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573" refid="classvigra_1_1rf_1_1visitors_1_1OnlineLearnVisitor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1rf_1_1visitors_1_1OnlineLearnVisitor" kindref="compound">OnlineLearnVisitor</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1VisitorBase" kindref="compound">VisitorBase</ref></highlight></codeline>
<codeline lineno="574"><highlight class="normal">{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>if<sp/>we<sp/>adjust<sp/>thresholds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>adjust_thresholds;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Current<sp/>tree<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tree_id;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Last<sp/>node<sp/>id<sp/>for<sp/>finding<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last_node_id;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Need<sp/>to<sp/>now<sp/>the<sp/>label<sp/>for<sp/>interior<sp/>node<sp/>visiting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__FixedSizeInt_1ga92f05c4b6944ec5926841e34f03a9060" kindref="member" tooltip="32-bit signed int">vigra::Int32</ref><sp/>current_label;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//marginal<sp/>distribution<sp/>for<sp/>interior<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1OnlineLearnVisitor" kindref="compound">OnlineLearnVisitor</ref>():</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adjust_thresholds(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/>tree_id(0),<sp/>last_node_id(0),<sp/>current_label(0)</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">MarginalDistribution</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ArrayVector" kindref="compound">ArrayVector&lt;Int32&gt;</ref><sp/>leftCounts;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__FixedSizeInt_1ga92f05c4b6944ec5926841e34f03a9060" kindref="member" tooltip="32-bit signed int">Int32</ref><sp/>leftTotalCounts;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ArrayVector" kindref="compound">ArrayVector&lt;Int32&gt;</ref><sp/>rightCounts;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__FixedSizeInt_1ga92f05c4b6944ec5926841e34f03a9060" kindref="member" tooltip="32-bit signed int">Int32</ref><sp/>rightTotalCounts;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gap_left;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gap_right;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ArrayVector" kindref="compound">ArrayVector&lt;vigra::Int32&gt;</ref><sp/><ref refid="classvigra_1_1ArrayVector" kindref="compound">IndexList</ref>;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//All<sp/>information<sp/>for<sp/>one<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">TreeOnlineInformation</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;MarginalDistribution&gt;<sp/>mag_distributions;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;IndexList&gt;<sp/>index_lists;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//map<sp/>for<sp/>linear<sp/>index<sp/>of<sp/>mag_distributions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;int,int&gt;<sp/>interior_to_index;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//map<sp/>for<sp/>linear<sp/>index<sp/>of<sp/>index_lists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;int,int&gt;<sp/>exterior_to_index;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//All<sp/>trees</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;TreeOnlineInformation&gt;<sp/>trees_online_information;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="614"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>Initialize,<sp/>set<sp/>the<sp/>number<sp/>of<sp/>trees</highlight></codeline>
<codeline lineno="615"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RF,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PR&gt;</highlight></codeline>
<codeline lineno="617" refid="group__MachineLearning_1ga1de14e8b5f94d36956d5632e40d7a0bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__MachineLearning_1ga1de14e8b5f94d36956d5632e40d7a0bf" kindref="member">visit_at_beginning</ref>(RF<sp/>&amp;<sp/>rf,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PR<sp/>&amp;<sp/>pr)</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tree_id=0;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trees_online_information.resize(rf.options_.tree_count_);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="623"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>Reset<sp/>a<sp/>tree</highlight></codeline>
<codeline lineno="624"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625" refid="group__MachineLearning_1ga41140e76b75f3909084ce8c6a4f4ce3f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__MachineLearning_1ga41140e76b75f3909084ce8c6a4f4ce3f" kindref="member">reset_tree</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tree_id)</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trees_online_information[tree_id].mag_distributions.clear();</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trees_online_information[tree_id].index_lists.clear();</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trees_online_information[tree_id].interior_to_index.clear();</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trees_online_information[tree_id].exterior_to_index.clear();</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="633"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>simply<sp/>increase<sp/>the<sp/>tree<sp/>count</highlight></codeline>
<codeline lineno="634"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RF,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SM,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ST&gt;</highlight></codeline>
<codeline lineno="636" refid="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76" kindref="member">visit_after_tree</ref>(RF&amp;<sp/>rf,<sp/>PR<sp/>&amp;<sp/>pr,<sp/><sp/>SM<sp/>&amp;<sp/>sm,<sp/>ST<sp/>&amp;<sp/>st,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tree_id++;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Tree,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Split,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Region,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Feature_t,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Label_t&gt;</highlight></codeline>
<codeline lineno="642" refid="group__MachineLearning_1ga32301fb47981050340e6a927d78a2a77" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__MachineLearning_1ga32301fb47981050340e6a927d78a2a77" kindref="member">visit_after_split</ref>(<sp/>Tree<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>tree,<sp/></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Split<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>split,</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Region<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>parent,</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Region<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>leftChild,</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Region<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>rightChild,</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Feature_t<sp/><sp/><sp/><sp/><sp/>&amp;<sp/>features,</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Label_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>labels)</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linear_index;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>addr=tree.topology_.size();</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(split.createNode().typeID()<sp/>==<sp/>i_ThresholdNode)</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(adjust_thresholds)</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Store<sp/>marginal<sp/>distribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linear_index=trees_online_information[tree_id].mag_distributions.size();</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trees_online_information[tree_id].interior_to_index[addr]=linear_index;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trees_online_information[tree_id].mag_distributions.push_back(MarginalDistribution());</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trees_online_information[tree_id].mag_distributions.back().leftCounts=leftChild.classCounts_;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trees_online_information[tree_id].mag_distributions.back().rightCounts=rightChild.classCounts_;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trees_online_information[tree_id].mag_distributions.back().leftTotalCounts=leftChild.size_;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trees_online_information[tree_id].mag_distributions.back().rightTotalCounts=rightChild.size_;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Store<sp/>the<sp/>gap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gap_left,gap_right;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gap_left=features(leftChild[0],split.bestSplitColumn());</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=1;i&lt;leftChild.size();++i)</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(features(leftChild[i],split.bestSplitColumn())&gt;gap_left)</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gap_left=features(leftChild[i],split.bestSplitColumn());</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gap_right=features(rightChild[0],split.bestSplitColumn());</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=1;i&lt;rightChild.size();++i)</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(features(rightChild[i],split.bestSplitColumn())&lt;gap_right)</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gap_right=features(rightChild[i],split.bestSplitColumn());</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trees_online_information[tree_id].mag_distributions.back().gap_left=gap_left;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trees_online_information[tree_id].mag_distributions.back().gap_right=gap_right;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Store<sp/>index<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linear_index=trees_online_information[tree_id].index_lists.size();</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trees_online_information[tree_id].exterior_to_index[addr]=linear_index;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trees_online_information[tree_id].index_lists.push_back(<ref refid="classvigra_1_1ArrayVector" kindref="compound">IndexList</ref>());</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trees_online_information[tree_id].index_lists.back().resize(parent.size_,0);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::copy(parent.begin_,parent.end_,trees_online_information[tree_id].index_lists.back().begin());</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>add_to_index_list(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tree,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>node,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!this-&gt;active_)</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TreeOnlineInformation<sp/>&amp;ti=trees_online_information[tree];</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ti.index_lists[ti.exterior_to_index[node]].push_back(index);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>move_exterior_node(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_tree,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_index,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_tree,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_index)</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!this-&gt;active_)</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trees_online_information[dst_tree].exterior_to_index[dst_index]=trees_online_information[src_tree].exterior_to_index[src_index];</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trees_online_information[src_tree].exterior_to_index.erase(src_index);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="707"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>do<sp/>something<sp/>when<sp/>visiting<sp/>a<sp/>internal<sp/>node<sp/>during<sp/>getToLeaf</highlight></codeline>
<codeline lineno="708"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="709"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>remember<sp/>as<sp/>last<sp/>node<sp/>id,<sp/>for<sp/>finding<sp/>the<sp/>parent<sp/>of<sp/>the<sp/>last<sp/>external<sp/>node</highlight></codeline>
<codeline lineno="710"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>also:<sp/>adjust<sp/>class<sp/>counts<sp/>and<sp/>borders</highlight></codeline>
<codeline lineno="711"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>IntT,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TopT,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Feat&gt;</highlight></codeline>
<codeline lineno="713" refid="group__MachineLearning_1ga0be1525336a154f011efa8f86e56db7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__MachineLearning_1ga0be1525336a154f011efa8f86e56db7c" kindref="member">visit_internal_node</ref>(TR<sp/>&amp;<sp/>tr,<sp/>IntT<sp/>index,<sp/>TopT<sp/>node_t,Feat<sp/>&amp;<sp/>features)</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_node_id=index;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(adjust_thresholds)</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra_assert(node_t==i_ThresholdNode,</highlight><highlight class="stringliteral">&quot;We<sp/>can<sp/>only<sp/>visit<sp/>threshold<sp/>nodes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>if<sp/>we<sp/>are<sp/>in<sp/>the<sp/>gap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value=features(0,<sp/>Node&lt;i_ThresholdNode&gt;(tr.topology_,tr.parameters_,index).column());</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TreeOnlineInformation<sp/>&amp;ti=trees_online_information[tree_id];</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MarginalDistribution<sp/>&amp;m=ti.mag_distributions[ti.interior_to_index[index]];</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value&gt;m.gap_left<sp/>&amp;&amp;<sp/>value&lt;m.gap_right)</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>which<sp/>site<sp/>we<sp/>want<sp/>to<sp/>go</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m.leftCounts[current_label]/</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(m.leftTotalCounts)&gt;m.rightCounts[current_label]/double(m.rightTotalCounts))</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//We<sp/>want<sp/>to<sp/>go<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.gap_left=value;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//We<sp/>want<sp/>to<sp/>go<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.gap_right=value;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Node&lt;i_ThresholdNode&gt;(tr.topology_,tr.parameters_,index).threshold()=(m.gap_right+m.gap_left)/2.0;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Adjust<sp/>class<sp/>counts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value&gt;Node&lt;i_ThresholdNode&gt;(tr.topology_,tr.parameters_,index).threshold())</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++m.rightTotalCounts;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++m.rightCounts[current_label];</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++m.leftTotalCounts;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++m.rightCounts[current_label];</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="751"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>do<sp/>something<sp/>when<sp/>visiting<sp/>a<sp/>extern<sp/>node<sp/>during<sp/>getToLeaf</highlight></codeline>
<codeline lineno="752"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/></highlight></codeline>
<codeline lineno="753"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Store<sp/>the<sp/>new<sp/>index!</highlight></codeline>
<codeline lineno="754"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal">};</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="757"><highlight class="comment">//////////////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="758"><highlight class="comment"></highlight><highlight class="comment">//<sp/>Out<sp/>of<sp/>Bag<sp/>Error<sp/>estimates<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="759"><highlight class="comment">//////////////////////////////////////////////////////////////////////////////</highlight></codeline>
<codeline lineno="760"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="762"><highlight class="comment">/**<sp/>Visitor<sp/>that<sp/>calculates<sp/>the<sp/>oob<sp/>error<sp/>of<sp/>each<sp/>individual<sp/>randomized</highlight></codeline>
<codeline lineno="763"><highlight class="comment"><sp/>*<sp/>decision<sp/>tree.<sp/></highlight></codeline>
<codeline lineno="764"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="765"><highlight class="comment"><sp/>*<sp/>After<sp/>training<sp/>a<sp/>tree,<sp/>all<sp/>those<sp/>samples<sp/>that<sp/>are<sp/>OOB<sp/>for<sp/>this<sp/>particular<sp/>tree</highlight></codeline>
<codeline lineno="766"><highlight class="comment"><sp/>*<sp/>are<sp/>put<sp/>down<sp/>the<sp/>tree<sp/>and<sp/>the<sp/>error<sp/>estimated.<sp/></highlight></codeline>
<codeline lineno="767"><highlight class="comment"><sp/>*<sp/>the<sp/>per<sp/>tree<sp/>oob<sp/>error<sp/>is<sp/>the<sp/>average<sp/>of<sp/>the<sp/>individual<sp/>error<sp/>estimates.<sp/></highlight></codeline>
<codeline lineno="768"><highlight class="comment"><sp/>*<sp/>(oobError<sp/>=<sp/>average<sp/>error<sp/>of<sp/>one<sp/>randomized<sp/>tree)</highlight></codeline>
<codeline lineno="769"><highlight class="comment"><sp/>*<sp/>Note:<sp/>This<sp/>is<sp/>Not<sp/>the<sp/>OOB<sp/>-<sp/>Error<sp/>estimate<sp/>suggested<sp/>by<sp/>Breiman<sp/>(See<sp/>OOB_Error<sp/></highlight></codeline>
<codeline lineno="770"><highlight class="comment"><sp/>*<sp/>visitor)</highlight></codeline>
<codeline lineno="771"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772" refid="classvigra_1_1rf_1_1visitors_1_1OOB__PerTreeError" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1rf_1_1visitors_1_1OOB__PerTreeError" kindref="compound">OOB_PerTreeError</ref>:</highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1VisitorBase" kindref="compound">VisitorBase</ref></highlight></codeline>
<codeline lineno="773"><highlight class="normal">{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="775"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>Average<sp/>error<sp/>of<sp/>one<sp/>randomized<sp/>decision<sp/>tree</highlight></codeline>
<codeline lineno="776"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777" refid="group__MachineLearning_1ga523d2a60f01e03fea2fb0c8d5e29d903" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="group__MachineLearning_1ga523d2a60f01e03fea2fb0c8d5e29d903" kindref="member">oobError</ref>;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalOobCount;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ArrayVector" kindref="compound">ArrayVector&lt;int&gt;</ref><sp/>oobCount,oobErrorCount;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1OOB__PerTreeError" kindref="compound">OOB_PerTreeError</ref>()</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="group__MachineLearning_1ga523d2a60f01e03fea2fb0c8d5e29d903" kindref="member">oobError</ref>(0.0),</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalOobCount(0)</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_value()</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="794"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>does<sp/>the<sp/>basic<sp/>calculation<sp/>per<sp/>tree*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RF,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SM,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ST&gt;</highlight></codeline>
<codeline lineno="796" refid="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76" kindref="member">visit_after_tree</ref>(<sp/><sp/><sp/><sp/>RF&amp;<sp/>rf,<sp/>PR<sp/>&amp;<sp/>pr,<sp/><sp/>SM<sp/>&amp;<sp/>sm,<sp/>ST<sp/>&amp;<sp/>st,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//do<sp/>the<sp/>first<sp/>time<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(oobCount.<ref refid="classvigra_1_1ArrayVectorView_1a503ab01f6c0142145d3434f6924714e7" kindref="member">size</ref>())<sp/>!=<sp/>rf.ext_param_.row_count_)</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oobCount.resize(rf.ext_param_.row_count_,<sp/>0);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oobErrorCount.resize(rf.ext_param_.row_count_,<sp/>0);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>go<sp/>through<sp/>the<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>rf.ext_param_.row_count_;<sp/>++l)</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>lth<sp/>sample<sp/>is<sp/>oob...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!sm.is_used()[l])</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++oobCount[l];</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><sp/><sp/><sp/><sp/>rf.tree(index)</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.predictLabel(<ref refid="group__LinearAlgebraFunctions_1ga8cc5e13ed0643c0d9b8c9021eaae625d" kindref="member">rowVector</ref>(pr.features(),<sp/>l))<sp/></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!=<sp/><sp/>pr.response()(l,0))</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++oobErrorCount[l];</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="822"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>Does<sp/>the<sp/>normalisation</highlight></codeline>
<codeline lineno="823"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RF,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PR&gt;</highlight></codeline>
<codeline lineno="825" refid="group__MachineLearning_1ga8680ab265a8c9c57f39c75bd51a186e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__MachineLearning_1ga8680ab265a8c9c57f39c75bd51a186e7" kindref="member">visit_at_end</ref>(RF<sp/>&amp;<sp/>rf,<sp/>PR<sp/>&amp;<sp/>pr)</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>some<sp/>normalisation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l=0;<sp/>l<sp/>&lt;<sp/>(int)rf.ext_param_.row_count_;<sp/>++l)</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(oobCount[l])</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga523d2a60f01e03fea2fb0c8d5e29d903" kindref="member">oobError</ref><sp/>+=<sp/>double(oobErrorCount[l])<sp/>/<sp/>oobCount[l];</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++totalOobCount;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga523d2a60f01e03fea2fb0c8d5e29d903" kindref="member">oobError</ref>/=totalOobCount;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="839"><highlight class="normal">};</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="841"><highlight class="comment">/**<sp/>Visitor<sp/>that<sp/>calculates<sp/>the<sp/>oob<sp/>error<sp/>of<sp/>the<sp/>ensemble</highlight></codeline>
<codeline lineno="842"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>rate<sp/>should<sp/>be<sp/>used<sp/>to<sp/>estimate<sp/>the<sp/>crossvalidation<sp/></highlight></codeline>
<codeline lineno="843"><highlight class="comment"><sp/>*<sp/><sp/>error<sp/>rate.</highlight></codeline>
<codeline lineno="844"><highlight class="comment"><sp/>*<sp/><sp/>Here<sp/>each<sp/>sample<sp/>is<sp/>put<sp/>down<sp/>those<sp/>trees,<sp/>for<sp/>which<sp/>this<sp/>sample</highlight></codeline>
<codeline lineno="845"><highlight class="comment"><sp/>*<sp/><sp/>is<sp/>OOB<sp/>i.e.<sp/>if<sp/>sample<sp/>#1<sp/>is<sp/><sp/>OOB<sp/>for<sp/>trees<sp/>1,<sp/>3<sp/>and<sp/>5<sp/>we<sp/>calculate</highlight></codeline>
<codeline lineno="846"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>output<sp/>using<sp/>the<sp/>ensemble<sp/>consisting<sp/>only<sp/>of<sp/>trees<sp/>1<sp/>3<sp/>and<sp/>5.<sp/></highlight></codeline>
<codeline lineno="847"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="848"><highlight class="comment"><sp/>*<sp/><sp/>Using<sp/>normal<sp/>bagged<sp/>sampling<sp/>each<sp/>sample<sp/>is<sp/>OOB<sp/>for<sp/>approx.<sp/>33%<sp/>of<sp/>trees</highlight></codeline>
<codeline lineno="849"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>error<sp/>rate<sp/>obtained<sp/>as<sp/>such<sp/>therefore<sp/>corresponds<sp/>to<sp/>crossvalidation</highlight></codeline>
<codeline lineno="850"><highlight class="comment"><sp/>*<sp/><sp/>rate<sp/>obtained<sp/>using<sp/>a<sp/>ensemble<sp/>containing<sp/>33%<sp/>of<sp/>the<sp/>trees.</highlight></codeline>
<codeline lineno="851"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852" refid="classvigra_1_1rf_1_1visitors_1_1OOB__Error" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1rf_1_1visitors_1_1OOB__Error" kindref="compound">OOB_Error</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1VisitorBase" kindref="compound">VisitorBase</ref></highlight></codeline>
<codeline lineno="853"><highlight class="normal">{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">MultiArrayShape&lt;2&gt;::type</ref><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">Shp</ref>;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_count;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_weighted;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray&lt;2,double&gt;</ref><sp/>tmp_prob;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray&lt;2, double&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prob_oob;<sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="861"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>Ensemble<sp/>oob<sp/>error<sp/>rate</highlight></codeline>
<codeline lineno="862"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863" refid="group__MachineLearning_1ga1f3b7456eb9396ffeae179c1cf81539e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga1f3b7456eb9396ffeae179c1cf81539e" kindref="member">oob_breiman</ref>;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray&lt;2, double&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oobCount;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ArrayVector" kindref="compound">ArrayVector&lt; int&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices;<sp/></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1OOB__Error" kindref="compound">OOB_Error</ref>()<sp/>:<sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1VisitorBase" kindref="compound">VisitorBase</ref>(),<sp/><ref refid="group__MachineLearning_1ga1f3b7456eb9396ffeae179c1cf81539e" kindref="member">oob_breiman</ref>(0.0)<sp/>{}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HasHDF5</highlight></codeline>
<codeline lineno="869"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>save(std::string<sp/>filen,<sp/>std::string<sp/>pathn)</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*(pathn.end()-1)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathn<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename<sp/>=<sp/>filen.c_str();</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray&lt;2, double&gt;</ref><sp/>temp(Shp(1,1),<sp/>0.0);<sp/></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp[0]<sp/>=<sp/><ref refid="group__MachineLearning_1ga1f3b7456eb9396ffeae179c1cf81539e" kindref="member">oob_breiman</ref>;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraHDF5Impex_1ga2e66ccacdf2a0be58e9ff2565fcc77df" kindref="member" tooltip="Store array data in an HDF5 file.">writeHDF5</ref>(filename,<sp/>(pathn<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;breiman_error&quot;</highlight><highlight class="normal">).c_str(),<sp/>temp);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="879"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>negative<sp/>value<sp/>if<sp/>sample<sp/>was<sp/>ib,<sp/>number<sp/>indicates<sp/>how<sp/>often.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>value<sp/>&gt;=0<sp/><sp/>if<sp/>sample<sp/>was<sp/>oob,<sp/>0<sp/>means<sp/>fail<sp/>1,<sp/>correct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RF,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PR&gt;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>visit_at_beginning(RF<sp/>&amp;<sp/>rf,<sp/>PR<sp/>&amp;<sp/>pr)</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_count<sp/>=<sp/>rf.class_count();</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_prob.<ref refid="classvigra_1_1MultiArray_1a4ba159bdb66dec55214cdcab25320c1d" kindref="member">reshape</ref>(Shp(1,<sp/>class_count),<sp/>0);<sp/></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prob_oob.<ref refid="classvigra_1_1MultiArray_1a4ba159bdb66dec55214cdcab25320c1d" kindref="member">reshape</ref>(Shp(rf.ext_param().row_count_,class_count),<sp/>0);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_weighted<sp/>=<sp/>rf.options().predict_weighted_;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices.resize(rf.ext_param().row_count_);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(oobCount.<ref refid="classvigra_1_1MultiArrayView_1a14c1df938ca1578ffc71bc9728b4e401" kindref="member">size</ref>())<sp/>!=<sp/>rf.ext_param_.row_count_)</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oobCount.<ref refid="classvigra_1_1MultiArray_1a4ba159bdb66dec55214cdcab25320c1d" kindref="member">reshape</ref>(Shp(rf.ext_param_.row_count_,<sp/>1),<sp/>0);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>rf.ext_param().row_count_;<sp/>++ii)</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices[ii]<sp/>=<sp/>ii;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RF,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SM,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ST&gt;</highlight></codeline>
<codeline lineno="901" refid="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76" kindref="member">visit_after_tree</ref>(RF&amp;<sp/>rf,<sp/>PR<sp/>&amp;<sp/>pr,<sp/><sp/>SM<sp/>&amp;<sp/>sm,<sp/>ST<sp/>&amp;<sp/>st,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>go<sp/>through<sp/>the<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_oob<sp/>=0;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>magic<sp/>number<sp/>10000:<sp/>invoke<sp/>special<sp/>treatment<sp/>when<sp/>when<sp/>msample<sp/>&lt;&lt;<sp/>sample_count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i.e.<sp/>the<sp/>OOB<sp/>sample<sp/>ist<sp/>very<sp/>large)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>40000:<sp/>use<sp/>at<sp/>most<sp/>40000<sp/>OOB<sp/>samples<sp/>per<sp/>class<sp/>for<sp/>OOB<sp/>error<sp/>estimate<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rf.ext_param_.actual_msample_<sp/>&lt;<sp/>pr.features().shape(0)<sp/>-<sp/>10000)</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ArrayVector" kindref="compound">ArrayVector&lt;int&gt;</ref><sp/>oob_indices;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ArrayVector" kindref="compound">ArrayVector&lt;int&gt;</ref><sp/>cts(class_count,<sp/>0);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::random_shuffle(indices.<ref refid="classvigra_1_1ArrayVectorView_1aa4b02d4f1a8500fb07a551069060709f" kindref="member">begin</ref>(),<sp/>indices.<ref refid="classvigra_1_1ArrayVectorView_1a350132543d80a1c1e5be844e6d2878ea" kindref="member">end</ref>());</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>rf.ext_param_.row_count_;<sp/>++ii)</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!sm.is_used()[indices[ii]]<sp/>&amp;&amp;<sp/>cts[pr.response()(indices[ii],<sp/>0)]<sp/>&lt;<sp/>40000)</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oob_indices.push_back(indices[ii]);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++cts[pr.response()(indices[ii],<sp/>0)];</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ll<sp/>=<sp/>0;<sp/>ll<sp/>&lt;<sp/>oob_indices.<ref refid="classvigra_1_1ArrayVectorView_1a503ab01f6c0142145d3434f6924714e7" kindref="member">size</ref>();<sp/>++ll)</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>number<sp/>of<sp/>trees<sp/>in<sp/>which<sp/>current<sp/>sample<sp/>is<sp/>oob</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++oobCount[oob_indices[ll]];</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>number<sp/>of<sp/>oob<sp/>samples<sp/>in<sp/>this<sp/>tree.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++total_oob;<sp/></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>predicted<sp/>votes<sp/>---&gt;<sp/>tmp_prob;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/><sp/>rf.tree(index).getToLeaf(<ref refid="group__LinearAlgebraFunctions_1ga8cc5e13ed0643c0d9b8c9021eaae625d" kindref="member">rowVector</ref>(pr.features(),oob_indices[ll]));</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Node_3_01e__ConstProbNode_01_4" kindref="compound">Node&lt;e_ConstProbNode&gt;</ref><sp/>node<sp/>(<sp/>rf.tree(index).topology_,<sp/></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rf.tree(index).parameters_,</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_prob.<ref refid="classvigra_1_1MultiArray_1aa90c22c574eaf8e0bd703912f644081b" kindref="member">init</ref>(0);<sp/></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>class_count;<sp/>++ii)</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_prob[ii]<sp/>=<sp/>node.prob_begin()[ii];</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(is_weighted)</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>class_count;<sp/>++ii)</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_prob[ii]<sp/>=<sp/>tmp_prob[ii]<sp/>*<sp/>(*(node.prob_begin()-1));</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__LinearAlgebraFunctions_1ga8cc5e13ed0643c0d9b8c9021eaae625d" kindref="member">rowVector</ref>(prob_oob,<sp/>oob_indices[ll])<sp/>+=<sp/>tmp_prob;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ll<sp/>=<sp/>0;<sp/>ll<sp/>&lt;<sp/>rf.ext_param_.row_count_;<sp/>++ll)</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>lth<sp/>sample<sp/>is<sp/>oob...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!sm.is_used()[ll])</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>number<sp/>of<sp/>trees<sp/>in<sp/>which<sp/>current<sp/>sample<sp/>is<sp/>oob</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++oobCount[ll];</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>number<sp/>of<sp/>oob<sp/>samples<sp/>in<sp/>this<sp/>tree.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++total_oob;<sp/></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>predicted<sp/>votes<sp/>---&gt;<sp/>tmp_prob;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/><sp/>rf.tree(index).getToLeaf(<ref refid="group__LinearAlgebraFunctions_1ga8cc5e13ed0643c0d9b8c9021eaae625d" kindref="member">rowVector</ref>(pr.features(),ll));</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Node_3_01e__ConstProbNode_01_4" kindref="compound">Node&lt;e_ConstProbNode&gt;</ref><sp/>node<sp/>(<sp/>rf.tree(index).topology_,<sp/></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rf.tree(index).parameters_,</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_prob.<ref refid="classvigra_1_1MultiArray_1aa90c22c574eaf8e0bd703912f644081b" kindref="member">init</ref>(0);<sp/></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>class_count;<sp/>++ii)</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_prob[ii]<sp/>=<sp/>node.prob_begin()[ii];</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(is_weighted)</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>class_count;<sp/>++ii)</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_prob[ii]<sp/>=<sp/>tmp_prob[ii]<sp/>*<sp/>(*(node.prob_begin()-1));</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__LinearAlgebraFunctions_1ga8cc5e13ed0643c0d9b8c9021eaae625d" kindref="member">rowVector</ref>(prob_oob,<sp/>ll)<sp/>+=<sp/>tmp_prob;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>go<sp/>through<sp/>the<sp/>ib<sp/>samples;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="980"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>Normalise<sp/>variable<sp/>importance<sp/>after<sp/>the<sp/>number<sp/>of<sp/>trees<sp/>is<sp/>known.</highlight></codeline>
<codeline lineno="981"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RF,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PR&gt;</highlight></codeline>
<codeline lineno="983" refid="group__MachineLearning_1ga8680ab265a8c9c57f39c75bd51a186e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__MachineLearning_1ga8680ab265a8c9c57f39c75bd51a186e7" kindref="member">visit_at_end</ref>(RF<sp/>&amp;<sp/>rf,<sp/>PR<sp/>&amp;<sp/>pr)</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ullis<sp/>original<sp/>metric<sp/>and<sp/>breiman<sp/>style<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalOobCount<sp/>=0;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>breimanstyle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ll=0;<sp/>ll<sp/>&lt;<sp/>(int)rf.ext_param_.row_count_;<sp/>++ll)</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(oobCount[ll])</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group__MathFunctions_1gaf658d43400902a049a289c4e5ded84d9" kindref="member">argMax</ref>(<ref refid="group__LinearAlgebraFunctions_1ga8cc5e13ed0643c0d9b8c9021eaae625d" kindref="member">rowVector</ref>(prob_oob,<sp/>ll))<sp/>!=<sp/>pr.response()(ll,<sp/>0))</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++breimanstyle;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++totalOobCount;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga1f3b7456eb9396ffeae179c1cf81539e" kindref="member">oob_breiman</ref><sp/>=<sp/>double(breimanstyle)/totalOobCount;<sp/></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="999"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1002"><highlight class="comment">/**<sp/>Visitor<sp/>that<sp/>calculates<sp/>different<sp/>OOB<sp/>error<sp/>statistics</highlight></codeline>
<codeline lineno="1003"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004" refid="classvigra_1_1rf_1_1visitors_1_1CompleteOOBInfo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1rf_1_1visitors_1_1CompleteOOBInfo" kindref="compound">CompleteOOBInfo</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1VisitorBase" kindref="compound">VisitorBase</ref></highlight></codeline>
<codeline lineno="1005"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">MultiArrayShape&lt;2&gt;::type</ref><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">Shp</ref>;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_count;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_weighted;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray&lt;2,double&gt;</ref><sp/>tmp_prob;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1012"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>OOB<sp/>Error<sp/>rate<sp/>of<sp/>each<sp/>individual<sp/>tree</highlight></codeline>
<codeline lineno="1013"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014" refid="group__MachineLearning_1ga852ff55e6085077e4c9217e58db06a76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray&lt;2, double&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga852ff55e6085077e4c9217e58db06a76" kindref="member">oob_per_tree</ref>;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1015"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>Mean<sp/>of<sp/>oob_per_tree</highlight></codeline>
<codeline lineno="1016"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017" refid="group__MachineLearning_1ga1201fdfdd42d1f8c6f4b8ded2919bb50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga1201fdfdd42d1f8c6f4b8ded2919bb50" kindref="member">oob_mean</ref>;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1018"><highlight class="comment"><sp/><sp/><sp/><sp/>/**Standard<sp/>deviation<sp/>of<sp/>oob_per_tree</highlight></codeline>
<codeline lineno="1019"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020" refid="group__MachineLearning_1gac2812ecf65a24228f82610cee1b1903a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1gac2812ecf65a24228f82610cee1b1903a" kindref="member">oob_std</ref>;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray&lt;2, double&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prob_oob;<sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1023"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>Ensemble<sp/>OOB<sp/>error</highlight></codeline>
<codeline lineno="1024"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1025"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\sa<sp/>OOB_Error</highlight></codeline>
<codeline lineno="1026"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027" refid="group__MachineLearning_1ga1f3b7456eb9396ffeae179c1cf81539e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga1f3b7456eb9396ffeae179c1cf81539e" kindref="member">oob_breiman</ref>;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray&lt;2, double&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oobCount;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray&lt;2, double&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oobErrorCount;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1031"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>Per<sp/>Tree<sp/>OOB<sp/>error<sp/>calculated<sp/>as<sp/>in<sp/>OOB_PerTreeError</highlight></codeline>
<codeline lineno="1032"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>(Ulli&apos;s<sp/>version)</highlight></codeline>
<codeline lineno="1033"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034" refid="group__MachineLearning_1ga03a4e6e24e20e6a14dc301c919eddd6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga03a4e6e24e20e6a14dc301c919eddd6b" kindref="member">oob_per_tree2</ref>;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1036"><highlight class="comment"><sp/><sp/><sp/><sp/>/**Column<sp/>containing<sp/>the<sp/>development<sp/>of<sp/>the<sp/>Ensemble</highlight></codeline>
<codeline lineno="1037"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>error<sp/>rate<sp/>with<sp/>increasing<sp/>number<sp/>of<sp/>trees</highlight></codeline>
<codeline lineno="1038"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039" refid="group__MachineLearning_1ga096cc4d94437c527051772ec34374e60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray&lt;2, double&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga096cc4d94437c527051772ec34374e60" kindref="member">breiman_per_tree</ref>;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1040"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>4<sp/>dimensional<sp/>array<sp/>containing<sp/>the<sp/>development<sp/>of<sp/>confusion<sp/>matrices<sp/></highlight></codeline>
<codeline lineno="1041"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>with<sp/>number<sp/>of<sp/>trees<sp/>-<sp/>can<sp/>be<sp/>used<sp/>to<sp/>estimate<sp/>ROC<sp/>curves<sp/>etc.</highlight></codeline>
<codeline lineno="1042"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1043"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>oobroc_per_tree(ii,jj,kk,ll)<sp/></highlight></codeline>
<codeline lineno="1044"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>corresponds<sp/>true<sp/>label<sp/>=<sp/>ii<sp/></highlight></codeline>
<codeline lineno="1045"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>predicted<sp/>label<sp/>=<sp/>jj</highlight></codeline>
<codeline lineno="1046"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>confusion<sp/>matrix<sp/>after<sp/>ll<sp/>trees</highlight></codeline>
<codeline lineno="1047"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1048"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>explanation<sp/>of<sp/>third<sp/>index:</highlight></codeline>
<codeline lineno="1049"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1050"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Two<sp/>class<sp/>case:</highlight></codeline>
<codeline lineno="1051"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>kk<sp/>=<sp/>0<sp/>-<sp/>(treeCount-1)</highlight></codeline>
<codeline lineno="1052"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Threshold<sp/>is<sp/>on<sp/>Probability<sp/>for<sp/>class<sp/>0<sp/><sp/>is<sp/>kk/(treeCount-1);</highlight></codeline>
<codeline lineno="1053"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>More<sp/>classes:</highlight></codeline>
<codeline lineno="1054"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>kk<sp/>=<sp/>0.<sp/>Threshold<sp/>on<sp/>probability<sp/>set<sp/>by<sp/>argMax<sp/>of<sp/>the<sp/>probability<sp/>array.</highlight></codeline>
<codeline lineno="1055"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056" refid="group__MachineLearning_1ga8c5500f5a93e18db839b6c83601257a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray&lt;4, double&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga8c5500f5a93e18db839b6c83601257a4" kindref="member">oobroc_per_tree</ref>;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1CompleteOOBInfo" kindref="compound">CompleteOOBInfo</ref>()<sp/>:<sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1VisitorBase" kindref="compound">VisitorBase</ref>(),<sp/><ref refid="group__MachineLearning_1ga1201fdfdd42d1f8c6f4b8ded2919bb50" kindref="member">oob_mean</ref>(0),<sp/><ref refid="group__MachineLearning_1gac2812ecf65a24228f82610cee1b1903a" kindref="member">oob_std</ref>(0),<sp/><ref refid="group__MachineLearning_1ga03a4e6e24e20e6a14dc301c919eddd6b" kindref="member">oob_per_tree2</ref>(0)<sp/><sp/>{}</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HasHDF5</highlight></codeline>
<codeline lineno="1061"><highlight class="preprocessor"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>save<sp/>to<sp/>HDF5<sp/>file</highlight></codeline>
<codeline lineno="1062"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>save(std::string<sp/>filen,<sp/>std::string<sp/>pathn)</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*(pathn.end()-1)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathn<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename<sp/>=<sp/>filen.c_str();</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray&lt;2, double&gt;</ref><sp/>temp(Shp(1,1),<sp/>0.0);<sp/></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraHDF5Impex_1ga2e66ccacdf2a0be58e9ff2565fcc77df" kindref="member" tooltip="Store array data in an HDF5 file.">writeHDF5</ref>(filename,<sp/>(pathn<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;oob_per_tree&quot;</highlight><highlight class="normal">).c_str(),<sp/><ref refid="group__MachineLearning_1ga852ff55e6085077e4c9217e58db06a76" kindref="member">oob_per_tree</ref>);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraHDF5Impex_1ga2e66ccacdf2a0be58e9ff2565fcc77df" kindref="member" tooltip="Store array data in an HDF5 file.">writeHDF5</ref>(filename,<sp/>(pathn<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;oobroc_per_tree&quot;</highlight><highlight class="normal">).c_str(),<sp/><ref refid="group__MachineLearning_1ga8c5500f5a93e18db839b6c83601257a4" kindref="member">oobroc_per_tree</ref>);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraHDF5Impex_1ga2e66ccacdf2a0be58e9ff2565fcc77df" kindref="member" tooltip="Store array data in an HDF5 file.">writeHDF5</ref>(filename,<sp/>(pathn<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;breiman_per_tree&quot;</highlight><highlight class="normal">).c_str(),<sp/><ref refid="group__MachineLearning_1ga096cc4d94437c527051772ec34374e60" kindref="member">breiman_per_tree</ref>);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp[0]<sp/>=<sp/><ref refid="group__MachineLearning_1ga1201fdfdd42d1f8c6f4b8ded2919bb50" kindref="member">oob_mean</ref>;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraHDF5Impex_1ga2e66ccacdf2a0be58e9ff2565fcc77df" kindref="member" tooltip="Store array data in an HDF5 file.">writeHDF5</ref>(filename,<sp/>(pathn<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;per_tree_error&quot;</highlight><highlight class="normal">).c_str(),<sp/>temp);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp[0]<sp/>=<sp/><ref refid="group__MachineLearning_1gac2812ecf65a24228f82610cee1b1903a" kindref="member">oob_std</ref>;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraHDF5Impex_1ga2e66ccacdf2a0be58e9ff2565fcc77df" kindref="member" tooltip="Store array data in an HDF5 file.">writeHDF5</ref>(filename,<sp/>(pathn<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;per_tree_error_std&quot;</highlight><highlight class="normal">).c_str(),<sp/>temp);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp[0]<sp/>=<sp/><ref refid="group__MachineLearning_1ga1f3b7456eb9396ffeae179c1cf81539e" kindref="member">oob_breiman</ref>;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraHDF5Impex_1ga2e66ccacdf2a0be58e9ff2565fcc77df" kindref="member" tooltip="Store array data in an HDF5 file.">writeHDF5</ref>(filename,<sp/>(pathn<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;breiman_error&quot;</highlight><highlight class="normal">).c_str(),<sp/>temp);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp[0]<sp/>=<sp/><ref refid="group__MachineLearning_1ga03a4e6e24e20e6a14dc301c919eddd6b" kindref="member">oob_per_tree2</ref>;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraHDF5Impex_1ga2e66ccacdf2a0be58e9ff2565fcc77df" kindref="member" tooltip="Store array data in an HDF5 file.">writeHDF5</ref>(filename,<sp/>(pathn<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;ulli_error&quot;</highlight><highlight class="normal">).c_str(),<sp/>temp);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1082"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>negative<sp/>value<sp/>if<sp/>sample<sp/>was<sp/>ib,<sp/>number<sp/>indicates<sp/>how<sp/>often.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>value<sp/>&gt;=0<sp/><sp/>if<sp/>sample<sp/>was<sp/>oob,<sp/>0<sp/>means<sp/>fail<sp/>1,<sp/>correct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RF,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PR&gt;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>visit_at_beginning(RF<sp/>&amp;<sp/>rf,<sp/>PR<sp/>&amp;<sp/>pr)</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_count<sp/>=<sp/>rf.class_count();</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(class_count<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga8c5500f5a93e18db839b6c83601257a4" kindref="member">oobroc_per_tree</ref>.<ref refid="classvigra_1_1MultiArray_1a4ba159bdb66dec55214cdcab25320c1d" kindref="member">reshape</ref>(<ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">MultiArrayShape&lt;4&gt;::type</ref>(2,2,rf.tree_count(),<sp/>rf.tree_count()));</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga8c5500f5a93e18db839b6c83601257a4" kindref="member">oobroc_per_tree</ref>.<ref refid="classvigra_1_1MultiArray_1a4ba159bdb66dec55214cdcab25320c1d" kindref="member">reshape</ref>(<ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">MultiArrayShape&lt;4&gt;::type</ref>(rf.class_count(),rf.class_count(),1,<sp/>rf.tree_count()));</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_prob.<ref refid="classvigra_1_1MultiArray_1a4ba159bdb66dec55214cdcab25320c1d" kindref="member">reshape</ref>(Shp(1,<sp/>class_count),<sp/>0);<sp/></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prob_oob.<ref refid="classvigra_1_1MultiArray_1a4ba159bdb66dec55214cdcab25320c1d" kindref="member">reshape</ref>(Shp(rf.ext_param().row_count_,class_count),<sp/>0);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_weighted<sp/>=<sp/>rf.options().predict_weighted_;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga852ff55e6085077e4c9217e58db06a76" kindref="member">oob_per_tree</ref>.<ref refid="classvigra_1_1MultiArray_1a4ba159bdb66dec55214cdcab25320c1d" kindref="member">reshape</ref>(Shp(1,<sp/>rf.tree_count()),<sp/>0);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga096cc4d94437c527051772ec34374e60" kindref="member">breiman_per_tree</ref>.<ref refid="classvigra_1_1MultiArray_1a4ba159bdb66dec55214cdcab25320c1d" kindref="member">reshape</ref>(Shp(1,<sp/>rf.tree_count()),<sp/>0);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//do<sp/>the<sp/>first<sp/>time<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(oobCount.<ref refid="classvigra_1_1MultiArrayView_1a14c1df938ca1578ffc71bc9728b4e401" kindref="member">size</ref>())<sp/>!=<sp/>rf.ext_param_.row_count_)</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oobCount.<ref refid="classvigra_1_1MultiArray_1a4ba159bdb66dec55214cdcab25320c1d" kindref="member">reshape</ref>(Shp(rf.ext_param_.row_count_,<sp/>1),<sp/>0);</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oobErrorCount.<ref refid="classvigra_1_1MultiArray_1a4ba159bdb66dec55214cdcab25320c1d" kindref="member">reshape</ref>(Shp(rf.ext_param_.row_count_,1),<sp/>0);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RF,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SM,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ST&gt;</highlight></codeline>
<codeline lineno="1107" refid="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76" kindref="member">visit_after_tree</ref>(RF&amp;<sp/>rf,<sp/>PR<sp/>&amp;<sp/>pr,<sp/><sp/>SM<sp/>&amp;<sp/>sm,<sp/>ST<sp/>&amp;<sp/>st,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>go<sp/>through<sp/>the<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_oob<sp/>=0;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wrong_oob<sp/>=0;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ll<sp/>=<sp/>0;<sp/>ll<sp/>&lt;<sp/>rf.ext_param_.row_count_;<sp/>++ll)</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>lth<sp/>sample<sp/>is<sp/>oob...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!sm.is_used()[ll])</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>number<sp/>of<sp/>trees<sp/>in<sp/>which<sp/>current<sp/>sample<sp/>is<sp/>oob</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++oobCount[ll];</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>number<sp/>of<sp/>oob<sp/>samples<sp/>in<sp/>this<sp/>tree.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++total_oob;<sp/></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>predicted<sp/>votes<sp/>---&gt;<sp/>tmp_prob;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/><sp/>rf.tree(index).getToLeaf(<ref refid="group__LinearAlgebraFunctions_1ga8cc5e13ed0643c0d9b8c9021eaae625d" kindref="member">rowVector</ref>(pr.features(),ll));</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Node_3_01e__ConstProbNode_01_4" kindref="compound">Node&lt;e_ConstProbNode&gt;</ref><sp/>node<sp/>(<sp/>rf.tree(index).topology_,<sp/></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rf.tree(index).parameters_,</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_prob.<ref refid="classvigra_1_1MultiArray_1aa90c22c574eaf8e0bd703912f644081b" kindref="member">init</ref>(0);<sp/></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>class_count;<sp/>++ii)</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_prob[ii]<sp/>=<sp/>node.prob_begin()[ii];</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(is_weighted)</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>class_count;<sp/>++ii)</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_prob[ii]<sp/>=<sp/>tmp_prob[ii]<sp/>*<sp/>(*(node.prob_begin()-1));</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__LinearAlgebraFunctions_1ga8cc5e13ed0643c0d9b8c9021eaae625d" kindref="member">rowVector</ref>(prob_oob,<sp/>ll)<sp/>+=<sp/>tmp_prob;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>label<sp/>=<sp/><ref refid="group__MathFunctions_1gaf658d43400902a049a289c4e5ded84d9" kindref="member">argMax</ref>(tmp_prob);<sp/></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(label<sp/>!=<sp/>pr.response()(ll,<sp/>0))</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>number<sp/>of<sp/>wrong<sp/>oob<sp/>samples<sp/>in<sp/>this<sp/>tree.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++wrong_oob;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>number<sp/>of<sp/>trees<sp/>in<sp/>which<sp/>current<sp/>sample<sp/>is<sp/>wrong<sp/>oob</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++oobErrorCount[ll];</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>breimanstyle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalOobCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ll=0;<sp/>ll<sp/>&lt;<sp/>(int)rf.ext_param_.row_count_;<sp/>++ll)</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(oobCount[ll])</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group__MathFunctions_1gaf658d43400902a049a289c4e5ded84d9" kindref="member">argMax</ref>(<ref refid="group__LinearAlgebraFunctions_1ga8cc5e13ed0643c0d9b8c9021eaae625d" kindref="member">rowVector</ref>(prob_oob,<sp/>ll))<sp/>!=<sp/>pr.response()(ll,<sp/>0))</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++breimanstyle;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++totalOobCount;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group__MachineLearning_1ga8c5500f5a93e18db839b6c83601257a4" kindref="member">oobroc_per_tree</ref>.<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(2)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga8c5500f5a93e18db839b6c83601257a4" kindref="member">oobroc_per_tree</ref>(pr.response()(ll,0),<sp/><ref refid="group__MathFunctions_1gaf658d43400902a049a289c4e5ded84d9" kindref="member">argMax</ref>(<ref refid="group__LinearAlgebraFunctions_1ga8cc5e13ed0643c0d9b8c9021eaae625d" kindref="member">rowVector</ref>(prob_oob,<sp/>ll)),0<sp/>,index)++;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group__MachineLearning_1ga8c5500f5a93e18db839b6c83601257a4" kindref="member">oobroc_per_tree</ref>.<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(2)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga8c5500f5a93e18db839b6c83601257a4" kindref="member">oobroc_per_tree</ref>.<ref refid="classvigra_1_1MultiArrayView_1acaca6e5790fa86120c4df40c3385d324" kindref="member">bindOuter</ref>(index)/=totalOobCount;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group__MachineLearning_1ga8c5500f5a93e18db839b6c83601257a4" kindref="member">oobroc_per_tree</ref>.<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(2)<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;3, double&gt;</ref><sp/>current_roc<sp/></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group__MachineLearning_1ga8c5500f5a93e18db839b6c83601257a4" kindref="member">oobroc_per_tree</ref>.<ref refid="classvigra_1_1MultiArrayView_1acaca6e5790fa86120c4df40c3385d324" kindref="member">bindOuter</ref>(index);</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gg<sp/>=<sp/>0;<sp/>gg<sp/>&lt;<sp/>current_roc.<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(2);<sp/>++gg)</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ll=0;<sp/>ll<sp/>&lt;<sp/>(int)rf.ext_param_.row_count_;<sp/>++ll)</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(oobCount[ll])</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pred<sp/>=<sp/>prob_oob(ll,<sp/>1)<sp/>&gt;<sp/>(double(gg)/double(current_roc.<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(2)))?</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>:<sp/>0;<sp/></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_roc(pr.response()(ll,<sp/>0),<sp/>pred,<sp/>gg)+=<sp/>1;<sp/></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_roc.<ref refid="classvigra_1_1MultiArrayView_1acaca6e5790fa86120c4df40c3385d324" kindref="member">bindOuter</ref>(gg)/=<sp/>totalOobCount;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga096cc4d94437c527051772ec34374e60" kindref="member">breiman_per_tree</ref>[index]<sp/>=<sp/>double(breimanstyle)/double(totalOobCount);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga852ff55e6085077e4c9217e58db06a76" kindref="member">oob_per_tree</ref>[index]<sp/>=<sp/>double(wrong_oob)/double(total_oob);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>go<sp/>through<sp/>the<sp/>ib<sp/>samples;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1189"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>Normalise<sp/>variable<sp/>importance<sp/>after<sp/>the<sp/>number<sp/>of<sp/>trees<sp/>is<sp/>known.</highlight></codeline>
<codeline lineno="1190"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RF,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PR&gt;</highlight></codeline>
<codeline lineno="1192" refid="group__MachineLearning_1ga8680ab265a8c9c57f39c75bd51a186e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__MachineLearning_1ga8680ab265a8c9c57f39c75bd51a186e7" kindref="member">visit_at_end</ref>(RF<sp/>&amp;<sp/>rf,<sp/>PR<sp/>&amp;<sp/>pr)</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ullis<sp/>original<sp/>metric<sp/>and<sp/>breiman<sp/>style<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga03a4e6e24e20e6a14dc301c919eddd6b" kindref="member">oob_per_tree2</ref><sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalOobCount<sp/>=0;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>breimanstyle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ll=0;<sp/>ll<sp/>&lt;<sp/>(int)rf.ext_param_.row_count_;<sp/>++ll)</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(oobCount[ll])</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group__MathFunctions_1gaf658d43400902a049a289c4e5ded84d9" kindref="member">argMax</ref>(<ref refid="group__LinearAlgebraFunctions_1ga8cc5e13ed0643c0d9b8c9021eaae625d" kindref="member">rowVector</ref>(prob_oob,<sp/>ll))<sp/>!=<sp/>pr.response()(ll,<sp/>0))</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++breimanstyle;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga03a4e6e24e20e6a14dc301c919eddd6b" kindref="member">oob_per_tree2</ref><sp/>+=<sp/>double(oobErrorCount[ll])<sp/>/<sp/>oobCount[ll];</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++totalOobCount;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga03a4e6e24e20e6a14dc301c919eddd6b" kindref="member">oob_per_tree2</ref><sp/>/=<sp/>totalOobCount;<sp/></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga1f3b7456eb9396ffeae179c1cf81539e" kindref="member">oob_breiman</ref><sp/>=<sp/>double(breimanstyle)/totalOobCount;<sp/></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mean<sp/>error<sp/>of<sp/>each<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView&lt;2, double&gt;</ref><sp/>mean(<ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">Shp</ref>(1,1),<sp/>&amp;<ref refid="group__MachineLearning_1ga1201fdfdd42d1f8c6f4b8ded2919bb50" kindref="member">oob_mean</ref>);</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView&lt;2, double&gt;</ref><sp/>stdDev(<ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">Shp</ref>(1,1),<sp/>&amp;<ref refid="group__MachineLearning_1gac2812ecf65a24228f82610cee1b1903a" kindref="member">oob_std</ref>);</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__LinearAlgebraFunctions_1ga2ec3530fa54858e6e27ac98d27a9be00" kindref="member">rowStatistics</ref>(<ref refid="group__MachineLearning_1ga852ff55e6085077e4c9217e58db06a76" kindref="member">oob_per_tree</ref>,<sp/>mean,<sp/>stdDev);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1215"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1217"><highlight class="comment">/**<sp/>calculate<sp/>variable<sp/>importance<sp/>while<sp/>learning.</highlight></codeline>
<codeline lineno="1218"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219" refid="classvigra_1_1rf_1_1visitors_1_1VariableImportanceVisitor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1rf_1_1visitors_1_1VariableImportanceVisitor" kindref="compound">VariableImportanceVisitor</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1VisitorBase" kindref="compound">VisitorBase</ref></highlight></codeline>
<codeline lineno="1220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1223"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>This<sp/>Array<sp/>has<sp/>the<sp/>same<sp/>entries<sp/>as<sp/>the<sp/>R<sp/>-<sp/>random<sp/>forest<sp/>variable</highlight></codeline>
<codeline lineno="1224"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>importance.</highlight></codeline>
<codeline lineno="1225"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>Matrix<sp/>is<sp/><sp/><sp/>featureCount<sp/>by<sp/>(classCount<sp/>+2)</highlight></codeline>
<codeline lineno="1226"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>variable_importance_(ii,jj)<sp/>is<sp/>the<sp/>variable<sp/>importance<sp/>measure<sp/>of<sp/></highlight></codeline>
<codeline lineno="1227"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>the<sp/>ii-th<sp/>variable<sp/>according<sp/>to:</highlight></codeline>
<codeline lineno="1228"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>jj<sp/>=<sp/>0<sp/>-<sp/>(classCount-1)</highlight></codeline>
<codeline lineno="1229"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>classwise<sp/>permutation<sp/>importance<sp/></highlight></codeline>
<codeline lineno="1230"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>jj<sp/>=<sp/>rowCount(variable_importance_)<sp/>-2</highlight></codeline>
<codeline lineno="1231"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>permutation<sp/>importance</highlight></codeline>
<codeline lineno="1232"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>jj<sp/>=<sp/>rowCount(variable_importance_)<sp/>-1</highlight></codeline>
<codeline lineno="1233"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>gini<sp/>decrease<sp/>importance.</highlight></codeline>
<codeline lineno="1234"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1235"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>permutation<sp/>importance:</highlight></codeline>
<codeline lineno="1236"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>difference<sp/>between<sp/>the<sp/>fraction<sp/>of<sp/>OOB<sp/>samples<sp/>classified<sp/>correctly</highlight></codeline>
<codeline lineno="1237"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>before<sp/>and<sp/>after<sp/>permuting<sp/>(randomizing)<sp/>the<sp/>ii-th<sp/>column<sp/>is<sp/>calculated.</highlight></codeline>
<codeline lineno="1238"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>The<sp/>ii-th<sp/>column<sp/>is<sp/>permuted<sp/>rep_cnt<sp/>times.</highlight></codeline>
<codeline lineno="1239"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1240"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>class<sp/>wise<sp/>permutation<sp/>importance:</highlight></codeline>
<codeline lineno="1241"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>same<sp/>as<sp/>permutation<sp/>importance.<sp/>We<sp/>only<sp/>look<sp/>at<sp/>those<sp/>OOB<sp/>samples<sp/>whose<sp/></highlight></codeline>
<codeline lineno="1242"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>response<sp/>corresponds<sp/>to<sp/>class<sp/>jj.</highlight></codeline>
<codeline lineno="1243"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1244"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>gini<sp/>decrease<sp/>importance:</highlight></codeline>
<codeline lineno="1245"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>row<sp/>ii<sp/>corresponds<sp/>to<sp/>the<sp/>sum<sp/>of<sp/>all<sp/>gini<sp/>decreases<sp/>induced<sp/>by<sp/>variable<sp/>ii<sp/></highlight></codeline>
<codeline lineno="1246"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>in<sp/>each<sp/>node<sp/>of<sp/>the<sp/>random<sp/>forest.</highlight></codeline>
<codeline lineno="1247"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248" refid="group__MachineLearning_1gac4b8c6cd30f9b3de278e373528e092aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray&lt;2, double&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1gac4b8c6cd30f9b3de278e373528e092aa" kindref="member">variable_importance_</ref>;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repetition_count_;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in_place_;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HasHDF5</highlight></codeline>
<codeline lineno="1253"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>save(std::string<sp/>filename,<sp/>std::string<sp/>prefix)</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;variable_importance_&quot;</highlight><highlight class="normal"><sp/>+<sp/>prefix;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraHDF5Impex_1ga2e66ccacdf2a0be58e9ff2565fcc77df" kindref="member" tooltip="Store array data in an HDF5 file.">writeHDF5</ref>(filename.c_str(),<sp/></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix.c_str(),<sp/></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1gac4b8c6cd30f9b3de278e373528e092aa" kindref="member">variable_importance_</ref>);</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1261"><highlight class="preprocessor"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1262"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>Constructor</highlight></codeline>
<codeline lineno="1263"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\param<sp/>rep_cnt<sp/>(defautl:<sp/>10)<sp/>how<sp/>often<sp/>should<sp/></highlight></codeline>
<codeline lineno="1264"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>permutation<sp/>take<sp/>place.<sp/>Set<sp/>to<sp/>1<sp/>to<sp/>make<sp/>calculation<sp/>faster<sp/>(but</highlight></codeline>
<codeline lineno="1265"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>possibly<sp/>more<sp/>instable)</highlight></codeline>
<codeline lineno="1266"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267" refid="group__MachineLearning_1ga6d8acee39d76fbdb44ece3977a336c35" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga6d8acee39d76fbdb44ece3977a336c35" kindref="member">VariableImportanceVisitor</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rep_cnt<sp/>=<sp/>10)<sp/></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/>repetition_count_(rep_cnt)</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1272"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>calculates<sp/>impurity<sp/>decrease<sp/>based<sp/>variable<sp/>importance<sp/>after<sp/>every</highlight></codeline>
<codeline lineno="1273"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>split.<sp/><sp/></highlight></codeline>
<codeline lineno="1274"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Tree,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Split,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Region,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Feature_t,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Label_t&gt;</highlight></codeline>
<codeline lineno="1276" refid="group__MachineLearning_1ga32301fb47981050340e6a927d78a2a77" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__MachineLearning_1ga32301fb47981050340e6a927d78a2a77" kindref="member">visit_after_split</ref>(<sp/>Tree<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>tree,<sp/></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Split<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>split,</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Region<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>parent,</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Region<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>leftChild,</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Region<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>rightChild,</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Feature_t<sp/><sp/><sp/><sp/><sp/>&amp;<sp/>features,</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Label_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>labels)</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//resize<sp/>to<sp/>right<sp/>size<sp/>when<sp/>called<sp/>the<sp/>first<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__FixedSizeInt_1ga92f05c4b6944ec5926841e34f03a9060" kindref="member" tooltip="32-bit signed int">Int32</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/>class_count<sp/>=<sp/>tree.ext_param_.class_count_;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__FixedSizeInt_1ga92f05c4b6944ec5926841e34f03a9060" kindref="member" tooltip="32-bit signed int">Int32</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/>column_count<sp/>=<sp/>tree.ext_param_.column_count_;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group__MachineLearning_1gac4b8c6cd30f9b3de278e373528e092aa" kindref="member">variable_importance_</ref>.<ref refid="classvigra_1_1MultiArrayView_1a14c1df938ca1578ffc71bc9728b4e401" kindref="member">size</ref>()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1gac4b8c6cd30f9b3de278e373528e092aa" kindref="member">variable_importance_</ref></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="classvigra_1_1MultiArray_1a4ba159bdb66dec55214cdcab25320c1d" kindref="member">reshape</ref>(<ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">MultiArrayShape&lt;2&gt;::type</ref>(column_count,<sp/></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_count+2));</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(split.createNode().typeID()<sp/>==<sp/>i_ThresholdNode)</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Node&lt;i_ThresholdNode&gt;<sp/>node(split.createNode());</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1gac4b8c6cd30f9b3de278e373528e092aa" kindref="member">variable_importance_</ref>(node.column(),class_count+1)<sp/></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+=<sp/>split.region_gini_<sp/>-<sp/>split.minGini();</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1304"><highlight class="comment"><sp/><sp/><sp/><sp/>/**compute<sp/>permutation<sp/>based<sp/>var<sp/>imp.<sp/></highlight></codeline>
<codeline lineno="1305"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>(Only<sp/>an<sp/>Array<sp/>of<sp/>size<sp/>oob_sample_count<sp/>x<sp/>1<sp/>is<sp/>created.</highlight></codeline>
<codeline lineno="1306"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>-<sp/>apposed<sp/>to<sp/>oob_sample_count<sp/>x<sp/>feature_count<sp/>in<sp/>the<sp/>other<sp/>method.</highlight></codeline>
<codeline lineno="1307"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/></highlight></codeline>
<codeline lineno="1308"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>\sa<sp/>FieldProxy</highlight></codeline>
<codeline lineno="1309"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RF,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SM,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ST&gt;</highlight></codeline>
<codeline lineno="1311" refid="group__MachineLearning_1gae14ce8384c149dfccb48079c51464207" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__MachineLearning_1gae14ce8384c149dfccb48079c51464207" kindref="member">after_tree_ip_impl</ref>(RF&amp;<sp/>rf,<sp/>PR<sp/>&amp;<sp/>pr,<sp/><sp/>SM<sp/>&amp;<sp/>sm,<sp/>ST<sp/>&amp;<sp/>st,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">MultiArrayShape&lt;2&gt;::type</ref><sp/>Shp_t;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__FixedSizeInt_1ga92f05c4b6944ec5926841e34f03a9060" kindref="member" tooltip="32-bit signed int">Int32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>column_count<sp/>=<sp/>rf.ext_param_.column_count_;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__FixedSizeInt_1ga92f05c4b6944ec5926841e34f03a9060" kindref="member" tooltip="32-bit signed int">Int32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_count<sp/><sp/>=<sp/>rf.ext_param_.class_count_;<sp/><sp/></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>solution<sp/>saves<sp/>memory<sp/>uptake<sp/>but<sp/>not<sp/>multithreading</highlight></codeline>
<codeline lineno="1318"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>compatible</highlight></codeline>
<codeline lineno="1319"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>the<sp/>const<sp/>cast<sp/>on<sp/>the<sp/>features<sp/>(yep<sp/>,<sp/>I<sp/>know<sp/>what<sp/>I<sp/>am<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>doing<sp/>here.)<sp/>data<sp/>is<sp/>not<sp/>destroyed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//typename<sp/>PR::Feature_t<sp/>&amp;<sp/>features<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>=<sp/>const_cast&lt;typename<sp/>PR::Feature_t<sp/>&amp;&gt;(pr.features());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PR::FeatureWithMemory_t<sp/>FeatureArray;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FeatureArray::value_type<sp/>FeatureValue;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FeatureArray<sp/>features<sp/>=<sp/>pr.features();</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//find<sp/>the<sp/>oob<sp/>indices<sp/>of<sp/>current<sp/>tree.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ArrayVector" kindref="compound">ArrayVector&lt;Int32&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/>oob_indices;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ArrayVector" kindref="compound">ArrayVector&lt;Int32&gt;::iterator</ref></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>rf.ext_param_.row_count_;<sp/>++ii)</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!sm.is_used()[ii])</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oob_indices.push_back(ii);</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//create<sp/>space<sp/>to<sp/>back<sp/>up<sp/>a<sp/>column<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ArrayVector" kindref="compound">ArrayVector&lt;FeatureValue&gt;</ref><sp/><sp/><sp/><sp/><sp/>backup_column;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Random<sp/>foo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CLASSIFIER_TEST</highlight></codeline>
<codeline lineno="1343"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RandomNumberGenerator" kindref="compound">RandomMT19937</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>random(1);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight></codeline>
<codeline lineno="1345"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RandomNumberGenerator" kindref="compound">RandomMT19937</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>random(RandomSeed);</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1347"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1UniformIntRandomFunctor" kindref="compound">UniformIntRandomFunctor&lt;RandomMT19937&gt;</ref><sp/><sp/></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>randint(random);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//make<sp/>some<sp/>space<sp/>for<sp/>the<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray&lt;2, double&gt;</ref></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oob_right(Shp_t(1,<sp/>class_count<sp/>+<sp/>1));<sp/></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray&lt;2, double&gt;</ref></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perm_oob_right<sp/>(Shp_t(1,<sp/>class_count<sp/>+<sp/>1));<sp/></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>oob<sp/>success<sp/>rate<sp/>with<sp/>the<sp/>original<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iter<sp/>=<sp/>oob_indices.<ref refid="classvigra_1_1ArrayVectorView_1aa4b02d4f1a8500fb07a551069060709f" kindref="member">begin</ref>();<sp/></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>oob_indices.<ref refid="classvigra_1_1ArrayVectorView_1a350132543d80a1c1e5be844e6d2878ea" kindref="member">end</ref>();<sp/></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter)</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rf.tree(index)</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.predictLabel(<ref refid="group__LinearAlgebraFunctions_1ga8cc5e13ed0643c0d9b8c9021eaae625d" kindref="member">rowVector</ref>(features,<sp/>*iter))<sp/></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/><sp/>pr.response()(*iter,<sp/>0))</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//per<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++oob_right[pr.response()(*iter,0)];</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//total</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++oob_right[class_count];</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>the<sp/>oob<sp/>rate<sp/>after<sp/>permuting<sp/>the<sp/>ii&apos;th<sp/>dimension.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>column_count;<sp/>++ii)</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perm_oob_right.<ref refid="classvigra_1_1MultiArray_1aa90c22c574eaf8e0bd703912f644081b" kindref="member">init</ref>(0.0);<sp/></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//make<sp/>backup<sp/>of<sp/>original<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backup_column.clear();</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iter<sp/>=<sp/>oob_indices.<ref refid="classvigra_1_1ArrayVectorView_1aa4b02d4f1a8500fb07a551069060709f" kindref="member">begin</ref>();<sp/></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>oob_indices.<ref refid="classvigra_1_1ArrayVectorView_1a350132543d80a1c1e5be844e6d2878ea" kindref="member">end</ref>();<sp/></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter)</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backup_column.push_back(features(*iter,ii));</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>the<sp/>oob<sp/>rate<sp/>after<sp/>permuting<sp/>the<sp/>ii&apos;th<sp/>dimension.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rr<sp/>=<sp/>0;<sp/>rr<sp/>&lt;<sp/>repetition_count_;<sp/>++rr)</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//permute<sp/>dimension.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>oob_indices.<ref refid="classvigra_1_1ArrayVectorView_1a503ab01f6c0142145d3434f6924714e7" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>1;<sp/>jj<sp/>&lt;<sp/>n;<sp/>++jj)</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(features(oob_indices[jj],<sp/>ii),<sp/></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>features(oob_indices[randint(jj+1)],<sp/>ii));</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>the<sp/>oob<sp/>success<sp/>rate<sp/>after<sp/>permuting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iter<sp/>=<sp/>oob_indices.<ref refid="classvigra_1_1ArrayVectorView_1aa4b02d4f1a8500fb07a551069060709f" kindref="member">begin</ref>();<sp/></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>!=<sp/>oob_indices.<ref refid="classvigra_1_1ArrayVectorView_1a350132543d80a1c1e5be844e6d2878ea" kindref="member">end</ref>();<sp/></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter)</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rf.tree(index)</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.predictLabel(<ref refid="group__LinearAlgebraFunctions_1ga8cc5e13ed0643c0d9b8c9021eaae625d" kindref="member">rowVector</ref>(features,<sp/>*iter))<sp/></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/><sp/>pr.response()(*iter,<sp/>0))</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//per<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++perm_oob_right[pr.response()(*iter,<sp/>0)];</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//total</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++perm_oob_right[class_count];</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//normalise<sp/>and<sp/>add<sp/>to<sp/>the<sp/>variable_importance<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perm_oob_right<sp/><sp/>/=<sp/><sp/>repetition_count_;</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perm_oob_right<sp/>-=oob_right;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perm_oob_right<sp/>*=<sp/>-1;</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perm_oob_right<sp/><sp/><sp/><sp/><sp/><sp/>/=<sp/><sp/>oob_indices.<ref refid="classvigra_1_1ArrayVectorView_1a503ab01f6c0142145d3434f6924714e7" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1gac4b8c6cd30f9b3de278e373528e092aa" kindref="member">variable_importance_</ref></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="classvigra_1_1MultiArrayView_1a2271545a765e00427cb6c59f6c4d78e0" kindref="member">subarray</ref>(Shp_t(ii,0),<sp/></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Shp_t(ii+1,class_count+1))<sp/>+=<sp/>perm_oob_right;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//copy<sp/>back<sp/>permuted<sp/>dimension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>0;<sp/>jj<sp/>&lt;<sp/>int(oob_indices.<ref refid="classvigra_1_1ArrayVectorView_1a503ab01f6c0142145d3434f6924714e7" kindref="member">size</ref>());<sp/>++jj)</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>features(oob_indices[jj],<sp/>ii)<sp/>=<sp/>backup_column[jj];</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1427"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>calculate<sp/>permutation<sp/>based<sp/>impurity<sp/>after<sp/>every<sp/>tree<sp/>has<sp/>been<sp/></highlight></codeline>
<codeline lineno="1428"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>learned<sp/><sp/>default<sp/>behaviour<sp/>is<sp/>that<sp/>this<sp/>happens<sp/>out<sp/>of<sp/>place.</highlight></codeline>
<codeline lineno="1429"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>you<sp/>have<sp/>very<sp/>big<sp/>data<sp/>sets<sp/>and<sp/>want<sp/>to<sp/>avoid<sp/>copying<sp/>of<sp/>data<sp/></highlight></codeline>
<codeline lineno="1430"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>set<sp/>the<sp/>in_place_<sp/>flag<sp/>to<sp/>true.<sp/></highlight></codeline>
<codeline lineno="1431"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RF,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SM,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ST&gt;</highlight></codeline>
<codeline lineno="1433" refid="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76" kindref="member">visit_after_tree</ref>(RF&amp;<sp/>rf,<sp/>PR<sp/>&amp;<sp/>pr,<sp/><sp/>SM<sp/>&amp;<sp/>sm,<sp/>ST<sp/>&amp;<sp/>st,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1gae14ce8384c149dfccb48079c51464207" kindref="member">after_tree_ip_impl</ref>(rf,<sp/>pr,<sp/>sm,<sp/>st,<sp/>index);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1438"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>Normalise<sp/>variable<sp/>importance<sp/>after<sp/>the<sp/>number<sp/>of<sp/>trees<sp/>is<sp/>known.</highlight></codeline>
<codeline lineno="1439"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RF,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PR&gt;</highlight></codeline>
<codeline lineno="1441" refid="group__MachineLearning_1ga8680ab265a8c9c57f39c75bd51a186e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__MachineLearning_1ga8680ab265a8c9c57f39c75bd51a186e7" kindref="member">visit_at_end</ref>(RF<sp/>&amp;<sp/>rf,<sp/>PR<sp/>&amp;<sp/>pr)</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1gac4b8c6cd30f9b3de278e373528e092aa" kindref="member">variable_importance_</ref><sp/>/=<sp/>rf.trees_.<ref refid="classvigra_1_1MultiArrayView_1a14c1df938ca1578ffc71bc9728b4e401" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1445"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1447"><highlight class="comment">/**<sp/>Verbose<sp/>output</highlight></codeline>
<codeline lineno="1448"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1449" refid="classvigra_1_1rf_1_1visitors_1_1RandomForestProgressVisitor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1rf_1_1visitors_1_1RandomForestProgressVisitor" kindref="compound">RandomForestProgressVisitor</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1VisitorBase" kindref="compound">VisitorBase</ref><sp/>{</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1RandomForestProgressVisitor" kindref="compound">RandomForestProgressVisitor</ref>()<sp/>:<sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1VisitorBase" kindref="compound">VisitorBase</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RF,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SM,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ST&gt;</highlight></codeline>
<codeline lineno="1454" refid="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76" kindref="member">visit_after_tree</ref>(RF&amp;<sp/>rf,<sp/>PR<sp/>&amp;<sp/>pr,<sp/><sp/>SM<sp/>&amp;<sp/>sm,<sp/>ST<sp/>&amp;<sp/>st,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index){</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index<sp/>!=<sp/>rf.options().tree_count_-1)<sp/>{</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\r[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setw(10)<sp/>&lt;&lt;<sp/>(index+1)/static_cast&lt;double&gt;(rf.options().tree_count_)*100<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%]&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>index+1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>of<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rf.options().tree_count_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>done&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::flush;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\r[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setw(10)<sp/>&lt;&lt;<sp/>100.0<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%]&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RF,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PR&gt;</highlight></codeline>
<codeline lineno="1465" refid="group__MachineLearning_1gab8c2515ae9343881cc5999fc61821fdc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__MachineLearning_1gab8c2515ae9343881cc5999fc61821fdc" kindref="member">visit_at_end</ref>(RF<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rf,<sp/>PR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>pr)<sp/>{</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>a<sp/>=<sp/><ref refid="timing_8hxx_1a4607845e422b882e8ae89b6b2a48e021" kindref="member">TOCS</ref>;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;all<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rf.options().tree_count_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>trees<sp/>have<sp/>been<sp/>learned<sp/>in<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>a<sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RF,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PR&gt;</highlight></codeline>
<codeline lineno="1471" refid="group__MachineLearning_1ga0bb047133b5a592d0ade412044bd1495" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__MachineLearning_1ga0bb047133b5a592d0ade412044bd1495" kindref="member">visit_at_beginning</ref>(RF<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rf,<sp/>PR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>pr)<sp/>{</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timing_8hxx_1a043fba147e9f9707cc6f201bedc9012b" kindref="member">TIC</ref>;</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;growing<sp/>random<sp/>forest,<sp/>which<sp/>will<sp/>have<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rf.options().tree_count_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>trees&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/>USETICTOC;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1481"><highlight class="comment">/**<sp/>Computes<sp/>Correlation/Similarity<sp/>Matrix<sp/>of<sp/>features<sp/>while<sp/>learning</highlight></codeline>
<codeline lineno="1482"><highlight class="comment"><sp/>*<sp/>random<sp/>forest.</highlight></codeline>
<codeline lineno="1483"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484" refid="classvigra_1_1rf_1_1visitors_1_1CorrelationVisitor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1rf_1_1visitors_1_1CorrelationVisitor" kindref="compound">CorrelationVisitor</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1rf_1_1visitors_1_1VisitorBase" kindref="compound">VisitorBase</ref></highlight></codeline>
<codeline lineno="1485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1487"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>gini_missc(ii,<sp/>jj)<sp/>describes<sp/>how<sp/>well<sp/>variable<sp/>jj<sp/>can<sp/>describe<sp/>a<sp/>partition</highlight></codeline>
<codeline lineno="1488"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>created<sp/>on<sp/>variable<sp/>ii(when<sp/>variable<sp/>ii<sp/>was<sp/>chosen)</highlight></codeline>
<codeline lineno="1489"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1490" refid="group__MachineLearning_1ga5a9c356faf57cd8426e919c4cccc01a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray&lt;2, double&gt;</ref><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga5a9c356faf57cd8426e919c4cccc01a0" kindref="member">gini_missc</ref>;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray&lt;2, int&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/>tmp_labels;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1492"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>additional<sp/>noise<sp/>features.<sp/></highlight></codeline>
<codeline lineno="1493"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1494" refid="group__MachineLearning_1gae7ce9f0ea37f373c59af9bf925e2f706" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray&lt;2, double&gt;</ref><sp/><sp/><sp/><ref refid="group__MachineLearning_1gae7ce9f0ea37f373c59af9bf925e2f706" kindref="member">noise</ref>;</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray&lt;2, double&gt;</ref><sp/><sp/><sp/>noise_l;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1496"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>how<sp/>well<sp/>can<sp/>a<sp/>noise<sp/>column<sp/>describe<sp/>a<sp/>partition<sp/>created<sp/>on<sp/>variable<sp/>ii.</highlight></codeline>
<codeline lineno="1497"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1498" refid="group__MachineLearning_1ga55034538c707f3d5068526077072817d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray&lt;2, double&gt;</ref><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga55034538c707f3d5068526077072817d" kindref="member">corr_noise</ref>;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray&lt;2, double&gt;</ref><sp/><sp/><sp/>corr_l;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1501"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>Similarity<sp/>Matrix</highlight></codeline>
<codeline lineno="1502"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/></highlight></codeline>
<codeline lineno="1503"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>(numberOfFeatures<sp/>+<sp/>1)<sp/>by<sp/>(number<sp/>Of<sp/>Features<sp/>+<sp/>1)<sp/>Matrix</highlight></codeline>
<codeline lineno="1504"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>gini_missc<sp/></highlight></codeline>
<codeline lineno="1505"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>-<sp/>row<sp/>normalized<sp/>by<sp/>the<sp/>number<sp/>of<sp/>times<sp/>the<sp/>column<sp/>was<sp/>chosen</highlight></codeline>
<codeline lineno="1506"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>-<sp/>mean<sp/>of<sp/>corr_noise<sp/>subtracted</highlight></codeline>
<codeline lineno="1507"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>-<sp/>and<sp/>symmetrised.<sp/></highlight></codeline>
<codeline lineno="1508"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1509"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1510" refid="group__MachineLearning_1ga60981e3077e2a643025056f5c10abc63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray&lt;2, double&gt;</ref><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga60981e3077e2a643025056f5c10abc63" kindref="member">similarity</ref>;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1511"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>Distance<sp/>Matrix<sp/>1-similarity</highlight></codeline>
<codeline lineno="1512"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1513" refid="group__MachineLearning_1ga4a4f8fe9c52db2d3efdad7dfa1e1f4d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray&lt;2, double&gt;</ref><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga4a4f8fe9c52db2d3efdad7dfa1e1f4d3" kindref="member">distance</ref>;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ArrayVector" kindref="compound">ArrayVector&lt;int&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_cc;</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1516"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>How<sp/>often<sp/>was<sp/>variable<sp/>ii<sp/>chosen</highlight></codeline>
<codeline lineno="1517"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1518" refid="group__MachineLearning_1ga715510c20adb132029520a8f37295712" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ArrayVector" kindref="compound">ArrayVector&lt;int&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga715510c20adb132029520a8f37295712" kindref="member">numChoices</ref>;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1BestGiniOfColumn" kindref="compound">BestGiniOfColumn&lt;GiniCriterion&gt;</ref><sp/><ref refid="classvigra_1_1BestGiniOfColumn" kindref="compound">ColumnDecisionFunctor</ref>;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1BestGiniOfColumn" kindref="compound">BestGiniOfColumn&lt;GiniCriterion&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bgfunc;</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>save(std::string<sp/>file,<sp/>std::string<sp/>prefix)</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1524"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tmp;</highlight></codeline>
<codeline lineno="1525"><highlight class="comment">#define<sp/>VAR_WRITE(NAME)<sp/>\</highlight></codeline>
<codeline lineno="1526"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>#NAME;\</highlight></codeline>
<codeline lineno="1527"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>+=<sp/>&quot;_&quot;;\</highlight></codeline>
<codeline lineno="1528"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>+=<sp/>prefix;\</highlight></codeline>
<codeline lineno="1529"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra::writeToHDF5File(file.c_str(),<sp/>tmp.c_str(),<sp/>NAME);</highlight></codeline>
<codeline lineno="1530"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VAR_WRITE(gini_missc);</highlight></codeline>
<codeline lineno="1531"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VAR_WRITE(corr_noise);</highlight></codeline>
<codeline lineno="1532"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VAR_WRITE(distance);</highlight></codeline>
<codeline lineno="1533"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VAR_WRITE(similarity);</highlight></codeline>
<codeline lineno="1534"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra::writeToHDF5File(file.c_str(),<sp/>&quot;nChoices&quot;,<sp/>MultiArrayView&lt;2,<sp/>int&gt;(MultiArrayShape&lt;2&gt;::type(numChoices.size(),1),<sp/>numChoices.data()));</highlight></codeline>
<codeline lineno="1535"><highlight class="comment">#undef<sp/>VAR_WRITE</highlight></codeline>
<codeline lineno="1536"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RF,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PR&gt;</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>visit_at_beginning(RF<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rf,<sp/>PR<sp/><sp/>&amp;<sp/>pr)</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">MultiArrayShape&lt;2&gt;::type</ref><sp/>Shp;</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>rf.ext_param_.column_count_;</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga5a9c356faf57cd8426e919c4cccc01a0" kindref="member">gini_missc</ref>.<ref refid="classvigra_1_1MultiArray_1a4ba159bdb66dec55214cdcab25320c1d" kindref="member">reshape</ref>(Shp(n<sp/>+1,n+<sp/>1));</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga55034538c707f3d5068526077072817d" kindref="member">corr_noise</ref>.<ref refid="classvigra_1_1MultiArray_1a4ba159bdb66dec55214cdcab25320c1d" kindref="member">reshape</ref>(Shp(n<sp/>+<sp/>1,<sp/>10));</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>corr_l.<ref refid="classvigra_1_1MultiArray_1a4ba159bdb66dec55214cdcab25320c1d" kindref="member">reshape</ref>(Shp(n<sp/>+1,<sp/>10));</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1gae7ce9f0ea37f373c59af9bf925e2f706" kindref="member">noise</ref>.<ref refid="classvigra_1_1MultiArray_1a4ba159bdb66dec55214cdcab25320c1d" kindref="member">reshape</ref>(Shp(pr.features().shape(0),<sp/>10));</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_l.<ref refid="classvigra_1_1MultiArray_1a4ba159bdb66dec55214cdcab25320c1d" kindref="member">reshape</ref>(Shp(pr.features().shape(0),<sp/>10));</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RandomNumberGenerator" kindref="compound">RandomMT19937</ref><sp/>random(RandomSeed);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/><ref refid="group__MachineLearning_1gae7ce9f0ea37f373c59af9bf925e2f706" kindref="member">noise</ref>.<ref refid="classvigra_1_1MultiArrayView_1a14c1df938ca1578ffc71bc9728b4e401" kindref="member">size</ref>();<sp/>++ii)</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1gae7ce9f0ea37f373c59af9bf925e2f706" kindref="member">noise</ref>[ii]<sp/><sp/><sp/>=<sp/>random.uniform53();</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noise_l[ii]<sp/>=<sp/>random.uniform53()<sp/><sp/>&gt;<sp/>0.5;</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bgfunc<sp/>=<sp/>ColumnDecisionFunctor(<sp/>rf.ext_param_);</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_labels.<ref refid="classvigra_1_1MultiArray_1a4ba159bdb66dec55214cdcab25320c1d" kindref="member">reshape</ref>(pr.response().shape());<sp/></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_cc.resize(2);</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga715510c20adb132029520a8f37295712" kindref="member">numChoices</ref>.resize(n+1);</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>look<sp/>at<sp/>all<sp/>axes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RF,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PR&gt;</highlight></codeline>
<codeline lineno="1562" refid="group__MachineLearning_1gab8c2515ae9343881cc5999fc61821fdc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__MachineLearning_1gab8c2515ae9343881cc5999fc61821fdc" kindref="member">visit_at_end</ref>(RF<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rf,<sp/>PR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>pr)</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">MultiArrayShape&lt;2&gt;::type</ref><sp/>Shp;</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga60981e3077e2a643025056f5c10abc63" kindref="member">similarity</ref>.<ref refid="classvigra_1_1MultiArray_1a4ba159bdb66dec55214cdcab25320c1d" kindref="member">reshape</ref>(<ref refid="group__MachineLearning_1ga5a9c356faf57cd8426e919c4cccc01a0" kindref="member">gini_missc</ref>.<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>());</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga60981e3077e2a643025056f5c10abc63" kindref="member">similarity</ref><sp/>=<sp/><ref refid="group__MachineLearning_1ga5a9c356faf57cd8426e919c4cccc01a0" kindref="member">gini_missc</ref>;;</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray&lt;2, double&gt;</ref><sp/>mean_noise(Shp(<ref refid="group__MachineLearning_1ga55034538c707f3d5068526077072817d" kindref="member">corr_noise</ref>.<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(0),<sp/>1));</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__LinearAlgebraFunctions_1ga2ec3530fa54858e6e27ac98d27a9be00" kindref="member">rowStatistics</ref>(<ref refid="group__MachineLearning_1ga55034538c707f3d5068526077072817d" kindref="member">corr_noise</ref>,<sp/>mean_noise);</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mean_noise/=<sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView&lt;2, int&gt;</ref>(mean_noise.<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(),<sp/><ref refid="group__MachineLearning_1ga715510c20adb132029520a8f37295712" kindref="member">numChoices</ref>.<ref refid="classvigra_1_1ArrayVectorView_1a794bbc6c3888bcfe88fb961f527c3563" kindref="member">data</ref>());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rC<sp/>=<sp/><ref refid="group__MachineLearning_1ga60981e3077e2a643025056f5c10abc63" kindref="member">similarity</ref>.<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(0);</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>0;<sp/>jj<sp/>&lt;<sp/>rC-1;<sp/>++jj)</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__LinearAlgebraFunctions_1ga8cc5e13ed0643c0d9b8c9021eaae625d" kindref="member">rowVector</ref>(<ref refid="group__MachineLearning_1ga60981e3077e2a643025056f5c10abc63" kindref="member">similarity</ref>,<sp/>jj)<sp/>/=<sp/><ref refid="group__MachineLearning_1ga715510c20adb132029520a8f37295712" kindref="member">numChoices</ref>[jj];</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__LinearAlgebraFunctions_1ga8cc5e13ed0643c0d9b8c9021eaae625d" kindref="member">rowVector</ref>(<ref refid="group__MachineLearning_1ga60981e3077e2a643025056f5c10abc63" kindref="member">similarity</ref>,<sp/>jj)<sp/>-=<sp/>mean_noise(jj,<sp/>0);</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>0;<sp/>jj<sp/>&lt;<sp/>rC;<sp/>++jj)</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga60981e3077e2a643025056f5c10abc63" kindref="member">similarity</ref>(rC<sp/>-1,<sp/>jj)<sp/>/=<sp/><ref refid="group__MachineLearning_1ga715510c20adb132029520a8f37295712" kindref="member">numChoices</ref>[jj];</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__LinearAlgebraFunctions_1ga8cc5e13ed0643c0d9b8c9021eaae625d" kindref="member">rowVector</ref>(<ref refid="group__MachineLearning_1ga60981e3077e2a643025056f5c10abc63" kindref="member">similarity</ref>,<sp/>rC<sp/>-<sp/><sp/>1)<sp/>-=<sp/>mean_noise(rC-1,<sp/>0);</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga60981e3077e2a643025056f5c10abc63" kindref="member">similarity</ref><sp/>=<sp/><ref refid="group__FFTWComplexOperators_1ga6f4ef274842b6153923f02a6cd264576" kindref="member" tooltip="absolute value (= magnitude)">abs</ref>(<ref refid="group__MachineLearning_1ga60981e3077e2a643025056f5c10abc63" kindref="member">similarity</ref>);</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindMinMax" kindref="compound" tooltip="Find the minimum and maximum pixel value in an image or ROI.">FindMinMax&lt;double&gt;</ref><sp/>minmax;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MultiPointoperators_1ga40ad7d2006bb841fd422b2f3a28447c6" kindref="member" tooltip="Call an analyzing functor at every element of a multi-dimensional array.">inspectMultiArray</ref>(srcMultiArrayRange(<ref refid="group__MachineLearning_1ga60981e3077e2a643025056f5c10abc63" kindref="member">similarity</ref>),<sp/>minmax);</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>0;<sp/>jj<sp/>&lt;<sp/>rC;<sp/>++jj)</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga60981e3077e2a643025056f5c10abc63" kindref="member">similarity</ref>(jj,<sp/>jj)<sp/>=<sp/>minmax.<ref refid="classvigra_1_1FindMinMax_1a7a6d5ee26475974260562366c1a71b01" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga60981e3077e2a643025056f5c10abc63" kindref="member">similarity</ref>.<ref refid="classvigra_1_1MultiArrayView_1a2271545a765e00427cb6c59f6c4d78e0" kindref="member">subarray</ref>(Shp(0,0),<sp/>Shp(rC-1,<sp/>rC-1))<sp/></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+=<sp/><ref refid="group__MachineLearning_1ga60981e3077e2a643025056f5c10abc63" kindref="member">similarity</ref>.<ref refid="classvigra_1_1MultiArrayView_1a2271545a765e00427cb6c59f6c4d78e0" kindref="member">subarray</ref>(Shp(0,0),<sp/>Shp(rC-1,<sp/>rC-1)).<ref refid="classvigra_1_1MultiArrayView_1af54479ad2ee57be8181f50013864cc33" kindref="member">transpose</ref>();</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga60981e3077e2a643025056f5c10abc63" kindref="member">similarity</ref>.<ref refid="classvigra_1_1MultiArrayView_1a2271545a765e00427cb6c59f6c4d78e0" kindref="member">subarray</ref>(Shp(0,0),<sp/>Shp(rC-1,<sp/>rC-1))/=<sp/>2;<sp/><sp/></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__LinearAlgebraFunctions_1gab8ee32ac1c1c77108435f22be5cb08a0" kindref="member">columnVector</ref>(<ref refid="group__MachineLearning_1ga60981e3077e2a643025056f5c10abc63" kindref="member">similarity</ref>,<sp/>rC-1)<sp/>=<sp/><ref refid="group__LinearAlgebraFunctions_1ga8cc5e13ed0643c0d9b8c9021eaae625d" kindref="member">rowVector</ref>(<ref refid="group__MachineLearning_1ga60981e3077e2a643025056f5c10abc63" kindref="member">similarity</ref>,<sp/>rC-1).transpose();</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>0;<sp/>jj<sp/>&lt;<sp/>rC;<sp/>++jj)</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga60981e3077e2a643025056f5c10abc63" kindref="member">similarity</ref>(jj,<sp/>jj)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindMinMax" kindref="compound" tooltip="Find the minimum and maximum pixel value in an image or ROI.">FindMinMax&lt;double&gt;</ref><sp/>minmax2;</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MultiPointoperators_1ga40ad7d2006bb841fd422b2f3a28447c6" kindref="member" tooltip="Call an analyzing functor at every element of a multi-dimensional array.">inspectMultiArray</ref>(srcMultiArrayRange(<ref refid="group__MachineLearning_1ga60981e3077e2a643025056f5c10abc63" kindref="member">similarity</ref>),<sp/>minmax2);</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>0;<sp/>jj<sp/>&lt;<sp/>rC;<sp/>++jj)</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga60981e3077e2a643025056f5c10abc63" kindref="member">similarity</ref>(jj,<sp/>jj)<sp/>=<sp/>minmax2.<ref refid="classvigra_1_1FindMinMax_1a7a6d5ee26475974260562366c1a71b01" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga4a4f8fe9c52db2d3efdad7dfa1e1f4d3" kindref="member">distance</ref>.<ref refid="classvigra_1_1MultiArray_1a4ba159bdb66dec55214cdcab25320c1d" kindref="member">reshape</ref>(<ref refid="group__MachineLearning_1ga5a9c356faf57cd8426e919c4cccc01a0" kindref="member">gini_missc</ref>.<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(),<sp/>minmax2.<ref refid="classvigra_1_1FindMinMax_1a7a6d5ee26475974260562366c1a71b01" kindref="member">max</ref>);</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga4a4f8fe9c52db2d3efdad7dfa1e1f4d3" kindref="member">distance</ref><sp/>-=<sp/><ref refid="group__MachineLearning_1ga60981e3077e2a643025056f5c10abc63" kindref="member">similarity</ref>;<sp/></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Tree,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Split,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Region,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Feature_t,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Label_t&gt;</highlight></codeline>
<codeline lineno="1604" refid="group__MachineLearning_1ga32301fb47981050340e6a927d78a2a77" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__MachineLearning_1ga32301fb47981050340e6a927d78a2a77" kindref="member">visit_after_split</ref>(<sp/>Tree<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>tree,<sp/></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Split<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>split,</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Region<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>parent,</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Region<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>leftChild,</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Region<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>rightChild,</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Feature_t<sp/><sp/><sp/><sp/><sp/>&amp;<sp/>features,</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Label_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>labels)</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(split.createNode().typeID()<sp/>==<sp/>i_ThresholdNode)</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wgini;</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_cc.<ref refid="classvigra_1_1ArrayVectorView_1a7c4d444ab995dc9aebc150246770bbf5" kindref="member">init</ref>(0);<sp/></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>parent.size();<sp/>++ii)</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_labels[parent[ii]]<sp/></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(features(parent[ii],<sp/>split.bestSplitColumn())<sp/>&lt;<sp/>split.bestSplitThreshold());</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tmp_cc[tmp_labels[parent[ii]]];</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>region_gini<sp/>=<sp/>bgfunc.loss_of_region(tmp_labels,<sp/></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent.<ref refid="classvigra_1_1MultiArray_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>(),</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent.end(),</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_cc);</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>split.bestSplitColumn();<sp/></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="group__MachineLearning_1ga715510c20adb132029520a8f37295712" kindref="member">numChoices</ref>[n];</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++(*(<ref refid="group__MachineLearning_1ga715510c20adb132029520a8f37295712" kindref="member">numChoices</ref>.<ref refid="classvigra_1_1ArrayVectorView_1a350132543d80a1c1e5be844e6d2878ea" kindref="member">end</ref>()-1));</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>functor<sp/>does<sp/>all<sp/>the<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>features.shape(1);<sp/>++k)</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bgfunc(<ref refid="group__LinearAlgebraFunctions_1gab8ee32ac1c1c77108435f22be5cb08a0" kindref="member">columnVector</ref>(features,<sp/>k),</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_labels,<sp/></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent.<ref refid="classvigra_1_1MultiArray_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>(),<sp/>parent.end(),<sp/></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_cc);</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wgini<sp/>=<sp/>(region_gini<sp/>-<sp/>bgfunc.min_gini_);</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga5a9c356faf57cd8426e919c4cccc01a0" kindref="member">gini_missc</ref>(n,<sp/>k)<sp/></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+=<sp/>wgini;</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>10;<sp/>++k)</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bgfunc(<ref refid="group__LinearAlgebraFunctions_1gab8ee32ac1c1c77108435f22be5cb08a0" kindref="member">columnVector</ref>(<ref refid="group__MachineLearning_1gae7ce9f0ea37f373c59af9bf925e2f706" kindref="member">noise</ref>,<sp/>k),</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_labels,<sp/></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent.<ref refid="classvigra_1_1MultiArray_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>(),<sp/>parent.end(),<sp/></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_cc);</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wgini<sp/>=<sp/>(region_gini<sp/>-<sp/>bgfunc.min_gini_);</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga55034538c707f3d5068526077072817d" kindref="member">corr_noise</ref>(n,<sp/>k)<sp/></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+=<sp/>wgini;</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>10;<sp/>++k)</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bgfunc(<ref refid="group__LinearAlgebraFunctions_1gab8ee32ac1c1c77108435f22be5cb08a0" kindref="member">columnVector</ref>(noise_l,<sp/>k),</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_labels,<sp/></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent.<ref refid="classvigra_1_1MultiArray_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>(),<sp/>parent.end(),<sp/></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_cc);</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wgini<sp/>=<sp/>(region_gini<sp/>-<sp/>bgfunc.min_gini_);</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>corr_l(n,<sp/>k)<sp/></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+=<sp/>wgini;</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bgfunc(labels,<sp/>tmp_labels,<sp/>parent.<ref refid="classvigra_1_1MultiArray_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>(),<sp/>parent.end(),tmp_cc);</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wgini<sp/>=<sp/>(region_gini<sp/>-<sp/>bgfunc.min_gini_);</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga5a9c356faf57cd8426e919c4cccc01a0" kindref="member">gini_missc</ref>(n,<sp/><ref refid="group__LinearAlgebraFunctions_1ga40eab6d0fc1e179c173a3b90c9d991be" kindref="member">columnCount</ref>(<ref refid="group__MachineLearning_1ga5a9c356faf57cd8426e919c4cccc01a0" kindref="member">gini_missc</ref>)-1)<sp/></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+=<sp/>wgini;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>region_gini<sp/>=<sp/>split.region_gini_;</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>1<sp/></highlight></codeline>
<codeline lineno="1669"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Node&lt;i_ThresholdNode&gt;<sp/>node(split.createNode());</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga5a9c356faf57cd8426e919c4cccc01a0" kindref="member">gini_missc</ref>(<ref refid="group__LinearAlgebraFunctions_1gaa88b5c1277c72b4d4e2b70c278efbffe" kindref="member">rowCount</ref>(<ref refid="group__MachineLearning_1ga5a9c356faf57cd8426e919c4cccc01a0" kindref="member">gini_missc</ref>)-1,<sp/></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.column())<sp/></highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+=split.region_gini_<sp/>-<sp/>split.minGini();</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1674"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>10;<sp/>++k)</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>split.bgfunc(<ref refid="group__LinearAlgebraFunctions_1gab8ee32ac1c1c77108435f22be5cb08a0" kindref="member">columnVector</ref>(<ref refid="group__MachineLearning_1gae7ce9f0ea37f373c59af9bf925e2f706" kindref="member">noise</ref>,<sp/>k),</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels,<sp/></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent.begin(),<sp/>parent.end(),<sp/></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent.classCounts());</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga55034538c707f3d5068526077072817d" kindref="member">corr_noise</ref>(<ref refid="group__LinearAlgebraFunctions_1gaa88b5c1277c72b4d4e2b70c278efbffe" kindref="member">rowCount</ref>(<ref refid="group__MachineLearning_1ga5a9c356faf57cd8426e919c4cccc01a0" kindref="member">gini_missc</ref>)-1,<sp/></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k)<sp/></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+=<sp/>wgini;</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="1685"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>tree.ext_param_.actual_mtry_;<sp/>++k)</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wgini<sp/>=<sp/>region_gini<sp/>-<sp/>split.min_gini_[k];</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga5a9c356faf57cd8426e919c4cccc01a0" kindref="member">gini_missc</ref>(<ref refid="group__LinearAlgebraFunctions_1gaa88b5c1277c72b4d4e2b70c278efbffe" kindref="member">rowCount</ref>(<ref refid="group__MachineLearning_1ga5a9c356faf57cd8426e919c4cccc01a0" kindref="member">gini_missc</ref>)-1,<sp/></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>split.splitColumns[k])<sp/></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+=<sp/>wgini;</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=tree.ext_param_.actual_mtry_;<sp/>k&lt;features.shape(1);<sp/>++k)</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>split.bgfunc(<ref refid="group__LinearAlgebraFunctions_1gab8ee32ac1c1c77108435f22be5cb08a0" kindref="member">columnVector</ref>(features,<sp/>split.splitColumns[k]),</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>labels,<sp/></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent.begin(),<sp/>parent.end(),<sp/></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent.classCounts());</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wgini<sp/>=<sp/>region_gini<sp/>-<sp/>split.bgfunc.min_gini_;</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga5a9c356faf57cd8426e919c4cccc01a0" kindref="member">gini_missc</ref>(<ref refid="group__LinearAlgebraFunctions_1gaa88b5c1277c72b4d4e2b70c278efbffe" kindref="member">rowCount</ref>(<ref refid="group__MachineLearning_1ga5a9c356faf57cd8426e919c4cccc01a0" kindref="member">gini_missc</ref>)-1,<sp/></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>split.splitColumns[k])<sp/>+=<sp/>wgini;</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1705"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remember<sp/>to<sp/>partition<sp/>the<sp/>data<sp/>according<sp/>to<sp/>the<sp/>best.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MachineLearning_1ga5a9c356faf57cd8426e919c4cccc01a0" kindref="member">gini_missc</ref>(<ref refid="group__LinearAlgebraFunctions_1gaa88b5c1277c72b4d4e2b70c278efbffe" kindref="member">rowCount</ref>(<ref refid="group__MachineLearning_1ga5a9c356faf57cd8426e919c4cccc01a0" kindref="member">gini_missc</ref>)-1,<sp/></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__LinearAlgebraFunctions_1ga40eab6d0fc1e179c173a3b90c9d991be" kindref="member">columnCount</ref>(<ref refid="group__MachineLearning_1ga5a9c356faf57cd8426e919c4cccc01a0" kindref="member">gini_missc</ref>)-1)<sp/></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+=<sp/>region_gini;</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1SortSamplesByDimensions" kindref="compound">SortSamplesByDimensions&lt;Feature_t&gt;</ref><sp/></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sorter(features,<sp/>split.bestSplitColumn(),<sp/>split.bestSplitThreshold());</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::partition(parent.begin(),<sp/>parent.end(),<sp/>sorter);</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1714"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"></highlight></codeline>
<codeline lineno="1717"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>visitors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>rf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>vigra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1721"><highlight class="comment">//@}</highlight></codeline>
<codeline lineno="1722"><highlight class="comment"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>RF_VISITORS_HXX</highlight></codeline>
    </programlisting>
    <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx"/>
  </compounddef>
</doxygen>
