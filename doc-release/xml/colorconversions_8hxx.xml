<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="colorconversions_8hxx" kind="file">
    <compoundname>colorconversions.hxx</compoundname>
    <includes local="no">cmath</includes>
    <includes local="no">string</includes>
    <includes refid="mathutil_8hxx" local="yes">mathutil.hxx</includes>
    <includes refid="rgbvalue_8hxx" local="yes">rgbvalue.hxx</includes>
    <includes refid="functortraits_8hxx" local="yes">functortraits.hxx</includes>
    <incdepgraph>
      <node id="1095">
        <label>functional</label>
      </node>
      <node id="1088">
        <label>limits</label>
      </node>
      <node id="1085">
        <label>sized_int.hxx</label>
        <link refid="sized__int_8hxx_source"/>
        <childnode refid="1086" relation="include">
        </childnode>
        <childnode refid="1088" relation="include">
        </childnode>
      </node>
      <node id="1096">
        <label>iterator</label>
      </node>
      <node id="1094">
        <label>inspector_passes.hxx</label>
        <link refid="inspector__passes_8hxx_source"/>
        <childnode refid="1086" relation="include">
        </childnode>
      </node>
      <node id="1092">
        <label>promote_traits.hxx</label>
        <link refid="promote__traits_8hxx_source"/>
      </node>
      <node id="1093">
        <label>algorithm.hxx</label>
        <link refid="algorithm_8hxx_source"/>
        <childnode refid="1085" relation="include">
        </childnode>
        <childnode refid="1090" relation="include">
        </childnode>
        <childnode refid="1094" relation="include">
        </childnode>
        <childnode refid="1089" relation="include">
        </childnode>
        <childnode refid="1095" relation="include">
        </childnode>
        <childnode refid="1096" relation="include">
        </childnode>
      </node>
      <node id="1073">
        <label>cmath</label>
      </node>
      <node id="1080">
        <label>stdexcept</label>
      </node>
      <node id="1108">
        <label>functortraits.hxx</label>
        <link refid="functortraits_8hxx_source"/>
        <childnode refid="1095" relation="include">
        </childnode>
        <childnode refid="1086" relation="include">
        </childnode>
      </node>
      <node id="1103">
        <label>iteratortags.hxx</label>
        <link refid="iteratortags_8hxx_source"/>
        <childnode refid="1096" relation="include">
        </childnode>
      </node>
      <node id="1074">
        <label>string</label>
      </node>
      <node id="1104">
        <label>iteratortraits.hxx</label>
        <link refid="iteratortraits_8hxx_source"/>
        <childnode refid="1098" relation="include">
        </childnode>
        <childnode refid="1105" relation="include">
        </childnode>
      </node>
      <node id="1091">
        <label>cfloat</label>
      </node>
      <node id="1079">
        <label>vigra/configVersion.hxx</label>
        <link refid="configVersion_8hxx_source"/>
      </node>
      <node id="1083">
        <label>tuple.hxx</label>
        <link refid="tuple_8hxx_source"/>
        <childnode refid="1084" relation="include">
        </childnode>
      </node>
      <node id="1099">
        <label>tinyvector.hxx</label>
        <link refid="tinyvector_8hxx_source"/>
        <childnode refid="1073" relation="include">
        </childnode>
        <childnode refid="1076" relation="include">
        </childnode>
        <childnode refid="1100" relation="include">
        </childnode>
        <childnode refid="1089" relation="include">
        </childnode>
        <childnode refid="1078" relation="include">
        </childnode>
        <childnode refid="1081" relation="include">
        </childnode>
        <childnode refid="1086" relation="include">
        </childnode>
        <childnode refid="1090" relation="include">
        </childnode>
        <childnode refid="1101" relation="include">
        </childnode>
        <childnode refid="1075" relation="include">
        </childnode>
        <childnode refid="1102" relation="include">
        </childnode>
      </node>
      <node id="1075">
        <label>mathutil.hxx</label>
        <link refid="mathutil_8hxx_source"/>
        <childnode refid="1073" relation="include">
        </childnode>
        <childnode refid="1076" relation="include">
        </childnode>
        <childnode refid="1077" relation="include">
        </childnode>
        <childnode refid="1078" relation="include">
        </childnode>
        <childnode refid="1081" relation="include">
        </childnode>
        <childnode refid="1083" relation="include">
        </childnode>
        <childnode refid="1085" relation="include">
        </childnode>
        <childnode refid="1090" relation="include">
        </childnode>
        <childnode refid="1093" relation="include">
        </childnode>
      </node>
      <node id="1078">
        <label>config.hxx</label>
        <link refid="config_8hxx_source"/>
        <childnode refid="1079" relation="include">
        </childnode>
        <childnode refid="1080" relation="include">
        </childnode>
      </node>
      <node id="1090">
        <label>numerictraits.hxx</label>
        <link refid="numerictraits_8hxx_source"/>
        <childnode refid="1087" relation="include">
        </childnode>
        <childnode refid="1088" relation="include">
        </childnode>
        <childnode refid="1091" relation="include">
        </childnode>
        <childnode refid="1077" relation="include">
        </childnode>
        <childnode refid="1086" relation="include">
        </childnode>
        <childnode refid="1085" relation="include">
        </childnode>
        <childnode refid="1092" relation="include">
        </childnode>
      </node>
      <node id="1106">
        <label>iteratoradapter.hxx</label>
        <link refid="iteratoradapter_8hxx_source"/>
      </node>
      <node id="1105">
        <label>imageiteratoradapter.hxx</label>
        <link refid="imageiteratoradapter_8hxx_source"/>
        <childnode refid="1096" relation="include">
        </childnode>
      </node>
      <node id="1084">
        <label>utility</label>
      </node>
      <node id="1082">
        <label>sstream</label>
      </node>
      <node id="1097">
        <label>rgbvalue.hxx</label>
        <link refid="rgbvalue_8hxx_source"/>
        <childnode refid="1073" relation="include">
        </childnode>
        <childnode refid="1076" relation="include">
        </childnode>
        <childnode refid="1078" relation="include">
        </childnode>
        <childnode refid="1090" relation="include">
        </childnode>
        <childnode refid="1098" relation="include">
        </childnode>
        <childnode refid="1099" relation="include">
        </childnode>
        <childnode refid="1107" relation="include">
        </childnode>
      </node>
      <node id="1102">
        <label>diff2d.hxx</label>
        <link refid="diff2d_8hxx_source"/>
        <childnode refid="1073" relation="include">
        </childnode>
        <childnode refid="1100" relation="include">
        </childnode>
        <childnode refid="1078" relation="include">
        </childnode>
        <childnode refid="1103" relation="include">
        </childnode>
        <childnode refid="1104" relation="include">
        </childnode>
        <childnode refid="1106" relation="include">
        </childnode>
        <childnode refid="1083" relation="include">
        </childnode>
      </node>
      <node id="1081">
        <label>error.hxx</label>
        <link refid="error_8hxx_source"/>
        <childnode refid="1080" relation="include">
        </childnode>
        <childnode refid="1082" relation="include">
        </childnode>
        <childnode refid="1074" relation="include">
        </childnode>
        <childnode refid="1078" relation="include">
        </childnode>
      </node>
      <node id="1107">
        <label>static_assert.hxx</label>
        <link refid="static__assert_8hxx_source"/>
      </node>
      <node id="1100">
        <label>iosfwd</label>
      </node>
      <node id="1076">
        <label>cstdlib</label>
      </node>
      <node id="1087">
        <label>climits</label>
      </node>
      <node id="1086">
        <label>metaprogramming.hxx</label>
        <link refid="metaprogramming_8hxx_source"/>
        <childnode refid="1078" relation="include">
        </childnode>
        <childnode refid="1087" relation="include">
        </childnode>
        <childnode refid="1088" relation="include">
        </childnode>
        <childnode refid="1089" relation="include">
        </childnode>
      </node>
      <node id="1072">
        <label>vigra/colorconversions.hxx</label>
        <link refid="colorconversions.hxx"/>
        <childnode refid="1073" relation="include">
        </childnode>
        <childnode refid="1074" relation="include">
        </childnode>
        <childnode refid="1075" relation="include">
        </childnode>
        <childnode refid="1097" relation="include">
        </childnode>
        <childnode refid="1108" relation="include">
        </childnode>
      </node>
      <node id="1077">
        <label>complex</label>
      </node>
      <node id="1089">
        <label>algorithm</label>
      </node>
      <node id="1101">
        <label>memory.hxx</label>
        <link refid="memory_8hxx_source"/>
        <childnode refid="1086" relation="include">
        </childnode>
      </node>
      <node id="1098">
        <label>accessor.hxx</label>
        <link refid="accessor_8hxx_source"/>
        <childnode refid="1086" relation="include">
        </childnode>
        <childnode refid="1090" relation="include">
        </childnode>
        <childnode refid="1083" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01Lab2RGBFunctor_3_01T_01_4_01_4" prot="public">vigra::FunctorTraits&lt; Lab2RGBFunctor&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01Lab2RGBPrimeFunctor_3_01T_01_4_01_4" prot="public">vigra::FunctorTraits&lt; Lab2RGBPrimeFunctor&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01Lab2XYZFunctor_3_01T_01_4_01_4" prot="public">vigra::FunctorTraits&lt; Lab2XYZFunctor&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01Luv2RGBFunctor_3_01T_01_4_01_4" prot="public">vigra::FunctorTraits&lt; Luv2RGBFunctor&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01Luv2RGBPrimeFunctor_3_01T_01_4_01_4" prot="public">vigra::FunctorTraits&lt; Luv2RGBPrimeFunctor&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01Luv2XYZFunctor_3_01T_01_4_01_4" prot="public">vigra::FunctorTraits&lt; Luv2XYZFunctor&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01RGB2LabFunctor_3_01T_01_4_01_4" prot="public">vigra::FunctorTraits&lt; RGB2LabFunctor&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01RGB2LuvFunctor_3_01T_01_4_01_4" prot="public">vigra::FunctorTraits&lt; RGB2LuvFunctor&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01RGB2RGBPrimeFunctor_3_01From_00_01To_01_4_01_4" prot="public">vigra::FunctorTraits&lt; RGB2RGBPrimeFunctor&lt; From, To &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01RGB2sRGBFunctor_3_01From_00_01To_01_4_01_4" prot="public">vigra::FunctorTraits&lt; RGB2sRGBFunctor&lt; From, To &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01RGB2XYZFunctor_3_01T_01_4_01_4" prot="public">vigra::FunctorTraits&lt; RGB2XYZFunctor&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01RGBPrime2LabFunctor_3_01T_01_4_01_4" prot="public">vigra::FunctorTraits&lt; RGBPrime2LabFunctor&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01RGBPrime2LuvFunctor_3_01T_01_4_01_4" prot="public">vigra::FunctorTraits&lt; RGBPrime2LuvFunctor&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01RGBPrime2RGBFunctor_3_01From_00_01To_01_4_01_4" prot="public">vigra::FunctorTraits&lt; RGBPrime2RGBFunctor&lt; From, To &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01RGBPrime2XYZFunctor_3_01T_01_4_01_4" prot="public">vigra::FunctorTraits&lt; RGBPrime2XYZFunctor&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01RGBPrime2YPrimeCbCrFunctor_3_01T_01_4_01_4" prot="public">vigra::FunctorTraits&lt; RGBPrime2YPrimeCbCrFunctor&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01RGBPrime2YPrimeIQFunctor_3_01T_01_4_01_4" prot="public">vigra::FunctorTraits&lt; RGBPrime2YPrimeIQFunctor&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01RGBPrime2YPrimePbPrFunctor_3_01T_01_4_01_4" prot="public">vigra::FunctorTraits&lt; RGBPrime2YPrimePbPrFunctor&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01RGBPrime2YPrimeUVFunctor_3_01T_01_4_01_4" prot="public">vigra::FunctorTraits&lt; RGBPrime2YPrimeUVFunctor&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01sRGB2RGBFunctor_3_01From_00_01To_01_4_01_4" prot="public">vigra::FunctorTraits&lt; sRGB2RGBFunctor&lt; From, To &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01XYZ2LabFunctor_3_01T_01_4_01_4" prot="public">vigra::FunctorTraits&lt; XYZ2LabFunctor&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01XYZ2LuvFunctor_3_01T_01_4_01_4" prot="public">vigra::FunctorTraits&lt; XYZ2LuvFunctor&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01XYZ2RGBFunctor_3_01T_01_4_01_4" prot="public">vigra::FunctorTraits&lt; XYZ2RGBFunctor&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01XYZ2RGBPrimeFunctor_3_01T_01_4_01_4" prot="public">vigra::FunctorTraits&lt; XYZ2RGBPrimeFunctor&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01YPrimeCbCr2RGBPrimeFunctor_3_01T_01_4_01_4" prot="public">vigra::FunctorTraits&lt; YPrimeCbCr2RGBPrimeFunctor&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01YPrimeIQ2RGBPrimeFunctor_3_01T_01_4_01_4" prot="public">vigra::FunctorTraits&lt; YPrimeIQ2RGBPrimeFunctor&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01YPrimePbPr2RGBPrimeFunctor_3_01T_01_4_01_4" prot="public">vigra::FunctorTraits&lt; YPrimePbPr2RGBPrimeFunctor&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01YPrimeUV2RGBPrimeFunctor_3_01T_01_4_01_4" prot="public">vigra::FunctorTraits&lt; YPrimeUV2RGBPrimeFunctor&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1Lab2RGBFunctor" prot="public">vigra::Lab2RGBFunctor</innerclass>
    <innerclass refid="classvigra_1_1Lab2RGBPrimeFunctor" prot="public">vigra::Lab2RGBPrimeFunctor</innerclass>
    <innerclass refid="classvigra_1_1Lab2XYZFunctor" prot="public">vigra::Lab2XYZFunctor</innerclass>
    <innerclass refid="classvigra_1_1Luv2RGBFunctor" prot="public">vigra::Luv2RGBFunctor</innerclass>
    <innerclass refid="classvigra_1_1Luv2RGBPrimeFunctor" prot="public">vigra::Luv2RGBPrimeFunctor</innerclass>
    <innerclass refid="classvigra_1_1Luv2XYZFunctor" prot="public">vigra::Luv2XYZFunctor</innerclass>
    <innerclass refid="classvigra_1_1RGB2LabFunctor" prot="public">vigra::RGB2LabFunctor</innerclass>
    <innerclass refid="classvigra_1_1RGB2LuvFunctor" prot="public">vigra::RGB2LuvFunctor</innerclass>
    <innerclass refid="classvigra_1_1RGB2RGBPrimeFunctor" prot="public">vigra::RGB2RGBPrimeFunctor</innerclass>
    <innerclass refid="classvigra_1_1RGB2RGBPrimeFunctor_3_01unsigned_01char_00_01unsigned_01char_01_4" prot="public">vigra::RGB2RGBPrimeFunctor&lt; unsigned char, unsigned char &gt;</innerclass>
    <innerclass refid="classvigra_1_1RGB2sRGBFunctor" prot="public">vigra::RGB2sRGBFunctor</innerclass>
    <innerclass refid="classvigra_1_1RGB2sRGBFunctor_3_01unsigned_01char_00_01unsigned_01char_01_4" prot="public">vigra::RGB2sRGBFunctor&lt; unsigned char, unsigned char &gt;</innerclass>
    <innerclass refid="classvigra_1_1RGB2XYZFunctor" prot="public">vigra::RGB2XYZFunctor</innerclass>
    <innerclass refid="classvigra_1_1RGBPrime2LabFunctor" prot="public">vigra::RGBPrime2LabFunctor</innerclass>
    <innerclass refid="classvigra_1_1RGBPrime2LuvFunctor" prot="public">vigra::RGBPrime2LuvFunctor</innerclass>
    <innerclass refid="classvigra_1_1RGBPrime2RGBFunctor" prot="public">vigra::RGBPrime2RGBFunctor</innerclass>
    <innerclass refid="classvigra_1_1RGBPrime2RGBFunctor_3_01unsigned_01char_00_01unsigned_01char_01_4" prot="public">vigra::RGBPrime2RGBFunctor&lt; unsigned char, unsigned char &gt;</innerclass>
    <innerclass refid="classvigra_1_1RGBPrime2XYZFunctor" prot="public">vigra::RGBPrime2XYZFunctor</innerclass>
    <innerclass refid="classvigra_1_1RGBPrime2YPrimeCbCrFunctor" prot="public">vigra::RGBPrime2YPrimeCbCrFunctor</innerclass>
    <innerclass refid="classvigra_1_1RGBPrime2YPrimeIQFunctor" prot="public">vigra::RGBPrime2YPrimeIQFunctor</innerclass>
    <innerclass refid="classvigra_1_1RGBPrime2YPrimePbPrFunctor" prot="public">vigra::RGBPrime2YPrimePbPrFunctor</innerclass>
    <innerclass refid="classvigra_1_1RGBPrime2YPrimeUVFunctor" prot="public">vigra::RGBPrime2YPrimeUVFunctor</innerclass>
    <innerclass refid="classvigra_1_1sRGB2RGBFunctor" prot="public">vigra::sRGB2RGBFunctor</innerclass>
    <innerclass refid="classvigra_1_1sRGB2RGBFunctor_3_01unsigned_01char_00_01unsigned_01char_01_4" prot="public">vigra::sRGB2RGBFunctor&lt; unsigned char, unsigned char &gt;</innerclass>
    <innerclass refid="classvigra_1_1XYZ2LabFunctor" prot="public">vigra::XYZ2LabFunctor</innerclass>
    <innerclass refid="classvigra_1_1XYZ2LuvFunctor" prot="public">vigra::XYZ2LuvFunctor</innerclass>
    <innerclass refid="classvigra_1_1XYZ2RGBFunctor" prot="public">vigra::XYZ2RGBFunctor</innerclass>
    <innerclass refid="classvigra_1_1XYZ2RGBPrimeFunctor" prot="public">vigra::XYZ2RGBPrimeFunctor</innerclass>
    <innerclass refid="classvigra_1_1YPrimeCbCr2RGBPrimeFunctor" prot="public">vigra::YPrimeCbCr2RGBPrimeFunctor</innerclass>
    <innerclass refid="classvigra_1_1YPrimeIQ2RGBPrimeFunctor" prot="public">vigra::YPrimeIQ2RGBPrimeFunctor</innerclass>
    <innerclass refid="classvigra_1_1YPrimePbPr2RGBPrimeFunctor" prot="public">vigra::YPrimePbPr2RGBPrimeFunctor</innerclass>
    <innerclass refid="classvigra_1_1YPrimeUV2RGBPrimeFunctor" prot="public">vigra::YPrimeUV2RGBPrimeFunctor</innerclass>
    <innernamespace refid="namespacevigra">vigra</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>1998-2002<sp/>by<sp/>Ullrich<sp/>Koethe<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>VIGRA<sp/>computer<sp/>vision<sp/>library.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>The<sp/>VIGRA<sp/>Website<sp/>is<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://hci.iwr.uni-heidelberg.de/vigra/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Please<sp/>direct<sp/>questions,<sp/>bug<sp/>reports,<sp/>and<sp/>contributions<sp/>to<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ullrich.koethe@iwr.uni-heidelberg.de<sp/><sp/><sp/><sp/>or<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra@informatik.uni-hamburg.de<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>conditions:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Software.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VIGRA_COLORCONVERSIONS_HXX</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_COLORCONVERSIONS_HXX</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mathutil.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rgbvalue.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;functortraits.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vigra<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>ValueType<sp/>gammaCorrection(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="group__MathFunctions_1ga441c9e4bf9f952c0fe94836634bcf976" kindref="member">gamma</ref>)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;ValueType&gt;::RealPromote<sp/>Promote;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NumericTraits&lt;ValueType&gt;::fromRealPromote(</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RequiresExplicitCast&lt;Promote&gt;::cast(</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(value<sp/>&lt;<sp/>0.0)<sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>-std::pow(-value,<sp/>gamma)<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>std::pow(value,<sp/>gamma)));</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>ValueType<sp/>gammaCorrection(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="group__FFTWComplexOperators_1ga396baa79e8bd78a178597d32d5152041" kindref="member" tooltip="norm (= magnitude)">norm</ref>)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;ValueType&gt;::RealPromote<sp/>Promote;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NumericTraits&lt;ValueType&gt;::fromRealPromote(</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RequiresExplicitCast&lt;Promote&gt;::cast(</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(value<sp/>&lt;<sp/>0.0)<sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>-norm*std::pow(-value/norm,<sp/>gamma)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>norm*std::pow(value/norm,<sp/>gamma)));</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>ValueType<sp/>sRGBCorrection(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>norm)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>/=<sp/><ref refid="group__FFTWComplexOperators_1ga396baa79e8bd78a178597d32d5152041" kindref="member" tooltip="norm (= magnitude)">norm</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;ValueType&gt;::RealPromote<sp/>Promote;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NumericTraits&lt;ValueType&gt;::fromRealPromote(</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RequiresExplicitCast&lt;ValueType&gt;::cast(</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(value<sp/>&lt;=<sp/>0.0031308)<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>norm*12.92*value<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>norm*(1.055*std::pow(value,<sp/>0.41666666666666667)<sp/>-<sp/>0.055)));</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>ValueType<sp/>inverse_sRGBCorrection(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>norm)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>/=<sp/><ref refid="group__FFTWComplexOperators_1ga396baa79e8bd78a178597d32d5152041" kindref="member" tooltip="norm (= magnitude)">norm</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;ValueType&gt;::RealPromote<sp/>Promote;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NumericTraits&lt;ValueType&gt;::fromRealPromote(</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RequiresExplicitCast&lt;ValueType&gt;::cast(</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(value<sp/>&lt;=<sp/>0.04045)<sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>norm*value<sp/>/<sp/>12.92</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>norm*VIGRA_CSTD::pow((value<sp/>+<sp/>0.055)/1.055,<sp/>2.4)));</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="100"><highlight class="comment">/**<sp/>\defgroup<sp/>ColorConversions<sp/><sp/>Color<sp/>Space<sp/>Conversions</highlight></codeline>
<codeline lineno="101"><highlight class="comment"></highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/>Convert<sp/>between<sp/>RGB,<sp/>sRGB,<sp/>R&apos;G&apos;B&apos;,<sp/>XYZ,<sp/>L*a*b*,<sp/>L*u*v*,<sp/>Y&apos;PbPr,<sp/>Y&apos;CbCr,<sp/>Y&apos;IQ,<sp/>and<sp/>Y&apos;UV<sp/>color<sp/>spaces.</highlight></codeline>
<codeline lineno="103"><highlight class="comment"></highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;UL&gt;</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>&lt;b&gt;RGB/sRGB/R&apos;G&apos;B&apos;&lt;/b&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;em&gt;linear<sp/>and<sp/>non-linear<sp/>(gamma<sp/>corrected)<sp/>additive<sp/>color&lt;/em&gt;</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;p&gt;</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;UL<sp/>style=&quot;list-style-image:url(documents/bullet.gif)&quot;&gt;</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>vigra::RGB2sRGBFunctor</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>vigra::sRGB2RGBFunctor</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>vigra::RGB2RGBPrimeFunctor</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>vigra::RGBPrime2RGBFunctor</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/UL&gt;&lt;p&gt;</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>&lt;b&gt;XYZ&lt;/b&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;em&gt;device<sp/>independent<sp/>color<sp/>representation<sp/></highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(according<sp/>to<sp/>Publication<sp/>CIE<sp/><sp/>No<sp/><sp/>15.2<sp/>&quot;Colorimetry&quot;</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>ITU-R<sp/>Recommendation<sp/>BT.709)&lt;/em&gt;</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;p&gt;</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;UL<sp/>style=&quot;list-style-image:url(documents/bullet.gif)&quot;&gt;</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>vigra::RGB2XYZFunctor</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>vigra::RGBPrime2XYZFunctor</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>vigra::XYZ2RGBFunctor</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>vigra::XYZ2RGBPrimeFunctor</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/UL&gt;&lt;p&gt;</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>&lt;b&gt;L*a*b*<sp/>&lt;/b&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;em&gt;perceptually<sp/>uniform<sp/>color<sp/>representation<sp/></highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(according<sp/>to<sp/>Publication<sp/>CIE<sp/>No<sp/>15.2<sp/>&quot;Colorimetry&quot;<sp/>and</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ITU-R<sp/>Recommendation<sp/>BT.709)&lt;/em&gt;</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;p&gt;</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;UL<sp/>style=&quot;list-style-image:url(documents/bullet.gif)&quot;&gt;</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>vigra::RGB2LabFunctor</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>vigra::RGBPrime2LabFunctor</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>vigra::XYZ2LabFunctor</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>vigra::Lab2RGBFunctor</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>vigra::Lab2RGBPrimeFunctor</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>vigra::Lab2XYZFunctor</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>polar2Lab()</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>lab2Polar()</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/UL&gt;&lt;p&gt;</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>&lt;b&gt;L*u*v*<sp/>&lt;/b&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;em&gt;perceptually<sp/>uniform<sp/>color<sp/>representation<sp/></highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(according<sp/>to<sp/>Publication<sp/>CIE<sp/>No<sp/>15.2<sp/>&quot;Colorimetry&quot;<sp/>and</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ITU-R<sp/>Recommendation<sp/>BT.709)&lt;/em&gt;</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;p&gt;</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;UL<sp/>style=&quot;list-style-image:url(documents/bullet.gif)&quot;&gt;</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>vigra::RGB2LuvFunctor</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>vigra::RGBPrime2LuvFunctor</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>vigra::XYZ2LuvFunctor</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>vigra::Luv2RGBFunctor</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>vigra::Luv2RGBPrimeFunctor</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>vigra::Luv2XYZFunctor</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>polar2Luv()</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>luv2Polar()</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/UL&gt;&lt;p&gt;</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>&lt;b&gt;Y&apos;PbPr<sp/>and<sp/>Y&apos;CbCr<sp/>&lt;/b&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;em&gt;color<sp/>difference<sp/>coding</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(according<sp/>to<sp/>ITU-R<sp/>Recommendation<sp/>BT.<sp/>601)&lt;/em&gt;</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;p&gt;</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;UL<sp/>style=&quot;list-style-image:url(documents/bullet.gif)&quot;&gt;</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>vigra::RGBPrime2YPrimePbPrFunctor</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>vigra::YPrimePbPr2RGBPrimeFunctor</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>polar2YPrimePbPr()</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>yPrimePbPr2Polar()</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>vigra::RGBPrime2YPrimeCbCrFunctor</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>vigra::YPrimeCbCr2RGBPrimeFunctor</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>polar2YPrimeCbCr()</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>yPrimeCbCr2Polar()</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/UL&gt;&lt;p&gt;</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>&lt;b&gt;Y&apos;UV<sp/>and<sp/>Y&apos;IQ<sp/>&lt;/b&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;em&gt;analog<sp/>video<sp/>coding<sp/>according<sp/>to<sp/>NTSC<sp/>and<sp/>PAL<sp/>standards&lt;/em&gt;</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;p&gt;</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;UL<sp/>style=&quot;list-style-image:url(documents/bullet.gif)&quot;&gt;</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>vigra::RGBPrime2YPrimeUVFunctor</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>vigra::YPrimeUV2RGBPrimeFunctor</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>polar2YPrimeUV()</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>yPrimeUV2Polar()</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>vigra::RGBPrime2YPrimeIQFunctor</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>vigra::YPrimeIQ2RGBPrimeFunctor</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>polar2YPrimeIQ()</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>\ref<sp/>yPrimeIQ2Polar()</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/UL&gt;&lt;p&gt;</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/UL&gt;</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/><sp/>\anchor<sp/>_details</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>module<sp/>provides<sp/>conversion<sp/>from<sp/>RGB/R&apos;G&apos;B&apos;<sp/>into<sp/>more<sp/>perceptually<sp/>uniform</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/><sp/><sp/>color<sp/>spaces.<sp/>In<sp/>image<sp/>analysis,<sp/>colors<sp/>are<sp/>usually<sp/>converted<sp/>into<sp/>another<sp/>color<sp/>space<sp/></highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/><sp/><sp/>in<sp/>order<sp/>to<sp/>get<sp/>good<sp/>estimates<sp/>of<sp/>perceived<sp/>color<sp/>differences<sp/>by<sp/>just<sp/>calculating<sp/></highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/><sp/>Euclidean<sp/>distances<sp/>between<sp/>the<sp/>transformed<sp/>colors.<sp/>The<sp/>L*a*b*<sp/>and<sp/>L*u*v*<sp/>were<sp/></highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/><sp/>designed<sp/>with<sp/>exactly<sp/>this<sp/>application<sp/>in<sp/>mind<sp/>and<sp/>thus<sp/>give<sp/>the<sp/>best<sp/>results.<sp/>But<sp/>these</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/><sp/>conversions<sp/>are<sp/>also<sp/>the<sp/>most<sp/>computationally<sp/>demanding.<sp/>The<sp/>Y&apos;PbPr<sp/>color<sp/>difference</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/><sp/>space<sp/>(designed<sp/>for<sp/>coding<sp/>digital<sp/>video)<sp/>is<sp/>computationally<sp/>much<sp/>cheaper,<sp/>and<sp/></highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/><sp/>almost<sp/>as<sp/>good.<sp/>Y&apos;CbCr<sp/>represents<sp/>essentially<sp/>the<sp/>same<sp/>transformation,<sp/>but<sp/>the<sp/>color<sp/>values<sp/></highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/><sp/>are<sp/>scaled<sp/>so<sp/>that<sp/>they<sp/>can<sp/>be<sp/>stored<sp/>with<sp/>8<sp/>bits<sp/>per<sp/>channel<sp/>with<sp/>minimal<sp/>loss<sp/>of<sp/></highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/><sp/>information.<sp/>The<sp/>other<sp/>transformations<sp/>are<sp/>of<sp/>lesser<sp/>interest<sp/>here:<sp/>XYZ<sp/>is<sp/>a<sp/>device<sp/>independent</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/><sp/>(but<sp/>not<sp/>perceptually<sp/>uniform)<sp/>color<sp/>representation,<sp/>and<sp/>Y&apos;IQ<sp/>and<sp/>Y&apos;UV<sp/>are<sp/>the<sp/>color<sp/></highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/><sp/>spaces<sp/>used<sp/>by<sp/>the<sp/>PAL<sp/>and<sp/>NTSC<sp/>analog<sp/>video<sp/>standards.<sp/>Detailed<sp/>information<sp/>about</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/><sp/>these<sp/>color<sp/>spaces<sp/>and<sp/>their<sp/>transformations<sp/>can<sp/>be<sp/>found<sp/>in<sp/></highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;a<sp/>href=&quot;http://www.poynton.com/ColorFAQ.html&quot;&gt;Charles<sp/>Poynton&apos;s<sp/>Color<sp/>FAQ&lt;/a&gt;</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/><sp/>When<sp/>you<sp/>want<sp/>to<sp/>perform<sp/>a<sp/>color<sp/>conversion,<sp/>you<sp/>must<sp/>first<sp/>know<sp/>in<sp/>which</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/><sp/>color<sp/>space<sp/>the<sp/>data<sp/>are<sp/>given.<sp/>Although<sp/>this<sp/>sounds<sp/>trivial,<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/><sp/>quite<sp/>often<sp/>done<sp/>wrong,<sp/>because<sp/>the<sp/>distinction<sp/>between<sp/>RGB<sp/>and<sp/>sRGB<sp/>(still<sp/>images)<sp/>or<sp/>R&apos;G&apos;B&apos;<sp/></highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/><sp/><sp/>(digital<sp/>video)<sp/>is<sp/>frequently<sp/>overlooked:<sp/>nowadays,<sp/>most<sp/>still<sp/>images<sp/>are<sp/>stored<sp/>in</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/><sp/>sRGB<sp/>space,<sp/>and<sp/>treating<sp/>them<sp/>as<sp/>RGB<sp/>leads<sp/>to<sp/>wrong<sp/>results<sp/>(although<sp/>the<sp/>color<sp/>primaries</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/><sp/>are<sp/>named<sp/>the<sp/>same).<sp/>RGB<sp/>and<sp/>R&apos;G&apos;B&apos;<sp/>are<sp/>related<sp/>by<sp/>a<sp/>so<sp/>called<sp/>&lt;em&gt;gamma<sp/>correction&lt;/em&gt;:</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/><sp/>\f[</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C&apos;<sp/>=<sp/>C_{max}<sp/>\left(\frac{C_{RGB}}{C_{max}}<sp/>\right)^{0.45}<sp/>\qquad</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/><sp/>\f]</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/><sp/>where<sp/>C<sp/>represents<sp/>one<sp/>of<sp/>the<sp/>color<sp/>channels<sp/>R,<sp/>G,<sp/>and<sp/>B,<sp/>and<sp/>\f$<sp/>C_{max}<sp/>\f$<sp/>usually<sp/>equals<sp/>255.<sp/></highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>sRGB<sp/>color<sp/>space<sp/>realizes<sp/>a<sp/>slight<sp/>enhancement<sp/>of<sp/>this<sp/>definition:</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/><sp/>\f[</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C_{sRGB}<sp/>=<sp/>\left\{\begin{array}{ll}</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>12.92\,C_{RGB}<sp/>&amp;<sp/>\textrm{<sp/>if<sp/>}\frac{C_{RGB}}{C_{max}}<sp/>\le<sp/>0.00304<sp/>\\</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C_{max}\left(<sp/>1.055<sp/>\left(\frac{C_{RGB}}{C_{max}}\right)^{1/2.4}-0.055\right)<sp/>&amp;<sp/>\textrm{<sp/>otherwise}</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\end{array}<sp/>\right.</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/><sp/>\f]</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/><sp/><sp/>sRGB<sp/>has<sp/>now<sp/>become<sp/>a<sp/>widely<sp/>accepted<sp/>international<sp/>standard<sp/>(IEC<sp/>61966-2.1)<sp/>which<sp/>is<sp/>used<sp/>by<sp/>most<sp/></highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/><sp/><sp/>consumer<sp/>products<sp/>(digital<sp/>cameras,<sp/>printers,<sp/>and<sp/>screens).<sp/>In<sp/>practice,<sp/>you<sp/>can<sp/></highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/><sp/>distinguish<sp/>between<sp/>linear<sp/>and<sp/>gamma-corrected<sp/>red,<sp/>green,<sp/>and<sp/>blue<sp/>by<sp/>displaying<sp/>the<sp/>images:<sp/>if<sp/>they<sp/>look</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/><sp/><sp/>too<sp/>dark,<sp/>they<sp/>are<sp/>probably<sp/>RGB,<sp/>if<sp/>they<sp/>are<sp/>OK,<sp/>they<sp/>are<sp/>likely<sp/>sRGB.<sp/>(However,<sp/>there<sp/>are<sp/>still<sp/>a<sp/>few<sp/>older<sp/></highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/><sp/>graphics<sp/>cards<sp/>and<sp/>display<sp/>programs<sp/>which<sp/>silently<sp/>apply<sp/>an<sp/>additional<sp/>gamma<sp/>correction<sp/>to<sp/>every<sp/>image,<sp/></highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/><sp/><sp/>so<sp/>that<sp/>RGB<sp/>appears<sp/>correct<sp/>and<sp/>sRGB<sp/>is<sp/>too<sp/>bright.)<sp/>Whether<sp/>or<sp/>not<sp/>the<sp/>data<sp/>are<sp/>represented</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/><sp/><sp/><sp/>in<sp/>the<sp/>sRGB<sp/>color<sp/>space<sp/>can<sp/>also<sp/>be<sp/>seen<sp/>in<sp/>the<sp/>color<sp/>space<sp/>tag<sp/>of<sp/>an<sp/>image&apos;s<sp/>EXIF<sp/>data,<sp/>if<sp/>available.</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>distinction<sp/>between<sp/>RGB<sp/>and<sp/>R&apos;G&apos;B&apos;<sp/>is<sp/>important<sp/>because<sp/>some<sp/>conversions<sp/>start<sp/>at<sp/></highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/><sp/><sp/>RGB<sp/>(XYZ,<sp/>L*a*b*,<sp/>L*u*v*),<sp/>while<sp/>others<sp/>start<sp/>at<sp/>R&apos;G&apos;B&apos;<sp/>(Y&apos;PbPr,<sp/>Y&apos;CbCr,<sp/>Y&apos;IQ,<sp/>and<sp/>Y&apos;UV).<sp/></highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>names<sp/>of<sp/>VIGRA&apos;s<sp/>color<sp/>conversion<sp/>functors<sp/>always<sp/>make<sp/>clear<sp/>to<sp/>which<sp/>color<sp/>space<sp/></highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/><sp/><sp/>they<sp/>must<sp/>be<sp/>applied.</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/><sp/><sp/>In<sp/>addition<sp/>VIGRA<sp/>provides<sp/>a<sp/>&lt;em&gt;\ref<sp/>PolarColors<sp/>&quot;polar<sp/>coordinate<sp/>interface&quot;&lt;/em&gt;</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/><sp/><sp/>to<sp/>several<sp/>color<sp/>spaces<sp/>(L*a*b*,<sp/>L*u*v*,<sp/>Y&apos;PbPr,<sp/>Y&apos;CbCr,<sp/>Y&apos;IQ,<sp/>and<sp/>Y&apos;UV).<sp/>This</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/><sp/><sp/><sp/>interface<sp/>makes<sp/>use<sp/>of<sp/>the<sp/>fact<sp/>that<sp/>these<sp/>color<sp/>spaces<sp/>are<sp/>conceptually<sp/>similar:</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/><sp/><sp/>they<sp/>represent<sp/>colors<sp/>by<sp/>a<sp/>&quot;brightness&quot;<sp/>coordinate<sp/>(L*<sp/>or<sp/>Y&apos;)<sp/>and<sp/>a<sp/>pair<sp/>of<sp/></highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/><sp/><sp/><sp/>&quot;chromaticity&quot;<sp/>coordinates<sp/>that<sp/>span<sp/>a<sp/>plane<sp/>of<sp/>colors<sp/>with<sp/>equal<sp/>brightness.</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>polar<sp/>representation<sp/>transforms<sp/>chroma<sp/>coordinates<sp/>into<sp/>a<sp/>color<sp/>&quot;angle&quot;</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/><sp/><sp/><sp/>(similar<sp/>to<sp/>hue<sp/>in<sp/>the<sp/>HSV<sp/>system)<sp/>and<sp/>a<sp/>&quot;saturation&quot;.<sp/>The<sp/>polar<sp/>coordinates<sp/>are<sp/></highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/><sp/><sp/><sp/>normalized<sp/>so<sp/>that<sp/>a<sp/>color<sp/>angle<sp/>of<sp/>0<sp/>degrees<sp/>is<sp/>always<sp/>associated<sp/>with<sp/>red</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/><sp/><sp/><sp/>(green<sp/>is<sp/>at<sp/>about<sp/>120<sp/>degrees,<sp/>blue<sp/>at<sp/>about<sp/>240<sp/>degrees<sp/>-<sp/>exact<sp/>values<sp/>differ</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/><sp/><sp/><sp/>between<sp/>color<sp/>spaces).<sp/>A<sp/>saturation<sp/>of<sp/>1<sp/>is<sp/>the<sp/>highest<sp/>saturation<sp/>that<sp/>any<sp/>RGB<sp/>color<sp/></highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/><sp/><sp/><sp/>in<sp/>the<sp/>unit<sp/>cube<sp/>can<sp/>have<sp/>after<sp/>transformation<sp/>into<sp/>the<sp/>respective<sp/>color<sp/>space,<sp/></highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/><sp/><sp/><sp/>and<sp/>saturation<sp/>0<sp/>corresponds<sp/>to<sp/>gray.<sp/>Polar<sp/>coordinates<sp/>provide<sp/>a<sp/>more<sp/>intuitive<sp/></highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/><sp/><sp/><sp/>interface<sp/>to<sp/>color<sp/>specification<sp/>by<sp/>users<sp/>and<sp/>make<sp/>different<sp/>color<sp/>spaces<sp/>somewhat<sp/></highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/><sp/><sp/><sp/>comparable.</highlight></codeline>
<codeline lineno="251"><highlight class="comment">*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="252"><highlight class="comment">//@{</highlight></codeline>
<codeline lineno="253"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="255"><highlight class="comment">/**<sp/>\brief<sp/>Convert<sp/>linear<sp/>(raw)<sp/>RGB<sp/>into<sp/>non-linear<sp/>(gamma<sp/>corrected)<sp/>R&apos;G&apos;B&apos;.</highlight></codeline>
<codeline lineno="256"><highlight class="comment"></highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>functor<sp/>realizes<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/><sp/><sp/><sp/>\f[</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R&apos;<sp/>=<sp/>R_{max}<sp/>\left(\frac{R}{R_{max}}<sp/>\right)^{0.45}<sp/>\qquad</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G&apos;<sp/>=<sp/>G_{max}<sp/>\left(\frac{G}{G_{max}}<sp/>\right)^{0.45}<sp/>\qquad</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B&apos;<sp/>=<sp/>B_{max}<sp/>\left(\frac{B}{B_{max}}<sp/>\right)^{0.45}</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/><sp/><sp/><sp/>\f]</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/><sp/><sp/><sp/>By<sp/>default,<sp/>\f$<sp/>R_{max}<sp/>=<sp/>G_{max}<sp/>=<sp/>B_{max}<sp/>=<sp/>255<sp/>\f$.<sp/>This<sp/>default<sp/>can<sp/>be<sp/>overridden</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/><sp/><sp/><sp/>in<sp/>the<sp/>constructor.<sp/>If<sp/>both<sp/>source<sp/>and<sp/>target<sp/>colors<sp/>components<sp/>are<sp/>stored<sp/></highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/><sp/><sp/><sp/>as<sp/>&lt;tt&gt;unsigned<sp/>char&lt;/tt&gt;,<sp/>a<sp/>look-up-table<sp/>will<sp/>be<sp/>used<sp/>to<sp/>speed<sp/>up<sp/>the<sp/>transformation.</highlight></codeline>
<codeline lineno="271"><highlight class="comment"></highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>From,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>To<sp/>=<sp/>From&gt;</highlight></codeline>
<codeline lineno="277" refid="classvigra_1_1RGB2RGBPrimeFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1RGB2RGBPrimeFunctor" kindref="compound" tooltip="Convert linear (raw) RGB into non-linear (gamma corrected) R&amp;#39;G&amp;#39;B&amp;#39;.">RGB2RGBPrimeFunctor</ref></highlight></codeline>
<codeline lineno="278"><highlight class="normal">{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="classvigra_1_1RGB2RGBPrimeFunctor_1a814051f34f09bb920da058f4d9424af3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;From, 3&gt;</ref><sp/><ref refid="classvigra_1_1RGB2RGBPrimeFunctor_1a814051f34f09bb920da058f4d9424af3" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="classvigra_1_1RGB2RGBPrimeFunctor_1aa2b14bc5d08629b194bdcc21a6d07d14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;To, 3&gt;</ref><sp/><ref refid="classvigra_1_1RGB2RGBPrimeFunctor_1aa2b14bc5d08629b194bdcc21a6d07d14" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="classvigra_1_1RGB2RGBPrimeFunctor_1a4a27c57ed96ac356dec238dd7ddb15a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;To, 3&gt;</ref><sp/><ref refid="classvigra_1_1RGB2RGBPrimeFunctor_1a4a27c57ed96ac356dec238dd7ddb15a7" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>result<sp/>component&apos;s<sp/>promote<sp/>type</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="classvigra_1_1RGB2RGBPrimeFunctor_1a48362da7a45a737895aa2d764e7768d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;To&gt;::RealPromote<sp/><ref refid="classvigra_1_1RGB2RGBPrimeFunctor_1a48362da7a45a737895aa2d764e7768d9" kindref="member">component_type</ref>;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Default<sp/>constructor.</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component<sp/>defaults<sp/>to<sp/>255</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="classvigra_1_1RGB2RGBPrimeFunctor_1acb8a778810744e458d5353813e3d64be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGB2RGBPrimeFunctor_1acb8a778810744e458d5353813e3d64be" kindref="member">RGB2RGBPrimeFunctor</ref>()</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>max_(255.0)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>constructor</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\arg<sp/>max<sp/>-<sp/>the<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="classvigra_1_1RGB2RGBPrimeFunctor_1a5ed112e15d04f1ee1f025d62874fee03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGB2RGBPrimeFunctor_1acb8a778810744e458d5353813e3d64be" kindref="member">RGB2RGBPrimeFunctor</ref>(<ref refid="classvigra_1_1RGB2RGBPrimeFunctor_1a48362da7a45a737895aa2d764e7768d9" kindref="member">component_type</ref><sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>max_(max)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>apply<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="314" refid="classvigra_1_1RGB2RGBPrimeFunctor_1aa3a34299b1a2068fa8b9d7b7a0aa236d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/><ref refid="classvigra_1_1RGB2RGBPrimeFunctor_1aa3a34299b1a2068fa8b9d7b7a0aa236d" kindref="member">operator()</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rgb)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="315"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;To, 3&gt;</ref>(</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::gammaCorrection&lt;To&gt;(rgb[0],<sp/>0.45,<sp/>max_),</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::gammaCorrection&lt;To&gt;(rgb[1],<sp/>0.45,<sp/>max_),</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::gammaCorrection&lt;To&gt;(rgb[2],<sp/>0.45,<sp/>max_));</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;RGB&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGB2RGBPrimeFunctor_1a48362da7a45a737895aa2d764e7768d9" kindref="member">component_type</ref><sp/>max_;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal">};</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RGB2RGBPrimeFunctor&lt;unsigned<sp/>char,<sp/>unsigned<sp/>char&gt;</highlight></codeline>
<codeline lineno="333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>lut_[256];</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;unsigned<sp/>char,<sp/>3&gt;<sp/><ref refid="classvigra_1_1RGB2RGBPrimeFunctor_1a814051f34f09bb920da058f4d9424af3" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;unsigned<sp/>char,<sp/>3&gt;<sp/><ref refid="classvigra_1_1RGB2RGBPrimeFunctor_1aa2b14bc5d08629b194bdcc21a6d07d14" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;unsigned<sp/>char,<sp/>3&gt;<sp/><ref refid="classvigra_1_1RGB2RGBPrimeFunctor_1a4a27c57ed96ac356dec238dd7ddb15a7" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGB2RGBPrimeFunctor_1acb8a778810744e458d5353813e3d64be" kindref="member">RGB2RGBPrimeFunctor</ref>()</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;256;<sp/>++i)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lut_[i]<sp/>=<sp/>detail::gammaCorrection&lt;unsigned<sp/>char&gt;(i,<sp/>0.45,<sp/>255.0);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGB2RGBPrimeFunctor_1acb8a778810744e458d5353813e3d64be" kindref="member">RGB2RGBPrimeFunctor</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;256;<sp/>++i)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lut_[i]<sp/>=<sp/>detail::gammaCorrection&lt;unsigned<sp/>char&gt;(i,<sp/>0.45,<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>TinyVector&lt;unsigned<sp/>char,<sp/>3&gt;<sp/><ref refid="classvigra_1_1RGB2RGBPrimeFunctor_1aa3a34299b1a2068fa8b9d7b7a0aa236d" kindref="member">operator()</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rgb)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="362"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TinyVector&lt;unsigned<sp/>char,<sp/>3&gt;(lut_[rgb[0]],<sp/>lut_[rgb[1]],<sp/>lut_[rgb[2]]);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;RGB&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal">};</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>From,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>To&gt;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;RGB2RGBPrimeFunctor&lt;From,<sp/>To&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="374"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;RGB2RGBPrimeFunctor&lt;From,<sp/>To&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="378"><highlight class="normal">};</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="380"><highlight class="comment">/**<sp/>\brief<sp/>Convert<sp/>linear<sp/>(raw)<sp/>RGB<sp/>into<sp/>standardized<sp/>sRGB.</highlight></codeline>
<codeline lineno="381"><highlight class="comment"></highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>sRGB<sp/>color<sp/>space<sp/>is<sp/>a<sp/>slight<sp/>improvement<sp/>over<sp/>the<sp/>R&apos;G&apos;B&apos;<sp/>space.<sp/>It<sp/>is<sp/>now<sp/>a<sp/>widely<sp/>accepted<sp/></highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/><sp/><sp/><sp/>international<sp/>standard<sp/>(IEC<sp/>61966-2.1)<sp/>which<sp/>is<sp/>used<sp/>by<sp/>most<sp/>consumer<sp/>products</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/><sp/><sp/><sp/>(digital<sp/>cameras,<sp/>printers,<sp/>and<sp/>screens).<sp/>The<sp/>functor<sp/>realizes<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/><sp/><sp/><sp/>\f[</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C_{sRGB}<sp/>=<sp/>\left\{<sp/>\begin{array}{ll}</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>12.92\,C_{RGB}<sp/>&amp;<sp/>\textrm{<sp/>if<sp/>}\frac{C_{RGB}}{C_{max}}<sp/>\le<sp/>0.0031308<sp/>\\</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C_{max}\left(<sp/>1.055<sp/>\left(\frac{C_{RGB}}{C_{max}}\right)^{1/2.4}-0.055\right)<sp/>&amp;<sp/>\textrm{<sp/>otherwise}</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\end{array}<sp/><sp/>\right.</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/><sp/><sp/><sp/>\f]</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/><sp/><sp/><sp/>where<sp/>C<sp/>is<sp/>any<sp/>of<sp/>the<sp/>primaries<sp/>R,<sp/>G,<sp/>and<sp/>B.<sp/>By<sp/>default,<sp/>\f$<sp/>C_{max}<sp/>=<sp/>255<sp/>\f$<sp/>(this<sp/>default<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/><sp/><sp/><sp/>overridden<sp/>in<sp/>the<sp/>constructor).<sp/>If<sp/>both<sp/>source<sp/>and<sp/>target<sp/>color<sp/>components<sp/>are<sp/>stored</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/><sp/><sp/><sp/>as<sp/>&lt;tt&gt;unsigned<sp/>char&lt;/tt&gt;,<sp/>a<sp/>look-up-table<sp/>will<sp/>be<sp/>used<sp/>to<sp/>speed<sp/>up<sp/>the<sp/>transformation.</highlight></codeline>
<codeline lineno="399"><highlight class="comment"></highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>From,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>To<sp/>=<sp/>From&gt;</highlight></codeline>
<codeline lineno="405" refid="classvigra_1_1RGB2sRGBFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1RGB2sRGBFunctor" kindref="compound" tooltip="Convert linear (raw) RGB into standardized sRGB.">RGB2sRGBFunctor</ref></highlight></codeline>
<codeline lineno="406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="classvigra_1_1RGB2sRGBFunctor_1a814051f34f09bb920da058f4d9424af3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;From, 3&gt;</ref><sp/><ref refid="classvigra_1_1RGB2sRGBFunctor_1a814051f34f09bb920da058f4d9424af3" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415" refid="classvigra_1_1RGB2sRGBFunctor_1aa2b14bc5d08629b194bdcc21a6d07d14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;To, 3&gt;</ref><sp/><ref refid="classvigra_1_1RGB2sRGBFunctor_1aa2b14bc5d08629b194bdcc21a6d07d14" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419" refid="classvigra_1_1RGB2sRGBFunctor_1a4a27c57ed96ac356dec238dd7ddb15a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;To, 3&gt;</ref><sp/><ref refid="classvigra_1_1RGB2sRGBFunctor_1a4a27c57ed96ac356dec238dd7ddb15a7" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>result<sp/>component&apos;s<sp/>promote<sp/>type</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423" refid="classvigra_1_1RGB2sRGBFunctor_1a48362da7a45a737895aa2d764e7768d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;To&gt;::RealPromote<sp/><ref refid="classvigra_1_1RGB2sRGBFunctor_1a48362da7a45a737895aa2d764e7768d9" kindref="member">component_type</ref>;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Default<sp/>constructor.</highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component<sp/>defaults<sp/>to<sp/>255</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428" refid="classvigra_1_1RGB2sRGBFunctor_1a85474dc67e90e6256d6228d638d32141" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGB2sRGBFunctor_1a85474dc67e90e6256d6228d638d32141" kindref="member">RGB2sRGBFunctor</ref>()</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>max_(255.0)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>constructor</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\arg<sp/>max<sp/>-<sp/>the<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435" refid="classvigra_1_1RGB2sRGBFunctor_1a5b89e9a0a93c7510b6103de4baae85a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGB2sRGBFunctor_1a85474dc67e90e6256d6228d638d32141" kindref="member">RGB2sRGBFunctor</ref>(<ref refid="classvigra_1_1RGB2sRGBFunctor_1a48362da7a45a737895aa2d764e7768d9" kindref="member">component_type</ref><sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>max_(max)</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="439"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>apply<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="440"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="442" refid="classvigra_1_1RGB2sRGBFunctor_1aa3a34299b1a2068fa8b9d7b7a0aa236d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/><ref refid="classvigra_1_1RGB2sRGBFunctor_1aa3a34299b1a2068fa8b9d7b7a0aa236d" kindref="member">operator()</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rgb)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="443"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;To, 3&gt;</ref>(</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::sRGBCorrection&lt;To&gt;(rgb[0],<sp/>max_),</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::sRGBCorrection&lt;To&gt;(rgb[1],<sp/>max_),</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::sRGBCorrection&lt;To&gt;(rgb[2],<sp/>max_));</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;sRGB&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGB2sRGBFunctor_1a48362da7a45a737895aa2d764e7768d9" kindref="member">component_type</ref><sp/>max_;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="457"><highlight class="normal">};</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RGB2sRGBFunctor&lt;unsigned<sp/>char,<sp/>unsigned<sp/>char&gt;</highlight></codeline>
<codeline lineno="461"><highlight class="normal">{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>lut_[256];</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;unsigned<sp/>char,<sp/>3&gt;<sp/><ref refid="classvigra_1_1RGB2sRGBFunctor_1a814051f34f09bb920da058f4d9424af3" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;unsigned<sp/>char,<sp/>3&gt;<sp/><ref refid="classvigra_1_1RGB2sRGBFunctor_1aa2b14bc5d08629b194bdcc21a6d07d14" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;unsigned<sp/>char,<sp/>3&gt;<sp/><ref refid="classvigra_1_1RGB2sRGBFunctor_1a4a27c57ed96ac356dec238dd7ddb15a7" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGB2sRGBFunctor_1a85474dc67e90e6256d6228d638d32141" kindref="member">RGB2sRGBFunctor</ref>()</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;256;<sp/>++i)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lut_[i]<sp/>=<sp/>detail::sRGBCorrection&lt;unsigned<sp/>char&gt;(i,<sp/>255.0);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGB2sRGBFunctor_1a85474dc67e90e6256d6228d638d32141" kindref="member">RGB2sRGBFunctor</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;256;<sp/>++i)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lut_[i]<sp/>=<sp/>detail::sRGBCorrection&lt;unsigned<sp/>char&gt;(i,<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>TinyVector&lt;unsigned<sp/>char,<sp/>3&gt;<sp/><ref refid="classvigra_1_1RGB2sRGBFunctor_1aa3a34299b1a2068fa8b9d7b7a0aa236d" kindref="member">operator()</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rgb)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="490"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TinyVector&lt;unsigned<sp/>char,<sp/>3&gt;(lut_[rgb[0]],<sp/>lut_[rgb[1]],<sp/>lut_[rgb[2]]);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;sRGB&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal">};</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>From,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>To&gt;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;RGB2sRGBFunctor&lt;From,<sp/>To&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="502"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;RGB2sRGBFunctor&lt;From,<sp/>To&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="503"><highlight class="normal">{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="506"><highlight class="normal">};</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="508"><highlight class="comment">/**<sp/>\brief<sp/>Convert<sp/>non-linear<sp/>(gamma<sp/>corrected)<sp/>R&apos;G&apos;B&apos;<sp/>into<sp/>non-linear<sp/>(raw)<sp/>RGB.</highlight></codeline>
<codeline lineno="509"><highlight class="comment"></highlight></codeline>
<codeline lineno="510"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="511"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="512"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="513"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>functor<sp/>realizes<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="514"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="515"><highlight class="comment"><sp/><sp/><sp/><sp/>\f[</highlight></codeline>
<codeline lineno="516"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R<sp/>=<sp/>R_{max}<sp/>\left(\frac{R&apos;}{R_{max}}<sp/>\right)^{1/0.45}<sp/>\qquad</highlight></codeline>
<codeline lineno="517"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G<sp/>=<sp/>G_{max}<sp/>\left(\frac{G&apos;}{G_{max}}<sp/>\right)^{1/0.45}<sp/>\qquad</highlight></codeline>
<codeline lineno="518"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B<sp/>=<sp/>B_{max}<sp/>\left(\frac{B&apos;}{B_{max}}<sp/>\right)^{1/0.45}</highlight></codeline>
<codeline lineno="519"><highlight class="comment"><sp/><sp/><sp/><sp/>\f]</highlight></codeline>
<codeline lineno="520"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="521"><highlight class="comment"><sp/><sp/><sp/><sp/>By<sp/>default,<sp/>\f$<sp/>R_{max}<sp/>=<sp/>G_{max}<sp/>=<sp/>B_{max}<sp/>=<sp/>255<sp/>\f$.<sp/>This<sp/>default<sp/>can<sp/>be<sp/>overridden</highlight></codeline>
<codeline lineno="522"><highlight class="comment"><sp/><sp/><sp/><sp/>in<sp/>the<sp/>constructor.<sp/>If<sp/>both<sp/>source<sp/>and<sp/>target<sp/>color<sp/>components<sp/>are<sp/>stored<sp/></highlight></codeline>
<codeline lineno="523"><highlight class="comment"><sp/><sp/><sp/><sp/>as<sp/>&lt;tt&gt;unsigned<sp/>char&lt;/tt&gt;,<sp/>a<sp/>look-up-table<sp/>will<sp/>be<sp/>used<sp/>to<sp/>speed<sp/>up<sp/>the<sp/>transformation.</highlight></codeline>
<codeline lineno="524"><highlight class="comment"></highlight></codeline>
<codeline lineno="525"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="526"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="528"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>From,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>To<sp/>=<sp/>From&gt;</highlight></codeline>
<codeline lineno="530" refid="classvigra_1_1RGBPrime2RGBFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1RGBPrime2RGBFunctor" kindref="compound" tooltip="Convert non-linear (gamma corrected) R&amp;#39;G&amp;#39;B&amp;#39; into non-linear (raw) RGB.">RGBPrime2RGBFunctor</ref></highlight></codeline>
<codeline lineno="531"><highlight class="normal">{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="534"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="535"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536" refid="classvigra_1_1RGBPrime2RGBFunctor_1a814051f34f09bb920da058f4d9424af3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;From, 3&gt;</ref><sp/><ref refid="classvigra_1_1RGBPrime2RGBFunctor_1a814051f34f09bb920da058f4d9424af3" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="538"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540" refid="classvigra_1_1RGBPrime2RGBFunctor_1aa2b14bc5d08629b194bdcc21a6d07d14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;To, 3&gt;</ref><sp/><ref refid="classvigra_1_1RGBPrime2RGBFunctor_1aa2b14bc5d08629b194bdcc21a6d07d14" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544" refid="classvigra_1_1RGBPrime2RGBFunctor_1a4a27c57ed96ac356dec238dd7ddb15a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;To, 3&gt;</ref><sp/><ref refid="classvigra_1_1RGBPrime2RGBFunctor_1a4a27c57ed96ac356dec238dd7ddb15a7" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="546"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>result<sp/>component&apos;s<sp/>promote<sp/>type</highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548" refid="classvigra_1_1RGBPrime2RGBFunctor_1a48362da7a45a737895aa2d764e7768d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;To&gt;::RealPromote<sp/><ref refid="classvigra_1_1RGBPrime2RGBFunctor_1a48362da7a45a737895aa2d764e7768d9" kindref="member">component_type</ref>;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="550"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Default<sp/>constructor.</highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component<sp/>defaults<sp/>to<sp/>255.</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553" refid="classvigra_1_1RGBPrime2RGBFunctor_1a1b43c60f296eaf7f0b0336010de38b26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2RGBFunctor_1a1b43c60f296eaf7f0b0336010de38b26" kindref="member">RGBPrime2RGBFunctor</ref>()</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>max_(255.0),<sp/>gamma_(1.0/0.45)</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="557"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>constructor</highlight></codeline>
<codeline lineno="558"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\arg<sp/>max<sp/>-<sp/>the<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component</highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560" refid="classvigra_1_1RGBPrime2RGBFunctor_1ad7eaaa213a9da47c08b3b45655c6bd62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2RGBFunctor_1a1b43c60f296eaf7f0b0336010de38b26" kindref="member">RGBPrime2RGBFunctor</ref>(<ref refid="classvigra_1_1RGBPrime2RGBFunctor_1a48362da7a45a737895aa2d764e7768d9" kindref="member">component_type</ref><sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>max_(max),<sp/>gamma_(1.0/0.45)</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="564"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>apply<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="565"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566" refid="classvigra_1_1RGBPrime2RGBFunctor_1a71bbc41fdec4ed1859e90a63d3d7976d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/><ref refid="classvigra_1_1RGBPrime2RGBFunctor_1a71bbc41fdec4ed1859e90a63d3d7976d" kindref="member">operator()</ref>(<ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">argument_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rgb)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="567"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;To, 3&gt;</ref>(</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::gammaCorrection&lt;To&gt;(rgb[0],<sp/>gamma_,<sp/>max_),</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::gammaCorrection&lt;To&gt;(rgb[1],<sp/>gamma_,<sp/>max_),</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::gammaCorrection&lt;To&gt;(rgb[2],<sp/>gamma_,<sp/>max_));</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;RGB&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2RGBFunctor_1a48362da7a45a737895aa2d764e7768d9" kindref="member">component_type</ref><sp/>max_;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma_;</highlight></codeline>
<codeline lineno="582"><highlight class="normal">};</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RGBPrime2RGBFunctor&lt;unsigned<sp/>char,<sp/>unsigned<sp/>char&gt;</highlight></codeline>
<codeline lineno="586"><highlight class="normal">{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>lut_[256];</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;unsigned<sp/>char,<sp/>3&gt;<sp/><ref refid="classvigra_1_1RGBPrime2RGBFunctor_1a814051f34f09bb920da058f4d9424af3" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;unsigned<sp/>char,<sp/>3&gt;<sp/><ref refid="classvigra_1_1RGBPrime2RGBFunctor_1aa2b14bc5d08629b194bdcc21a6d07d14" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;unsigned<sp/>char,<sp/>3&gt;<sp/><ref refid="classvigra_1_1RGBPrime2RGBFunctor_1a4a27c57ed96ac356dec238dd7ddb15a7" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2RGBFunctor_1a1b43c60f296eaf7f0b0336010de38b26" kindref="member">RGBPrime2RGBFunctor</ref>()</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;256;<sp/>++i)</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lut_[i]<sp/>=<sp/>detail::gammaCorrection&lt;unsigned<sp/>char&gt;(i,<sp/>1.0/0.45,<sp/>255.0);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2RGBFunctor_1a1b43c60f296eaf7f0b0336010de38b26" kindref="member">RGBPrime2RGBFunctor</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;256;<sp/>++i)</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lut_[i]<sp/>=<sp/>detail::gammaCorrection&lt;unsigned<sp/>char&gt;(i,<sp/>1.0/0.45,<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>TinyVector&lt;unsigned<sp/>char,<sp/>3&gt;<sp/><ref refid="classvigra_1_1RGBPrime2RGBFunctor_1a71bbc41fdec4ed1859e90a63d3d7976d" kindref="member">operator()</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rgb)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="615"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TinyVector&lt;unsigned<sp/>char,<sp/>3&gt;(lut_[rgb[0]],<sp/>lut_[rgb[1]],<sp/>lut_[rgb[2]]);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;RGB&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal">};</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>From,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>To&gt;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;RGBPrime2RGBFunctor&lt;From,<sp/>To&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="627"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;RGBPrime2RGBFunctor&lt;From,<sp/>To&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="628"><highlight class="normal">{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="631"><highlight class="normal">};</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="633"><highlight class="comment">/**<sp/>\brief<sp/>Convert<sp/>standardized<sp/>sRGB<sp/>into<sp/>non-linear<sp/>(raw)<sp/>RGB.</highlight></codeline>
<codeline lineno="634"><highlight class="comment"></highlight></codeline>
<codeline lineno="635"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="636"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="637"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="638"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>sRGB<sp/>color<sp/>space<sp/>is<sp/>a<sp/>slight<sp/>improvement<sp/>over<sp/>the<sp/>R&apos;G&apos;B&apos;<sp/>space.<sp/>Is<sp/>is<sp/>now<sp/>a<sp/>widely<sp/>accepted<sp/></highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/><sp/><sp/><sp/>international<sp/>standard<sp/>(IEC<sp/>61966-2.1)<sp/>which<sp/>is<sp/>used<sp/>by<sp/>most<sp/>consumer<sp/>products</highlight></codeline>
<codeline lineno="640"><highlight class="comment"><sp/><sp/><sp/><sp/>(digital<sp/>cameras,<sp/>printers,<sp/>and<sp/>screens).<sp/>The<sp/>functor<sp/>realizes<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="641"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="642"><highlight class="comment"><sp/><sp/><sp/><sp/>\f[</highlight></codeline>
<codeline lineno="643"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C_{RGB}<sp/>=<sp/>\left\{\begin{array}{ll}</highlight></codeline>
<codeline lineno="644"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C_{sRGB}<sp/>/<sp/>12.92<sp/>&amp;<sp/>\textrm{if<sp/>}\frac{C_{sRGB}}{C_{max}}<sp/>\le<sp/>0.04045<sp/>\\</highlight></codeline>
<codeline lineno="645"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C_{max}\left(<sp/>\frac{C_{sRGB}/C_{max}+0.055}{1.055}\right)^{2.4}<sp/>&amp;<sp/>\textrm{otherwise}</highlight></codeline>
<codeline lineno="646"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\end{array}\right.</highlight></codeline>
<codeline lineno="647"><highlight class="comment"><sp/><sp/><sp/><sp/>\f]</highlight></codeline>
<codeline lineno="648"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="649"><highlight class="comment"><sp/><sp/><sp/><sp/>where<sp/>C<sp/>is<sp/>one<sp/>of<sp/>the<sp/>color<sp/>channels<sp/>R,<sp/>G,<sp/>or<sp/>B,<sp/>and<sp/>\f$<sp/>C_{max}\f$<sp/>equals<sp/>255<sp/>by<sp/>default<sp/>(This<sp/>default<sp/></highlight></codeline>
<codeline lineno="650"><highlight class="comment"><sp/><sp/><sp/><sp/>can<sp/>be<sp/>overridden<sp/>in<sp/>the<sp/>constructor).<sp/>If<sp/>both<sp/>source<sp/>and<sp/>target<sp/>color<sp/>components<sp/>are<sp/>stored<sp/></highlight></codeline>
<codeline lineno="651"><highlight class="comment"><sp/><sp/><sp/><sp/>as<sp/>&lt;tt&gt;unsigned<sp/>char&lt;/tt&gt;,<sp/>a<sp/>look-up-table<sp/>will<sp/>be<sp/>used<sp/>to<sp/>speed<sp/>up<sp/>the<sp/>transformation.</highlight></codeline>
<codeline lineno="652"><highlight class="comment"></highlight></codeline>
<codeline lineno="653"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="654"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="655"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="656"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>From,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>To<sp/>=<sp/>From&gt;</highlight></codeline>
<codeline lineno="658" refid="classvigra_1_1sRGB2RGBFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1sRGB2RGBFunctor" kindref="compound" tooltip="Convert standardized sRGB into non-linear (raw) RGB.">sRGB2RGBFunctor</ref></highlight></codeline>
<codeline lineno="659"><highlight class="normal">{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="662"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="663"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664" refid="classvigra_1_1sRGB2RGBFunctor_1a814051f34f09bb920da058f4d9424af3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;From, 3&gt;</ref><sp/><ref refid="classvigra_1_1sRGB2RGBFunctor_1a814051f34f09bb920da058f4d9424af3" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="666"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="667"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668" refid="classvigra_1_1sRGB2RGBFunctor_1aa2b14bc5d08629b194bdcc21a6d07d14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;To, 3&gt;</ref><sp/><ref refid="classvigra_1_1sRGB2RGBFunctor_1aa2b14bc5d08629b194bdcc21a6d07d14" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="670"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="671"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672" refid="classvigra_1_1sRGB2RGBFunctor_1a4a27c57ed96ac356dec238dd7ddb15a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;To, 3&gt;</ref><sp/><ref refid="classvigra_1_1sRGB2RGBFunctor_1a4a27c57ed96ac356dec238dd7ddb15a7" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="674"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>result<sp/>component&apos;s<sp/>promote<sp/>type</highlight></codeline>
<codeline lineno="675"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676" refid="classvigra_1_1sRGB2RGBFunctor_1a48362da7a45a737895aa2d764e7768d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;To&gt;::RealPromote<sp/><ref refid="classvigra_1_1sRGB2RGBFunctor_1a48362da7a45a737895aa2d764e7768d9" kindref="member">component_type</ref>;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="678"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Default<sp/>constructor.</highlight></codeline>
<codeline lineno="679"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component<sp/>defaults<sp/>to<sp/>255.</highlight></codeline>
<codeline lineno="680"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681" refid="classvigra_1_1sRGB2RGBFunctor_1a7acfbe75c4c42fc076bc815a262a640c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1sRGB2RGBFunctor_1a7acfbe75c4c42fc076bc815a262a640c" kindref="member">sRGB2RGBFunctor</ref>()</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>max_(255.0)</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="685"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>constructor</highlight></codeline>
<codeline lineno="686"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\arg<sp/>max<sp/>-<sp/>the<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component</highlight></codeline>
<codeline lineno="687"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688" refid="classvigra_1_1sRGB2RGBFunctor_1a8d343232732ddf8de2283f6e5b084941" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1sRGB2RGBFunctor_1a7acfbe75c4c42fc076bc815a262a640c" kindref="member">sRGB2RGBFunctor</ref>(<ref refid="classvigra_1_1sRGB2RGBFunctor_1a48362da7a45a737895aa2d764e7768d9" kindref="member">component_type</ref><sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>max_(max)</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="692"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>apply<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="693"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694" refid="classvigra_1_1sRGB2RGBFunctor_1a71bbc41fdec4ed1859e90a63d3d7976d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/><ref refid="classvigra_1_1sRGB2RGBFunctor_1a71bbc41fdec4ed1859e90a63d3d7976d" kindref="member">operator()</ref>(<ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">argument_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rgb)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="695"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;To, 3&gt;</ref>(</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::inverse_sRGBCorrection&lt;To&gt;(rgb[0],<sp/>max_),</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::inverse_sRGBCorrection&lt;To&gt;(rgb[1],<sp/>max_),</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::inverse_sRGBCorrection&lt;To&gt;(rgb[2],<sp/>max_));</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;RGB&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1sRGB2RGBFunctor_1a48362da7a45a737895aa2d764e7768d9" kindref="member">component_type</ref><sp/>max_;</highlight></codeline>
<codeline lineno="709"><highlight class="normal">};</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">sRGB2RGBFunctor&lt;unsigned<sp/>char,<sp/>unsigned<sp/>char&gt;</highlight></codeline>
<codeline lineno="713"><highlight class="normal">{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>lut_[256];</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;unsigned<sp/>char,<sp/>3&gt;<sp/><ref refid="classvigra_1_1sRGB2RGBFunctor_1a814051f34f09bb920da058f4d9424af3" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;unsigned<sp/>char,<sp/>3&gt;<sp/><ref refid="classvigra_1_1sRGB2RGBFunctor_1aa2b14bc5d08629b194bdcc21a6d07d14" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;unsigned<sp/>char,<sp/>3&gt;<sp/><ref refid="classvigra_1_1sRGB2RGBFunctor_1a4a27c57ed96ac356dec238dd7ddb15a7" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1sRGB2RGBFunctor_1a7acfbe75c4c42fc076bc815a262a640c" kindref="member">sRGB2RGBFunctor</ref>()</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;256;<sp/>++i)</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lut_[i]<sp/>=<sp/>detail::inverse_sRGBCorrection&lt;unsigned<sp/>char&gt;(i,<sp/>255.0);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1sRGB2RGBFunctor_1a7acfbe75c4c42fc076bc815a262a640c" kindref="member">sRGB2RGBFunctor</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;256;<sp/>++i)</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lut_[i]<sp/>=<sp/>detail::inverse_sRGBCorrection&lt;unsigned<sp/>char&gt;(i,<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>TinyVector&lt;unsigned<sp/>char,<sp/>3&gt;<sp/><ref refid="classvigra_1_1sRGB2RGBFunctor_1a71bbc41fdec4ed1859e90a63d3d7976d" kindref="member">operator()</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rgb)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="742"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TinyVector&lt;unsigned<sp/>char,<sp/>3&gt;(lut_[rgb[0]],<sp/>lut_[rgb[1]],<sp/>lut_[rgb[2]]);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;RGB&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal">};</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>From,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>To&gt;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;sRGB2RGBFunctor&lt;From,<sp/>To&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="754"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;sRGB2RGBFunctor&lt;From,<sp/>To&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="755"><highlight class="normal">{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="758"><highlight class="normal">};</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="760"><highlight class="comment">/**<sp/>\brief<sp/>Convert<sp/>linear<sp/>(raw)<sp/>RGB<sp/>into<sp/>standardized<sp/>tri-stimulus<sp/>XYZ.</highlight></codeline>
<codeline lineno="761"><highlight class="comment"></highlight></codeline>
<codeline lineno="762"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="763"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="764"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="765"><highlight class="comment"><sp/><sp/><sp/><sp/>According<sp/>to<sp/>ITU-R<sp/>Recommendation<sp/>BT.709,<sp/>the<sp/>functor<sp/>realizes<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="766"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="767"><highlight class="comment"><sp/><sp/><sp/><sp/>\f[</highlight></codeline>
<codeline lineno="768"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\begin{array}{rcl}</highlight></codeline>
<codeline lineno="769"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X<sp/>&amp;<sp/>=<sp/>&amp;<sp/>0.412453\enspace<sp/>R<sp/>/<sp/>R_{max}<sp/>+<sp/>0.357580\enspace<sp/>G<sp/>/<sp/>G_{max}<sp/>+<sp/>0.180423\enspace<sp/>B<sp/>/<sp/>B_{max}\\</highlight></codeline>
<codeline lineno="770"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Y<sp/>&amp;<sp/>=<sp/>&amp;<sp/>0.212671\enspace<sp/>R<sp/>/<sp/>R_{max}<sp/>+<sp/>0.715160\enspace<sp/>G<sp/>/<sp/>G_{max}<sp/>+<sp/>0.072169\enspace<sp/>B<sp/>/<sp/>B_{max}<sp/>\\</highlight></codeline>
<codeline lineno="771"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z<sp/>&amp;<sp/>=<sp/>&amp;<sp/>0.019334\enspace<sp/>R<sp/>/<sp/>R_{max}<sp/>+<sp/>0.119193\enspace<sp/>G<sp/>/<sp/>G_{max}<sp/>+<sp/>0.950227\enspace<sp/>B<sp/>/<sp/>B_{max}</highlight></codeline>
<codeline lineno="772"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\end{array}</highlight></codeline>
<codeline lineno="773"><highlight class="comment"><sp/><sp/><sp/><sp/>\f]</highlight></codeline>
<codeline lineno="774"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="775"><highlight class="comment"><sp/><sp/><sp/><sp/>By<sp/>default,<sp/>\f$<sp/>R_{max}<sp/>=<sp/>G_{max}<sp/>=<sp/>B_{max}<sp/>=<sp/>255<sp/>\f$.<sp/>This<sp/>default<sp/>can<sp/>be<sp/>overridden</highlight></codeline>
<codeline lineno="776"><highlight class="comment"><sp/><sp/><sp/><sp/>in<sp/>the<sp/>constructor.<sp/>X,<sp/>Y,<sp/>and<sp/>Z<sp/>are<sp/>always<sp/>positive<sp/>and<sp/>reach<sp/>their<sp/>maximum<sp/>for<sp/>white.<sp/></highlight></codeline>
<codeline lineno="777"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>white<sp/>point<sp/>is<sp/>obtained<sp/>by<sp/>transforming<sp/>RGB(255,<sp/>255,<sp/>255).<sp/>It<sp/>corresponds<sp/>to<sp/>the<sp/></highlight></codeline>
<codeline lineno="778"><highlight class="comment"><sp/><sp/><sp/><sp/>D65<sp/>illuminant.<sp/>Y<sp/>represents<sp/>the<sp/>&lt;em&gt;luminance&lt;/em&gt;<sp/>(&quot;brightness&quot;)<sp/>of<sp/>the<sp/>color.<sp/>The<sp/>above</highlight></codeline>
<codeline lineno="779"><highlight class="comment"><sp/><sp/><sp/><sp/>transformation<sp/>is<sp/>officially<sp/>defined<sp/>in<sp/>connection<sp/>with<sp/>the<sp/>sRGB<sp/>color<sp/>space<sp/>(i.e.<sp/>when<sp/>the<sp/>RGB<sp/>values</highlight></codeline>
<codeline lineno="780"><highlight class="comment"><sp/><sp/><sp/><sp/>are<sp/>obtained<sp/>by<sp/>inverse<sp/>gamma<sp/>correction<sp/>of<sp/>sRGB),<sp/>other<sp/>color<sp/>spaces<sp/>use<sp/>slightly<sp/>different<sp/>numbers</highlight></codeline>
<codeline lineno="781"><highlight class="comment"><sp/><sp/><sp/><sp/>or<sp/>another<sp/>standard<sp/>illuminant<sp/>(which<sp/>gives<sp/>raise<sp/>to<sp/>significantly<sp/>different<sp/>numbers).</highlight></codeline>
<codeline lineno="782"><highlight class="comment"></highlight></codeline>
<codeline lineno="783"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="784"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="785"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="786"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="788" refid="classvigra_1_1RGB2XYZFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1RGB2XYZFunctor" kindref="compound" tooltip="Convert linear (raw) RGB into standardized tri-stimulus XYZ.">RGB2XYZFunctor</ref></highlight></codeline>
<codeline lineno="789"><highlight class="normal">{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="792"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>result&apos;s<sp/>component<sp/>type</highlight></codeline>
<codeline lineno="793"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794" refid="classvigra_1_1RGB2XYZFunctor_1a99539f874c975a1c8af60b755ce6d019" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::RealPromote<sp/><ref refid="classvigra_1_1RGB2XYZFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref>;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="796"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="797"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798" refid="classvigra_1_1RGB2XYZFunctor_1a13909c0b77f58ceccbce2a7785755c74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1RGB2XYZFunctor_1a13909c0b77f58ceccbce2a7785755c74" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="800"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="801"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802" refid="classvigra_1_1RGB2XYZFunctor_1af7a6387e520239369cc7975f216b525c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;component_type, 3&gt;</ref><sp/><ref refid="classvigra_1_1RGB2XYZFunctor_1af7a6387e520239369cc7975f216b525c" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="804"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="805"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806" refid="classvigra_1_1RGB2XYZFunctor_1a92ed0b206a7eff7322d63567c1aa94b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;component_type, 3&gt;</ref><sp/><ref refid="classvigra_1_1RGB2XYZFunctor_1a92ed0b206a7eff7322d63567c1aa94b8" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="808"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>default<sp/>constructor.</highlight></codeline>
<codeline lineno="809"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component<sp/>defaults<sp/>to<sp/>255.</highlight></codeline>
<codeline lineno="810"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811" refid="classvigra_1_1RGB2XYZFunctor_1a9bc6b0edbb2845dc51a551536330f97f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGB2XYZFunctor_1a9bc6b0edbb2845dc51a551536330f97f" kindref="member">RGB2XYZFunctor</ref>()</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>max_(255.0)</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="815"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>constructor</highlight></codeline>
<codeline lineno="816"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\arg<sp/>max<sp/>-<sp/>the<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component</highlight></codeline>
<codeline lineno="817"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818" refid="classvigra_1_1RGB2XYZFunctor_1a79b76b5a411f03f096b90fe61de4db32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGB2XYZFunctor_1a9bc6b0edbb2845dc51a551536330f97f" kindref="member">RGB2XYZFunctor</ref>(<ref refid="classvigra_1_1RGB2XYZFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>max_(max)</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="822"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>apply<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="823"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824" refid="classvigra_1_1RGB2XYZFunctor_1a71bbc41fdec4ed1859e90a63d3d7976d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/><ref refid="classvigra_1_1RGB2XYZFunctor_1a71bbc41fdec4ed1859e90a63d3d7976d" kindref="member">operator()</ref>(<ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">argument_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rgb)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="825"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>detail::RequiresExplicitCast&lt;component_type&gt;<sp/>Convert;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGB2XYZFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>red<sp/>=<sp/>rgb[0]<sp/>/<sp/>max_;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGB2XYZFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>green<sp/>=<sp/>rgb[1]<sp/>/<sp/>max_;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGB2XYZFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>blue<sp/>=<sp/>rgb[2]<sp/>/<sp/>max_;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/>result;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>Convert::cast(0.412453*red<sp/>+<sp/>0.357580*green<sp/>+<sp/>0.180423*blue);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>Convert::cast(0.212671*red<sp/>+<sp/>0.715160*green<sp/>+<sp/>0.072169*blue);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>Convert::cast(0.019334*red<sp/>+<sp/>0.119193*green<sp/>+<sp/>0.950227*blue);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;XYZ&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGB2XYZFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>max_;</highlight></codeline>
<codeline lineno="844"><highlight class="normal">};</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;RGB2XYZFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="848"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;RGB2XYZFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="849"><highlight class="normal">{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="852"><highlight class="normal">};</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="854"><highlight class="comment">/**<sp/>\brief<sp/>Convert<sp/>non-linear<sp/>(gamma<sp/>corrected)<sp/>R&apos;G&apos;B&apos;<sp/>into<sp/>standardized<sp/>tri-stimulus<sp/>XYZ.</highlight></codeline>
<codeline lineno="855"><highlight class="comment"></highlight></codeline>
<codeline lineno="856"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="857"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="858"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="859"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>functor<sp/>realizes<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="860"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="861"><highlight class="comment"><sp/><sp/><sp/><sp/>\f[</highlight></codeline>
<codeline lineno="862"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R&apos;G&apos;B&apos;<sp/>\Rightarrow<sp/>RGB<sp/>\Rightarrow<sp/>XYZ</highlight></codeline>
<codeline lineno="863"><highlight class="comment"><sp/><sp/><sp/><sp/>\f]</highlight></codeline>
<codeline lineno="864"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="865"><highlight class="comment"><sp/><sp/><sp/><sp/>See<sp/>vigra::RGBPrime2RGBFunctor<sp/>and<sp/>vigra::RGB2XYZFunctor<sp/>for<sp/>a<sp/>description<sp/>of<sp/>the<sp/>two<sp/></highlight></codeline>
<codeline lineno="866"><highlight class="comment"><sp/><sp/><sp/><sp/>steps.</highlight></codeline>
<codeline lineno="867"><highlight class="comment"></highlight></codeline>
<codeline lineno="868"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="869"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="870"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="871"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="873" refid="classvigra_1_1RGBPrime2XYZFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1RGBPrime2XYZFunctor" kindref="compound" tooltip="Convert non-linear (gamma corrected) R&amp;#39;G&amp;#39;B&amp;#39; into standardized tri-stimulus XYZ.">RGBPrime2XYZFunctor</ref></highlight></codeline>
<codeline lineno="874"><highlight class="normal">{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="877"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>result&apos;s<sp/>component<sp/>type</highlight></codeline>
<codeline lineno="878"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879" refid="classvigra_1_1RGBPrime2XYZFunctor_1a99539f874c975a1c8af60b755ce6d019" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::RealPromote<sp/><ref refid="classvigra_1_1RGBPrime2XYZFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref>;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="881"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="882"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883" refid="classvigra_1_1RGBPrime2XYZFunctor_1a13909c0b77f58ceccbce2a7785755c74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1RGBPrime2XYZFunctor_1a13909c0b77f58ceccbce2a7785755c74" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="885"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="886"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887" refid="classvigra_1_1RGBPrime2XYZFunctor_1af7a6387e520239369cc7975f216b525c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;component_type, 3&gt;</ref><sp/><ref refid="classvigra_1_1RGBPrime2XYZFunctor_1af7a6387e520239369cc7975f216b525c" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="889"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="890"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891" refid="classvigra_1_1RGBPrime2XYZFunctor_1a92ed0b206a7eff7322d63567c1aa94b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;component_type, 3&gt;</ref><sp/><ref refid="classvigra_1_1RGBPrime2XYZFunctor_1a92ed0b206a7eff7322d63567c1aa94b8" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="893"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>default<sp/>constructor</highlight></codeline>
<codeline lineno="894"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component<sp/>defaults<sp/>to<sp/>255.</highlight></codeline>
<codeline lineno="895"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896" refid="classvigra_1_1RGBPrime2XYZFunctor_1ac39834854f2330b343d1fc200b04d11b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2XYZFunctor_1ac39834854f2330b343d1fc200b04d11b" kindref="member">RGBPrime2XYZFunctor</ref>()</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>gamma_(1.0/<sp/>0.45),<sp/>max_(<ref refid="classvigra_1_1RGBPrime2XYZFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref>(255.0))</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="900"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>constructor</highlight></codeline>
<codeline lineno="901"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\arg<sp/>max<sp/>-<sp/>the<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component</highlight></codeline>
<codeline lineno="902"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903" refid="classvigra_1_1RGBPrime2XYZFunctor_1ac07ac06632b2865298ae4da4060efead" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2XYZFunctor_1ac39834854f2330b343d1fc200b04d11b" kindref="member">RGBPrime2XYZFunctor</ref>(<ref refid="classvigra_1_1RGBPrime2XYZFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>gamma_(1.0/<sp/>0.45),<sp/>max_(max)</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="907"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>apply<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="908"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909" refid="classvigra_1_1RGBPrime2XYZFunctor_1a71bbc41fdec4ed1859e90a63d3d7976d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/><ref refid="classvigra_1_1RGBPrime2XYZFunctor_1a71bbc41fdec4ed1859e90a63d3d7976d" kindref="member">operator()</ref>(<ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">argument_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rgb)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="910"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>detail::RequiresExplicitCast&lt;component_type&gt;<sp/>Convert;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2XYZFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>red<sp/>=<sp/>detail::gammaCorrection&lt;component_type&gt;(rgb[0]/max_,<sp/>gamma_);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2XYZFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>green<sp/>=<sp/>detail::gammaCorrection&lt;component_type&gt;(rgb[1]/max_,<sp/>gamma_);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2XYZFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>blue<sp/>=<sp/>detail::gammaCorrection&lt;component_type&gt;(rgb[2]/max_,<sp/>gamma_);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/>result;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>Convert::cast(0.412453*red<sp/>+<sp/>0.357580*green<sp/>+<sp/>0.180423*blue);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>Convert::cast(0.212671*red<sp/>+<sp/>0.715160*green<sp/>+<sp/>0.072169*blue);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>Convert::cast(0.019334*red<sp/>+<sp/>0.119193*green<sp/>+<sp/>0.950227*blue);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;XYZ&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma_;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2XYZFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>max_;</highlight></codeline>
<codeline lineno="930"><highlight class="normal">};</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;RGBPrime2XYZFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="934"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;RGBPrime2XYZFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="935"><highlight class="normal">{</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="938"><highlight class="normal">};</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="940"><highlight class="comment">/**<sp/>\brief<sp/>Convert<sp/>standardized<sp/>tri-stimulus<sp/>XYZ<sp/>into<sp/>linear<sp/>(raw)<sp/>RGB.</highlight></codeline>
<codeline lineno="941"><highlight class="comment"></highlight></codeline>
<codeline lineno="942"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="943"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="944"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="945"><highlight class="comment"><sp/><sp/><sp/><sp/>According<sp/>to<sp/>ITU-R<sp/>Recommendation<sp/>BT.709,<sp/>the<sp/>functor<sp/>realizes<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="946"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="947"><highlight class="comment"><sp/><sp/><sp/><sp/>\f[</highlight></codeline>
<codeline lineno="948"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\begin{array}{rcl}</highlight></codeline>
<codeline lineno="949"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R<sp/>&amp;<sp/>=<sp/>&amp;<sp/>R_{max}<sp/>(3.2404813432\enspace<sp/>X<sp/>-<sp/>1.5371515163\enspace<sp/>Y<sp/>-<sp/>0.4985363262\enspace<sp/>Z)<sp/>\\</highlight></codeline>
<codeline lineno="950"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G<sp/>&amp;<sp/>=<sp/>&amp;<sp/>G_{max}<sp/>(-0.9692549500\enspace<sp/>X<sp/>+<sp/>1.8759900015\enspace<sp/>Y<sp/>+<sp/>0.0415559266\enspace<sp/>Z)<sp/>\\</highlight></codeline>
<codeline lineno="951"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B<sp/>&amp;<sp/>=<sp/>&amp;<sp/>B_{max}<sp/>(0.0556466391\enspace<sp/>X<sp/>-<sp/>0.2040413384\enspace<sp/>Y<sp/>+<sp/>1.0573110696\enspace<sp/>Z)</highlight></codeline>
<codeline lineno="952"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\end{array}</highlight></codeline>
<codeline lineno="953"><highlight class="comment"><sp/><sp/><sp/><sp/>\f]</highlight></codeline>
<codeline lineno="954"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="955"><highlight class="comment"><sp/><sp/><sp/><sp/>By<sp/>default,<sp/>\f$<sp/>R_{max}<sp/>=<sp/>G_{max}<sp/>=<sp/>B_{max}<sp/>=<sp/>255<sp/>\f$.<sp/>This<sp/>default<sp/>can<sp/>be<sp/>overridden</highlight></codeline>
<codeline lineno="956"><highlight class="comment"><sp/><sp/><sp/><sp/>in<sp/>the<sp/>constructor.<sp/>This<sp/>is<sp/>the<sp/>inverse<sp/>transform<sp/>of<sp/>vigra::RGB2XYZFunctor.</highlight></codeline>
<codeline lineno="957"><highlight class="comment"></highlight></codeline>
<codeline lineno="958"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="959"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="960"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="961"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="963" refid="classvigra_1_1XYZ2RGBFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1XYZ2RGBFunctor" kindref="compound" tooltip="Convert standardized tri-stimulus XYZ into linear (raw) RGB.">XYZ2RGBFunctor</ref></highlight></codeline>
<codeline lineno="964"><highlight class="normal">{</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::RealPromote<sp/>component_type;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>component_type<sp/>max_;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="970"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type.<sp/>(Actually,<sp/>the<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="971"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>more<sp/>general:<sp/>&lt;TT&gt;V&lt;/TT&gt;<sp/>with<sp/>arbitrary</highlight></codeline>
<codeline lineno="972"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;TT&gt;V&lt;/TT&gt;.<sp/>But<sp/>this<sp/>cannot<sp/>be<sp/>expressed<sp/>in<sp/>a<sp/>typedef.)</highlight></codeline>
<codeline lineno="973"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974" refid="classvigra_1_1XYZ2RGBFunctor_1a13909c0b77f58ceccbce2a7785755c74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1XYZ2RGBFunctor_1a13909c0b77f58ceccbce2a7785755c74" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="976"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="977"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978" refid="classvigra_1_1XYZ2RGBFunctor_1a980a03bc088751a82063d4ebd664de6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1XYZ2RGBFunctor_1a980a03bc088751a82063d4ebd664de6b" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="980"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="981"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982" refid="classvigra_1_1XYZ2RGBFunctor_1a818a92fdb6cfee7cd1a828c5b5d625ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1XYZ2RGBFunctor_1a818a92fdb6cfee7cd1a828c5b5d625ee" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="984"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>default<sp/>constructor.</highlight></codeline>
<codeline lineno="985"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component<sp/>defaults<sp/>to<sp/>255.</highlight></codeline>
<codeline lineno="986"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987" refid="classvigra_1_1XYZ2RGBFunctor_1a63e90d881eeeffee4008b750dfab5d40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1XYZ2RGBFunctor_1a63e90d881eeeffee4008b750dfab5d40" kindref="member">XYZ2RGBFunctor</ref>()</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>max_(255.0)</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="991"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>constructor</highlight></codeline>
<codeline lineno="992"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\arg<sp/>max<sp/>-<sp/>the<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component</highlight></codeline>
<codeline lineno="993"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994" refid="classvigra_1_1XYZ2RGBFunctor_1a0c6f50ea5791b28950e3fe1b1888d19c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1XYZ2RGBFunctor_1a63e90d881eeeffee4008b750dfab5d40" kindref="member">XYZ2RGBFunctor</ref>(component_type<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>max_(max)</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="998"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>apply<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="999"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="1001" refid="classvigra_1_1XYZ2RGBFunctor_1a2b7df25723e418f9afd6ec92f39f22b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/><ref refid="classvigra_1_1XYZ2RGBFunctor_1a2b7df25723e418f9afd6ec92f39f22b3" kindref="member">operator()</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>xyz)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1002"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>detail::RequiresExplicitCast&lt;component_type&gt;<sp/>Convert;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>component_type<sp/>red<sp/><sp/><sp/>=<sp/>Convert::cast(<sp/>3.2404813432*xyz[0]<sp/>-<sp/>1.5371515163*xyz[1]<sp/>-<sp/>0.4985363262*xyz[2]);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>component_type<sp/>green<sp/>=<sp/>Convert::cast(-0.9692549500*xyz[0]<sp/>+<sp/>1.8759900015*xyz[1]<sp/>+<sp/>0.0415559266*xyz[2]);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>component_type<sp/>blue<sp/><sp/>=<sp/>Convert::cast(<sp/>0.0556466391*xyz[0]<sp/>-<sp/>0.2040413384*xyz[1]<sp/>+<sp/>1.0573110696*xyz[2]);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1XYZ2RGBFunctor_1a818a92fdb6cfee7cd1a828c5b5d625ee" kindref="member">value_type</ref>(NumericTraits&lt;T&gt;::fromRealPromote(red<sp/>*<sp/>max_),</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumericTraits&lt;T&gt;::fromRealPromote(green<sp/>*<sp/>max_),</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumericTraits&lt;T&gt;::fromRealPromote(blue<sp/>*<sp/>max_));</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;RGB&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;XYZ2RGBFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;XYZ2RGBFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1026"><highlight class="comment">/**<sp/>\brief<sp/>Convert<sp/>standardized<sp/>tri-stimulus<sp/>XYZ<sp/>into<sp/>non-linear<sp/>(gamma<sp/>corrected)<sp/>R&apos;G&apos;B&apos;.</highlight></codeline>
<codeline lineno="1027"><highlight class="comment"></highlight></codeline>
<codeline lineno="1028"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="1029"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="1030"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1031"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>functor<sp/>realizes<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="1032"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1033"><highlight class="comment"><sp/><sp/><sp/><sp/>\f[</highlight></codeline>
<codeline lineno="1034"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XYZ<sp/>\Rightarrow<sp/>RGB<sp/>\Rightarrow<sp/>R&apos;G&apos;B&apos;</highlight></codeline>
<codeline lineno="1035"><highlight class="comment"><sp/><sp/><sp/><sp/>\f]</highlight></codeline>
<codeline lineno="1036"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1037"><highlight class="comment"><sp/><sp/><sp/><sp/>See<sp/>vigra::XYZ2RGBFunctor<sp/>and<sp/>vigra::RGB2RGBPrimeFunctor<sp/>for<sp/>a<sp/>description<sp/>of<sp/>the<sp/>two<sp/></highlight></codeline>
<codeline lineno="1038"><highlight class="comment"><sp/><sp/><sp/><sp/>steps.</highlight></codeline>
<codeline lineno="1039"><highlight class="comment"></highlight></codeline>
<codeline lineno="1040"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1041"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1042"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="1043"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1045" refid="classvigra_1_1XYZ2RGBPrimeFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1XYZ2RGBPrimeFunctor" kindref="compound" tooltip="Convert standardized tri-stimulus XYZ into non-linear (gamma corrected) R&amp;#39;G&amp;#39;B&amp;#39;.">XYZ2RGBPrimeFunctor</ref></highlight></codeline>
<codeline lineno="1046"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::RealPromote<sp/>component_type;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma_;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>component_type<sp/>max_;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1055"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type.<sp/>(actually,<sp/>the<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="1056"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can<sp/>be<sp/>any<sp/>vector<sp/>type<sp/>with<sp/>the<sp/>same<sp/>interface.<sp/></highlight></codeline>
<codeline lineno="1057"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>But<sp/>this<sp/>cannot<sp/>be<sp/>expressed<sp/>in<sp/>a<sp/>typedef.)</highlight></codeline>
<codeline lineno="1058"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059" refid="classvigra_1_1XYZ2RGBPrimeFunctor_1a13909c0b77f58ceccbce2a7785755c74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1XYZ2RGBPrimeFunctor_1a13909c0b77f58ceccbce2a7785755c74" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1061"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="1062"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063" refid="classvigra_1_1XYZ2RGBPrimeFunctor_1a980a03bc088751a82063d4ebd664de6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1XYZ2RGBPrimeFunctor_1a980a03bc088751a82063d4ebd664de6b" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1065"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="1066"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067" refid="classvigra_1_1XYZ2RGBPrimeFunctor_1a818a92fdb6cfee7cd1a828c5b5d625ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1XYZ2RGBPrimeFunctor_1a818a92fdb6cfee7cd1a828c5b5d625ee" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1069"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>default<sp/>constructor.</highlight></codeline>
<codeline lineno="1070"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component<sp/>defaults<sp/>to<sp/>255.</highlight></codeline>
<codeline lineno="1071"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1072" refid="classvigra_1_1XYZ2RGBPrimeFunctor_1ac8fe1251b8c05786fbbe75f0c78fce38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1XYZ2RGBPrimeFunctor_1ac8fe1251b8c05786fbbe75f0c78fce38" kindref="member">XYZ2RGBPrimeFunctor</ref>()</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>gamma_(0.45),<sp/>max_(component_type(255.0))</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1076"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>constructor</highlight></codeline>
<codeline lineno="1077"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\arg<sp/>max<sp/>-<sp/>the<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component</highlight></codeline>
<codeline lineno="1078"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079" refid="classvigra_1_1XYZ2RGBPrimeFunctor_1ac7aa6c62c57e605be821d85f508614a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1XYZ2RGBPrimeFunctor_1ac8fe1251b8c05786fbbe75f0c78fce38" kindref="member">XYZ2RGBPrimeFunctor</ref>(component_type<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>gamma_(0.45),<sp/>max_(max)</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1083"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>apply<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="1084"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="1086" refid="classvigra_1_1XYZ2RGBPrimeFunctor_1a2b7df25723e418f9afd6ec92f39f22b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/><ref refid="classvigra_1_1XYZ2RGBPrimeFunctor_1a2b7df25723e418f9afd6ec92f39f22b3" kindref="member">operator()</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>xyz)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1087"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>detail::RequiresExplicitCast&lt;component_type&gt;<sp/>Convert;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>component_type<sp/>red<sp/><sp/><sp/>=<sp/>Convert::cast(<sp/>3.2404813432*xyz[0]<sp/>-<sp/>1.5371515163*xyz[1]<sp/>-<sp/>0.4985363262*xyz[2]);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>component_type<sp/>green<sp/>=<sp/>Convert::cast(-0.9692549500*xyz[0]<sp/>+<sp/>1.8759900015*xyz[1]<sp/>+<sp/>0.0415559266*xyz[2]);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>component_type<sp/>blue<sp/><sp/>=<sp/>Convert::cast(<sp/>0.0556466391*xyz[0]<sp/>-<sp/>0.2040413384*xyz[1]<sp/>+<sp/>1.0573110696*xyz[2]);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1XYZ2RGBPrimeFunctor_1a818a92fdb6cfee7cd1a828c5b5d625ee" kindref="member">value_type</ref>(NumericTraits&lt;T&gt;::fromRealPromote(detail::gammaCorrection&lt;component_type&gt;(red,<sp/>gamma_)<sp/>*<sp/>max_),</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumericTraits&lt;T&gt;::fromRealPromote(detail::gammaCorrection&lt;component_type&gt;(green,<sp/>gamma_)<sp/>*<sp/>max_),</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumericTraits&lt;T&gt;::fromRealPromote(detail::gammaCorrection&lt;component_type&gt;(blue,<sp/>gamma_)<sp/>*<sp/>max_));</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;RGB&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1101"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;XYZ2RGBPrimeFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;XYZ2RGBPrimeFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1111"><highlight class="comment">/**<sp/>\brief<sp/>Convert<sp/>standardized<sp/>tri-stimulus<sp/>XYZ<sp/>into<sp/>perceptual<sp/>uniform<sp/>CIE<sp/>L*u*v*.</highlight></codeline>
<codeline lineno="1112"><highlight class="comment"></highlight></codeline>
<codeline lineno="1113"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="1114"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="1115"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1116"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>functor<sp/>realizes<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="1117"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1118"><highlight class="comment"><sp/><sp/><sp/><sp/>\f[</highlight></codeline>
<codeline lineno="1119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\begin{array}{rcl}</highlight></codeline>
<codeline lineno="1120"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L^{*}<sp/>&amp;<sp/>=<sp/>&amp;<sp/>116<sp/>\left(<sp/>\frac{Y}{Y_n}<sp/>\right)^\frac{1}{3}-16<sp/>\quad<sp/>\mbox{if}<sp/>\quad<sp/>0.008856<sp/>&lt;<sp/>\frac{Y}{Y_n}\\</highlight></codeline>
<codeline lineno="1121"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>&amp;<sp/>\\</highlight></codeline>
<codeline lineno="1122"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L^{*}<sp/>&amp;<sp/>=<sp/>&amp;<sp/>903.3\enspace<sp/>\frac{Y}{Y_n}<sp/>\quad<sp/>\mbox{otherwise}<sp/>\\</highlight></codeline>
<codeline lineno="1123"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>&amp;<sp/>\\</highlight></codeline>
<codeline lineno="1124"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1125"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u&apos;<sp/>&amp;<sp/>=<sp/>&amp;<sp/>\frac{4<sp/>X}{X+15<sp/>Y<sp/>+<sp/>3<sp/>Z},<sp/>\quad<sp/></highlight></codeline>
<codeline lineno="1126"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v&apos;<sp/>=<sp/>\frac{9<sp/>Y}{X+15<sp/>Y<sp/>+<sp/>3<sp/>Z}\\</highlight></codeline>
<codeline lineno="1127"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>&amp;<sp/>\\</highlight></codeline>
<codeline lineno="1128"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u^{*}<sp/>&amp;<sp/>=<sp/>&amp;<sp/>13<sp/>L^{*}<sp/>(u&apos;<sp/>-<sp/>u_n&apos;),<sp/>\quad<sp/>v^{*}<sp/>=<sp/>13<sp/>L^{*}<sp/>(v&apos;<sp/>-<sp/>v_n&apos;)</highlight></codeline>
<codeline lineno="1129"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\end{array}</highlight></codeline>
<codeline lineno="1130"><highlight class="comment"><sp/><sp/><sp/><sp/>\f]</highlight></codeline>
<codeline lineno="1131"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1132"><highlight class="comment"><sp/><sp/><sp/><sp/>where<sp/>\f$(X_n,<sp/>Y_n,<sp/>Z_n)<sp/>=<sp/>(0.950456,<sp/>1.0,<sp/>1.088754)\f$<sp/>is<sp/>the<sp/>reference<sp/>white<sp/>point<sp/>of<sp/>standard<sp/>illuminant<sp/>D65,<sp/></highlight></codeline>
<codeline lineno="1133"><highlight class="comment"><sp/><sp/><sp/><sp/>and<sp/>\f$u_n&apos;<sp/>=<sp/>0.197839,<sp/>v_n&apos;=0.468342\f$<sp/>are<sp/>the<sp/>quantities<sp/>\f$u&apos;,<sp/>v&apos;\f$<sp/>calculated<sp/>for<sp/>this<sp/>point.<sp/></highlight></codeline>
<codeline lineno="1134"><highlight class="comment"><sp/><sp/><sp/><sp/>\f$L^{*}\f$<sp/>represents<sp/>the<sp/>&lt;em&gt;lightness&lt;/em&gt;<sp/>(&quot;brightness&quot;)<sp/>of<sp/>the<sp/>color,<sp/>and<sp/>\f$u^{*},<sp/>v^{*}\f$<sp/>code<sp/>the<sp/></highlight></codeline>
<codeline lineno="1135"><highlight class="comment"><sp/><sp/><sp/><sp/>chromaticity.<sp/>(Instead<sp/>of<sp/>the<sp/>rationals<sp/>\f$\frac{216}{24389}\f$<sp/>and<sp/>\f$\frac{24389}{27}\f$,<sp/>the<sp/>original<sp/>standard<sp/>gives<sp/>the</highlight></codeline>
<codeline lineno="1136"><highlight class="comment"><sp/><sp/><sp/><sp/>rounded<sp/>values<sp/>0.008856<sp/>and<sp/>903.3.<sp/>As<sp/>&lt;a<sp/>href=&quot;http://www.brucelindbloom.com/index.html?LContinuity.html&quot;&gt;Bruce<sp/>Lindbloom&lt;/a&gt;<sp/></highlight></codeline>
<codeline lineno="1137"><highlight class="comment"><sp/><sp/><sp/><sp/>points<sp/>out,<sp/>the<sp/>rounded<sp/>values<sp/>give<sp/>raise<sp/>to<sp/>a<sp/>discontinuity<sp/>which<sp/>is<sp/>removed<sp/>by<sp/>the<sp/>accurate<sp/>rationals.<sp/>This<sp/>bug<sp/>will<sp/>be<sp/>fixed<sp/></highlight></codeline>
<codeline lineno="1138"><highlight class="comment"><sp/><sp/><sp/><sp/>in<sp/>future<sp/>versions<sp/>of<sp/>the<sp/>CIE<sp/>Luv<sp/>standard.)</highlight></codeline>
<codeline lineno="1139"><highlight class="comment"></highlight></codeline>
<codeline lineno="1140"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1141"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1142"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="1143"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1145" refid="classvigra_1_1XYZ2LuvFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1XYZ2LuvFunctor" kindref="compound" tooltip="Convert standardized tri-stimulus XYZ into perceptual uniform CIE L*u*v*.">XYZ2LuvFunctor</ref></highlight></codeline>
<codeline lineno="1146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1149"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>result&apos;s<sp/>component<sp/>type</highlight></codeline>
<codeline lineno="1150"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151" refid="classvigra_1_1XYZ2LuvFunctor_1a99539f874c975a1c8af60b755ce6d019" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::RealPromote<sp/><ref refid="classvigra_1_1XYZ2LuvFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref>;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1153"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="1154"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1155" refid="classvigra_1_1XYZ2LuvFunctor_1a13909c0b77f58ceccbce2a7785755c74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1XYZ2LuvFunctor_1a13909c0b77f58ceccbce2a7785755c74" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="1158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159" refid="classvigra_1_1XYZ2LuvFunctor_1af7a6387e520239369cc7975f216b525c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;component_type, 3&gt;</ref><sp/><ref refid="classvigra_1_1XYZ2LuvFunctor_1af7a6387e520239369cc7975f216b525c" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1161"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="1162"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1163" refid="classvigra_1_1XYZ2LuvFunctor_1a92ed0b206a7eff7322d63567c1aa94b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;component_type, 3&gt;</ref><sp/><ref refid="classvigra_1_1XYZ2LuvFunctor_1a92ed0b206a7eff7322d63567c1aa94b8" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1XYZ2LuvFunctor" kindref="compound" tooltip="Convert standardized tri-stimulus XYZ into perceptual uniform CIE L*u*v*.">XYZ2LuvFunctor</ref>()</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>gamma_(1.0/3.0),</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kappa_(24389.0/27.0),</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>epsilon_(216.0/24389.0)</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1XYZ2LuvFunctor_1af7a6387e520239369cc7975f216b525c" kindref="member">result_type</ref><sp/>operator()(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>xyz)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1173"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1XYZ2LuvFunctor_1af7a6387e520239369cc7975f216b525c" kindref="member">result_type</ref><sp/>result;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xyz[1]<sp/>==<sp/>NumericTraits&lt;T&gt;::zero())</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>NumericTraits&lt;component_type&gt;::zero();</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>NumericTraits&lt;component_type&gt;::zero();</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>NumericTraits&lt;component_type&gt;::zero();</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>detail::RequiresExplicitCast&lt;component_type&gt;<sp/>Convert;</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1XYZ2LuvFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>L<sp/>=<sp/>Convert::cast(</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xyz[1]<sp/>&lt;<sp/>epsilon_</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>kappa_<sp/>*<sp/>xyz[1]</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>116.0<sp/>*<sp/>VIGRA_CSTD::pow((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)xyz[1],<sp/>gamma_)<sp/>-<sp/>16.0);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1XYZ2LuvFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>denom<sp/>=<sp/>Convert::cast(xyz[0]<sp/>+<sp/>15.0*xyz[1]<sp/>+<sp/>3.0*xyz[2]);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1XYZ2LuvFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>uprime<sp/>=<sp/>Convert::cast(4.0<sp/>*<sp/>xyz[0]<sp/>/<sp/>denom);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1XYZ2LuvFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>vprime<sp/>=<sp/>Convert::cast(9.0<sp/>*<sp/>xyz[1]<sp/>/<sp/>denom);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>L;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>Convert::cast(13.0*L*(uprime<sp/>-<sp/>0.197839));</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>Convert::cast(13.0*L*(vprime<sp/>-<sp/>0.468342));</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Luv&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma_,<sp/>kappa_,<sp/>epsilon_;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;XYZ2LuvFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;XYZ2LuvFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1215"><highlight class="comment">/**<sp/>\brief<sp/>Convert<sp/>perceptual<sp/>uniform<sp/>CIE<sp/>L*u*v*<sp/>into<sp/>standardized<sp/>tri-stimulus<sp/>XYZ.</highlight></codeline>
<codeline lineno="1216"><highlight class="comment"></highlight></codeline>
<codeline lineno="1217"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="1218"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="1219"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1220"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>functor<sp/>realizes<sp/>the<sp/>inverse<sp/>of<sp/>the<sp/>transformation<sp/>described<sp/>in<sp/>vigra::XYZ2LuvFunctor</highlight></codeline>
<codeline lineno="1221"><highlight class="comment"></highlight></codeline>
<codeline lineno="1222"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1223"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1224"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="1225"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1227" refid="classvigra_1_1Luv2XYZFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1Luv2XYZFunctor" kindref="compound" tooltip="Convert perceptual uniform CIE L*u*v* into standardized tri-stimulus XYZ.">Luv2XYZFunctor</ref></highlight></codeline>
<codeline lineno="1228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1231"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>result&apos;s<sp/>component<sp/>type</highlight></codeline>
<codeline lineno="1232"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233" refid="classvigra_1_1Luv2XYZFunctor_1a99539f874c975a1c8af60b755ce6d019" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::RealPromote<sp/><ref refid="classvigra_1_1Luv2XYZFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref>;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1235"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="1236"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237" refid="classvigra_1_1Luv2XYZFunctor_1a13909c0b77f58ceccbce2a7785755c74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1Luv2XYZFunctor_1a13909c0b77f58ceccbce2a7785755c74" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1239"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="1240"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241" refid="classvigra_1_1Luv2XYZFunctor_1af7a6387e520239369cc7975f216b525c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;component_type, 3&gt;</ref><sp/><ref refid="classvigra_1_1Luv2XYZFunctor_1af7a6387e520239369cc7975f216b525c" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1243"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="1244"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245" refid="classvigra_1_1Luv2XYZFunctor_1a92ed0b206a7eff7322d63567c1aa94b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;component_type, 3&gt;</ref><sp/><ref refid="classvigra_1_1Luv2XYZFunctor_1a92ed0b206a7eff7322d63567c1aa94b8" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Luv2XYZFunctor" kindref="compound" tooltip="Convert perceptual uniform CIE L*u*v* into standardized tri-stimulus XYZ.">Luv2XYZFunctor</ref>()</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>gamma_(3.0),</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ikappa_(27.0/24389.0)</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1252"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>apply<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="1253"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="1255" refid="classvigra_1_1Luv2XYZFunctor_1a303a9e6a135890ce4cae0cb236aa35f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/><ref refid="classvigra_1_1Luv2XYZFunctor_1a303a9e6a135890ce4cae0cb236aa35f9" kindref="member">operator()</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>luv)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1256"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/>result;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(luv[0]<sp/>==<sp/>NumericTraits&lt;T&gt;::zero())</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>NumericTraits&lt;component_type&gt;::zero();</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>NumericTraits&lt;component_type&gt;::zero();</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>NumericTraits&lt;component_type&gt;::zero();</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>detail::RequiresExplicitCast&lt;component_type&gt;<sp/>Convert;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Luv2XYZFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>uprime<sp/>=<sp/>Convert::cast(luv[1]<sp/>/<sp/>13.0<sp/>/<sp/>luv[0]<sp/>+<sp/>0.197839);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Luv2XYZFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>vprime<sp/>=<sp/>Convert::cast(luv[2]<sp/>/<sp/>13.0<sp/>/<sp/>luv[0]<sp/>+<sp/>0.468342);</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>Convert::cast(</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>luv[0]<sp/>&lt;<sp/>8.0<sp/></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>luv[0]<sp/>*<sp/>ikappa_<sp/></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>VIGRA_CSTD::pow((luv[0]<sp/>+<sp/>16.0)<sp/>/<sp/>116.0,<sp/>gamma_));</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>Convert::cast(9.0*uprime*result[1]<sp/>/<sp/>4.0<sp/>/<sp/>vprime);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>Convert::cast(((9.0<sp/>/<sp/>vprime<sp/>-<sp/>15.0)*result[1]<sp/>-<sp/>result[0])/<sp/>3.0);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;XYZ&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma_,<sp/>ikappa_;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;Luv2XYZFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;Luv2XYZFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1297"><highlight class="comment">/**<sp/>\brief<sp/>Convert<sp/>standardized<sp/>tri-stimulus<sp/>XYZ<sp/>into<sp/>perceptual<sp/>uniform<sp/>CIE<sp/>L*a*b*.</highlight></codeline>
<codeline lineno="1298"><highlight class="comment"></highlight></codeline>
<codeline lineno="1299"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="1300"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="1301"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1302"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>functor<sp/>realizes<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="1303"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1304"><highlight class="comment"><sp/><sp/><sp/><sp/>\f[</highlight></codeline>
<codeline lineno="1305"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\begin{array}{rcl}</highlight></codeline>
<codeline lineno="1306"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L^{*}<sp/>&amp;<sp/>=<sp/>&amp;<sp/>116<sp/>\left(<sp/>\frac{Y}{Y_n}<sp/>\right)^\frac{1}{3}-16<sp/>\quad<sp/>\mbox{if}<sp/>\quad<sp/>\frac{216}{24389}<sp/>&lt;<sp/>\frac{Y}{Y_n}\\</highlight></codeline>
<codeline lineno="1307"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>&amp;<sp/>\\</highlight></codeline>
<codeline lineno="1308"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L^{*}<sp/>&amp;<sp/>=<sp/>&amp;<sp/>\frac{24389}{27}<sp/>\enspace<sp/>\frac{Y}{Y_n}<sp/>\quad<sp/>\mbox{otherwise}<sp/>\\</highlight></codeline>
<codeline lineno="1309"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>&amp;<sp/>\\</highlight></codeline>
<codeline lineno="1310"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a^{*}<sp/>&amp;<sp/>=<sp/>&amp;<sp/>500<sp/>\left[<sp/>\left(<sp/>\frac{X}{X_n}<sp/>\right)^\frac{1}{3}<sp/>-<sp/>\left(<sp/>\frac{Y}{Y_n}<sp/>\right)^\frac{1}{3}<sp/>\right]<sp/>\\</highlight></codeline>
<codeline lineno="1311"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>&amp;<sp/>\\</highlight></codeline>
<codeline lineno="1312"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b^{*}<sp/>&amp;<sp/>=<sp/>&amp;<sp/>200<sp/>\left[<sp/>\left(<sp/>\frac{Y}{Y_n}<sp/>\right)^\frac{1}{3}<sp/>-<sp/>\left(<sp/>\frac{Z}{Z_n}<sp/>\right)^\frac{1}{3}<sp/>\right]<sp/>\\</highlight></codeline>
<codeline lineno="1313"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\end{array}</highlight></codeline>
<codeline lineno="1314"><highlight class="comment"><sp/><sp/><sp/><sp/>\f]</highlight></codeline>
<codeline lineno="1315"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1316"><highlight class="comment"><sp/><sp/><sp/><sp/>where<sp/>\f$(X_n,<sp/>Y_n,<sp/>Z_n)<sp/>=<sp/>(0.950456,<sp/>1.0,<sp/>1.088754)\f$<sp/>is<sp/>the<sp/>reference<sp/>white<sp/>point<sp/>of<sp/>standard<sp/>illuminant<sp/>D65.<sp/></highlight></codeline>
<codeline lineno="1317"><highlight class="comment"><sp/><sp/><sp/><sp/>\f$L^{*}\f$<sp/>represents<sp/>the<sp/>&lt;em&gt;lightness&lt;/em&gt;<sp/>(&quot;brightness&quot;)<sp/>of<sp/>the<sp/>color,<sp/>and<sp/>\f$a^{*},<sp/>b^{*}\f$<sp/>code<sp/>the<sp/></highlight></codeline>
<codeline lineno="1318"><highlight class="comment"><sp/><sp/><sp/><sp/>chromaticity.<sp/>(Instead<sp/>of<sp/>the<sp/>rationals<sp/>\f$\frac{216}{24389}\f$<sp/>and<sp/>\f$\frac{24389}{27}\f$,<sp/>the<sp/>original<sp/>standard<sp/>gives<sp/>the</highlight></codeline>
<codeline lineno="1319"><highlight class="comment"><sp/><sp/><sp/><sp/>rounded<sp/>values<sp/>0.008856<sp/>and<sp/>903.3.<sp/>As<sp/>&lt;a<sp/>href=&quot;http://www.brucelindbloom.com/index.html?LContinuity.html&quot;&gt;Bruce<sp/>Lindbloom&lt;/a&gt;<sp/></highlight></codeline>
<codeline lineno="1320"><highlight class="comment"><sp/><sp/><sp/><sp/>points<sp/>out,<sp/>the<sp/>rounded<sp/>values<sp/>give<sp/>raise<sp/>to<sp/>a<sp/>discontinuity<sp/>which<sp/>is<sp/>removed<sp/>by<sp/>the<sp/>accurate<sp/>rationals.<sp/>This<sp/>bug<sp/>will<sp/>be<sp/>fixed<sp/></highlight></codeline>
<codeline lineno="1321"><highlight class="comment"><sp/><sp/><sp/><sp/>in<sp/>future<sp/>versions<sp/>of<sp/>the<sp/>CIE<sp/>Lab<sp/>standard.)</highlight></codeline>
<codeline lineno="1322"><highlight class="comment"></highlight></codeline>
<codeline lineno="1323"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1324"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1325"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="1326"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1328" refid="classvigra_1_1XYZ2LabFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1XYZ2LabFunctor" kindref="compound" tooltip="Convert standardized tri-stimulus XYZ into perceptual uniform CIE L*a*b*.">XYZ2LabFunctor</ref></highlight></codeline>
<codeline lineno="1329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1332"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>result&apos;s<sp/>component<sp/>type</highlight></codeline>
<codeline lineno="1333"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334" refid="classvigra_1_1XYZ2LabFunctor_1a99539f874c975a1c8af60b755ce6d019" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::RealPromote<sp/><ref refid="classvigra_1_1XYZ2LabFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref>;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1336"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="1337"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338" refid="classvigra_1_1XYZ2LabFunctor_1a13909c0b77f58ceccbce2a7785755c74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1XYZ2LabFunctor_1a13909c0b77f58ceccbce2a7785755c74" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1340"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="1341"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342" refid="classvigra_1_1XYZ2LabFunctor_1af7a6387e520239369cc7975f216b525c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;component_type, 3&gt;</ref><sp/><ref refid="classvigra_1_1XYZ2LabFunctor_1af7a6387e520239369cc7975f216b525c" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1344"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="1345"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1346" refid="classvigra_1_1XYZ2LabFunctor_1a92ed0b206a7eff7322d63567c1aa94b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;component_type, 3&gt;</ref><sp/><ref refid="classvigra_1_1XYZ2LabFunctor_1a92ed0b206a7eff7322d63567c1aa94b8" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1XYZ2LabFunctor" kindref="compound" tooltip="Convert standardized tri-stimulus XYZ into perceptual uniform CIE L*a*b*.">XYZ2LabFunctor</ref>()</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>gamma_(1.0/3.0),</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kappa_(24389.0/27.0),</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>epsilon_(216.0/24389.0)</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1354"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>apply<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="1355"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="1357" refid="classvigra_1_1XYZ2LabFunctor_1a2b7df25723e418f9afd6ec92f39f22b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/><ref refid="classvigra_1_1XYZ2LabFunctor_1a2b7df25723e418f9afd6ec92f39f22b3" kindref="member">operator()</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>xyz)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1358"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>detail::RequiresExplicitCast&lt;component_type&gt;<sp/>Convert;</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1XYZ2LabFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>xgamma<sp/>=<sp/>Convert::cast(std::pow(xyz[0]<sp/>/<sp/>0.950456,<sp/>gamma_));</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1XYZ2LabFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>ygamma<sp/>=<sp/>Convert::cast(std::pow((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)xyz[1],<sp/>gamma_));</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1XYZ2LabFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>zgamma<sp/>=<sp/>Convert::cast(std::pow(xyz[2]<sp/>/<sp/>1.088754,<sp/>gamma_));</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1XYZ2LabFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>L<sp/>=<sp/>Convert::cast(</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xyz[1]<sp/>&lt;<sp/>epsilon_<sp/></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>kappa_<sp/>*<sp/>xyz[1]<sp/></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>116.0<sp/>*<sp/>ygamma<sp/>-<sp/>16.0);</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/>result;</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>L;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>Convert::cast(500.0*(xgamma<sp/>-<sp/>ygamma));</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>Convert::cast(200.0*(ygamma<sp/>-<sp/>zgamma));</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Lab&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma_,<sp/>kappa_,<sp/>epsilon_;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;XYZ2LabFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1385"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;XYZ2LabFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="1389"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1391"><highlight class="comment">/**<sp/>\brief<sp/>Convert<sp/>perceptual<sp/>uniform<sp/>CIE<sp/>L*a*b*<sp/>into<sp/>standardized<sp/>tri-stimulus<sp/>XYZ.</highlight></codeline>
<codeline lineno="1392"><highlight class="comment"></highlight></codeline>
<codeline lineno="1393"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="1394"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="1395"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1396"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>functor<sp/>realizes<sp/>the<sp/>inverse<sp/>of<sp/>the<sp/>transformation<sp/>described<sp/>in<sp/>vigra::XYZ2LabFunctor</highlight></codeline>
<codeline lineno="1397"><highlight class="comment"></highlight></codeline>
<codeline lineno="1398"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1399"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1400"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="1401"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1403" refid="classvigra_1_1Lab2XYZFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1Lab2XYZFunctor" kindref="compound" tooltip="Convert perceptual uniform CIE L*a*b* into standardized tri-stimulus XYZ.">Lab2XYZFunctor</ref></highlight></codeline>
<codeline lineno="1404"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1407"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>result&apos;s<sp/>component<sp/>type</highlight></codeline>
<codeline lineno="1408"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1409" refid="classvigra_1_1Lab2XYZFunctor_1a99539f874c975a1c8af60b755ce6d019" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::RealPromote<sp/><ref refid="classvigra_1_1Lab2XYZFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref>;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1411"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="1412"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1413" refid="classvigra_1_1Lab2XYZFunctor_1a13909c0b77f58ceccbce2a7785755c74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1Lab2XYZFunctor_1a13909c0b77f58ceccbce2a7785755c74" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1415"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="1416"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1417" refid="classvigra_1_1Lab2XYZFunctor_1af7a6387e520239369cc7975f216b525c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;component_type, 3&gt;</ref><sp/><ref refid="classvigra_1_1Lab2XYZFunctor_1af7a6387e520239369cc7975f216b525c" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1419"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="1420"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1421" refid="classvigra_1_1Lab2XYZFunctor_1a92ed0b206a7eff7322d63567c1aa94b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;component_type, 3&gt;</ref><sp/><ref refid="classvigra_1_1Lab2XYZFunctor_1a92ed0b206a7eff7322d63567c1aa94b8" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1423"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>value<sp/>type</highlight></codeline>
<codeline lineno="1424"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1425" refid="classvigra_1_1Lab2XYZFunctor_1a5e2947c16714ae2c2e68d2d689c8896b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Lab2XYZFunctor_1a5e2947c16714ae2c2e68d2d689c8896b" kindref="member">Lab2XYZFunctor</ref>()</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>gamma_(3.0),</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ikappa_(27.0/24389.0)</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1430"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>apply<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="1431"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="1433" refid="classvigra_1_1Lab2XYZFunctor_1aa7fd8bed862770463f75c99a6880631c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/><ref refid="classvigra_1_1Lab2XYZFunctor_1aa7fd8bed862770463f75c99a6880631c" kindref="member">operator()</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>lab)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1434"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>detail::RequiresExplicitCast&lt;component_type&gt;<sp/>Convert;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Lab2XYZFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>Y<sp/>=<sp/>Convert::cast(</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lab[0]<sp/>&lt;<sp/>8.0</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>lab[0]<sp/>*<sp/>ikappa_</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>std::pow((lab[0]<sp/>+<sp/>16.0)<sp/>/<sp/>116.0,<sp/>gamma_));</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Lab2XYZFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>ygamma<sp/>=<sp/>Convert::cast(std::pow((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)Y,<sp/>1.0<sp/>/<sp/>gamma_));</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Lab2XYZFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>X<sp/>=<sp/>Convert::cast(std::pow(lab[1]<sp/>/<sp/>500.0<sp/>+<sp/>ygamma,<sp/>gamma_)<sp/>*<sp/>0.950456);</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Lab2XYZFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>Z<sp/>=<sp/>Convert::cast(std::pow(-lab[2]<sp/>/<sp/>200.0<sp/>+<sp/>ygamma,<sp/>gamma_)<sp/>*<sp/>1.088754);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/>result;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>X;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>Y;</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>Z;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;XYZ&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma_,<sp/>ikappa_;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;Lab2XYZFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;Lab2XYZFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="1465"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1467"><highlight class="comment">/**<sp/>\brief<sp/>Convert<sp/>linear<sp/>(raw)<sp/>RGB<sp/>into<sp/>perceptual<sp/>uniform<sp/>CIE<sp/>L*u*v*.</highlight></codeline>
<codeline lineno="1468"><highlight class="comment"></highlight></codeline>
<codeline lineno="1469"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="1470"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="1471"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1472"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>functor<sp/>realizes<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="1473"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1474"><highlight class="comment"><sp/><sp/><sp/><sp/>\f[</highlight></codeline>
<codeline lineno="1475"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RGB<sp/>\Rightarrow<sp/>XYZ<sp/>\Rightarrow<sp/>L^*u^*v^*</highlight></codeline>
<codeline lineno="1476"><highlight class="comment"><sp/><sp/><sp/><sp/>\f]</highlight></codeline>
<codeline lineno="1477"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1478"><highlight class="comment"><sp/><sp/><sp/><sp/>See<sp/>vigra::RGB2XYZFunctor<sp/>and<sp/>vigra::XYZ2LuvFunctor<sp/>for<sp/>a<sp/>description<sp/>of<sp/>the<sp/>two<sp/></highlight></codeline>
<codeline lineno="1479"><highlight class="comment"><sp/><sp/><sp/><sp/>steps.<sp/>The<sp/>resulting<sp/>color<sp/>components<sp/>will<sp/>have<sp/>the<sp/>following<sp/>bounds:</highlight></codeline>
<codeline lineno="1480"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1481"><highlight class="comment"><sp/><sp/><sp/><sp/>\f[</highlight></codeline>
<codeline lineno="1482"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\begin{array}{rcl}</highlight></codeline>
<codeline lineno="1483"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>\leq<sp/>&amp;<sp/>L^*<sp/>&amp;<sp/>\leq<sp/>100<sp/>\\</highlight></codeline>
<codeline lineno="1484"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-83.077<sp/>\leq<sp/>&amp;<sp/>u^*<sp/>&amp;<sp/>\leq<sp/>175.015<sp/>\\</highlight></codeline>
<codeline lineno="1485"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-134.101<sp/>\leq<sp/>&amp;<sp/>v^*<sp/>&amp;<sp/>\leq<sp/>107.393</highlight></codeline>
<codeline lineno="1486"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\end{array}</highlight></codeline>
<codeline lineno="1487"><highlight class="comment"><sp/><sp/><sp/><sp/>\f]</highlight></codeline>
<codeline lineno="1488"><highlight class="comment"></highlight></codeline>
<codeline lineno="1489"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1490"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1491"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="1492"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1494" refid="classvigra_1_1RGB2LuvFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1RGB2LuvFunctor" kindref="compound" tooltip="Convert linear (raw) RGB into perceptual uniform CIE L*u*v*.">RGB2LuvFunctor</ref></highlight></codeline>
<codeline lineno="1495"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1497"><highlight class="comment"><sp/><sp/><sp/><sp/>L<sp/>in<sp/>[0,<sp/>100]</highlight></codeline>
<codeline lineno="1498"><highlight class="comment"><sp/><sp/><sp/><sp/>u<sp/>in<sp/>[-83.077,<sp/>175.015]</highlight></codeline>
<codeline lineno="1499"><highlight class="comment"><sp/><sp/><sp/><sp/>v<sp/>in<sp/>[-134.101,<sp/>107.393]</highlight></codeline>
<codeline lineno="1500"><highlight class="comment"><sp/><sp/><sp/><sp/>maximum<sp/>saturation:<sp/>179.04<sp/></highlight></codeline>
<codeline lineno="1501"><highlight class="comment"><sp/><sp/><sp/><sp/>red<sp/>=<sp/>[53.2406,<sp/>175.015,<sp/>37.7522]</highlight></codeline>
<codeline lineno="1502"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1505"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>result&apos;s<sp/>component<sp/>type</highlight></codeline>
<codeline lineno="1506"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1507" refid="classvigra_1_1RGB2LuvFunctor_1a99539f874c975a1c8af60b755ce6d019" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::RealPromote<sp/><ref refid="classvigra_1_1RGB2LuvFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref>;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1509"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="1510"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1511" refid="classvigra_1_1RGB2LuvFunctor_1a13909c0b77f58ceccbce2a7785755c74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1RGB2LuvFunctor_1a13909c0b77f58ceccbce2a7785755c74" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1513"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="1514"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1515" refid="classvigra_1_1RGB2LuvFunctor_1a6494c6f39d3b53bea8d500cb6bb558bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1XYZ2LuvFunctor" kindref="compound" tooltip="Convert standardized tri-stimulus XYZ into perceptual uniform CIE L*u*v*.">XYZ2LuvFunctor&lt;component_type&gt;::result_type</ref><sp/><ref refid="classvigra_1_1RGB2LuvFunctor_1a6494c6f39d3b53bea8d500cb6bb558bc" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1517"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="1518"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1519" refid="classvigra_1_1RGB2LuvFunctor_1a32a888ffaef1433b7a5b3558f5bed01a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1XYZ2LuvFunctor" kindref="compound" tooltip="Convert standardized tri-stimulus XYZ into perceptual uniform CIE L*u*v*.">XYZ2LuvFunctor&lt;component_type&gt;::result_type</ref><sp/><ref refid="classvigra_1_1RGB2LuvFunctor_1a32a888ffaef1433b7a5b3558f5bed01a" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1521"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>default<sp/>constructor.</highlight></codeline>
<codeline lineno="1522"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component<sp/>defaults<sp/>to<sp/>255.</highlight></codeline>
<codeline lineno="1523"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1524" refid="classvigra_1_1RGB2LuvFunctor_1ada1007d586d31f160c2fac451833a62b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGB2LuvFunctor_1ada1007d586d31f160c2fac451833a62b" kindref="member">RGB2LuvFunctor</ref>()</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>rgb2xyz(255.0)</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1528"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>constructor</highlight></codeline>
<codeline lineno="1529"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\arg<sp/>max<sp/>-<sp/>the<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component</highlight></codeline>
<codeline lineno="1530"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1531" refid="classvigra_1_1RGB2LuvFunctor_1a53762c509af016323dc352b926d489f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGB2LuvFunctor_1ada1007d586d31f160c2fac451833a62b" kindref="member">RGB2LuvFunctor</ref>(<ref refid="classvigra_1_1RGB2LuvFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>rgb2xyz(max)</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1535"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>apply<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="1536"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="1538" refid="classvigra_1_1RGB2LuvFunctor_1aa3a34299b1a2068fa8b9d7b7a0aa236d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGB2LuvFunctor_1a6494c6f39d3b53bea8d500cb6bb558bc" kindref="member">result_type</ref><sp/><ref refid="classvigra_1_1RGB2LuvFunctor_1aa3a34299b1a2068fa8b9d7b7a0aa236d" kindref="member">operator()</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rgb)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1539"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xyz2luv(rgb2xyz(rgb));</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Luv&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/>RGB2XYZFunctor&lt;T&gt;<sp/>rgb2xyz;</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/>XYZ2LuvFunctor&lt;component_type&gt;<sp/>xyz2luv;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;RGB2LuvFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1555"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;RGB2LuvFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1556"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="1559"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1561"><highlight class="comment">/**<sp/>\brief<sp/>Convert<sp/>linear<sp/>(raw)<sp/>RGB<sp/>into<sp/>perceptual<sp/>uniform<sp/>CIE<sp/>L*a*b*.</highlight></codeline>
<codeline lineno="1562"><highlight class="comment"></highlight></codeline>
<codeline lineno="1563"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="1564"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="1565"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1566"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>functor<sp/>realizes<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="1567"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1568"><highlight class="comment"><sp/><sp/><sp/><sp/>\f[</highlight></codeline>
<codeline lineno="1569"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RGB<sp/>\Rightarrow<sp/>XYZ<sp/>\Rightarrow<sp/>L^*a^*b^*</highlight></codeline>
<codeline lineno="1570"><highlight class="comment"><sp/><sp/><sp/><sp/>\f]</highlight></codeline>
<codeline lineno="1571"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1572"><highlight class="comment"><sp/><sp/><sp/><sp/>See<sp/>vigra::RGB2XYZFunctor<sp/>and<sp/>vigra::XYZ2LabFunctor<sp/>for<sp/>a<sp/>description<sp/>of<sp/>the<sp/>two<sp/></highlight></codeline>
<codeline lineno="1573"><highlight class="comment"><sp/><sp/><sp/><sp/>steps.<sp/>The<sp/>resulting<sp/>color<sp/>components<sp/>will<sp/>have<sp/>the<sp/>following<sp/>bounds:</highlight></codeline>
<codeline lineno="1574"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1575"><highlight class="comment"><sp/><sp/><sp/><sp/>\f[</highlight></codeline>
<codeline lineno="1576"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\begin{array}{rcl}</highlight></codeline>
<codeline lineno="1577"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>\leq<sp/>&amp;<sp/>L^*<sp/>&amp;<sp/>\leq<sp/>100<sp/>\\</highlight></codeline>
<codeline lineno="1578"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-86.1813<sp/>\leq<sp/>&amp;<sp/>u^*<sp/>&amp;<sp/>\leq<sp/>98.2352<sp/>\\</highlight></codeline>
<codeline lineno="1579"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-107.862<sp/>\leq<sp/>&amp;<sp/>v^*<sp/>&amp;<sp/>\leq<sp/>94.4758</highlight></codeline>
<codeline lineno="1580"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\end{array}</highlight></codeline>
<codeline lineno="1581"><highlight class="comment"><sp/><sp/><sp/><sp/>\f]</highlight></codeline>
<codeline lineno="1582"><highlight class="comment"></highlight></codeline>
<codeline lineno="1583"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1584"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1585"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="1586"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1588" refid="classvigra_1_1RGB2LabFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1RGB2LabFunctor" kindref="compound" tooltip="Convert linear (raw) RGB into perceptual uniform CIE L*a*b*.">RGB2LabFunctor</ref></highlight></codeline>
<codeline lineno="1589"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1591"><highlight class="comment"><sp/><sp/><sp/><sp/>L<sp/>in<sp/>[0,<sp/>100]</highlight></codeline>
<codeline lineno="1592"><highlight class="comment"><sp/><sp/><sp/><sp/>a<sp/>in<sp/>[-86.1813,<sp/>98.2352]</highlight></codeline>
<codeline lineno="1593"><highlight class="comment"><sp/><sp/><sp/><sp/>b<sp/>in<sp/>[-107.862,<sp/>94.4758]<sp/></highlight></codeline>
<codeline lineno="1594"><highlight class="comment"><sp/><sp/><sp/><sp/>maximum<sp/>saturation:<sp/>133.809</highlight></codeline>
<codeline lineno="1595"><highlight class="comment"><sp/><sp/><sp/><sp/>red<sp/>=<sp/>[53.2406,<sp/>80.0942,<sp/>67.2015]</highlight></codeline>
<codeline lineno="1596"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1599"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>result&apos;s<sp/>component<sp/>type</highlight></codeline>
<codeline lineno="1600"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1601" refid="classvigra_1_1RGB2LabFunctor_1a99539f874c975a1c8af60b755ce6d019" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::RealPromote<sp/><ref refid="classvigra_1_1RGB2LabFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref>;</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1603"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="1604"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1605" refid="classvigra_1_1RGB2LabFunctor_1a13909c0b77f58ceccbce2a7785755c74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1RGB2LabFunctor_1a13909c0b77f58ceccbce2a7785755c74" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1607"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="1608"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1609" refid="classvigra_1_1RGB2LabFunctor_1a895dc3e172e5882878fef229833da752" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1XYZ2LabFunctor" kindref="compound" tooltip="Convert standardized tri-stimulus XYZ into perceptual uniform CIE L*a*b*.">XYZ2LabFunctor&lt;component_type&gt;::result_type</ref><sp/><ref refid="classvigra_1_1RGB2LabFunctor_1a895dc3e172e5882878fef229833da752" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1611"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="1612"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1613" refid="classvigra_1_1RGB2LabFunctor_1a1b95f52c1d4d4d17a03f9df3b8a3aefa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1XYZ2LabFunctor" kindref="compound" tooltip="Convert standardized tri-stimulus XYZ into perceptual uniform CIE L*a*b*.">XYZ2LabFunctor&lt;component_type&gt;::result_type</ref><sp/><ref refid="classvigra_1_1RGB2LabFunctor_1a1b95f52c1d4d4d17a03f9df3b8a3aefa" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1615"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>default<sp/>constructor.</highlight></codeline>
<codeline lineno="1616"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component<sp/>defaults<sp/>to<sp/>255.</highlight></codeline>
<codeline lineno="1617"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1618" refid="classvigra_1_1RGB2LabFunctor_1a22ef132c1af90b58996267cfaf6aa2e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGB2LabFunctor_1a22ef132c1af90b58996267cfaf6aa2e6" kindref="member">RGB2LabFunctor</ref>()</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>rgb2xyz(255.0)</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1622"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>constructor</highlight></codeline>
<codeline lineno="1623"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\arg<sp/>max<sp/>-<sp/>the<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component</highlight></codeline>
<codeline lineno="1624"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1625" refid="classvigra_1_1RGB2LabFunctor_1aefe4a1ac31d6e0950f20ea86c7348323" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGB2LabFunctor_1a22ef132c1af90b58996267cfaf6aa2e6" kindref="member">RGB2LabFunctor</ref>(<ref refid="classvigra_1_1RGB2LabFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>rgb2xyz(max)</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1629"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>apply<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="1630"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="1632" refid="classvigra_1_1RGB2LabFunctor_1aa3a34299b1a2068fa8b9d7b7a0aa236d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGB2LabFunctor_1a895dc3e172e5882878fef229833da752" kindref="member">result_type</ref><sp/><ref refid="classvigra_1_1RGB2LabFunctor_1aa3a34299b1a2068fa8b9d7b7a0aa236d" kindref="member">operator()</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rgb)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1633"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xyz2lab(rgb2xyz(rgb));</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Lab&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/>RGB2XYZFunctor&lt;T&gt;<sp/>rgb2xyz;</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/>XYZ2LabFunctor&lt;component_type&gt;<sp/>xyz2lab;</highlight></codeline>
<codeline lineno="1645"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;RGB2LabFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1649"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;RGB2LabFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1650"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="1653"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1655"><highlight class="comment">/**<sp/>\brief<sp/>Convert<sp/>perceptual<sp/>uniform<sp/>CIE<sp/>L*u*v*<sp/>into<sp/>linear<sp/>(raw)<sp/>RGB.</highlight></codeline>
<codeline lineno="1656"><highlight class="comment"></highlight></codeline>
<codeline lineno="1657"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="1658"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="1659"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1660"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>functor<sp/>realizes<sp/>the<sp/>inverse<sp/>of<sp/>the<sp/>transformation<sp/>described<sp/>in<sp/>vigra::RGB2LuvFunctor</highlight></codeline>
<codeline lineno="1661"><highlight class="comment"></highlight></codeline>
<codeline lineno="1662"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1663"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1664"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="1665"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1667" refid="classvigra_1_1Luv2RGBFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1Luv2RGBFunctor" kindref="compound" tooltip="Convert perceptual uniform CIE L*u*v* into linear (raw) RGB.">Luv2RGBFunctor</ref></highlight></codeline>
<codeline lineno="1668"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::RealPromote<sp/>component_type;</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1XYZ2RGBFunctor" kindref="compound" tooltip="Convert standardized tri-stimulus XYZ into linear (raw) RGB.">XYZ2RGBFunctor&lt;T&gt;</ref><sp/>xyz2rgb;</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Luv2XYZFunctor" kindref="compound">Luv2XYZFunctor&lt;component_type&gt;</ref><sp/>luv2xyz;</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1675"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type.<sp/>(Actually,<sp/>the<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="1676"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can<sp/>be<sp/>any<sp/>vector<sp/>type<sp/>with<sp/>the<sp/>same<sp/>interface.<sp/></highlight></codeline>
<codeline lineno="1677"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>But<sp/>this<sp/>cannot<sp/>be<sp/>expressed<sp/>in<sp/>a<sp/>typedef.)</highlight></codeline>
<codeline lineno="1678"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1679" refid="classvigra_1_1Luv2RGBFunctor_1a13909c0b77f58ceccbce2a7785755c74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1Luv2RGBFunctor_1a13909c0b77f58ceccbce2a7785755c74" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1681"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="1682"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1683" refid="classvigra_1_1Luv2RGBFunctor_1af6160a3b93c8ef0bd92f5b10944a2ccf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">XYZ2RGBFunctor&lt;T&gt;::result_type</ref><sp/><ref refid="classvigra_1_1Luv2RGBFunctor_1af6160a3b93c8ef0bd92f5b10944a2ccf" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1685"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="1686"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1687" refid="classvigra_1_1Luv2RGBFunctor_1a8bb34fdded54e7a37e84a62d920696fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">XYZ2RGBFunctor&lt;T&gt;::result_type</ref><sp/><ref refid="classvigra_1_1Luv2RGBFunctor_1a8bb34fdded54e7a37e84a62d920696fe" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Luv2RGBFunctor" kindref="compound" tooltip="Convert perceptual uniform CIE L*u*v* into linear (raw) RGB.">Luv2RGBFunctor</ref>()</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>xyz2rgb(255.0)</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Luv2RGBFunctor" kindref="compound" tooltip="Convert perceptual uniform CIE L*u*v* into linear (raw) RGB.">Luv2RGBFunctor</ref>(component_type<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>xyz2rgb(max)</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1697"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>apply<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="1698"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="1700" refid="classvigra_1_1Luv2RGBFunctor_1a303a9e6a135890ce4cae0cb236aa35f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/><ref refid="classvigra_1_1Luv2RGBFunctor_1a303a9e6a135890ce4cae0cb236aa35f9" kindref="member">operator()</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>luv)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1701"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xyz2rgb(luv2xyz(luv));</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;RGB&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1709"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;Luv2RGBFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1713"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;Luv2RGBFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1714"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="1717"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1719"><highlight class="comment">/**<sp/>\brief<sp/>Convert<sp/>perceptual<sp/>uniform<sp/>CIE<sp/>L*a*b*<sp/>into<sp/>linear<sp/>(raw)<sp/>RGB.</highlight></codeline>
<codeline lineno="1720"><highlight class="comment"></highlight></codeline>
<codeline lineno="1721"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="1722"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="1723"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1724"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>functor<sp/>realizes<sp/>the<sp/>inverse<sp/>of<sp/>the<sp/>transformation<sp/>described<sp/>in<sp/>vigra::RGB2LabFunctor</highlight></codeline>
<codeline lineno="1725"><highlight class="comment"></highlight></codeline>
<codeline lineno="1726"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1727"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1728"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="1729"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1731" refid="classvigra_1_1Lab2RGBFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1Lab2RGBFunctor" kindref="compound" tooltip="Convert perceptual uniform CIE L*a*b* into linear (raw) RGB.">Lab2RGBFunctor</ref></highlight></codeline>
<codeline lineno="1732"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::RealPromote<sp/>component_type;</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1XYZ2RGBFunctor" kindref="compound" tooltip="Convert standardized tri-stimulus XYZ into linear (raw) RGB.">XYZ2RGBFunctor&lt;T&gt;</ref><sp/>xyz2rgb;</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Lab2XYZFunctor" kindref="compound">Lab2XYZFunctor&lt;component_type&gt;</ref><sp/>lab2xyz;</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1740"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type.<sp/>(Actually,<sp/>the<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="1741"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can<sp/>be<sp/>any<sp/>vector<sp/>type<sp/>with<sp/>the<sp/>same<sp/>interface.<sp/></highlight></codeline>
<codeline lineno="1742"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>But<sp/>this<sp/>cannot<sp/>be<sp/>expressed<sp/>in<sp/>a<sp/>typedef.)</highlight></codeline>
<codeline lineno="1743"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1744" refid="classvigra_1_1Lab2RGBFunctor_1a13909c0b77f58ceccbce2a7785755c74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1Lab2RGBFunctor_1a13909c0b77f58ceccbce2a7785755c74" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1746"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="1747"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1748" refid="classvigra_1_1Lab2RGBFunctor_1af6160a3b93c8ef0bd92f5b10944a2ccf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">XYZ2RGBFunctor&lt;T&gt;::result_type</ref><sp/><ref refid="classvigra_1_1Lab2RGBFunctor_1af6160a3b93c8ef0bd92f5b10944a2ccf" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1750"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="1751"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1752" refid="classvigra_1_1Lab2RGBFunctor_1a8bb34fdded54e7a37e84a62d920696fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">XYZ2RGBFunctor&lt;T&gt;::result_type</ref><sp/><ref refid="classvigra_1_1Lab2RGBFunctor_1a8bb34fdded54e7a37e84a62d920696fe" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1754"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>default<sp/>constructor.</highlight></codeline>
<codeline lineno="1755"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component<sp/>defaults<sp/>to<sp/>255.</highlight></codeline>
<codeline lineno="1756"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1757" refid="classvigra_1_1Lab2RGBFunctor_1a2a538f52924381165b5e679697cc9c34" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Lab2RGBFunctor_1a2a538f52924381165b5e679697cc9c34" kindref="member">Lab2RGBFunctor</ref>()</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>xyz2rgb(255.0)</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1761"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>constructor</highlight></codeline>
<codeline lineno="1762"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\arg<sp/>max<sp/>-<sp/>the<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component</highlight></codeline>
<codeline lineno="1763"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1764" refid="classvigra_1_1Lab2RGBFunctor_1a084ea5e2c84ed4e1f0fe08b2c2caae83" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Lab2RGBFunctor_1a2a538f52924381165b5e679697cc9c34" kindref="member">Lab2RGBFunctor</ref>(component_type<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>xyz2rgb(max)</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1768"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>apply<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="1769"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="1771" refid="classvigra_1_1Lab2RGBFunctor_1aa7fd8bed862770463f75c99a6880631c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/><ref refid="classvigra_1_1Lab2RGBFunctor_1aa7fd8bed862770463f75c99a6880631c" kindref="member">operator()</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>lab)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1772"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xyz2rgb(lab2xyz(lab));</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;RGB&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1780"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;Lab2RGBFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1784"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;Lab2RGBFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1785"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="1788"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1790"><highlight class="comment">/**<sp/>\brief<sp/>Convert<sp/>non-linear<sp/>(gamma<sp/>corrected)<sp/>R&apos;G&apos;B&apos;<sp/>into<sp/>perceptual<sp/>uniform<sp/>CIE<sp/>L*u*v*.</highlight></codeline>
<codeline lineno="1791"><highlight class="comment"></highlight></codeline>
<codeline lineno="1792"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="1793"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="1794"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1795"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>functor<sp/>realizes<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="1796"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1797"><highlight class="comment"><sp/><sp/><sp/><sp/>\f[</highlight></codeline>
<codeline lineno="1798"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R&apos;G&apos;B&apos;<sp/>\Rightarrow<sp/>RGB<sp/>\Rightarrow<sp/>XYZ<sp/>\Rightarrow<sp/>L^*u^*v^*</highlight></codeline>
<codeline lineno="1799"><highlight class="comment"><sp/><sp/><sp/><sp/>\f]</highlight></codeline>
<codeline lineno="1800"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1801"><highlight class="comment"><sp/><sp/><sp/><sp/>See<sp/>vigra::RGBPrime2RGBFunctor,<sp/>vigra::RGB2XYZFunctor<sp/>and<sp/>vigra::XYZ2LuvFunctor<sp/>for<sp/>a<sp/>description<sp/>of<sp/>the<sp/>three<sp/></highlight></codeline>
<codeline lineno="1802"><highlight class="comment"><sp/><sp/><sp/><sp/>steps.<sp/>The<sp/>resulting<sp/>color<sp/>components<sp/>will<sp/>have<sp/>the<sp/>following<sp/>bounds:</highlight></codeline>
<codeline lineno="1803"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1804"><highlight class="comment"><sp/><sp/><sp/><sp/>\f[</highlight></codeline>
<codeline lineno="1805"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\begin{array}{rcl}</highlight></codeline>
<codeline lineno="1806"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>\leq<sp/>&amp;<sp/>L^*<sp/>&amp;<sp/>\leq<sp/>100<sp/>\\</highlight></codeline>
<codeline lineno="1807"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-83.077<sp/>\leq<sp/>&amp;<sp/>u^*<sp/>&amp;<sp/>\leq<sp/>175.015<sp/>\\</highlight></codeline>
<codeline lineno="1808"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-134.101<sp/>\leq<sp/>&amp;<sp/>v^*<sp/>&amp;<sp/>\leq<sp/>107.393</highlight></codeline>
<codeline lineno="1809"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\end{array}</highlight></codeline>
<codeline lineno="1810"><highlight class="comment"><sp/><sp/><sp/><sp/>\f]</highlight></codeline>
<codeline lineno="1811"><highlight class="comment"></highlight></codeline>
<codeline lineno="1812"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1813"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1814"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="1815"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1817" refid="classvigra_1_1RGBPrime2LuvFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1RGBPrime2LuvFunctor" kindref="compound" tooltip="Convert non-linear (gamma corrected) R&amp;#39;G&amp;#39;B&amp;#39; into perceptual uniform CIE L*u*v*.">RGBPrime2LuvFunctor</ref></highlight></codeline>
<codeline lineno="1818"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1821"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>result&apos;s<sp/>component<sp/>type</highlight></codeline>
<codeline lineno="1822"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1823" refid="classvigra_1_1RGBPrime2LuvFunctor_1a99539f874c975a1c8af60b755ce6d019" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::RealPromote<sp/><ref refid="classvigra_1_1RGBPrime2LuvFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref>;</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1825"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="1826"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1827" refid="classvigra_1_1RGBPrime2LuvFunctor_1a13909c0b77f58ceccbce2a7785755c74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1RGBPrime2LuvFunctor_1a13909c0b77f58ceccbce2a7785755c74" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1829"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="1830"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1831" refid="classvigra_1_1RGBPrime2LuvFunctor_1a6494c6f39d3b53bea8d500cb6bb558bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1XYZ2LuvFunctor" kindref="compound" tooltip="Convert standardized tri-stimulus XYZ into perceptual uniform CIE L*u*v*.">XYZ2LuvFunctor&lt;component_type&gt;::result_type</ref><sp/><ref refid="classvigra_1_1RGBPrime2LuvFunctor_1a6494c6f39d3b53bea8d500cb6bb558bc" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1833"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="1834"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1835" refid="classvigra_1_1RGBPrime2LuvFunctor_1a32a888ffaef1433b7a5b3558f5bed01a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1XYZ2LuvFunctor" kindref="compound" tooltip="Convert standardized tri-stimulus XYZ into perceptual uniform CIE L*u*v*.">XYZ2LuvFunctor&lt;component_type&gt;::result_type</ref><sp/><ref refid="classvigra_1_1RGBPrime2LuvFunctor_1a32a888ffaef1433b7a5b3558f5bed01a" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1837"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>default<sp/>constructor.</highlight></codeline>
<codeline lineno="1838"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component<sp/>defaults<sp/>to<sp/>255.</highlight></codeline>
<codeline lineno="1839"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1840" refid="classvigra_1_1RGBPrime2LuvFunctor_1a6adfb15abe1fe56a10e2faec2ac8a1ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2LuvFunctor_1a6adfb15abe1fe56a10e2faec2ac8a1ef" kindref="member">RGBPrime2LuvFunctor</ref>()</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>rgb2xyz(255.0)</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1844"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>constructor</highlight></codeline>
<codeline lineno="1845"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\arg<sp/>max<sp/>-<sp/>the<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component</highlight></codeline>
<codeline lineno="1846"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1847" refid="classvigra_1_1RGBPrime2LuvFunctor_1a32feb252971be8559772210bd0fc44c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2LuvFunctor_1a6adfb15abe1fe56a10e2faec2ac8a1ef" kindref="member">RGBPrime2LuvFunctor</ref>(<ref refid="classvigra_1_1RGBPrime2LuvFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>rgb2xyz(max)</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1851"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>apply<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="1852"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="1854" refid="classvigra_1_1RGBPrime2LuvFunctor_1aa3a34299b1a2068fa8b9d7b7a0aa236d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2LuvFunctor_1a6494c6f39d3b53bea8d500cb6bb558bc" kindref="member">result_type</ref><sp/><ref refid="classvigra_1_1RGBPrime2LuvFunctor_1aa3a34299b1a2068fa8b9d7b7a0aa236d" kindref="member">operator()</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rgb)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1855"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xyz2luv(rgb2xyz(rgb));</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Luv&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/>RGBPrime2XYZFunctor&lt;T&gt;<sp/>rgb2xyz;</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/>XYZ2LuvFunctor&lt;component_type&gt;<sp/>xyz2luv;</highlight></codeline>
<codeline lineno="1867"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;RGBPrime2LuvFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1871"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;RGBPrime2LuvFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1872"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="1875"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1877"><highlight class="comment">/**<sp/>\brief<sp/>Convert<sp/>non-linear<sp/>(gamma<sp/>corrected)<sp/>R&apos;G&apos;B&apos;<sp/>into<sp/>perceptual<sp/>uniform<sp/>CIE<sp/>L*a*b*.</highlight></codeline>
<codeline lineno="1878"><highlight class="comment"></highlight></codeline>
<codeline lineno="1879"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="1880"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="1881"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1882"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>functor<sp/>realizes<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="1883"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1884"><highlight class="comment"><sp/><sp/><sp/><sp/>\f[</highlight></codeline>
<codeline lineno="1885"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R&apos;G&apos;B&apos;<sp/>\Rightarrow<sp/>RGB<sp/>\Rightarrow<sp/>XYZ<sp/>\Rightarrow<sp/>L^*a^*b^*</highlight></codeline>
<codeline lineno="1886"><highlight class="comment"><sp/><sp/><sp/><sp/>\f]</highlight></codeline>
<codeline lineno="1887"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1888"><highlight class="comment"><sp/><sp/><sp/><sp/>See<sp/>vigra::RGBPrime2RGBFunctor,<sp/>vigra::RGB2XYZFunctor<sp/>and<sp/>vigra::XYZ2LabFunctor<sp/>for<sp/>a<sp/>description<sp/>of<sp/>the<sp/>three<sp/></highlight></codeline>
<codeline lineno="1889"><highlight class="comment"><sp/><sp/><sp/><sp/>steps.<sp/>The<sp/>resulting<sp/>color<sp/>components<sp/>will<sp/>have<sp/>the<sp/>following<sp/>bounds:</highlight></codeline>
<codeline lineno="1890"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1891"><highlight class="comment"><sp/><sp/><sp/><sp/>\f[</highlight></codeline>
<codeline lineno="1892"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\begin{array}{rcl}</highlight></codeline>
<codeline lineno="1893"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>\leq<sp/>&amp;<sp/>L^*<sp/>&amp;<sp/>\leq<sp/>100<sp/>\\</highlight></codeline>
<codeline lineno="1894"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-86.1813<sp/>\leq<sp/>&amp;<sp/>u^*<sp/>&amp;<sp/>\leq<sp/>98.2352<sp/>\\</highlight></codeline>
<codeline lineno="1895"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-107.862<sp/>\leq<sp/>&amp;<sp/>v^*<sp/>&amp;<sp/>\leq<sp/>94.4758</highlight></codeline>
<codeline lineno="1896"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\end{array}</highlight></codeline>
<codeline lineno="1897"><highlight class="comment"><sp/><sp/><sp/><sp/>\f]</highlight></codeline>
<codeline lineno="1898"><highlight class="comment"></highlight></codeline>
<codeline lineno="1899"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1900"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1901"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="1902"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1904" refid="classvigra_1_1RGBPrime2LabFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1RGBPrime2LabFunctor" kindref="compound" tooltip="Convert non-linear (gamma corrected) R&amp;#39;G&amp;#39;B&amp;#39; into perceptual uniform CIE L*a*b*.">RGBPrime2LabFunctor</ref></highlight></codeline>
<codeline lineno="1905"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1908"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>result&apos;s<sp/>component<sp/>type</highlight></codeline>
<codeline lineno="1909"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1910" refid="classvigra_1_1RGBPrime2LabFunctor_1a99539f874c975a1c8af60b755ce6d019" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::RealPromote<sp/><ref refid="classvigra_1_1RGBPrime2LabFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref>;</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1912"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="1913"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1914" refid="classvigra_1_1RGBPrime2LabFunctor_1a13909c0b77f58ceccbce2a7785755c74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1RGBPrime2LabFunctor_1a13909c0b77f58ceccbce2a7785755c74" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1916"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="1917"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1918" refid="classvigra_1_1RGBPrime2LabFunctor_1a895dc3e172e5882878fef229833da752" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1XYZ2LabFunctor" kindref="compound" tooltip="Convert standardized tri-stimulus XYZ into perceptual uniform CIE L*a*b*.">XYZ2LabFunctor&lt;component_type&gt;::result_type</ref><sp/><ref refid="classvigra_1_1RGBPrime2LabFunctor_1a895dc3e172e5882878fef229833da752" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1920"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="1921"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1922" refid="classvigra_1_1RGBPrime2LabFunctor_1a1b95f52c1d4d4d17a03f9df3b8a3aefa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1XYZ2LabFunctor" kindref="compound" tooltip="Convert standardized tri-stimulus XYZ into perceptual uniform CIE L*a*b*.">XYZ2LabFunctor&lt;component_type&gt;::result_type</ref><sp/><ref refid="classvigra_1_1RGBPrime2LabFunctor_1a1b95f52c1d4d4d17a03f9df3b8a3aefa" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1924"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>default<sp/>constructor.</highlight></codeline>
<codeline lineno="1925"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component<sp/>defaults<sp/>to<sp/>255.</highlight></codeline>
<codeline lineno="1926"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1927" refid="classvigra_1_1RGBPrime2LabFunctor_1a75f76a5b7ff2fbaa1ac613d677594f6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2LabFunctor_1a75f76a5b7ff2fbaa1ac613d677594f6a" kindref="member">RGBPrime2LabFunctor</ref>()</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>rgb2xyz(255.0)</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1931"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>constructor</highlight></codeline>
<codeline lineno="1932"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\arg<sp/>max<sp/>-<sp/>the<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component</highlight></codeline>
<codeline lineno="1933"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1934" refid="classvigra_1_1RGBPrime2LabFunctor_1aaa8f06219f6eaa4ab3870c511dbad585" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2LabFunctor_1a75f76a5b7ff2fbaa1ac613d677594f6a" kindref="member">RGBPrime2LabFunctor</ref>(<ref refid="classvigra_1_1RGBPrime2LabFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>rgb2xyz(max)</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1938"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>apply<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="1939"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="1941" refid="classvigra_1_1RGBPrime2LabFunctor_1aa3a34299b1a2068fa8b9d7b7a0aa236d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2LabFunctor_1a895dc3e172e5882878fef229833da752" kindref="member">result_type</ref><sp/><ref refid="classvigra_1_1RGBPrime2LabFunctor_1aa3a34299b1a2068fa8b9d7b7a0aa236d" kindref="member">operator()</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rgb)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1942"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xyz2lab(rgb2xyz(rgb));</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Lab&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/>RGBPrime2XYZFunctor&lt;T&gt;<sp/>rgb2xyz;</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/>XYZ2LabFunctor&lt;component_type&gt;<sp/>xyz2lab;</highlight></codeline>
<codeline lineno="1954"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;RGBPrime2LabFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1958"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;RGBPrime2LabFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1959"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="1962"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1964"><highlight class="comment">/**<sp/>\brief<sp/>Convert<sp/>perceptual<sp/>uniform<sp/>CIE<sp/>L*u*v*<sp/>into<sp/>non-linear<sp/>(gamma<sp/>corrected)<sp/>R&apos;G&apos;B&apos;.</highlight></codeline>
<codeline lineno="1965"><highlight class="comment"></highlight></codeline>
<codeline lineno="1966"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="1967"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="1968"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1969"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>functor<sp/>realizes<sp/>the<sp/>inverse<sp/>of<sp/>the<sp/>transformation<sp/>described<sp/>in<sp/>vigra::RGBPrime2LuvFunctor</highlight></codeline>
<codeline lineno="1970"><highlight class="comment"></highlight></codeline>
<codeline lineno="1971"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1972"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1973"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="1974"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1975"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1976" refid="classvigra_1_1Luv2RGBPrimeFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1Luv2RGBPrimeFunctor" kindref="compound" tooltip="Convert perceptual uniform CIE L*u*v* into non-linear (gamma corrected) R&amp;#39;G&amp;#39;B&amp;#39;.">Luv2RGBPrimeFunctor</ref></highlight></codeline>
<codeline lineno="1977"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::RealPromote<sp/>component_type;</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1XYZ2RGBPrimeFunctor" kindref="compound" tooltip="Convert standardized tri-stimulus XYZ into non-linear (gamma corrected) R&amp;#39;G&amp;#39;B&amp;#39;.">XYZ2RGBPrimeFunctor&lt;T&gt;</ref><sp/>xyz2rgb;</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Luv2XYZFunctor" kindref="compound">Luv2XYZFunctor&lt;component_type&gt;</ref><sp/>luv2xyz;</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1985"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type.<sp/>(Actually,<sp/>the<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="1986"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can<sp/>be<sp/>any<sp/>vector<sp/>type<sp/>with<sp/>the<sp/>same<sp/>interface.<sp/></highlight></codeline>
<codeline lineno="1987"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>But<sp/>this<sp/>cannot<sp/>be<sp/>expressed<sp/>in<sp/>a<sp/>typedef.)</highlight></codeline>
<codeline lineno="1988"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1989" refid="classvigra_1_1Luv2RGBPrimeFunctor_1a13909c0b77f58ceccbce2a7785755c74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1Luv2RGBPrimeFunctor_1a13909c0b77f58ceccbce2a7785755c74" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1991"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="1992"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1993" refid="classvigra_1_1Luv2RGBPrimeFunctor_1af6160a3b93c8ef0bd92f5b10944a2ccf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">XYZ2RGBFunctor&lt;T&gt;::result_type</ref><sp/><ref refid="classvigra_1_1Luv2RGBPrimeFunctor_1af6160a3b93c8ef0bd92f5b10944a2ccf" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1995"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="1996"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1997" refid="classvigra_1_1Luv2RGBPrimeFunctor_1a8bb34fdded54e7a37e84a62d920696fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">XYZ2RGBFunctor&lt;T&gt;::result_type</ref><sp/><ref refid="classvigra_1_1Luv2RGBPrimeFunctor_1a8bb34fdded54e7a37e84a62d920696fe" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1999"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>default<sp/>constructor.</highlight></codeline>
<codeline lineno="2000"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component<sp/>defaults<sp/>to<sp/>255.</highlight></codeline>
<codeline lineno="2001"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2002" refid="classvigra_1_1Luv2RGBPrimeFunctor_1ad816ea19ccddd22d4aa6a2a13a3a3c00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Luv2RGBPrimeFunctor_1ad816ea19ccddd22d4aa6a2a13a3a3c00" kindref="member">Luv2RGBPrimeFunctor</ref>()</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>xyz2rgb(255.0)</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2006"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>constructor</highlight></codeline>
<codeline lineno="2007"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\arg<sp/>max<sp/>-<sp/>the<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component</highlight></codeline>
<codeline lineno="2008"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2009" refid="classvigra_1_1Luv2RGBPrimeFunctor_1af903bc76777f6974c44e67a508c39b77" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Luv2RGBPrimeFunctor_1ad816ea19ccddd22d4aa6a2a13a3a3c00" kindref="member">Luv2RGBPrimeFunctor</ref>(component_type<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>xyz2rgb(max)</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2013"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>apply<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="2014"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="2016" refid="classvigra_1_1Luv2RGBPrimeFunctor_1a303a9e6a135890ce4cae0cb236aa35f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/><ref refid="classvigra_1_1Luv2RGBPrimeFunctor_1a303a9e6a135890ce4cae0cb236aa35f9" kindref="member">operator()</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>luv)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2017"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xyz2rgb(luv2xyz(luv));</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;RGB&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2025"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"></highlight></codeline>
<codeline lineno="2027"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;Luv2RGBPrimeFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="2029"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;Luv2RGBPrimeFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="2030"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="2033"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2035"><highlight class="comment">/**<sp/>\brief<sp/>Convert<sp/>perceptual<sp/>uniform<sp/>CIE<sp/>L*a*b*<sp/>into<sp/>non-linear<sp/>(gamma<sp/>corrected)<sp/>R&apos;G&apos;B&apos;.</highlight></codeline>
<codeline lineno="2036"><highlight class="comment"></highlight></codeline>
<codeline lineno="2037"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="2038"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="2039"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2040"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>functor<sp/>realizes<sp/>the<sp/>inverse<sp/>of<sp/>the<sp/>transformation<sp/>described<sp/>in<sp/>vigra::RGBPrime2LabFunctor</highlight></codeline>
<codeline lineno="2041"><highlight class="comment"></highlight></codeline>
<codeline lineno="2042"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="2043"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2044"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="2045"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2046"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2047" refid="classvigra_1_1Lab2RGBPrimeFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1Lab2RGBPrimeFunctor" kindref="compound" tooltip="Convert perceptual uniform CIE L*a*b* into non-linear (gamma corrected) R&amp;#39;G&amp;#39;B&amp;#39;.">Lab2RGBPrimeFunctor</ref></highlight></codeline>
<codeline lineno="2048"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::RealPromote<sp/>component_type;</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1XYZ2RGBPrimeFunctor" kindref="compound" tooltip="Convert standardized tri-stimulus XYZ into non-linear (gamma corrected) R&amp;#39;G&amp;#39;B&amp;#39;.">XYZ2RGBPrimeFunctor&lt;T&gt;</ref><sp/>xyz2rgb;</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Lab2XYZFunctor" kindref="compound">Lab2XYZFunctor&lt;component_type&gt;</ref><sp/>lab2xyz;</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2056"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type.<sp/>(Actually,<sp/>the<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="2057"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can<sp/>be<sp/>any<sp/>vector<sp/>type<sp/>with<sp/>the<sp/>same<sp/>interface.<sp/></highlight></codeline>
<codeline lineno="2058"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>But<sp/>this<sp/>cannot<sp/>be<sp/>expressed<sp/>in<sp/>a<sp/>typedef.)</highlight></codeline>
<codeline lineno="2059"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2060" refid="classvigra_1_1Lab2RGBPrimeFunctor_1a13909c0b77f58ceccbce2a7785755c74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1Lab2RGBPrimeFunctor_1a13909c0b77f58ceccbce2a7785755c74" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2062"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="2063"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2064" refid="classvigra_1_1Lab2RGBPrimeFunctor_1af6160a3b93c8ef0bd92f5b10944a2ccf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">XYZ2RGBFunctor&lt;T&gt;::result_type</ref><sp/><ref refid="classvigra_1_1Lab2RGBPrimeFunctor_1af6160a3b93c8ef0bd92f5b10944a2ccf" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2066"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="2067"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2068" refid="classvigra_1_1Lab2RGBPrimeFunctor_1a8bb34fdded54e7a37e84a62d920696fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">XYZ2RGBFunctor&lt;T&gt;::result_type</ref><sp/><ref refid="classvigra_1_1Lab2RGBPrimeFunctor_1a8bb34fdded54e7a37e84a62d920696fe" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2070"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>default<sp/>constructor.</highlight></codeline>
<codeline lineno="2071"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component<sp/>defaults<sp/>to<sp/>255.</highlight></codeline>
<codeline lineno="2072"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2073" refid="classvigra_1_1Lab2RGBPrimeFunctor_1a4982aa8e659a3dac6589dee5da55ffae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Lab2RGBPrimeFunctor_1a4982aa8e659a3dac6589dee5da55ffae" kindref="member">Lab2RGBPrimeFunctor</ref>()</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>xyz2rgb(255.0)</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2077"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>constructor</highlight></codeline>
<codeline lineno="2078"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\arg<sp/>max<sp/>-<sp/>the<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component</highlight></codeline>
<codeline lineno="2079"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2080" refid="classvigra_1_1Lab2RGBPrimeFunctor_1aea03c2b6e079c9cc0ad7bd2d0f5e2ebd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Lab2RGBPrimeFunctor_1a4982aa8e659a3dac6589dee5da55ffae" kindref="member">Lab2RGBPrimeFunctor</ref>(component_type<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>xyz2rgb(max)</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2084"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>apply<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="2085"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="2087" refid="classvigra_1_1Lab2RGBPrimeFunctor_1aa7fd8bed862770463f75c99a6880631c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/><ref refid="classvigra_1_1Lab2RGBPrimeFunctor_1aa7fd8bed862770463f75c99a6880631c" kindref="member">operator()</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>lab)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2088"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xyz2rgb(lab2xyz(lab));</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;RGB&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2096"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;Lab2RGBPrimeFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="2100"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;Lab2RGBPrimeFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="2101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="2104"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2106"><highlight class="comment">/**<sp/>\brief<sp/>Convert<sp/>non-linear<sp/>(gamma<sp/>corrected)<sp/>R&apos;G&apos;B&apos;<sp/>into<sp/>Y&apos;PbPr<sp/>color<sp/>difference<sp/>components.</highlight></codeline>
<codeline lineno="2107"><highlight class="comment"></highlight></codeline>
<codeline lineno="2108"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="2109"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="2110"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2111"><highlight class="comment"><sp/><sp/><sp/><sp/>According<sp/>to<sp/>ITU-R<sp/>Recommendation<sp/>BT.601,<sp/>the<sp/>functor<sp/>realizes<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="2112"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2113"><highlight class="comment"><sp/><sp/><sp/><sp/>\f[</highlight></codeline>
<codeline lineno="2114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\begin{array}{rcl}</highlight></codeline>
<codeline lineno="2115"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Y&apos;<sp/>&amp;<sp/>=<sp/>&amp;<sp/>0.299\enspace<sp/>R<sp/>/<sp/>R_{max}<sp/>+<sp/>0.587\enspace<sp/>G<sp/>/<sp/>G_{max}<sp/>+<sp/>0.114\enspace<sp/>B<sp/>/<sp/>B_{max}\\</highlight></codeline>
<codeline lineno="2116"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pb<sp/>&amp;<sp/>=<sp/>&amp;<sp/>-0.1687358916\enspace<sp/>R<sp/>/<sp/>R_{max}<sp/>+<sp/>0.3312641084\enspace<sp/>G<sp/>/<sp/>G_{max}<sp/>+<sp/>0.5\enspace<sp/>B<sp/>/<sp/>B_{max}<sp/>\\</highlight></codeline>
<codeline lineno="2117"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pr<sp/>&amp;<sp/>=<sp/>&amp;<sp/>0.5\enspace<sp/>R<sp/>/<sp/>R_{max}<sp/>+<sp/>0.4186875892\enspace<sp/>G<sp/>/<sp/>G_{max}<sp/>+<sp/>0.0813124108\enspace<sp/>B<sp/>/<sp/>B_{max}</highlight></codeline>
<codeline lineno="2118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\end{array}</highlight></codeline>
<codeline lineno="2119"><highlight class="comment"><sp/><sp/><sp/><sp/>\f]</highlight></codeline>
<codeline lineno="2120"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2121"><highlight class="comment"><sp/><sp/><sp/><sp/>By<sp/>default,<sp/>\f$<sp/>R_{max}<sp/>=<sp/>G_{max}<sp/>=<sp/>B_{max}<sp/>=<sp/>255<sp/>\f$.<sp/>This<sp/>default<sp/>can<sp/>be<sp/>overridden</highlight></codeline>
<codeline lineno="2122"><highlight class="comment"><sp/><sp/><sp/><sp/>in<sp/>the<sp/>constructor.<sp/>Y&apos;<sp/>represents<sp/>the<sp/>&lt;em&gt;luminance&lt;/em&gt;<sp/>(&quot;brightness&quot;)<sp/>of<sp/>the<sp/>color,<sp/>and</highlight></codeline>
<codeline lineno="2123"><highlight class="comment"><sp/><sp/><sp/><sp/>Pb<sp/>and<sp/>Pr<sp/>are<sp/>the<sp/>blue<sp/>(B&apos;-Y&apos;)<sp/>and<sp/>red<sp/>(R&apos;-Y&apos;)<sp/>color<sp/>difference<sp/>components.<sp/></highlight></codeline>
<codeline lineno="2124"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>transformation<sp/>is<sp/>scaled<sp/>so<sp/>that<sp/>the<sp/>following<sp/>bounds<sp/>apply:</highlight></codeline>
<codeline lineno="2125"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2126"><highlight class="comment"><sp/><sp/><sp/><sp/>\f[</highlight></codeline>
<codeline lineno="2127"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\begin{array}{rcl}</highlight></codeline>
<codeline lineno="2128"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>\leq<sp/>&amp;<sp/>Y&apos;<sp/>&amp;<sp/>\leq<sp/>1<sp/>\\</highlight></codeline>
<codeline lineno="2129"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-0.5<sp/>\leq<sp/>&amp;<sp/>Pb<sp/>&amp;<sp/>\leq<sp/>0.5<sp/>\\</highlight></codeline>
<codeline lineno="2130"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-0.5<sp/>\leq<sp/>&amp;<sp/>Pr<sp/>&amp;<sp/>\leq<sp/>0.5</highlight></codeline>
<codeline lineno="2131"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\end{array}</highlight></codeline>
<codeline lineno="2132"><highlight class="comment"><sp/><sp/><sp/><sp/>\f]</highlight></codeline>
<codeline lineno="2133"><highlight class="comment"></highlight></codeline>
<codeline lineno="2134"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="2135"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2136"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="2137"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2138"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2139" refid="classvigra_1_1RGBPrime2YPrimePbPrFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1RGBPrime2YPrimePbPrFunctor" kindref="compound" tooltip="Convert non-linear (gamma corrected) R&amp;#39;G&amp;#39;B&amp;#39; into Y&amp;#39;PbPr color difference components.">RGBPrime2YPrimePbPrFunctor</ref></highlight></codeline>
<codeline lineno="2140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2142"><highlight class="comment"><sp/><sp/><sp/><sp/>Y<sp/>in<sp/>[0,<sp/>1]</highlight></codeline>
<codeline lineno="2143"><highlight class="comment"><sp/><sp/><sp/><sp/>Pb<sp/>in<sp/>[-0.5,<sp/>0.5]</highlight></codeline>
<codeline lineno="2144"><highlight class="comment"><sp/><sp/><sp/><sp/>Pr<sp/>in<sp/>[-0.5,<sp/>0.5]</highlight></codeline>
<codeline lineno="2145"><highlight class="comment"><sp/><sp/><sp/><sp/>maximum<sp/>saturation:<sp/>0.533887</highlight></codeline>
<codeline lineno="2146"><highlight class="comment"><sp/><sp/><sp/><sp/>red<sp/>=<sp/>[0.299,<sp/>-0.168736,<sp/>0.5]</highlight></codeline>
<codeline lineno="2147"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2150"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>result&apos;s<sp/>component<sp/>type</highlight></codeline>
<codeline lineno="2151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2152" refid="classvigra_1_1RGBPrime2YPrimePbPrFunctor_1a99539f874c975a1c8af60b755ce6d019" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::RealPromote<sp/><ref refid="classvigra_1_1RGBPrime2YPrimePbPrFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref>;</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2154"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="2155"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2156" refid="classvigra_1_1RGBPrime2YPrimePbPrFunctor_1a13909c0b77f58ceccbce2a7785755c74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1RGBPrime2YPrimePbPrFunctor_1a13909c0b77f58ceccbce2a7785755c74" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="2159"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2160" refid="classvigra_1_1RGBPrime2YPrimePbPrFunctor_1af7a6387e520239369cc7975f216b525c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;component_type, 3&gt;</ref><sp/><ref refid="classvigra_1_1RGBPrime2YPrimePbPrFunctor_1af7a6387e520239369cc7975f216b525c" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2162"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="2163"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2164" refid="classvigra_1_1RGBPrime2YPrimePbPrFunctor_1a92ed0b206a7eff7322d63567c1aa94b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;component_type, 3&gt;</ref><sp/><ref refid="classvigra_1_1RGBPrime2YPrimePbPrFunctor_1a92ed0b206a7eff7322d63567c1aa94b8" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>default<sp/>constructor.</highlight></codeline>
<codeline lineno="2167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component<sp/>defaults<sp/>to<sp/>255.</highlight></codeline>
<codeline lineno="2168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2169" refid="classvigra_1_1RGBPrime2YPrimePbPrFunctor_1aaafb7d337d0592d46aacb2deb85b1054" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2YPrimePbPrFunctor_1aaafb7d337d0592d46aacb2deb85b1054" kindref="member">RGBPrime2YPrimePbPrFunctor</ref>()</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>max_(255.0)</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2173"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>constructor</highlight></codeline>
<codeline lineno="2174"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\arg<sp/>max<sp/>-<sp/>the<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component</highlight></codeline>
<codeline lineno="2175"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2176" refid="classvigra_1_1RGBPrime2YPrimePbPrFunctor_1ae645e7cf4835c1634fe644039ae71e78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2YPrimePbPrFunctor_1aaafb7d337d0592d46aacb2deb85b1054" kindref="member">RGBPrime2YPrimePbPrFunctor</ref>(<ref refid="classvigra_1_1RGBPrime2YPrimePbPrFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>max_(max)</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2180"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>apply<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="2181"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="2183" refid="classvigra_1_1RGBPrime2YPrimePbPrFunctor_1aa3a34299b1a2068fa8b9d7b7a0aa236d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/><ref refid="classvigra_1_1RGBPrime2YPrimePbPrFunctor_1aa3a34299b1a2068fa8b9d7b7a0aa236d" kindref="member">operator()</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rgb)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2184"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>detail::RequiresExplicitCast&lt;component_type&gt;<sp/>Convert;</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2YPrimePbPrFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>red<sp/>=<sp/>rgb[0]<sp/>/<sp/>max_;</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2YPrimePbPrFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>green<sp/>=<sp/>rgb[1]<sp/>/<sp/>max_;</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2YPrimePbPrFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>blue<sp/>=<sp/>rgb[2]<sp/>/<sp/>max_;</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/>result;</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>Convert::cast(0.299*red<sp/>+<sp/>0.587*green<sp/>+<sp/>0.114*blue);</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>Convert::cast(-0.1687358916*red<sp/>-<sp/>0.3312641084*green<sp/>+<sp/>0.5*blue);</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>Convert::cast(0.5*red<sp/>-<sp/>0.4186875892*green<sp/>-<sp/>0.0813124108*blue);</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Y&apos;PbPr&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"></highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2YPrimePbPrFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>max_;</highlight></codeline>
<codeline lineno="2204"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"></highlight></codeline>
<codeline lineno="2206"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;RGBPrime2YPrimePbPrFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="2208"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;RGBPrime2YPrimePbPrFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="2209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="2212"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2214"><highlight class="comment">/**<sp/>\brief<sp/>Convert<sp/>Y&apos;PbPr<sp/>color<sp/>difference<sp/>components<sp/>into<sp/>non-linear<sp/>(gamma<sp/>corrected)<sp/>R&apos;G&apos;B&apos;.</highlight></codeline>
<codeline lineno="2215"><highlight class="comment"></highlight></codeline>
<codeline lineno="2216"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="2217"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="2218"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2219"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>functor<sp/>realizes<sp/>the<sp/>inverse<sp/>of<sp/>the<sp/>transformation<sp/>described<sp/>in<sp/>vigra::RGBPrime2YPrimePbPrFunctor</highlight></codeline>
<codeline lineno="2220"><highlight class="comment"></highlight></codeline>
<codeline lineno="2221"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="2222"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2223"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="2224"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2225"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2226" refid="classvigra_1_1YPrimePbPr2RGBPrimeFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1YPrimePbPr2RGBPrimeFunctor" kindref="compound" tooltip="Convert Y&amp;#39;PbPr color difference components into non-linear (gamma corrected) R&amp;#39;G&amp;#39;B&amp;#39;.">YPrimePbPr2RGBPrimeFunctor</ref></highlight></codeline>
<codeline lineno="2227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::RealPromote<sp/>component_type;</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/>component_type<sp/>max_;</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2234"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type.<sp/>(Actually,<sp/>the<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="2235"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can<sp/>be<sp/>any<sp/>vector<sp/>type<sp/>with<sp/>the<sp/>same<sp/>interface.<sp/></highlight></codeline>
<codeline lineno="2236"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>But<sp/>this<sp/>cannot<sp/>be<sp/>expressed<sp/>in<sp/>a<sp/>typedef.)</highlight></codeline>
<codeline lineno="2237"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2238" refid="classvigra_1_1YPrimePbPr2RGBPrimeFunctor_1a13909c0b77f58ceccbce2a7785755c74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1YPrimePbPr2RGBPrimeFunctor_1a13909c0b77f58ceccbce2a7785755c74" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2240"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="2241"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2242" refid="classvigra_1_1YPrimePbPr2RGBPrimeFunctor_1a980a03bc088751a82063d4ebd664de6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1YPrimePbPr2RGBPrimeFunctor_1a980a03bc088751a82063d4ebd664de6b" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2244"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="2245"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2246" refid="classvigra_1_1YPrimePbPr2RGBPrimeFunctor_1a818a92fdb6cfee7cd1a828c5b5d625ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1YPrimePbPr2RGBPrimeFunctor_1a818a92fdb6cfee7cd1a828c5b5d625ee" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2248"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>default<sp/>constructor.</highlight></codeline>
<codeline lineno="2249"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component<sp/>defaults<sp/>to<sp/>255.</highlight></codeline>
<codeline lineno="2250"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2251" refid="classvigra_1_1YPrimePbPr2RGBPrimeFunctor_1a5e4b389019f29020a7716506aba31122" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1YPrimePbPr2RGBPrimeFunctor_1a5e4b389019f29020a7716506aba31122" kindref="member">YPrimePbPr2RGBPrimeFunctor</ref>()</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>max_(255.0)</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2255"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>constructor</highlight></codeline>
<codeline lineno="2256"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\arg<sp/>max<sp/>-<sp/>the<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component</highlight></codeline>
<codeline lineno="2257"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2258" refid="classvigra_1_1YPrimePbPr2RGBPrimeFunctor_1af17d875e412d81138c1130b665c327f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1YPrimePbPr2RGBPrimeFunctor_1a5e4b389019f29020a7716506aba31122" kindref="member">YPrimePbPr2RGBPrimeFunctor</ref>(component_type<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>max_(max)</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2262"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>apply<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="2263"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="2265" refid="classvigra_1_1YPrimePbPr2RGBPrimeFunctor_1aa2a70ee4ddc38a9500c49586c93c261f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/><ref refid="classvigra_1_1YPrimePbPr2RGBPrimeFunctor_1aa2a70ee4ddc38a9500c49586c93c261f" kindref="member">operator()</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>ypbpr)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2266"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>detail::RequiresExplicitCast&lt;component_type&gt;<sp/>Convert;</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>component_type<sp/>nred<sp/><sp/><sp/>=<sp/>Convert::cast(ypbpr[0]<sp/>+<sp/>1.402*ypbpr[2]);</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>component_type<sp/>ngreen<sp/>=<sp/>Convert::cast(ypbpr[0]<sp/>-<sp/>0.3441362862*ypbpr[1]<sp/>-<sp/>0.7141362862*ypbpr[2]);</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>component_type<sp/>nblue<sp/><sp/>=<sp/>Convert::cast(ypbpr[0]<sp/>+<sp/>1.772*ypbpr[1]);</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1YPrimePbPr2RGBPrimeFunctor_1a980a03bc088751a82063d4ebd664de6b" kindref="member">result_type</ref>(NumericTraits&lt;T&gt;::fromRealPromote(nred<sp/>*<sp/>max_),</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumericTraits&lt;T&gt;::fromRealPromote(ngreen<sp/>*<sp/>max_),</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumericTraits&lt;T&gt;::fromRealPromote(nblue<sp/>*<sp/>max_));</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;RGB&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2280"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"></highlight></codeline>
<codeline lineno="2282"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;YPrimePbPr2RGBPrimeFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="2284"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;YPrimePbPr2RGBPrimeFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="2285"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="2288"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2290"><highlight class="comment">/**<sp/>\brief<sp/>Convert<sp/>non-linear<sp/>(gamma<sp/>corrected)<sp/>R&apos;G&apos;B&apos;<sp/>into<sp/>Y&apos;IQ<sp/>components.</highlight></codeline>
<codeline lineno="2291"><highlight class="comment"></highlight></codeline>
<codeline lineno="2292"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="2293"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="2294"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2295"><highlight class="comment"><sp/><sp/><sp/><sp/>According<sp/>to<sp/>the<sp/>PAL<sp/>analog<sp/>video<sp/>standard,<sp/>the<sp/>functor<sp/>realizes<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="2296"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2297"><highlight class="comment"><sp/><sp/><sp/><sp/>\f[</highlight></codeline>
<codeline lineno="2298"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\begin{array}{rcl}</highlight></codeline>
<codeline lineno="2299"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Y&apos;<sp/>&amp;<sp/>=<sp/>&amp;<sp/>0.299\enspace<sp/>R<sp/>/<sp/>R_{max}<sp/>+<sp/>0.587\enspace<sp/>G<sp/>/<sp/>G_{max}<sp/>+<sp/>0.114\enspace<sp/>B<sp/>/<sp/>B_{max}\\</highlight></codeline>
<codeline lineno="2300"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>&amp;<sp/>=<sp/>&amp;<sp/>0.596\enspace<sp/>R<sp/>/<sp/>R_{max}<sp/>-<sp/>0.274\enspace<sp/>G<sp/>/<sp/>G_{max}<sp/>-<sp/>0.322\enspace<sp/>B<sp/>/<sp/>B_{max}<sp/>\\</highlight></codeline>
<codeline lineno="2301"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q<sp/>&amp;<sp/>=<sp/>&amp;<sp/>0.212\enspace<sp/>R<sp/>/<sp/>R_{max}<sp/>-<sp/>0.523\enspace<sp/>G<sp/>/<sp/>G_{max}<sp/>+<sp/>0.311\enspace<sp/>B<sp/>/<sp/>B_{max}</highlight></codeline>
<codeline lineno="2302"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\end{array}</highlight></codeline>
<codeline lineno="2303"><highlight class="comment"><sp/><sp/><sp/><sp/>\f]</highlight></codeline>
<codeline lineno="2304"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2305"><highlight class="comment"><sp/><sp/><sp/><sp/>By<sp/>default,<sp/>\f$<sp/>R_{max}<sp/>=<sp/>G_{max}<sp/>=<sp/>B_{max}<sp/>=<sp/>255<sp/>\f$.<sp/>This<sp/>default<sp/>can<sp/>be<sp/>overridden</highlight></codeline>
<codeline lineno="2306"><highlight class="comment"><sp/><sp/><sp/><sp/>in<sp/>the<sp/>constructor.<sp/>Y&apos;<sp/>represents<sp/>the<sp/>&lt;em&gt;luminance&lt;/em&gt;<sp/>(&quot;brightness&quot;)<sp/>of<sp/>the<sp/>color.<sp/></highlight></codeline>
<codeline lineno="2307"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>transformation<sp/>is<sp/>scaled<sp/>so<sp/>that<sp/>the<sp/>following<sp/>bounds<sp/>apply:</highlight></codeline>
<codeline lineno="2308"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2309"><highlight class="comment"><sp/><sp/><sp/><sp/>\f[</highlight></codeline>
<codeline lineno="2310"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\begin{array}{rcl}</highlight></codeline>
<codeline lineno="2311"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>\leq<sp/>&amp;<sp/>Y&apos;<sp/>&amp;<sp/>\leq<sp/>1<sp/>\\</highlight></codeline>
<codeline lineno="2312"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-0.596<sp/>\leq<sp/>&amp;<sp/>I<sp/>&amp;<sp/>\leq<sp/>0.596<sp/>\\</highlight></codeline>
<codeline lineno="2313"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-0.523<sp/>\leq<sp/>&amp;<sp/>Q<sp/>&amp;<sp/>\leq<sp/>0.523</highlight></codeline>
<codeline lineno="2314"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\end{array}</highlight></codeline>
<codeline lineno="2315"><highlight class="comment"><sp/><sp/><sp/><sp/>\f]</highlight></codeline>
<codeline lineno="2316"><highlight class="comment"></highlight></codeline>
<codeline lineno="2317"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="2318"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2319"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="2320"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2321"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2322" refid="classvigra_1_1RGBPrime2YPrimeIQFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1RGBPrime2YPrimeIQFunctor" kindref="compound" tooltip="Convert non-linear (gamma corrected) R&amp;#39;G&amp;#39;B&amp;#39; into Y&amp;#39;IQ components.">RGBPrime2YPrimeIQFunctor</ref></highlight></codeline>
<codeline lineno="2323"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2325"><highlight class="comment"><sp/><sp/><sp/><sp/>Y<sp/>in<sp/>[0,<sp/>1]</highlight></codeline>
<codeline lineno="2326"><highlight class="comment"><sp/><sp/><sp/><sp/>I<sp/>in<sp/>[-0.596,<sp/>0.596]</highlight></codeline>
<codeline lineno="2327"><highlight class="comment"><sp/><sp/><sp/><sp/>Q<sp/>in<sp/>[-0.523,<sp/>0.523]</highlight></codeline>
<codeline lineno="2328"><highlight class="comment"><sp/><sp/><sp/><sp/>maximum<sp/>saturation:<sp/>0.632582</highlight></codeline>
<codeline lineno="2329"><highlight class="comment"><sp/><sp/><sp/><sp/>red<sp/>=<sp/>[0.299,<sp/>0.596,<sp/>0.212]</highlight></codeline>
<codeline lineno="2330"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2333"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>result&apos;s<sp/>component<sp/>type</highlight></codeline>
<codeline lineno="2334"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2335" refid="classvigra_1_1RGBPrime2YPrimeIQFunctor_1a99539f874c975a1c8af60b755ce6d019" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::RealPromote<sp/><ref refid="classvigra_1_1RGBPrime2YPrimeIQFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref>;</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2337"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="2338"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2339" refid="classvigra_1_1RGBPrime2YPrimeIQFunctor_1a13909c0b77f58ceccbce2a7785755c74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1RGBPrime2YPrimeIQFunctor_1a13909c0b77f58ceccbce2a7785755c74" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2341"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="2342"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2343" refid="classvigra_1_1RGBPrime2YPrimeIQFunctor_1af7a6387e520239369cc7975f216b525c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;component_type, 3&gt;</ref><sp/><ref refid="classvigra_1_1RGBPrime2YPrimeIQFunctor_1af7a6387e520239369cc7975f216b525c" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2345"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="2346"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2347" refid="classvigra_1_1RGBPrime2YPrimeIQFunctor_1a92ed0b206a7eff7322d63567c1aa94b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;component_type, 3&gt;</ref><sp/><ref refid="classvigra_1_1RGBPrime2YPrimeIQFunctor_1a92ed0b206a7eff7322d63567c1aa94b8" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2349"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>default<sp/>constructor.</highlight></codeline>
<codeline lineno="2350"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component<sp/>defaults<sp/>to<sp/>255.</highlight></codeline>
<codeline lineno="2351"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2352" refid="classvigra_1_1RGBPrime2YPrimeIQFunctor_1aed7fb7518a26ccfc42c912d9366b5278" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2YPrimeIQFunctor_1aed7fb7518a26ccfc42c912d9366b5278" kindref="member">RGBPrime2YPrimeIQFunctor</ref>()</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>max_(255.0)</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2356"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>constructor</highlight></codeline>
<codeline lineno="2357"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\arg<sp/>max<sp/>-<sp/>the<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component</highlight></codeline>
<codeline lineno="2358"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2359" refid="classvigra_1_1RGBPrime2YPrimeIQFunctor_1ae4d172e5439a67d92a15a98904c20496" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2YPrimeIQFunctor_1aed7fb7518a26ccfc42c912d9366b5278" kindref="member">RGBPrime2YPrimeIQFunctor</ref>(<ref refid="classvigra_1_1RGBPrime2YPrimeIQFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>max_(max)</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2363"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>apply<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="2364"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="2366" refid="classvigra_1_1RGBPrime2YPrimeIQFunctor_1aa3a34299b1a2068fa8b9d7b7a0aa236d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/><ref refid="classvigra_1_1RGBPrime2YPrimeIQFunctor_1aa3a34299b1a2068fa8b9d7b7a0aa236d" kindref="member">operator()</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rgb)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2367"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>detail::RequiresExplicitCast&lt;component_type&gt;<sp/>Convert;</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2YPrimeIQFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>red<sp/>=<sp/>rgb[0]<sp/>/<sp/>max_;</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2YPrimeIQFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>green<sp/>=<sp/>rgb[1]<sp/>/<sp/>max_;</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2YPrimeIQFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>blue<sp/>=<sp/>rgb[2]<sp/>/<sp/>max_;</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/>result;</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>Convert::cast(0.299*red<sp/>+<sp/>0.587*green<sp/>+<sp/>0.114*blue);</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>Convert::cast(0.596*red<sp/>-<sp/>0.274*green<sp/>-<sp/>0.322*blue);</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>Convert::cast(0.212*red<sp/>-<sp/>0.523*green<sp/>+<sp/>0.311*blue);</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Y&apos;IQ&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"></highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2YPrimeIQFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>max_;</highlight></codeline>
<codeline lineno="2387"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"></highlight></codeline>
<codeline lineno="2389"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;RGBPrime2YPrimeIQFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="2391"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;RGBPrime2YPrimeIQFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="2392"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="2395"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2397"><highlight class="comment">/**<sp/>\brief<sp/>Convert<sp/>Y&apos;IQ<sp/>color<sp/>components<sp/>into<sp/>non-linear<sp/>(gamma<sp/>corrected)<sp/>R&apos;G&apos;B&apos;.</highlight></codeline>
<codeline lineno="2398"><highlight class="comment"></highlight></codeline>
<codeline lineno="2399"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="2400"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="2401"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2402"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>functor<sp/>realizes<sp/>the<sp/>inverse<sp/>of<sp/>the<sp/>transformation<sp/>described<sp/>in<sp/>vigra::RGBPrime2YPrimeIQFunctor</highlight></codeline>
<codeline lineno="2403"><highlight class="comment"></highlight></codeline>
<codeline lineno="2404"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="2405"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2406"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="2407"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2408"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2409" refid="classvigra_1_1YPrimeIQ2RGBPrimeFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1YPrimeIQ2RGBPrimeFunctor" kindref="compound" tooltip="Convert Y&amp;#39;IQ color components into non-linear (gamma corrected) R&amp;#39;G&amp;#39;B&amp;#39;.">YPrimeIQ2RGBPrimeFunctor</ref></highlight></codeline>
<codeline lineno="2410"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::RealPromote<sp/>component_type;</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/>component_type<sp/>max_;</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2417"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type.<sp/>(Actually,<sp/>the<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="2418"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can<sp/>be<sp/>any<sp/>vector<sp/>type<sp/>with<sp/>the<sp/>same<sp/>interface.<sp/></highlight></codeline>
<codeline lineno="2419"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>But<sp/>this<sp/>cannot<sp/>be<sp/>expressed<sp/>in<sp/>a<sp/>typedef.)</highlight></codeline>
<codeline lineno="2420"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2421" refid="classvigra_1_1YPrimeIQ2RGBPrimeFunctor_1a13909c0b77f58ceccbce2a7785755c74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1YPrimeIQ2RGBPrimeFunctor_1a13909c0b77f58ceccbce2a7785755c74" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2423"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="2424"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2425" refid="classvigra_1_1YPrimeIQ2RGBPrimeFunctor_1a980a03bc088751a82063d4ebd664de6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1YPrimeIQ2RGBPrimeFunctor_1a980a03bc088751a82063d4ebd664de6b" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2427"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="2428"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2429" refid="classvigra_1_1YPrimeIQ2RGBPrimeFunctor_1a818a92fdb6cfee7cd1a828c5b5d625ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1YPrimeIQ2RGBPrimeFunctor_1a818a92fdb6cfee7cd1a828c5b5d625ee" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2431"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>default<sp/>constructor.</highlight></codeline>
<codeline lineno="2432"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component<sp/>defaults<sp/>to<sp/>255.</highlight></codeline>
<codeline lineno="2433"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2434" refid="classvigra_1_1YPrimeIQ2RGBPrimeFunctor_1a101fd898d6fcfc19805691721a5284d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1YPrimeIQ2RGBPrimeFunctor_1a101fd898d6fcfc19805691721a5284d4" kindref="member">YPrimeIQ2RGBPrimeFunctor</ref>()</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>max_(255.0)</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2438"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>constructor</highlight></codeline>
<codeline lineno="2439"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\arg<sp/>max<sp/>-<sp/>the<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component</highlight></codeline>
<codeline lineno="2440"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2441" refid="classvigra_1_1YPrimeIQ2RGBPrimeFunctor_1ae03c4865c6890dc2b4e2faf6a722bcd2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1YPrimeIQ2RGBPrimeFunctor_1a101fd898d6fcfc19805691721a5284d4" kindref="member">YPrimeIQ2RGBPrimeFunctor</ref>(component_type<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>max_(max)</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2445"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>apply<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="2446"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="2448" refid="classvigra_1_1YPrimeIQ2RGBPrimeFunctor_1aca07370928720ff13189e2e2c9f1d087" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/><ref refid="classvigra_1_1YPrimeIQ2RGBPrimeFunctor_1aca07370928720ff13189e2e2c9f1d087" kindref="member">operator()</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>yiq)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2449"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>detail::RequiresExplicitCast&lt;component_type&gt;<sp/>Convert;</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>component_type<sp/>nred<sp/><sp/><sp/>=<sp/>Convert::cast(yiq[0]<sp/>+<sp/>0.9548892043*yiq[1]<sp/>+<sp/>0.6221039350*yiq[2]);</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>component_type<sp/>ngreen<sp/>=<sp/>Convert::cast(yiq[0]<sp/>-<sp/>0.2713547827*yiq[1]<sp/>-<sp/>0.6475120259*yiq[2]);</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>component_type<sp/>nblue<sp/><sp/>=<sp/>Convert::cast(yiq[0]<sp/>-<sp/>1.1072510054*yiq[1]<sp/>+<sp/>1.7024603738*yiq[2]);</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1YPrimeIQ2RGBPrimeFunctor_1a980a03bc088751a82063d4ebd664de6b" kindref="member">result_type</ref>(NumericTraits&lt;T&gt;::fromRealPromote(nred<sp/>*<sp/>max_),</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumericTraits&lt;T&gt;::fromRealPromote(ngreen<sp/>*<sp/>max_),</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumericTraits&lt;T&gt;::fromRealPromote(nblue<sp/>*<sp/>max_));</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;RGB&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2463"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"></highlight></codeline>
<codeline lineno="2465"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;YPrimeIQ2RGBPrimeFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="2467"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;YPrimeIQ2RGBPrimeFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="2468"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="2471"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2473"><highlight class="comment">/**<sp/>\brief<sp/>Convert<sp/>non-linear<sp/>(gamma<sp/>corrected)<sp/>R&apos;G&apos;B&apos;<sp/>into<sp/>Y&apos;UV<sp/>components.</highlight></codeline>
<codeline lineno="2474"><highlight class="comment"></highlight></codeline>
<codeline lineno="2475"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="2476"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="2477"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2478"><highlight class="comment"><sp/><sp/><sp/><sp/>According<sp/>to<sp/>the<sp/>NTSC<sp/>analog<sp/>video<sp/>standard,<sp/>the<sp/>functor<sp/>realizes<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="2479"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2480"><highlight class="comment"><sp/><sp/><sp/><sp/>\f[</highlight></codeline>
<codeline lineno="2481"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\begin{array}{rcl}</highlight></codeline>
<codeline lineno="2482"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Y&apos;<sp/>&amp;<sp/>=<sp/>&amp;<sp/>0.299\enspace<sp/>R<sp/>/<sp/>R_{max}<sp/>+<sp/>0.587\enspace<sp/>G<sp/>/<sp/>G_{max}<sp/>+<sp/>0.114\enspace<sp/>B<sp/>/<sp/>B_{max}\\</highlight></codeline>
<codeline lineno="2483"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>U<sp/>&amp;<sp/>=<sp/>&amp;<sp/>-0.147\enspace<sp/>R<sp/>/<sp/>R_{max}<sp/>-<sp/>0.289\enspace<sp/>G<sp/>/<sp/>G_{max}<sp/>+<sp/>0.436\enspace<sp/>B<sp/>/<sp/>B_{max}<sp/>\\</highlight></codeline>
<codeline lineno="2484"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V<sp/>&amp;<sp/>=<sp/>&amp;<sp/>0.615\enspace<sp/>R<sp/>/<sp/>R_{max}<sp/>-<sp/>0.515\enspace<sp/>G<sp/>/<sp/>G_{max}<sp/>-<sp/>0.100\enspace<sp/>B<sp/>/<sp/>B_{max}</highlight></codeline>
<codeline lineno="2485"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\end{array}</highlight></codeline>
<codeline lineno="2486"><highlight class="comment"><sp/><sp/><sp/><sp/>\f]</highlight></codeline>
<codeline lineno="2487"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2488"><highlight class="comment"><sp/><sp/><sp/><sp/>By<sp/>default,<sp/>\f$<sp/>R_{max}<sp/>=<sp/>G_{max}<sp/>=<sp/>B_{max}<sp/>=<sp/>255<sp/>\f$.<sp/>This<sp/>default<sp/>can<sp/>be<sp/>overridden</highlight></codeline>
<codeline lineno="2489"><highlight class="comment"><sp/><sp/><sp/><sp/>in<sp/>the<sp/>constructor.<sp/>Y&apos;<sp/>represents<sp/>the<sp/>&lt;em&gt;luminance&lt;/em&gt;<sp/>(&quot;brightness&quot;)<sp/>of<sp/>the<sp/>color.<sp/></highlight></codeline>
<codeline lineno="2490"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>transformation<sp/>is<sp/>scaled<sp/>so<sp/>that<sp/>the<sp/>following<sp/>bounds<sp/>apply:</highlight></codeline>
<codeline lineno="2491"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2492"><highlight class="comment"><sp/><sp/><sp/><sp/>\f[</highlight></codeline>
<codeline lineno="2493"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\begin{array}{rcl}</highlight></codeline>
<codeline lineno="2494"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>\leq<sp/>&amp;<sp/>Y&apos;<sp/>&amp;<sp/>\leq<sp/>1<sp/>\\</highlight></codeline>
<codeline lineno="2495"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-0.436<sp/>\leq<sp/>&amp;<sp/>U<sp/>&amp;<sp/>\leq<sp/>0.436<sp/>\\</highlight></codeline>
<codeline lineno="2496"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-0.615<sp/>\leq<sp/>&amp;<sp/>V<sp/>&amp;<sp/>\leq<sp/>0.615</highlight></codeline>
<codeline lineno="2497"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\end{array}</highlight></codeline>
<codeline lineno="2498"><highlight class="comment"><sp/><sp/><sp/><sp/>\f]</highlight></codeline>
<codeline lineno="2499"><highlight class="comment"></highlight></codeline>
<codeline lineno="2500"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="2501"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2502"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="2503"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2504"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2505" refid="classvigra_1_1RGBPrime2YPrimeUVFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1RGBPrime2YPrimeUVFunctor" kindref="compound" tooltip="Convert non-linear (gamma corrected) R&amp;#39;G&amp;#39;B&amp;#39; into Y&amp;#39;UV components.">RGBPrime2YPrimeUVFunctor</ref></highlight></codeline>
<codeline lineno="2506"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2508"><highlight class="comment"><sp/><sp/><sp/><sp/>Y<sp/>in<sp/>[0,<sp/>1]</highlight></codeline>
<codeline lineno="2509"><highlight class="comment"><sp/><sp/><sp/><sp/>U<sp/>in<sp/>[-0.436,<sp/>0.436]</highlight></codeline>
<codeline lineno="2510"><highlight class="comment"><sp/><sp/><sp/><sp/>V<sp/>in<sp/>[-0.615,<sp/>0.615]</highlight></codeline>
<codeline lineno="2511"><highlight class="comment"><sp/><sp/><sp/><sp/>maximum<sp/>saturation:<sp/>0.632324</highlight></codeline>
<codeline lineno="2512"><highlight class="comment"><sp/><sp/><sp/><sp/>red<sp/>=<sp/>[0.299,<sp/>-0.147,<sp/>0.615]</highlight></codeline>
<codeline lineno="2513"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2516"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>result&apos;s<sp/>component<sp/>type</highlight></codeline>
<codeline lineno="2517"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2518" refid="classvigra_1_1RGBPrime2YPrimeUVFunctor_1a99539f874c975a1c8af60b755ce6d019" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::RealPromote<sp/><ref refid="classvigra_1_1RGBPrime2YPrimeUVFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref>;</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2520"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="2521"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2522" refid="classvigra_1_1RGBPrime2YPrimeUVFunctor_1a13909c0b77f58ceccbce2a7785755c74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1RGBPrime2YPrimeUVFunctor_1a13909c0b77f58ceccbce2a7785755c74" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2524"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="2525"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2526" refid="classvigra_1_1RGBPrime2YPrimeUVFunctor_1af7a6387e520239369cc7975f216b525c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;component_type, 3&gt;</ref><sp/><ref refid="classvigra_1_1RGBPrime2YPrimeUVFunctor_1af7a6387e520239369cc7975f216b525c" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2528"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="2529"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2530" refid="classvigra_1_1RGBPrime2YPrimeUVFunctor_1a92ed0b206a7eff7322d63567c1aa94b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;component_type, 3&gt;</ref><sp/><ref refid="classvigra_1_1RGBPrime2YPrimeUVFunctor_1a92ed0b206a7eff7322d63567c1aa94b8" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2532"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>default<sp/>constructor.</highlight></codeline>
<codeline lineno="2533"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component<sp/>defaults<sp/>to<sp/>255.</highlight></codeline>
<codeline lineno="2534"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2535" refid="classvigra_1_1RGBPrime2YPrimeUVFunctor_1a2ce138003eec3210e330a29d798d8664" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2YPrimeUVFunctor_1a2ce138003eec3210e330a29d798d8664" kindref="member">RGBPrime2YPrimeUVFunctor</ref>()</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>max_(255.0)</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2539"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>constructor</highlight></codeline>
<codeline lineno="2540"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\arg<sp/>max<sp/>-<sp/>the<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component</highlight></codeline>
<codeline lineno="2541"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2542" refid="classvigra_1_1RGBPrime2YPrimeUVFunctor_1ae182ebc519d912ea543f6c9c6f3b56d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2YPrimeUVFunctor_1a2ce138003eec3210e330a29d798d8664" kindref="member">RGBPrime2YPrimeUVFunctor</ref>(<ref refid="classvigra_1_1RGBPrime2YPrimeUVFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>max_(max)</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2546"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>apply<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="2547"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="2549" refid="classvigra_1_1RGBPrime2YPrimeUVFunctor_1aa3a34299b1a2068fa8b9d7b7a0aa236d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/><ref refid="classvigra_1_1RGBPrime2YPrimeUVFunctor_1aa3a34299b1a2068fa8b9d7b7a0aa236d" kindref="member">operator()</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rgb)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2550"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>detail::RequiresExplicitCast&lt;component_type&gt;<sp/>Convert;</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2YPrimeUVFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>red<sp/>=<sp/>rgb[0]<sp/>/<sp/>max_;</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2YPrimeUVFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>green<sp/>=<sp/>rgb[1]<sp/>/<sp/>max_;</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2YPrimeUVFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>blue<sp/>=<sp/>rgb[2]<sp/>/<sp/>max_;</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/>result;</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>Convert::cast(0.299*red<sp/>+<sp/>0.587*green<sp/>+<sp/>0.114*blue);</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>Convert::cast(-0.1471376975*red<sp/>-<sp/>0.2888623025*green<sp/>+<sp/>0.436*blue);</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>Convert::cast(0.6149122807*red<sp/>-<sp/>0.5149122807*green<sp/>-<sp/>0.100*blue);</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Y&apos;UV&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"></highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2YPrimeUVFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>max_;</highlight></codeline>
<codeline lineno="2570"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"></highlight></codeline>
<codeline lineno="2572"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;RGBPrime2YPrimeUVFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="2574"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;RGBPrime2YPrimeUVFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="2575"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="2578"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2580"><highlight class="comment">/**<sp/>\brief<sp/>Convert<sp/>Y&apos;UV<sp/>color<sp/>components<sp/>into<sp/>non-linear<sp/>(gamma<sp/>corrected)<sp/>R&apos;G&apos;B&apos;.</highlight></codeline>
<codeline lineno="2581"><highlight class="comment"></highlight></codeline>
<codeline lineno="2582"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="2583"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="2584"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2585"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>functor<sp/>realizes<sp/>the<sp/>inverse<sp/>of<sp/>the<sp/>transformation<sp/>described<sp/>in<sp/>vigra::RGBPrime2YPrimeUVFunctor</highlight></codeline>
<codeline lineno="2586"><highlight class="comment"></highlight></codeline>
<codeline lineno="2587"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="2588"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2589"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="2590"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2591"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2592" refid="classvigra_1_1YPrimeUV2RGBPrimeFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1YPrimeUV2RGBPrimeFunctor" kindref="compound" tooltip="Convert Y&amp;#39;UV color components into non-linear (gamma corrected) R&amp;#39;G&amp;#39;B&amp;#39;.">YPrimeUV2RGBPrimeFunctor</ref></highlight></codeline>
<codeline lineno="2593"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::RealPromote<sp/>component_type;</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/>component_type<sp/>max_;</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2600"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type.<sp/>(Actually,<sp/>the<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="2601"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can<sp/>be<sp/>any<sp/>vector<sp/>type<sp/>with<sp/>the<sp/>same<sp/>interface.<sp/></highlight></codeline>
<codeline lineno="2602"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>But<sp/>this<sp/>cannot<sp/>be<sp/>expressed<sp/>in<sp/>a<sp/>typedef.)</highlight></codeline>
<codeline lineno="2603"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2604" refid="classvigra_1_1YPrimeUV2RGBPrimeFunctor_1a13909c0b77f58ceccbce2a7785755c74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1YPrimeUV2RGBPrimeFunctor_1a13909c0b77f58ceccbce2a7785755c74" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2606"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="2607"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2608" refid="classvigra_1_1YPrimeUV2RGBPrimeFunctor_1a980a03bc088751a82063d4ebd664de6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1YPrimeUV2RGBPrimeFunctor_1a980a03bc088751a82063d4ebd664de6b" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2610"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="2611"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2612" refid="classvigra_1_1YPrimeUV2RGBPrimeFunctor_1a818a92fdb6cfee7cd1a828c5b5d625ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1YPrimeUV2RGBPrimeFunctor_1a818a92fdb6cfee7cd1a828c5b5d625ee" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2614"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>default<sp/>constructor.</highlight></codeline>
<codeline lineno="2615"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component<sp/>defaults<sp/>to<sp/>255.</highlight></codeline>
<codeline lineno="2616"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2617" refid="classvigra_1_1YPrimeUV2RGBPrimeFunctor_1a55f1df977265fc7c1c893df5f0f6d679" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1YPrimeUV2RGBPrimeFunctor_1a55f1df977265fc7c1c893df5f0f6d679" kindref="member">YPrimeUV2RGBPrimeFunctor</ref>()</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>max_(255.0)</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2621"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>constructor</highlight></codeline>
<codeline lineno="2622"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\arg<sp/>max<sp/>-<sp/>the<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component</highlight></codeline>
<codeline lineno="2623"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2624" refid="classvigra_1_1YPrimeUV2RGBPrimeFunctor_1a260ca3367ec3ae5df32997e2037ac7fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1YPrimeUV2RGBPrimeFunctor_1a55f1df977265fc7c1c893df5f0f6d679" kindref="member">YPrimeUV2RGBPrimeFunctor</ref>(component_type<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>max_(max)</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2628"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>apply<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="2629"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="2631" refid="classvigra_1_1YPrimeUV2RGBPrimeFunctor_1a19559ec9f1590a1661e4ecc9540d98b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/><ref refid="classvigra_1_1YPrimeUV2RGBPrimeFunctor_1a19559ec9f1590a1661e4ecc9540d98b0" kindref="member">operator()</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>yuv)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2632"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>detail::RequiresExplicitCast&lt;component_type&gt;<sp/>Convert;</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>component_type<sp/>nred<sp/><sp/><sp/>=<sp/>Convert::cast(yuv[0]<sp/>+<sp/>1.140*yuv[2]);</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>component_type<sp/>ngreen<sp/>=<sp/>Convert::cast(yuv[0]<sp/>-<sp/>0.3946517044*yuv[1]<sp/>-<sp/>0.580681431*yuv[2]);</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>component_type<sp/>nblue<sp/><sp/>=<sp/>Convert::cast(yuv[0]<sp/>+<sp/>2.0321100920*yuv[1]);</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1YPrimeUV2RGBPrimeFunctor_1a980a03bc088751a82063d4ebd664de6b" kindref="member">result_type</ref>(NumericTraits&lt;T&gt;::fromRealPromote(nred<sp/>*<sp/>max_),</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumericTraits&lt;T&gt;::fromRealPromote(ngreen<sp/>*<sp/>max_),</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumericTraits&lt;T&gt;::fromRealPromote(nblue<sp/>*<sp/>max_));</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;RGB&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2646"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"></highlight></codeline>
<codeline lineno="2648"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;YPrimeUV2RGBPrimeFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="2650"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;YPrimeUV2RGBPrimeFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="2651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="2654"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2656"><highlight class="comment">/**<sp/>\brief<sp/>Convert<sp/>non-linear<sp/>(gamma<sp/>corrected)<sp/>R&apos;G&apos;B&apos;<sp/>into<sp/>Y&apos;CbCr<sp/>color<sp/>difference<sp/>components.</highlight></codeline>
<codeline lineno="2657"><highlight class="comment"></highlight></codeline>
<codeline lineno="2658"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="2659"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="2660"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2661"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>functor<sp/>basically<sp/>applies<sp/>the<sp/>same<sp/>transformation<sp/>as<sp/>vigra::RGBPrime2YPrimePbPrFunctor</highlight></codeline>
<codeline lineno="2662"><highlight class="comment"><sp/><sp/><sp/><sp/>but<sp/>the<sp/>color<sp/>components<sp/>are<sp/>scaled<sp/>so<sp/>that<sp/>they<sp/>can<sp/>be<sp/>coded<sp/>as<sp/>8<sp/>bit<sp/>integers<sp/>with</highlight></codeline>
<codeline lineno="2663"><highlight class="comment"><sp/><sp/><sp/><sp/>minimal<sp/>loss<sp/>of<sp/>information:</highlight></codeline>
<codeline lineno="2664"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2665"><highlight class="comment"><sp/><sp/><sp/><sp/>\f[</highlight></codeline>
<codeline lineno="2666"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\begin{array}{rcl}</highlight></codeline>
<codeline lineno="2667"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>16\leq<sp/>&amp;<sp/>Y&apos;<sp/>&amp;<sp/>\leq<sp/>235<sp/>\\</highlight></codeline>
<codeline lineno="2668"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>16<sp/>\leq<sp/>&amp;<sp/>Cb<sp/>&amp;<sp/>\leq<sp/>240<sp/>\\</highlight></codeline>
<codeline lineno="2669"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>16<sp/>\leq<sp/>&amp;<sp/>Cr<sp/>&amp;<sp/>\leq<sp/>240</highlight></codeline>
<codeline lineno="2670"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\end{array}</highlight></codeline>
<codeline lineno="2671"><highlight class="comment"><sp/><sp/><sp/><sp/>\f]</highlight></codeline>
<codeline lineno="2672"><highlight class="comment"></highlight></codeline>
<codeline lineno="2673"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="2674"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2675"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="2676"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2677"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2678" refid="classvigra_1_1RGBPrime2YPrimeCbCrFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1RGBPrime2YPrimeCbCrFunctor" kindref="compound" tooltip="Convert non-linear (gamma corrected) R&amp;#39;G&amp;#39;B&amp;#39; into Y&amp;#39;CbCr color difference components.">RGBPrime2YPrimeCbCrFunctor</ref></highlight></codeline>
<codeline lineno="2679"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2681"><highlight class="comment"><sp/><sp/><sp/><sp/>Y<sp/>in<sp/>[16,<sp/>235]</highlight></codeline>
<codeline lineno="2682"><highlight class="comment"><sp/><sp/><sp/><sp/>Cb<sp/>in<sp/>[16,<sp/>240]</highlight></codeline>
<codeline lineno="2683"><highlight class="comment"><sp/><sp/><sp/><sp/>Cr<sp/>in<sp/>[16,<sp/>240]</highlight></codeline>
<codeline lineno="2684"><highlight class="comment"><sp/><sp/><sp/><sp/>maximum<sp/>saturation:<sp/>119.591</highlight></codeline>
<codeline lineno="2685"><highlight class="comment"><sp/><sp/><sp/><sp/>red<sp/>=<sp/>[81.481,<sp/>90.203,<sp/>240]</highlight></codeline>
<codeline lineno="2686"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2689"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>result&apos;s<sp/>component<sp/>type</highlight></codeline>
<codeline lineno="2690"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2691" refid="classvigra_1_1RGBPrime2YPrimeCbCrFunctor_1a99539f874c975a1c8af60b755ce6d019" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::RealPromote<sp/><ref refid="classvigra_1_1RGBPrime2YPrimeCbCrFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref>;</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2693"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="2694"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2695" refid="classvigra_1_1RGBPrime2YPrimeCbCrFunctor_1a13909c0b77f58ceccbce2a7785755c74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1RGBPrime2YPrimeCbCrFunctor_1a13909c0b77f58ceccbce2a7785755c74" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2697"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="2698"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2699" refid="classvigra_1_1RGBPrime2YPrimeCbCrFunctor_1af7a6387e520239369cc7975f216b525c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;component_type, 3&gt;</ref><sp/><ref refid="classvigra_1_1RGBPrime2YPrimeCbCrFunctor_1af7a6387e520239369cc7975f216b525c" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2701"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="2702"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2703" refid="classvigra_1_1RGBPrime2YPrimeCbCrFunctor_1a92ed0b206a7eff7322d63567c1aa94b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;component_type, 3&gt;</ref><sp/><ref refid="classvigra_1_1RGBPrime2YPrimeCbCrFunctor_1a92ed0b206a7eff7322d63567c1aa94b8" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2705"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>default<sp/>constructor.</highlight></codeline>
<codeline lineno="2706"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component<sp/>defaults<sp/>to<sp/>255.</highlight></codeline>
<codeline lineno="2707"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2708" refid="classvigra_1_1RGBPrime2YPrimeCbCrFunctor_1a6f03f05e2d67c6b69ae8ab0b75fcbb16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2YPrimeCbCrFunctor_1a6f03f05e2d67c6b69ae8ab0b75fcbb16" kindref="member">RGBPrime2YPrimeCbCrFunctor</ref>()</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>max_(255.0)</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2712"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>constructor</highlight></codeline>
<codeline lineno="2713"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\arg<sp/>max<sp/>-<sp/>the<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component</highlight></codeline>
<codeline lineno="2714"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2715" refid="classvigra_1_1RGBPrime2YPrimeCbCrFunctor_1a04e48b94e05054a3a3d3f190a520c6d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2YPrimeCbCrFunctor_1a6f03f05e2d67c6b69ae8ab0b75fcbb16" kindref="member">RGBPrime2YPrimeCbCrFunctor</ref>(<ref refid="classvigra_1_1RGBPrime2YPrimeCbCrFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>max_(max)</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2719"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>apply<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="2720"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="2722" refid="classvigra_1_1RGBPrime2YPrimeCbCrFunctor_1aa3a34299b1a2068fa8b9d7b7a0aa236d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/><ref refid="classvigra_1_1RGBPrime2YPrimeCbCrFunctor_1aa3a34299b1a2068fa8b9d7b7a0aa236d" kindref="member">operator()</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rgb)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2723"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>detail::RequiresExplicitCast&lt;component_type&gt;<sp/>Convert;</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2YPrimeCbCrFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>red<sp/>=<sp/>rgb[0]<sp/>/<sp/>max_;</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2YPrimeCbCrFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>green<sp/>=<sp/>rgb[1]<sp/>/<sp/>max_;</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2YPrimeCbCrFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>blue<sp/>=<sp/>rgb[2]<sp/>/<sp/>max_;</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/>result;</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>Convert::cast(16.0<sp/>+<sp/>65.481*red<sp/>+<sp/>128.553*green<sp/>+<sp/>24.966*blue);</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>Convert::cast(128.0<sp/>-<sp/>37.79683972*red<sp/>-<sp/>74.20316028*green<sp/>+<sp/>112.0*blue);</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>Convert::cast(128.0<sp/>+<sp/>112.0*red<sp/>-<sp/>93.78601998*green<sp/>-<sp/>18.21398002*blue);</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Y&apos;CbCr&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"></highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1RGBPrime2YPrimeCbCrFunctor_1a99539f874c975a1c8af60b755ce6d019" kindref="member">component_type</ref><sp/>max_;</highlight></codeline>
<codeline lineno="2743"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"></highlight></codeline>
<codeline lineno="2745"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;RGBPrime2YPrimeCbCrFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="2747"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;RGBPrime2YPrimeCbCrFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="2748"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="2751"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2753"><highlight class="comment">/**<sp/>\brief<sp/>Convert<sp/>Y&apos;CbCr<sp/>color<sp/>difference<sp/>components<sp/>into<sp/>non-linear<sp/>(gamma<sp/>corrected)<sp/>R&apos;G&apos;B&apos;.</highlight></codeline>
<codeline lineno="2754"><highlight class="comment"></highlight></codeline>
<codeline lineno="2755"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="2756"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="2757"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2758"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>functor<sp/>realizes<sp/>the<sp/>inverse<sp/>of<sp/>the<sp/>transformation<sp/>described<sp/>in<sp/>vigra::RGBPrime2YPrimeCbCrFunctor</highlight></codeline>
<codeline lineno="2759"><highlight class="comment"></highlight></codeline>
<codeline lineno="2760"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="2761"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2762"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="2763"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2764"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2765" refid="classvigra_1_1YPrimeCbCr2RGBPrimeFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1YPrimeCbCr2RGBPrimeFunctor" kindref="compound" tooltip="Convert Y&amp;#39;CbCr color difference components into non-linear (gamma corrected) R&amp;#39;G&amp;#39;B&amp;#39;.">YPrimeCbCr2RGBPrimeFunctor</ref></highlight></codeline>
<codeline lineno="2766"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::RealPromote<sp/>component_type;</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/><sp/>component_type<sp/>max_;</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2773"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type.<sp/>(Actually,<sp/>the<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="2774"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can<sp/>be<sp/>any<sp/>vector<sp/>type<sp/>with<sp/>the<sp/>same<sp/>interface.<sp/></highlight></codeline>
<codeline lineno="2775"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>But<sp/>this<sp/>cannot<sp/>be<sp/>expressed<sp/>in<sp/>a<sp/>typedef.)</highlight></codeline>
<codeline lineno="2776"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2777" refid="classvigra_1_1YPrimeCbCr2RGBPrimeFunctor_1a13909c0b77f58ceccbce2a7785755c74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1YPrimeCbCr2RGBPrimeFunctor_1a13909c0b77f58ceccbce2a7785755c74" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2779"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="2780"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2781" refid="classvigra_1_1YPrimeCbCr2RGBPrimeFunctor_1a980a03bc088751a82063d4ebd664de6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1YPrimeCbCr2RGBPrimeFunctor_1a980a03bc088751a82063d4ebd664de6b" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2783"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="2784"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2785" refid="classvigra_1_1YPrimeCbCr2RGBPrimeFunctor_1a818a92fdb6cfee7cd1a828c5b5d625ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;T, 3&gt;</ref><sp/><ref refid="classvigra_1_1YPrimeCbCr2RGBPrimeFunctor_1a818a92fdb6cfee7cd1a828c5b5d625ee" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2787"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>default<sp/>constructor.</highlight></codeline>
<codeline lineno="2788"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component<sp/>defaults<sp/>to<sp/>255.</highlight></codeline>
<codeline lineno="2789"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2790" refid="classvigra_1_1YPrimeCbCr2RGBPrimeFunctor_1a98f560df84a61953c32c34556768a8c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1YPrimeCbCr2RGBPrimeFunctor_1a98f560df84a61953c32c34556768a8c0" kindref="member">YPrimeCbCr2RGBPrimeFunctor</ref>()</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>max_(255.0)</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2794"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>constructor</highlight></codeline>
<codeline lineno="2795"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\arg<sp/>max<sp/>-<sp/>the<sp/>maximum<sp/>value<sp/>for<sp/>each<sp/>RGB<sp/>component</highlight></codeline>
<codeline lineno="2796"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2797" refid="classvigra_1_1YPrimeCbCr2RGBPrimeFunctor_1aaef4dec581d839b5fda72e237f45be45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1YPrimeCbCr2RGBPrimeFunctor_1a98f560df84a61953c32c34556768a8c0" kindref="member">YPrimeCbCr2RGBPrimeFunctor</ref>(component_type<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>max_(max)</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2801"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>apply<sp/>the<sp/>transformation</highlight></codeline>
<codeline lineno="2802"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="2804" refid="classvigra_1_1YPrimeCbCr2RGBPrimeFunctor_1a50e7f97bbb1ebb65bf33924124894728" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">result_type</ref><sp/><ref refid="classvigra_1_1YPrimeCbCr2RGBPrimeFunctor_1a50e7f97bbb1ebb65bf33924124894728" kindref="member">operator()</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>ycbcr)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2805"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>detail::RequiresExplicitCast&lt;component_type&gt;<sp/>Convert;</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>component_type<sp/>y<sp/><sp/>=<sp/>Convert::cast(ycbcr[0]<sp/>-<sp/>16.0);</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>component_type<sp/>cb<sp/>=<sp/>Convert::cast(ycbcr[1]<sp/>-<sp/>128.0);</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>component_type<sp/>cr<sp/>=<sp/>Convert::cast(ycbcr[2]<sp/>-<sp/>128.0);</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>component_type<sp/>nred<sp/><sp/><sp/>=<sp/>Convert::cast(0.00456621*y<sp/>+<sp/>0.006258928571*cr);</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>component_type<sp/>ngreen<sp/>=<sp/>Convert::cast(0.00456621*y<sp/>-<sp/>0.001536322706*cb<sp/>-<sp/>0.003188108420*cr);</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>component_type<sp/>nblue<sp/><sp/>=<sp/>Convert::cast(0.00456621*y<sp/>+<sp/>0.007910714286*cb);</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1YPrimeCbCr2RGBPrimeFunctor_1a980a03bc088751a82063d4ebd664de6b" kindref="member">result_type</ref>(NumericTraits&lt;T&gt;::fromRealPromote(nred<sp/>*<sp/>max_),</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumericTraits&lt;T&gt;::fromRealPromote(ngreen<sp/>*<sp/>max_),</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumericTraits&lt;T&gt;::fromRealPromote(nblue<sp/>*<sp/>max_));</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>targetColorSpace()</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;RGB&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2823"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"></highlight></codeline>
<codeline lineno="2825"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;YPrimeCbCr2RGBPrimeFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="2827"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;YPrimeCbCr2RGBPrimeFunctor&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="2828"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="2831"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2833"><highlight class="comment">//@}</highlight></codeline>
<codeline lineno="2834"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2835"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2836"><highlight class="comment">Polar<sp/>coordinates<sp/>of<sp/>standard<sp/>colors:</highlight></codeline>
<codeline lineno="2837"><highlight class="comment">=====================================</highlight></codeline>
<codeline lineno="2838"><highlight class="comment"></highlight></codeline>
<codeline lineno="2839"><highlight class="comment">Lab:<sp/>black<sp/>=<sp/>[320.002,<sp/>0,<sp/>0]</highlight></codeline>
<codeline lineno="2840"><highlight class="comment">Luv:<sp/>black<sp/>=<sp/>[347.827,<sp/>0,<sp/>0]</highlight></codeline>
<codeline lineno="2841"><highlight class="comment">YPbPr:<sp/>black<sp/>=<sp/>[341.352,<sp/>0,<sp/>0]</highlight></codeline>
<codeline lineno="2842"><highlight class="comment">YCbCr:<sp/>black<sp/>=<sp/>[341.352,<sp/>0,<sp/>0]</highlight></codeline>
<codeline lineno="2843"><highlight class="comment">YIQ:<sp/>black<sp/>=<sp/>[19.5807,<sp/>0,<sp/>0]</highlight></codeline>
<codeline lineno="2844"><highlight class="comment">YUV:<sp/>black<sp/>=<sp/>[346.557,<sp/>0,<sp/>0]</highlight></codeline>
<codeline lineno="2845"><highlight class="comment">Lab:<sp/>red<sp/>=<sp/>[1.20391e-05,<sp/>0.532406,<sp/>0.781353]</highlight></codeline>
<codeline lineno="2846"><highlight class="comment">Luv:<sp/>red<sp/>=<sp/>[360,<sp/>0.532406,<sp/>1]</highlight></codeline>
<codeline lineno="2847"><highlight class="comment">YPbPr:<sp/>red<sp/>=<sp/>[360,<sp/>0.299,<sp/>0.988419]</highlight></codeline>
<codeline lineno="2848"><highlight class="comment">YCbCr:<sp/>red<sp/>=<sp/>[360,<sp/>0.299,<sp/>0.988417]</highlight></codeline>
<codeline lineno="2849"><highlight class="comment">YIQ:<sp/>red<sp/>=<sp/>[360,<sp/>0.299,<sp/>1]</highlight></codeline>
<codeline lineno="2850"><highlight class="comment">YUV:<sp/>red<sp/>=<sp/>[360,<sp/>0.299,<sp/>1]</highlight></codeline>
<codeline lineno="2851"><highlight class="comment">Lab:<sp/>green<sp/>=<sp/>[96.0184,<sp/>0.877351,<sp/>0.895108]</highlight></codeline>
<codeline lineno="2852"><highlight class="comment">Luv:<sp/>green<sp/>=<sp/>[115.552,<sp/>0.877351,<sp/>0.758352]</highlight></codeline>
<codeline lineno="2853"><highlight class="comment">YPbPr:<sp/>green<sp/>=<sp/>[123.001,<sp/>0.587,<sp/>1]</highlight></codeline>
<codeline lineno="2854"><highlight class="comment">YCbCr:<sp/>green<sp/>=<sp/>[123.001,<sp/>0.587,<sp/>0.999996]</highlight></codeline>
<codeline lineno="2855"><highlight class="comment">YIQ:<sp/>green<sp/>=<sp/>[137.231,<sp/>0.587,<sp/>0.933362]</highlight></codeline>
<codeline lineno="2856"><highlight class="comment">YUV:<sp/>green<sp/>=<sp/>[137.257,<sp/>0.587,<sp/>0.933931]</highlight></codeline>
<codeline lineno="2857"><highlight class="comment">Lab:<sp/>blue<sp/>=<sp/>[266.287,<sp/>0.322957,<sp/>0.999997]</highlight></codeline>
<codeline lineno="2858"><highlight class="comment">Luv:<sp/>blue<sp/>=<sp/>[253.7,<sp/>0.322957,<sp/>0.729883]</highlight></codeline>
<codeline lineno="2859"><highlight class="comment">YPbPr:<sp/>blue<sp/>=<sp/>[242.115,<sp/>0.114,<sp/>0.948831]</highlight></codeline>
<codeline lineno="2860"><highlight class="comment">YCbCr:<sp/>blue<sp/>=<sp/>[242.115,<sp/>0.114,<sp/>0.948829]</highlight></codeline>
<codeline lineno="2861"><highlight class="comment">YIQ:<sp/>blue<sp/>=<sp/>[243.585,<sp/>0.114,<sp/>0.707681]</highlight></codeline>
<codeline lineno="2862"><highlight class="comment">YUV:<sp/>blue<sp/>=<sp/>[243.639,<sp/>0.114,<sp/>0.707424]</highlight></codeline>
<codeline lineno="2863"><highlight class="comment">Lab:<sp/>yellow<sp/>=<sp/>[62.8531,<sp/>0.971395,<sp/>0.724189]</highlight></codeline>
<codeline lineno="2864"><highlight class="comment">Luv:<sp/>yellow<sp/>=<sp/>[73.7,<sp/>0.971395,<sp/>0.597953]</highlight></codeline>
<codeline lineno="2865"><highlight class="comment">YPbPr:<sp/>yellow<sp/>=<sp/>[62.1151,<sp/>0.886,<sp/>0.948831]</highlight></codeline>
<codeline lineno="2866"><highlight class="comment">YCbCr:<sp/>yellow<sp/>=<sp/>[62.1149,<sp/>0.886,<sp/>0.948829]</highlight></codeline>
<codeline lineno="2867"><highlight class="comment">YIQ:<sp/>yellow<sp/>=<sp/>[63.5851,<sp/>0.886,<sp/>0.707681]</highlight></codeline>
<codeline lineno="2868"><highlight class="comment">YUV:<sp/>yellow<sp/>=<sp/>[63.6393,<sp/>0.886,<sp/>0.707424]</highlight></codeline>
<codeline lineno="2869"><highlight class="comment">Lab:<sp/>magenta<sp/>=<sp/>[288.237,<sp/>0.603235,<sp/>0.863482]</highlight></codeline>
<codeline lineno="2870"><highlight class="comment">Luv:<sp/>magenta<sp/>=<sp/>[295.553,<sp/>0.603235,<sp/>0.767457]</highlight></codeline>
<codeline lineno="2871"><highlight class="comment">YPbPr:<sp/>magenta<sp/>=<sp/>[303.001,<sp/>0.413,<sp/>1]</highlight></codeline>
<codeline lineno="2872"><highlight class="comment">YCbCr:<sp/>magenta<sp/>=<sp/>[303.001,<sp/>0.413,<sp/>0.999996]</highlight></codeline>
<codeline lineno="2873"><highlight class="comment">YIQ:<sp/>magenta<sp/>=<sp/>[317.231,<sp/>0.413,<sp/>0.933362]</highlight></codeline>
<codeline lineno="2874"><highlight class="comment">YUV:<sp/>magenta<sp/>=<sp/>[317.257,<sp/>0.413,<sp/>0.933931]</highlight></codeline>
<codeline lineno="2875"><highlight class="comment">Lab:<sp/>cyan<sp/>=<sp/>[156.378,<sp/>0.911133,<sp/>0.374577]</highlight></codeline>
<codeline lineno="2876"><highlight class="comment">Luv:<sp/>cyan<sp/>=<sp/>[180,<sp/>0.911133,<sp/>0.402694]</highlight></codeline>
<codeline lineno="2877"><highlight class="comment">YPbPr:<sp/>cyan<sp/>=<sp/>[180,<sp/>0.701,<sp/>0.988419]</highlight></codeline>
<codeline lineno="2878"><highlight class="comment">YCbCr:<sp/>cyan<sp/>=<sp/>[180,<sp/>0.701,<sp/>0.988417]</highlight></codeline>
<codeline lineno="2879"><highlight class="comment">YIQ:<sp/>cyan<sp/>=<sp/>[180,<sp/>0.701,<sp/>1]</highlight></codeline>
<codeline lineno="2880"><highlight class="comment">YUV:<sp/>cyan<sp/>=<sp/>[180,<sp/>0.701,<sp/>1]</highlight></codeline>
<codeline lineno="2881"><highlight class="comment">Lab:<sp/>white<sp/>=<sp/>[320.002,<sp/>1,<sp/>0]</highlight></codeline>
<codeline lineno="2882"><highlight class="comment">Luv:<sp/>white<sp/>=<sp/>[14.3606,<sp/>1,<sp/>3.26357e-06]</highlight></codeline>
<codeline lineno="2883"><highlight class="comment">YPbPr:<sp/>white<sp/>=<sp/>[341.352,<sp/>1,<sp/>0]</highlight></codeline>
<codeline lineno="2884"><highlight class="comment">YCbCr:<sp/>white<sp/>=<sp/>[341.352,<sp/>1,<sp/>0]</highlight></codeline>
<codeline lineno="2885"><highlight class="comment">YIQ:<sp/>white<sp/>=<sp/>[154.581,<sp/>1,<sp/>1.24102e-16]</highlight></codeline>
<codeline lineno="2886"><highlight class="comment">YUV:<sp/>white<sp/>=<sp/>[229.992,<sp/>1,<sp/>9.81512e-17]</highlight></codeline>
<codeline lineno="2887"><highlight class="comment"></highlight></codeline>
<codeline lineno="2888"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2889"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2890"><highlight class="comment">/**<sp/>\ingroup<sp/>ColorConversions</highlight></codeline>
<codeline lineno="2891"><highlight class="comment"><sp/><sp/><sp/><sp/>\defgroup<sp/>PolarColors<sp/>Polar<sp/>Color<sp/>Coordinates</highlight></codeline>
<codeline lineno="2892"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2893"><highlight class="comment"><sp/><sp/><sp/><sp/>Transform<sp/>colors<sp/>from/to<sp/>a<sp/>polar<sp/>representation<sp/>(hue,<sp/>brightness,<sp/>saturation).</highlight></codeline>
<codeline lineno="2894"><highlight class="comment"><sp/><sp/><sp/><sp/>In<sp/>many<sp/>situations,<sp/>this<sp/>is<sp/>more<sp/>intuitive<sp/>than<sp/>direct<sp/>initialization<sp/>in<sp/>a<sp/></highlight></codeline>
<codeline lineno="2895"><highlight class="comment"><sp/><sp/><sp/><sp/>particular<sp/>color<sp/>space.<sp/>The<sp/>polar<sp/>coordinates<sp/>are<sp/></highlight></codeline>
<codeline lineno="2896"><highlight class="comment"><sp/><sp/><sp/><sp/>normalized<sp/>so<sp/>that<sp/>a<sp/>color<sp/>angle<sp/>of<sp/>0<sp/>degrees<sp/>is<sp/>always<sp/>associated<sp/>with<sp/>red</highlight></codeline>
<codeline lineno="2897"><highlight class="comment"><sp/><sp/><sp/><sp/>(green<sp/>is<sp/>at<sp/>about<sp/>120<sp/>degrees,<sp/>blue<sp/>at<sp/>about<sp/>240<sp/>degrees<sp/>-<sp/>exact<sp/>values<sp/>differ</highlight></codeline>
<codeline lineno="2898"><highlight class="comment"><sp/><sp/><sp/><sp/>between<sp/>color<sp/>spaces).<sp/>A<sp/>saturation<sp/>of<sp/>1<sp/>is<sp/>the<sp/>highest<sp/>saturation<sp/>that<sp/>any<sp/>RGB<sp/>color<sp/></highlight></codeline>
<codeline lineno="2899"><highlight class="comment"><sp/><sp/><sp/><sp/>gets<sp/>after<sp/>transformation<sp/>into<sp/>the<sp/>respective<sp/>color<sp/>space,<sp/>and<sp/>saturation<sp/>0<sp/>corresponds<sp/>to</highlight></codeline>
<codeline lineno="2900"><highlight class="comment"><sp/><sp/><sp/><sp/>gray.<sp/>Thus,<sp/>different<sp/>color<sp/>spaces<sp/>become<sp/>somewhat<sp/>comparable.</highlight></codeline>
<codeline lineno="2901"><highlight class="comment">*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2902"><highlight class="comment">//@{</highlight></codeline>
<codeline lineno="2903"><highlight class="comment"></highlight><highlight class="comment">/**<sp/>\brief<sp/>Init<sp/>L*a*b*<sp/>color<sp/>triple<sp/>from<sp/>polar<sp/>representation.</highlight></codeline>
<codeline lineno="2904"><highlight class="comment"></highlight></codeline>
<codeline lineno="2905"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="2906"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="2907"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2908"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declarations:&lt;/b&gt;</highlight></codeline>
<codeline lineno="2909"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2910"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="2911"><highlight class="comment"><sp/><sp/><sp/><sp/>TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="2912"><highlight class="comment"><sp/><sp/><sp/><sp/>polar2Lab(double<sp/>color,<sp/>double<sp/>brightness,<sp/>double<sp/>saturation);</highlight></codeline>
<codeline lineno="2913"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2914"><highlight class="comment"><sp/><sp/><sp/><sp/>TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="2915"><highlight class="comment"><sp/><sp/><sp/><sp/>polar2Lab(TinyVector&lt;float,<sp/>3&gt;<sp/>const<sp/>&amp;<sp/>polar);</highlight></codeline>
<codeline lineno="2916"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="2917"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2918"><highlight class="comment"><sp/><sp/><sp/><sp/>\arg<sp/>color<sp/>-<sp/>the<sp/>color<sp/>angle<sp/>in<sp/>degrees</highlight></codeline>
<codeline lineno="2919"><highlight class="comment"><sp/><sp/><sp/><sp/>\arg<sp/>brightness<sp/>-<sp/>between<sp/>0<sp/>and<sp/>1</highlight></codeline>
<codeline lineno="2920"><highlight class="comment"><sp/><sp/><sp/><sp/>\arg<sp/>saturation<sp/>-<sp/>between<sp/>0<sp/>and<sp/>1</highlight></codeline>
<codeline lineno="2921"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2922"><highlight class="comment"><sp/><sp/><sp/><sp/>L*a*b*<sp/>polar<sp/>coordinates<sp/>of<sp/>some<sp/>important<sp/>colors:</highlight></codeline>
<codeline lineno="2923"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2924"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="2925"><highlight class="comment"><sp/><sp/><sp/><sp/>black<sp/><sp/><sp/>=<sp/>[*,<sp/>0,<sp/>0]<sp/><sp/><sp/><sp/>*<sp/>-<sp/>arbitrary</highlight></codeline>
<codeline lineno="2926"><highlight class="comment"><sp/><sp/><sp/><sp/>white<sp/><sp/><sp/>=<sp/>[*,<sp/>1,<sp/>0]<sp/><sp/><sp/><sp/>*<sp/>-<sp/>arbitrary</highlight></codeline>
<codeline lineno="2927"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2928"><highlight class="comment"><sp/><sp/><sp/><sp/>red<sp/><sp/><sp/><sp/><sp/>=<sp/>[<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0.532406,<sp/>0.781353]</highlight></codeline>
<codeline lineno="2929"><highlight class="comment"><sp/><sp/><sp/><sp/>yellow<sp/><sp/>=<sp/>[62.8531,<sp/>0.971395,<sp/>0.724189]</highlight></codeline>
<codeline lineno="2930"><highlight class="comment"><sp/><sp/><sp/><sp/>green<sp/><sp/><sp/>=<sp/>[96.0184,<sp/>0.877351,<sp/>0.895108]</highlight></codeline>
<codeline lineno="2931"><highlight class="comment"><sp/><sp/><sp/><sp/>cyan<sp/><sp/><sp/><sp/>=<sp/>[156.378,<sp/>0.911133,<sp/>0.374577]</highlight></codeline>
<codeline lineno="2932"><highlight class="comment"><sp/><sp/><sp/><sp/>blue<sp/><sp/><sp/><sp/>=<sp/>[266.287,<sp/>0.322957,<sp/>0.999997]</highlight></codeline>
<codeline lineno="2933"><highlight class="comment"><sp/><sp/><sp/><sp/>magenta<sp/>=<sp/>[288.237,<sp/>0.603235,<sp/>0.863482]</highlight></codeline>
<codeline lineno="2934"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="2935"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2936"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="2937" refid="group__PolarColors_1gafdec7ac4d8ba3ec5a076372eea278c66" refkind="member"><highlight class="normal"><ref refid="group__PolarColors_1gafdec7ac4d8ba3ec5a076372eea278c66" kindref="member" tooltip="Init L*a*b* color triple from polar representation.">polar2Lab</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>color,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>brightness,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>saturation)</highlight></codeline>
<codeline lineno="2938"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle<sp/>=<sp/>(color+39.9977)/180.0*M_PI;</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>normsat<sp/>=<sp/>saturation*133.809;</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound">TinyVector&lt;float, 3&gt;</ref><sp/>result;</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>float(100.0*brightness);</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>float(normsat*<ref refid="group__LinearAlgebraFunctions_1ga05727ffc201ac332c0e4158a2267c08c" kindref="member">VIGRA_CSTD::cos</ref>(angle));</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>float(normsat*<ref refid="group__LinearAlgebraFunctions_1ga9db90484f9146df72b800bab7fecdd4b" kindref="member">VIGRA_CSTD::sin</ref>(angle));</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2947"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"></highlight></codeline>
<codeline lineno="2949"><highlight class="normal"></highlight></codeline>
<codeline lineno="2950"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="2951"><highlight class="normal">TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><ref refid="group__PolarColors_1gafdec7ac4d8ba3ec5a076372eea278c66" kindref="member" tooltip="Init L*a*b* color triple from polar representation.">polar2Lab</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>polar)</highlight></codeline>
<codeline lineno="2953"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__PolarColors_1gafdec7ac4d8ba3ec5a076372eea278c66" kindref="member" tooltip="Init L*a*b* color triple from polar representation.">polar2Lab</ref>(polar[0],<sp/>polar[1],<sp/>polar[2]);</highlight></codeline>
<codeline lineno="2955"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2957"><highlight class="comment">/**<sp/>\brief<sp/>Create<sp/>polar<sp/>representation<sp/>form<sp/>L*a*b*</highlight></codeline>
<codeline lineno="2958"><highlight class="comment"></highlight></codeline>
<codeline lineno="2959"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declaration:&lt;/b&gt;</highlight></codeline>
<codeline lineno="2960"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2961"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="2962"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="2963"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TinyVector&lt;float,<sp/>3&gt;<sp/>lab2Polar(TinyVector&lt;float,<sp/>3&gt;<sp/>const<sp/>&amp;<sp/>lab);</highlight></codeline>
<codeline lineno="2964"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2965"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="2966"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2967"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="2968"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="2969"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2970"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>realizes<sp/>the<sp/>inverse<sp/>of<sp/>the<sp/>transformation<sp/>described<sp/>in<sp/></highlight></codeline>
<codeline lineno="2971"><highlight class="comment"><sp/><sp/><sp/><sp/>\ref<sp/>polar2Lab().</highlight></codeline>
<codeline lineno="2972"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2973"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="2974"><highlight class="normal">TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="2975" refid="group__PolarColors_1ga7ac70bee121e35247722c80fa20a9232" refkind="member"><highlight class="normal"><ref refid="group__PolarColors_1ga7ac70bee121e35247722c80fa20a9232" kindref="member" tooltip="Create polar representation form L*a*b*.">lab2Polar</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>lab)</highlight></codeline>
<codeline lineno="2976"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound">TinyVector&lt;float, 3&gt;</ref><sp/>result;</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>float(lab[0]/100.0);</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle<sp/>=<sp/>(lab[1]<sp/>==<sp/>0.0<sp/>&amp;&amp;<sp/>lab[2]<sp/>==<sp/>0.0)</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>0.0</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="group__FixedPoint16Operations_1gae83e1ae2e3dae6dc462c69a7c8175fc5" kindref="member" tooltip="Arctangent. Accuracy better than 1/3 degree (9 significant bits).">VIGRA_CSTD::atan2</ref>(lab[2],<sp/>lab[1])/M_PI*180.0-39.9977;</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>angle<sp/>&lt;<sp/>0.0<sp/>?</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float(angle<sp/>+<sp/>360.0)<sp/>:</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float(angle);</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>float(<ref refid="group__FixedPointOperations_1ga22d75753836176f3d172f58be11ecc4c" kindref="member" tooltip="square root.">VIGRA_CSTD::sqrt</ref>(lab[1]*lab[1]<sp/>+<sp/>lab[2]*lab[2])/133.809);</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2987"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2989"><highlight class="comment">/**<sp/>\brief<sp/>Init<sp/>L*u*v*<sp/>color<sp/>triple<sp/>from<sp/>polar<sp/>representation.</highlight></codeline>
<codeline lineno="2990"><highlight class="comment"></highlight></codeline>
<codeline lineno="2991"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="2992"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="2993"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2994"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declarations:&lt;/b&gt;</highlight></codeline>
<codeline lineno="2995"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2996"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="2997"><highlight class="comment"><sp/><sp/><sp/><sp/>TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="2998"><highlight class="comment"><sp/><sp/><sp/><sp/>polar2Luv(double<sp/>color,<sp/>double<sp/>brightness,<sp/>double<sp/>saturation);</highlight></codeline>
<codeline lineno="2999"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3000"><highlight class="comment"><sp/><sp/><sp/><sp/>TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="3001"><highlight class="comment"><sp/><sp/><sp/><sp/>polar2Luv(TinyVector&lt;float,<sp/>3&gt;<sp/>const<sp/>&amp;<sp/>polar);</highlight></codeline>
<codeline lineno="3002"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="3003"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3004"><highlight class="comment"><sp/><sp/><sp/><sp/>\arg<sp/>color<sp/>-<sp/>the<sp/>color<sp/>angle<sp/>in<sp/>degrees</highlight></codeline>
<codeline lineno="3005"><highlight class="comment"><sp/><sp/><sp/><sp/>\arg<sp/>brightness<sp/>-<sp/>between<sp/>0<sp/>and<sp/>1</highlight></codeline>
<codeline lineno="3006"><highlight class="comment"><sp/><sp/><sp/><sp/>\arg<sp/>saturation<sp/>-<sp/>between<sp/>0<sp/>and<sp/>1</highlight></codeline>
<codeline lineno="3007"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3008"><highlight class="comment"><sp/><sp/><sp/><sp/>L*u*v*<sp/>polar<sp/>coordinates<sp/>of<sp/>some<sp/>important<sp/>colors:</highlight></codeline>
<codeline lineno="3009"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3010"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="3011"><highlight class="comment"><sp/><sp/><sp/><sp/>black<sp/><sp/><sp/>=<sp/>[*,<sp/>0,<sp/>0]<sp/><sp/><sp/><sp/>*<sp/>-<sp/>arbitrary</highlight></codeline>
<codeline lineno="3012"><highlight class="comment"><sp/><sp/><sp/><sp/>white<sp/><sp/><sp/>=<sp/>[*,<sp/>1,<sp/>0]<sp/><sp/><sp/><sp/>*<sp/>-<sp/>arbitrary</highlight></codeline>
<codeline lineno="3013"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3014"><highlight class="comment"><sp/><sp/><sp/><sp/>red<sp/><sp/><sp/><sp/><sp/>=<sp/>[<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0.532406,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1]</highlight></codeline>
<codeline lineno="3015"><highlight class="comment"><sp/><sp/><sp/><sp/>yellow<sp/><sp/>=<sp/>[<sp/><sp/><sp/>73.7,<sp/>0.971395,<sp/>0.597953]</highlight></codeline>
<codeline lineno="3016"><highlight class="comment"><sp/><sp/><sp/><sp/>green<sp/><sp/><sp/>=<sp/>[115.552,<sp/>0.877351,<sp/>0.758352]</highlight></codeline>
<codeline lineno="3017"><highlight class="comment"><sp/><sp/><sp/><sp/>cyan<sp/><sp/><sp/><sp/>=<sp/>[<sp/><sp/>180.0,<sp/>0.911133,<sp/>0.402694]</highlight></codeline>
<codeline lineno="3018"><highlight class="comment"><sp/><sp/><sp/><sp/>blue<sp/><sp/><sp/><sp/>=<sp/>[<sp/><sp/>253.7,<sp/>0.322957,<sp/>0.729883]</highlight></codeline>
<codeline lineno="3019"><highlight class="comment"><sp/><sp/><sp/><sp/>magenta<sp/>=<sp/>[295.553,<sp/>0.603235,<sp/>0.767457]</highlight></codeline>
<codeline lineno="3020"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="3021"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3022"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="3023" refid="group__PolarColors_1gacda9420225ef2bb0075597549fc493e2" refkind="member"><highlight class="normal"><ref refid="group__PolarColors_1gacda9420225ef2bb0075597549fc493e2" kindref="member" tooltip="Init L*u*v* color triple from polar representation.">polar2Luv</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>color,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>brightness,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>saturation)</highlight></codeline>
<codeline lineno="3024"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle<sp/>=<sp/>(color+12.1727)/180.0*M_PI;</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>normsat<sp/>=<sp/>saturation*179.04;</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound">TinyVector&lt;float, 3&gt;</ref><sp/>result;</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>float(100.0*brightness);</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>float(normsat*<ref refid="group__LinearAlgebraFunctions_1ga05727ffc201ac332c0e4158a2267c08c" kindref="member">VIGRA_CSTD::cos</ref>(angle));</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>float(normsat*<ref refid="group__LinearAlgebraFunctions_1ga9db90484f9146df72b800bab7fecdd4b" kindref="member">VIGRA_CSTD::sin</ref>(angle));</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3033"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"></highlight></codeline>
<codeline lineno="3035"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="3036"><highlight class="normal">TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><ref refid="group__PolarColors_1gacda9420225ef2bb0075597549fc493e2" kindref="member" tooltip="Init L*u*v* color triple from polar representation.">polar2Luv</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>polar)</highlight></codeline>
<codeline lineno="3038"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__PolarColors_1gacda9420225ef2bb0075597549fc493e2" kindref="member" tooltip="Init L*u*v* color triple from polar representation.">polar2Luv</ref>(polar[0],<sp/>polar[1],<sp/>polar[2]);</highlight></codeline>
<codeline lineno="3040"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3042"><highlight class="comment">/**<sp/>\brief<sp/>Create<sp/>polar<sp/>representation<sp/>form<sp/>L*u*v*</highlight></codeline>
<codeline lineno="3043"><highlight class="comment"></highlight></codeline>
<codeline lineno="3044"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declaration:&lt;/b&gt;</highlight></codeline>
<codeline lineno="3045"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3046"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="3047"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="3048"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TinyVector&lt;float,<sp/>3&gt;<sp/>luv2Polar(TinyVector&lt;float,<sp/>3&gt;<sp/>const<sp/>&amp;<sp/>luv);</highlight></codeline>
<codeline lineno="3049"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3050"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="3051"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3052"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="3053"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="3054"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3055"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>realizes<sp/>the<sp/>inverse<sp/>of<sp/>the<sp/>transformation<sp/>described<sp/>in<sp/></highlight></codeline>
<codeline lineno="3056"><highlight class="comment"><sp/><sp/><sp/><sp/>\ref<sp/>polar2Luv().</highlight></codeline>
<codeline lineno="3057"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3058"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="3059"><highlight class="normal">TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="3060" refid="group__PolarColors_1ga66419f33a9597d249c04c4e52e92fa00" refkind="member"><highlight class="normal"><ref refid="group__PolarColors_1ga66419f33a9597d249c04c4e52e92fa00" kindref="member" tooltip="Create polar representation form L*u*v*.">luv2Polar</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>luv)</highlight></codeline>
<codeline lineno="3061"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound">TinyVector&lt;float, 3&gt;</ref><sp/>result;</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>float(luv[0]/100.0);</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle<sp/>=<sp/>(luv[1]<sp/>==<sp/>0.0<sp/>&amp;&amp;<sp/>luv[2]<sp/>==<sp/>0.0)</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>0.0</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="group__FixedPoint16Operations_1gae83e1ae2e3dae6dc462c69a7c8175fc5" kindref="member" tooltip="Arctangent. Accuracy better than 1/3 degree (9 significant bits).">VIGRA_CSTD::atan2</ref>(luv[2],<sp/>luv[1])/M_PI*180.0-12.1727;</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>angle<sp/>&lt;<sp/>0.0<sp/>?</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float(angle<sp/>+<sp/>360.0)<sp/>:</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float(angle);</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>float(<ref refid="group__FixedPointOperations_1ga22d75753836176f3d172f58be11ecc4c" kindref="member" tooltip="square root.">VIGRA_CSTD::sqrt</ref>(luv[1]*luv[1]<sp/>+<sp/>luv[2]*luv[2])/179.04);</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3072"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3074"><highlight class="comment">/**<sp/>\brief<sp/>Init<sp/>Y&apos;PbPr<sp/>color<sp/>triple<sp/>from<sp/>polar<sp/>representation.</highlight></codeline>
<codeline lineno="3075"><highlight class="comment"></highlight></codeline>
<codeline lineno="3076"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="3077"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="3078"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3079"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declarations:&lt;/b&gt;</highlight></codeline>
<codeline lineno="3080"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3081"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="3082"><highlight class="comment"><sp/><sp/><sp/><sp/>TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="3083"><highlight class="comment"><sp/><sp/><sp/><sp/>polar2YPrimePbPr(double<sp/>color,<sp/>double<sp/>brightness,<sp/>double<sp/>saturation);</highlight></codeline>
<codeline lineno="3084"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3085"><highlight class="comment"><sp/><sp/><sp/><sp/>TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="3086"><highlight class="comment"><sp/><sp/><sp/><sp/>polar2YPrimePbPr(TinyVector&lt;float,<sp/>3&gt;<sp/>const<sp/>&amp;<sp/>polar);</highlight></codeline>
<codeline lineno="3087"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="3088"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3089"><highlight class="comment"><sp/><sp/><sp/><sp/>\arg<sp/>color<sp/>-<sp/>the<sp/>color<sp/>angle<sp/>in<sp/>degrees</highlight></codeline>
<codeline lineno="3090"><highlight class="comment"><sp/><sp/><sp/><sp/>\arg<sp/>brightness<sp/>-<sp/>between<sp/>0<sp/>and<sp/>1</highlight></codeline>
<codeline lineno="3091"><highlight class="comment"><sp/><sp/><sp/><sp/>\arg<sp/>saturation<sp/>-<sp/>between<sp/>0<sp/>and<sp/>1</highlight></codeline>
<codeline lineno="3092"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3093"><highlight class="comment"><sp/><sp/><sp/><sp/>Y&apos;PbPr<sp/>polar<sp/>coordinates<sp/>of<sp/>some<sp/>important<sp/>colors:</highlight></codeline>
<codeline lineno="3094"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3095"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="3096"><highlight class="comment"><sp/><sp/><sp/><sp/>black<sp/><sp/><sp/>=<sp/>[*,<sp/>0,<sp/>0]<sp/><sp/><sp/><sp/>*<sp/>-<sp/>arbitrary</highlight></codeline>
<codeline lineno="3097"><highlight class="comment"><sp/><sp/><sp/><sp/>white<sp/><sp/><sp/>=<sp/>[*,<sp/>1,<sp/>0]<sp/><sp/><sp/><sp/>*<sp/>-<sp/>arbitrary</highlight></codeline>
<codeline lineno="3098"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3099"><highlight class="comment"><sp/><sp/><sp/><sp/>red<sp/><sp/><sp/><sp/><sp/>=<sp/>[<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/>0.299,<sp/>0.988419]</highlight></codeline>
<codeline lineno="3100"><highlight class="comment"><sp/><sp/><sp/><sp/>yellow<sp/><sp/>=<sp/>[62.1151,<sp/><sp/>0.886,<sp/>0.948831]</highlight></codeline>
<codeline lineno="3101"><highlight class="comment"><sp/><sp/><sp/><sp/>green<sp/><sp/><sp/>=<sp/>[123.001,<sp/><sp/>0.587,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1]</highlight></codeline>
<codeline lineno="3102"><highlight class="comment"><sp/><sp/><sp/><sp/>cyan<sp/><sp/><sp/><sp/>=<sp/>[<sp/><sp/>180.0,<sp/><sp/>0.701,<sp/>0.988419]</highlight></codeline>
<codeline lineno="3103"><highlight class="comment"><sp/><sp/><sp/><sp/>blue<sp/><sp/><sp/><sp/>=<sp/>[242.115,<sp/><sp/>0.114,<sp/>0.948831]</highlight></codeline>
<codeline lineno="3104"><highlight class="comment"><sp/><sp/><sp/><sp/>magenta<sp/>=<sp/>[303.001,<sp/><sp/>0.413,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1]</highlight></codeline>
<codeline lineno="3105"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="3106"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3107"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="3108" refid="group__PolarColors_1gaaed05183ac67f4ce6a88bce59be43d47" refkind="member"><highlight class="normal"><ref refid="group__PolarColors_1gaaed05183ac67f4ce6a88bce59be43d47" kindref="member" tooltip="Init Y&amp;#39;PbPr color triple from polar representation.">polar2YPrimePbPr</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>color,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>brightness,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>saturation)</highlight></codeline>
<codeline lineno="3109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle<sp/>=<sp/>(color+18.6481)/180.0*M_PI;</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>normsat<sp/>=<sp/>saturation*0.533887;</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound">TinyVector&lt;float, 3&gt;</ref><sp/>result;</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>float(brightness);</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>float(-normsat*<ref refid="group__LinearAlgebraFunctions_1ga9db90484f9146df72b800bab7fecdd4b" kindref="member">VIGRA_CSTD::sin</ref>(angle));</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>float(normsat*<ref refid="group__LinearAlgebraFunctions_1ga05727ffc201ac332c0e4158a2267c08c" kindref="member">VIGRA_CSTD::cos</ref>(angle));</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"></highlight></codeline>
<codeline lineno="3120"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="3121"><highlight class="normal">TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><ref refid="group__PolarColors_1gaaed05183ac67f4ce6a88bce59be43d47" kindref="member" tooltip="Init Y&amp;#39;PbPr color triple from polar representation.">polar2YPrimePbPr</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>polar)</highlight></codeline>
<codeline lineno="3123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__PolarColors_1gaaed05183ac67f4ce6a88bce59be43d47" kindref="member" tooltip="Init Y&amp;#39;PbPr color triple from polar representation.">polar2YPrimePbPr</ref>(polar[0],<sp/>polar[1],<sp/>polar[2]);</highlight></codeline>
<codeline lineno="3125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3127"><highlight class="comment">/**<sp/>\brief<sp/>Create<sp/>polar<sp/>representation<sp/>form<sp/>Y&apos;PbPr</highlight></codeline>
<codeline lineno="3128"><highlight class="comment"></highlight></codeline>
<codeline lineno="3129"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declaration:&lt;/b&gt;</highlight></codeline>
<codeline lineno="3130"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3131"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="3132"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="3133"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TinyVector&lt;float,<sp/>3&gt;<sp/>yPrimePbPr2Polar(TinyVector&lt;float,<sp/>3&gt;<sp/>const<sp/>&amp;<sp/>ypbpr);</highlight></codeline>
<codeline lineno="3134"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3135"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="3136"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3137"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="3138"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="3139"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3140"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>realizes<sp/>the<sp/>inverse<sp/>of<sp/>the<sp/>transformation<sp/>described<sp/>in<sp/></highlight></codeline>
<codeline lineno="3141"><highlight class="comment"><sp/><sp/><sp/><sp/>\ref<sp/>polar2YPrimePbPr().</highlight></codeline>
<codeline lineno="3142"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3143"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="3144"><highlight class="normal">TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="3145" refid="group__PolarColors_1ga46c5522efdc3fc857675fcee909e4110" refkind="member"><highlight class="normal"><ref refid="group__PolarColors_1ga46c5522efdc3fc857675fcee909e4110" kindref="member" tooltip="Create polar representation form Y&amp;#39;PbPr.">yPrimePbPr2Polar</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>ypbpr)</highlight></codeline>
<codeline lineno="3146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound">TinyVector&lt;float, 3&gt;</ref><sp/>result;</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>float(ypbpr[0]);</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle<sp/>=<sp/>(ypbpr[1]<sp/>==<sp/>0.0<sp/>&amp;&amp;<sp/>ypbpr[2]<sp/>==<sp/>0.0)</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>0.0</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="group__FixedPoint16Operations_1gae83e1ae2e3dae6dc462c69a7c8175fc5" kindref="member" tooltip="Arctangent. Accuracy better than 1/3 degree (9 significant bits).">VIGRA_CSTD::atan2</ref>(-ypbpr[1],<sp/>ypbpr[2])/M_PI*180.0-18.6481;</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>angle<sp/>&lt;<sp/>0.0<sp/>?</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float(angle<sp/>+<sp/>360.0)<sp/>:</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float(angle);</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>float(<ref refid="group__FixedPointOperations_1ga22d75753836176f3d172f58be11ecc4c" kindref="member" tooltip="square root.">VIGRA_CSTD::sqrt</ref>(ypbpr[1]*ypbpr[1]<sp/>+<sp/>ypbpr[2]*ypbpr[2])/0.533887);</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3159"><highlight class="comment">/**<sp/>\brief<sp/>Init<sp/>Y&apos;CbCr<sp/>color<sp/>triple<sp/>from<sp/>polar<sp/>representation.</highlight></codeline>
<codeline lineno="3160"><highlight class="comment"></highlight></codeline>
<codeline lineno="3161"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="3162"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="3163"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3164"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declarations:&lt;/b&gt;</highlight></codeline>
<codeline lineno="3165"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3166"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="3167"><highlight class="comment"><sp/><sp/><sp/><sp/>TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="3168"><highlight class="comment"><sp/><sp/><sp/><sp/>polar2YPrimeCbCr(double<sp/>color,<sp/>double<sp/>brightness,<sp/>double<sp/>saturation);</highlight></codeline>
<codeline lineno="3169"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3170"><highlight class="comment"><sp/><sp/><sp/><sp/>TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="3171"><highlight class="comment"><sp/><sp/><sp/><sp/>polar2YPrimeCbCr(TinyVector&lt;float,<sp/>3&gt;<sp/>const<sp/>&amp;<sp/>polar);</highlight></codeline>
<codeline lineno="3172"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="3173"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3174"><highlight class="comment"><sp/><sp/><sp/><sp/>\arg<sp/>color<sp/>-<sp/>the<sp/>color<sp/>angle<sp/>in<sp/>degrees</highlight></codeline>
<codeline lineno="3175"><highlight class="comment"><sp/><sp/><sp/><sp/>\arg<sp/>brightness<sp/>-<sp/>between<sp/>0<sp/>and<sp/>1</highlight></codeline>
<codeline lineno="3176"><highlight class="comment"><sp/><sp/><sp/><sp/>\arg<sp/>saturation<sp/>-<sp/>between<sp/>0<sp/>and<sp/>1</highlight></codeline>
<codeline lineno="3177"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3178"><highlight class="comment"><sp/><sp/><sp/><sp/>Y&apos;CbCr<sp/>polar<sp/>coordinates<sp/>of<sp/>some<sp/>important<sp/>colors:</highlight></codeline>
<codeline lineno="3179"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3180"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="3181"><highlight class="comment"><sp/><sp/><sp/><sp/>black<sp/><sp/><sp/>=<sp/>[*,<sp/>0,<sp/>0]<sp/><sp/><sp/><sp/>*<sp/>-<sp/>arbitrary</highlight></codeline>
<codeline lineno="3182"><highlight class="comment"><sp/><sp/><sp/><sp/>white<sp/><sp/><sp/>=<sp/>[*,<sp/>1,<sp/>0]<sp/><sp/><sp/><sp/>*<sp/>-<sp/>arbitrary</highlight></codeline>
<codeline lineno="3183"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3184"><highlight class="comment"><sp/><sp/><sp/><sp/>red<sp/><sp/><sp/><sp/><sp/>=<sp/>[<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/>0.299,<sp/>0.988419]</highlight></codeline>
<codeline lineno="3185"><highlight class="comment"><sp/><sp/><sp/><sp/>yellow<sp/><sp/>=<sp/>[62.1151,<sp/><sp/>0.886,<sp/>0.948831]</highlight></codeline>
<codeline lineno="3186"><highlight class="comment"><sp/><sp/><sp/><sp/>green<sp/><sp/><sp/>=<sp/>[123.001,<sp/><sp/>0.587,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1]</highlight></codeline>
<codeline lineno="3187"><highlight class="comment"><sp/><sp/><sp/><sp/>cyan<sp/><sp/><sp/><sp/>=<sp/>[<sp/><sp/>180.0,<sp/><sp/>0.701,<sp/>0.988419]</highlight></codeline>
<codeline lineno="3188"><highlight class="comment"><sp/><sp/><sp/><sp/>blue<sp/><sp/><sp/><sp/>=<sp/>[242.115,<sp/><sp/>0.114,<sp/>0.948831]</highlight></codeline>
<codeline lineno="3189"><highlight class="comment"><sp/><sp/><sp/><sp/>magenta<sp/>=<sp/>[303.001,<sp/><sp/>0.413,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1]</highlight></codeline>
<codeline lineno="3190"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="3191"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3192"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="3193" refid="group__PolarColors_1gadb4ecbf1f3cd03559da19f5930bf308e" refkind="member"><highlight class="normal"><ref refid="group__PolarColors_1gadb4ecbf1f3cd03559da19f5930bf308e" kindref="member" tooltip="Init Y&amp;#39;CbCr color triple from polar representation.">polar2YPrimeCbCr</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>color,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>brightness,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>saturation)</highlight></codeline>
<codeline lineno="3194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle<sp/>=<sp/>(color+18.6482)/180.0*M_PI;</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>normsat<sp/>=<sp/>saturation*119.591;</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound">TinyVector&lt;float, 3&gt;</ref><sp/>result;</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>float(brightness*219.0<sp/>+<sp/>16.0);</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>float(-normsat*<ref refid="group__LinearAlgebraFunctions_1ga9db90484f9146df72b800bab7fecdd4b" kindref="member">VIGRA_CSTD::sin</ref>(angle)+128.0);</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>float(normsat*<ref refid="group__LinearAlgebraFunctions_1ga05727ffc201ac332c0e4158a2267c08c" kindref="member">VIGRA_CSTD::cos</ref>(angle)+128.0);</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"></highlight></codeline>
<codeline lineno="3205"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="3206"><highlight class="normal">TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><ref refid="group__PolarColors_1gadb4ecbf1f3cd03559da19f5930bf308e" kindref="member" tooltip="Init Y&amp;#39;CbCr color triple from polar representation.">polar2YPrimeCbCr</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>polar)</highlight></codeline>
<codeline lineno="3208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__PolarColors_1gadb4ecbf1f3cd03559da19f5930bf308e" kindref="member" tooltip="Init Y&amp;#39;CbCr color triple from polar representation.">polar2YPrimeCbCr</ref>(polar[0],<sp/>polar[1],<sp/>polar[2]);</highlight></codeline>
<codeline lineno="3210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3212"><highlight class="comment">/**<sp/>\brief<sp/>Create<sp/>polar<sp/>representation<sp/>form<sp/>Y&apos;CbCr</highlight></codeline>
<codeline lineno="3213"><highlight class="comment"></highlight></codeline>
<codeline lineno="3214"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declaration:&lt;/b&gt;</highlight></codeline>
<codeline lineno="3215"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3216"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="3217"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="3218"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TinyVector&lt;float,<sp/>3&gt;<sp/>yPrimeCbCr2Polar(TinyVector&lt;float,<sp/>3&gt;<sp/>const<sp/>&amp;<sp/>ycbcr);</highlight></codeline>
<codeline lineno="3219"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3220"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="3221"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3222"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="3223"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="3224"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3225"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>realizes<sp/>the<sp/>inverse<sp/>of<sp/>the<sp/>transformation<sp/>described<sp/>in<sp/></highlight></codeline>
<codeline lineno="3226"><highlight class="comment"><sp/><sp/><sp/><sp/>\ref<sp/>polar2YPrimeCbCr().</highlight></codeline>
<codeline lineno="3227"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3228"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="3229"><highlight class="normal">TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="3230" refid="group__PolarColors_1ga789ff96bd5b7fbcf75100307dcd4617d" refkind="member"><highlight class="normal"><ref refid="group__PolarColors_1ga789ff96bd5b7fbcf75100307dcd4617d" kindref="member" tooltip="Create polar representation form Y&amp;#39;CbCr.">yPrimeCbCr2Polar</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>ycbcr)</highlight></codeline>
<codeline lineno="3231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound">TinyVector&lt;float, 3&gt;</ref><sp/>result;</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>float((ycbcr[0]-16.0)/219.0);</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cb<sp/>=<sp/>ycbcr[1]-128.0;</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cr<sp/>=<sp/>ycbcr[2]-128.0;</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle<sp/>=<sp/>(cb<sp/>==<sp/>0.0<sp/>&amp;&amp;<sp/>cr<sp/>==<sp/>0.0)</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>0.0</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="group__FixedPoint16Operations_1gae83e1ae2e3dae6dc462c69a7c8175fc5" kindref="member" tooltip="Arctangent. Accuracy better than 1/3 degree (9 significant bits).">VIGRA_CSTD::atan2</ref>(-cb,<sp/>cr)/M_PI*180.0-18.6482;</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>angle<sp/>&lt;<sp/>0.0<sp/>?</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float(angle<sp/>+<sp/>360.0)<sp/>:</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float(angle);</highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>float(<ref refid="group__FixedPointOperations_1ga22d75753836176f3d172f58be11ecc4c" kindref="member" tooltip="square root.">VIGRA_CSTD::sqrt</ref>(cb*cb<sp/>+<sp/>cr*cr)/119.591);</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3246"><highlight class="comment">/**<sp/>\brief<sp/>Init<sp/>Y&apos;IQ<sp/>color<sp/>triple<sp/>from<sp/>polar<sp/>representation.</highlight></codeline>
<codeline lineno="3247"><highlight class="comment"></highlight></codeline>
<codeline lineno="3248"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="3249"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="3250"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3251"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declarations:&lt;/b&gt;</highlight></codeline>
<codeline lineno="3252"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3253"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="3254"><highlight class="comment"><sp/><sp/><sp/><sp/>TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="3255"><highlight class="comment"><sp/><sp/><sp/><sp/>polar2YPrimeIQ(double<sp/>color,<sp/>double<sp/>brightness,<sp/>double<sp/>saturation);</highlight></codeline>
<codeline lineno="3256"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3257"><highlight class="comment"><sp/><sp/><sp/><sp/>TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="3258"><highlight class="comment"><sp/><sp/><sp/><sp/>polar2YPrimeIQ(TinyVector&lt;float,<sp/>3&gt;<sp/>const<sp/>&amp;<sp/>polar);</highlight></codeline>
<codeline lineno="3259"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="3260"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3261"><highlight class="comment"><sp/><sp/><sp/><sp/>\arg<sp/>color<sp/>-<sp/>the<sp/>color<sp/>angle<sp/>in<sp/>degrees</highlight></codeline>
<codeline lineno="3262"><highlight class="comment"><sp/><sp/><sp/><sp/>\arg<sp/>brightness<sp/>-<sp/>between<sp/>0<sp/>and<sp/>1</highlight></codeline>
<codeline lineno="3263"><highlight class="comment"><sp/><sp/><sp/><sp/>\arg<sp/>saturation<sp/>-<sp/>between<sp/>0<sp/>and<sp/>1</highlight></codeline>
<codeline lineno="3264"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3265"><highlight class="comment"><sp/><sp/><sp/><sp/>Y&apos;IQ<sp/>polar<sp/>coordinates<sp/>of<sp/>some<sp/>important<sp/>colors:</highlight></codeline>
<codeline lineno="3266"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3267"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="3268"><highlight class="comment"><sp/><sp/><sp/><sp/>black<sp/><sp/><sp/>=<sp/>[*,<sp/>0,<sp/>0]<sp/><sp/><sp/><sp/>*<sp/>-<sp/>arbitrary</highlight></codeline>
<codeline lineno="3269"><highlight class="comment"><sp/><sp/><sp/><sp/>white<sp/><sp/><sp/>=<sp/>[*,<sp/>1,<sp/>0]<sp/><sp/><sp/><sp/>*<sp/>-<sp/>arbitrary</highlight></codeline>
<codeline lineno="3270"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3271"><highlight class="comment"><sp/><sp/><sp/><sp/>red<sp/><sp/><sp/><sp/><sp/>=<sp/>[<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0.299,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1]</highlight></codeline>
<codeline lineno="3272"><highlight class="comment"><sp/><sp/><sp/><sp/>yellow<sp/><sp/>=<sp/>[63.5851,<sp/>0.886,<sp/>0.707681]</highlight></codeline>
<codeline lineno="3273"><highlight class="comment"><sp/><sp/><sp/><sp/>green<sp/><sp/><sp/>=<sp/>[137.231,<sp/>0.587,<sp/>0.933362]</highlight></codeline>
<codeline lineno="3274"><highlight class="comment"><sp/><sp/><sp/><sp/>cyan<sp/><sp/><sp/><sp/>=<sp/>[<sp/><sp/>180.0,<sp/>0.701,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1]</highlight></codeline>
<codeline lineno="3275"><highlight class="comment"><sp/><sp/><sp/><sp/>blue<sp/><sp/><sp/><sp/>=<sp/>[243.585,<sp/>0.114,<sp/>0.707681]</highlight></codeline>
<codeline lineno="3276"><highlight class="comment"><sp/><sp/><sp/><sp/>magenta<sp/>=<sp/>[317.231,<sp/>0.413,<sp/>0.933362]</highlight></codeline>
<codeline lineno="3277"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="3278"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3279"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="3280" refid="group__PolarColors_1gaeb7ea17d644d4bb1c9a11f5298e96c97" refkind="member"><highlight class="normal"><ref refid="group__PolarColors_1gaeb7ea17d644d4bb1c9a11f5298e96c97" kindref="member" tooltip="Init Y&amp;#39;IQ color triple from polar representation.">polar2YPrimeIQ</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>color,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>brightness,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>saturation)</highlight></codeline>
<codeline lineno="3281"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle<sp/>=<sp/>(color-19.5807)/180.0*M_PI;</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>normsat<sp/>=<sp/>saturation*0.632582;</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound">TinyVector&lt;float, 3&gt;</ref><sp/>result;</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>float(brightness);</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>float(normsat*<ref refid="group__LinearAlgebraFunctions_1ga05727ffc201ac332c0e4158a2267c08c" kindref="member">VIGRA_CSTD::cos</ref>(angle));</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>float(-normsat*<ref refid="group__LinearAlgebraFunctions_1ga9db90484f9146df72b800bab7fecdd4b" kindref="member">VIGRA_CSTD::sin</ref>(angle));</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"></highlight></codeline>
<codeline lineno="3292"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="3293"><highlight class="normal">TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><ref refid="group__PolarColors_1gaeb7ea17d644d4bb1c9a11f5298e96c97" kindref="member" tooltip="Init Y&amp;#39;IQ color triple from polar representation.">polar2YPrimeIQ</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>polar)</highlight></codeline>
<codeline lineno="3295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__PolarColors_1gaeb7ea17d644d4bb1c9a11f5298e96c97" kindref="member" tooltip="Init Y&amp;#39;IQ color triple from polar representation.">polar2YPrimeIQ</ref>(polar[0],<sp/>polar[1],<sp/>polar[2]);</highlight></codeline>
<codeline lineno="3297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3299"><highlight class="comment">/**<sp/>\brief<sp/>Create<sp/>polar<sp/>representation<sp/>form<sp/>Y&apos;IQ</highlight></codeline>
<codeline lineno="3300"><highlight class="comment"></highlight></codeline>
<codeline lineno="3301"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declaration:&lt;/b&gt;</highlight></codeline>
<codeline lineno="3302"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3303"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="3304"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="3305"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TinyVector&lt;float,<sp/>3&gt;<sp/>yPrimeIQ2Polar(TinyVector&lt;float,<sp/>3&gt;<sp/>const<sp/>&amp;<sp/>yiq);</highlight></codeline>
<codeline lineno="3306"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3307"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="3308"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3309"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="3310"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="3311"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3312"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>realizes<sp/>the<sp/>inverse<sp/>of<sp/>the<sp/>transformation<sp/>described<sp/>in<sp/></highlight></codeline>
<codeline lineno="3313"><highlight class="comment"><sp/><sp/><sp/><sp/>\ref<sp/>polar2YPrimeIQ().</highlight></codeline>
<codeline lineno="3314"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3315"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="3316"><highlight class="normal">TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="3317" refid="group__PolarColors_1gaf75e5be718b502797ecece452fac99a1" refkind="member"><highlight class="normal"><ref refid="group__PolarColors_1gaf75e5be718b502797ecece452fac99a1" kindref="member" tooltip="Create polar representation form Y&amp;#39;IQ.">yPrimeIQ2Polar</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>yiq)</highlight></codeline>
<codeline lineno="3318"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound">TinyVector&lt;float, 3&gt;</ref><sp/>result;</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>float(yiq[0]);</highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle<sp/>=<sp/>(yiq[1]<sp/>==<sp/>0.0<sp/>&amp;&amp;<sp/>yiq[2]<sp/>==<sp/>0.0)</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>0.0</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="group__FixedPoint16Operations_1gae83e1ae2e3dae6dc462c69a7c8175fc5" kindref="member" tooltip="Arctangent. Accuracy better than 1/3 degree (9 significant bits).">VIGRA_CSTD::atan2</ref>(-yiq[2],<sp/>yiq[1])/M_PI*180.0+19.5807;</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>angle<sp/>&lt;<sp/>0.0<sp/>?</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float(angle<sp/>+<sp/>360.0)<sp/>:</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float(angle);</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>float(<ref refid="group__FixedPointOperations_1ga22d75753836176f3d172f58be11ecc4c" kindref="member" tooltip="square root.">VIGRA_CSTD::sqrt</ref>(yiq[1]*yiq[1]<sp/>+<sp/>yiq[2]*yiq[2])/0.632582);</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3331"><highlight class="comment">/**<sp/>\brief<sp/>Init<sp/>Y&apos;UV<sp/>color<sp/>triple<sp/>from<sp/>polar<sp/>representation.</highlight></codeline>
<codeline lineno="3332"><highlight class="comment"></highlight></codeline>
<codeline lineno="3333"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="3334"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="3335"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3336"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declarations:&lt;/b&gt;</highlight></codeline>
<codeline lineno="3337"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3338"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="3339"><highlight class="comment"><sp/><sp/><sp/><sp/>TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="3340"><highlight class="comment"><sp/><sp/><sp/><sp/>polar2YPrimeUV(double<sp/>color,<sp/>double<sp/>brightness,<sp/>double<sp/>saturation);</highlight></codeline>
<codeline lineno="3341"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3342"><highlight class="comment"><sp/><sp/><sp/><sp/>TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="3343"><highlight class="comment"><sp/><sp/><sp/><sp/>polar2YPrimeUV(TinyVector&lt;float,<sp/>3&gt;<sp/>const<sp/>&amp;<sp/>polar);</highlight></codeline>
<codeline lineno="3344"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="3345"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3346"><highlight class="comment"><sp/><sp/><sp/><sp/>\arg<sp/>color<sp/>-<sp/>the<sp/>color<sp/>angle<sp/>in<sp/>degrees</highlight></codeline>
<codeline lineno="3347"><highlight class="comment"><sp/><sp/><sp/><sp/>\arg<sp/>brightness<sp/>-<sp/>between<sp/>0<sp/>and<sp/>1</highlight></codeline>
<codeline lineno="3348"><highlight class="comment"><sp/><sp/><sp/><sp/>\arg<sp/>saturation<sp/>-<sp/>between<sp/>0<sp/>and<sp/>1</highlight></codeline>
<codeline lineno="3349"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3350"><highlight class="comment"><sp/><sp/><sp/><sp/>Y&apos;UV<sp/>polar<sp/>coordinates<sp/>of<sp/>some<sp/>important<sp/>colors:</highlight></codeline>
<codeline lineno="3351"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3352"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="3353"><highlight class="comment"><sp/><sp/><sp/><sp/>black<sp/><sp/><sp/>=<sp/>[*,<sp/>0,<sp/>0]<sp/><sp/><sp/><sp/>*<sp/>-<sp/>arbitrary</highlight></codeline>
<codeline lineno="3354"><highlight class="comment"><sp/><sp/><sp/><sp/>white<sp/><sp/><sp/>=<sp/>[*,<sp/>1,<sp/>0]<sp/><sp/><sp/><sp/>*<sp/>-<sp/>arbitrary</highlight></codeline>
<codeline lineno="3355"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3356"><highlight class="comment"><sp/><sp/><sp/><sp/>red<sp/><sp/><sp/><sp/><sp/>=<sp/>[<sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>0.299,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1]</highlight></codeline>
<codeline lineno="3357"><highlight class="comment"><sp/><sp/><sp/><sp/>yellow<sp/><sp/>=<sp/>[63.5851,<sp/>0.886,<sp/>0.707681]</highlight></codeline>
<codeline lineno="3358"><highlight class="comment"><sp/><sp/><sp/><sp/>green<sp/><sp/><sp/>=<sp/>[137.231,<sp/>0.587,<sp/>0.933362]</highlight></codeline>
<codeline lineno="3359"><highlight class="comment"><sp/><sp/><sp/><sp/>cyan<sp/><sp/><sp/><sp/>=<sp/>[<sp/><sp/>180.0,<sp/>0.701,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1]</highlight></codeline>
<codeline lineno="3360"><highlight class="comment"><sp/><sp/><sp/><sp/>blue<sp/><sp/><sp/><sp/>=<sp/>[243.585,<sp/>0.114,<sp/>0.707681]</highlight></codeline>
<codeline lineno="3361"><highlight class="comment"><sp/><sp/><sp/><sp/>magenta<sp/>=<sp/>[317.231,<sp/>0.413,<sp/>0.933362]</highlight></codeline>
<codeline lineno="3362"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="3363"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3364"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="3365" refid="group__PolarColors_1ga04dfa11029f88093e78cd5b8c620a928" refkind="member"><highlight class="normal"><ref refid="group__PolarColors_1ga04dfa11029f88093e78cd5b8c620a928" kindref="member" tooltip="Init Y&amp;#39;UV color triple from polar representation.">polar2YPrimeUV</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>color,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>brightness,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>saturation)</highlight></codeline>
<codeline lineno="3366"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle<sp/>=<sp/>(color+13.4569)/180.0*M_PI;</highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>normsat<sp/>=<sp/>saturation*0.632324;</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound">TinyVector&lt;float, 3&gt;</ref><sp/>result;</highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>float(brightness);</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>float(-normsat*<ref refid="group__LinearAlgebraFunctions_1ga9db90484f9146df72b800bab7fecdd4b" kindref="member">VIGRA_CSTD::sin</ref>(angle));</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>float(normsat*<ref refid="group__LinearAlgebraFunctions_1ga05727ffc201ac332c0e4158a2267c08c" kindref="member">VIGRA_CSTD::cos</ref>(angle));</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"></highlight></codeline>
<codeline lineno="3377"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="3378"><highlight class="normal">TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><ref refid="group__PolarColors_1ga04dfa11029f88093e78cd5b8c620a928" kindref="member" tooltip="Init Y&amp;#39;UV color triple from polar representation.">polar2YPrimeUV</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>polar)</highlight></codeline>
<codeline lineno="3380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__PolarColors_1ga04dfa11029f88093e78cd5b8c620a928" kindref="member" tooltip="Init Y&amp;#39;UV color triple from polar representation.">polar2YPrimeUV</ref>(polar[0],<sp/>polar[1],<sp/>polar[2]);</highlight></codeline>
<codeline lineno="3382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3384"><highlight class="comment">/**<sp/>\brief<sp/>Create<sp/>polar<sp/>representation<sp/>form<sp/>Y&apos;UV</highlight></codeline>
<codeline lineno="3385"><highlight class="comment"></highlight></codeline>
<codeline lineno="3386"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declaration:&lt;/b&gt;</highlight></codeline>
<codeline lineno="3387"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3388"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="3389"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="3390"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TinyVector&lt;float,<sp/>3&gt;<sp/>yPrimeUV2Polar(TinyVector&lt;float,<sp/>3&gt;<sp/>const<sp/>&amp;<sp/>yuv);</highlight></codeline>
<codeline lineno="3391"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3392"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="3393"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3394"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/colorconversions.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="3395"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="3396"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3397"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>realizes<sp/>the<sp/>inverse<sp/>of<sp/>the<sp/>transformation<sp/>described<sp/>in<sp/></highlight></codeline>
<codeline lineno="3398"><highlight class="comment"><sp/><sp/><sp/><sp/>\ref<sp/>polar2YPrimeUV().</highlight></codeline>
<codeline lineno="3399"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3400"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V&gt;</highlight></codeline>
<codeline lineno="3401"><highlight class="normal">TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="3402" refid="group__PolarColors_1ga2976f7502ebf84fc190a6f02ee3b46e8" refkind="member"><highlight class="normal"><ref refid="group__PolarColors_1ga2976f7502ebf84fc190a6f02ee3b46e8" kindref="member" tooltip="Create polar representation form Y&amp;#39;UV.">yPrimeUV2Polar</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>yuv)</highlight></codeline>
<codeline lineno="3403"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound">TinyVector&lt;float, 3&gt;</ref><sp/>result;</highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/><sp/><sp/>result[1]<sp/>=<sp/>float(yuv[0]);</highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle<sp/>=<sp/>(yuv[1]<sp/>==<sp/>0.0<sp/>&amp;&amp;<sp/>yuv[2]<sp/>==<sp/>0.0)</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>0.0</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="group__FixedPoint16Operations_1gae83e1ae2e3dae6dc462c69a7c8175fc5" kindref="member" tooltip="Arctangent. Accuracy better than 1/3 degree (9 significant bits).">VIGRA_CSTD::atan2</ref>(-yuv[1],<sp/>yuv[2])/M_PI*180.0-13.4569;</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/><sp/><sp/>result[0]<sp/>=<sp/>angle<sp/>&lt;<sp/>0.0<sp/>?</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float(angle<sp/>+<sp/>360.0)<sp/>:</highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float(angle);</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/><sp/><sp/>result[2]<sp/>=<sp/>float(<ref refid="group__FixedPointOperations_1ga22d75753836176f3d172f58be11ecc4c" kindref="member" tooltip="square root.">VIGRA_CSTD::sqrt</ref>(yuv[1]*yuv[1]<sp/>+<sp/>yuv[2]*yuv[2])/0.632324);</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3416"><highlight class="comment">//@}</highlight></codeline>
<codeline lineno="3417"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3418"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>vigra<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3419"><highlight class="normal"></highlight></codeline>
<codeline lineno="3420"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>VIGRA_COLORCONVERSIONS_HXX<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/colorconversions.hxx"/>
  </compounddef>
</doxygen>
