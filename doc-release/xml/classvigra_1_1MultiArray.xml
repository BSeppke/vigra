<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="classvigra_1_1MultiArray" kind="class" prot="public">
    <compoundname>vigra::MultiArray</compoundname>
    <basecompoundref refid="classvigra_1_1MultiArrayView" prot="public" virt="non-virtual">MultiArrayView&lt; N, T &gt;</basecompoundref>
    <includes refid="multi__array_8hxx" local="no">vigra/multi_array.hxx</includes>
    <templateparamlist>
      <param>
        <type>unsigned int</type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
      <param>
        <type>class</type>
        <declname>A</declname>
        <defname>A</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classvigra_1_1MultiArray_1a8876e3aa4a94471d5f91b914f0d37759" prot="public" static="no">
        <type>A</type>
        <definition>typedef A allocator_type</definition>
        <argsstring></argsstring>
        <name>allocator_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the allocator type used to allocate the memory </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2383" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1MultiArray_1aab6e0e1e7dc8dda19dfa814ed6776833" prot="public" static="no">
        <type>T *</type>
        <definition>typedef T* const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sequential (random access) const iterator type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2443" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1MultiArray_1a6ace1aa97c0128931a921479d2df41c2" prot="public" static="no">
        <type><ref refid="classvigra_1_1MultiArrayView_1a13c57dab17e2c903cadfa5e35ba84064" kindref="member">view_type::const_pointer</ref></type>
        <definition>typedef view_type::const_pointer const_pointer</definition>
        <argsstring></argsstring>
        <name>const_pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>const pointer type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2403" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1MultiArray_1a163353faff9e2af647551a93d2db5463" prot="public" static="no">
        <type><ref refid="classvigra_1_1MultiArrayView_1afdb67657e63a66ed3fae7b0c9fd81b48" kindref="member">view_type::const_reference</ref></type>
        <definition>typedef view_type::const_reference const_reference</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>const reference type (result of operator[] const) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2411" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1MultiArray_1a6147584bb2ee1463a0ad29e120b4d12e" prot="public" static="no">
        <type>vigra::detail::MultiIteratorChooser&lt; <ref refid="structvigra_1_1UnstridedArrayTag" kindref="compound">UnstridedArrayTag</ref> &gt;::template Traverser&lt; N, T, T const &amp;, T const * &gt;::type</type>
        <definition>typedef vigra::detail::MultiIteratorChooser&lt; UnstridedArrayTag&gt;::template Traverser&lt;N, T, T const &amp;, T const *&gt;::type const_traverser</definition>
        <argsstring></argsstring>
        <name>const_traverser</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>traverser type to const data </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2435" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2435" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1MultiArray_1a7a3c9714bbd0b64760c377a88fd36c63" prot="public" static="no">
        <type><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">view_type::difference_type</ref></type>
        <definition>typedef view_type::difference_type difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>difference type (used for multi-dimensional offsets and indices) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2419" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2419" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1MultiArray_1a6ac789163dd290addb14a4330998df81" prot="public" static="no">
        <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">view_type::difference_type_1</ref></type>
        <definition>typedef view_type::difference_type_1 difference_type_1</definition>
        <argsstring></argsstring>
        <name>difference_type_1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>difference and index type for a single dimension </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2423" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2423" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1MultiArray_1a35c955cacac6aacaa1e82874b1628865" prot="public" static="no">
        <type>T *</type>
        <definition>typedef T* iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sequential (random access) iterator type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2439" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2439" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1MultiArray_1ad563f259ed215bbfb3c115ec44238e88" prot="public" static="no">
        <type><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray</ref>&lt; N, T, A &gt;</type>
        <definition>typedef MultiArray&lt;N, T, A&gt; matrix_type</definition>
        <argsstring></argsstring>
        <name>matrix_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the matrix type associated with this array. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2391" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1MultiArray_1a7c3b5f1ed08b27119127cb725966a945" prot="public" static="no">
        <type><ref refid="classvigra_1_1MultiArrayView_1ad25b518036b886d8f35a3c059301d007" kindref="member">view_type::pointer</ref></type>
        <definition>typedef view_type::pointer pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>pointer type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2399" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1MultiArray_1a7ea9d2af939d562b74071b884d5e59b3" prot="public" static="no">
        <type><ref refid="classvigra_1_1MultiArrayView_1abe8933d436779a43cb5c1896ff5f2918" kindref="member">view_type::reference</ref></type>
        <definition>typedef view_type::reference reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>reference type (result of operator[]) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2407" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1MultiArray_1a49de2bda8c5700d3d386b176401e4a66" prot="public" static="no">
        <type><ref refid="classvigra_1_1MultiArrayView_1aa0f974ecbf50663cc55fb80dc82af95b" kindref="member">view_type::size_type</ref></type>
        <definition>typedef view_type::size_type size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>size type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2415" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2415" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1MultiArray_1a25503acdb8a49fc3ce1c8a0697440f54" prot="public" static="no">
        <type>vigra::detail::MultiIteratorChooser&lt; <ref refid="structvigra_1_1UnstridedArrayTag" kindref="compound">UnstridedArrayTag</ref> &gt;::template Traverser&lt; N, T, T &amp;, T * &gt;::type</type>
        <definition>typedef vigra::detail::MultiIteratorChooser&lt; UnstridedArrayTag&gt;::template Traverser&lt;N, T, T &amp;, T *&gt;::type traverser</definition>
        <argsstring></argsstring>
        <name>traverser</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>traverser type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2429" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2429" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1MultiArray_1adee9ba124f2423126f678c913667a229" prot="public" static="no">
        <type><ref refid="classvigra_1_1MultiArrayView_1a265a253612b46abed17c61b0a5e5ce30" kindref="member">view_type::value_type</ref></type>
        <definition>typedef view_type::value_type value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the array&apos;s value type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2395" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1MultiArray_1af81e3b6334c7d3981b0be15ddf5b1cce" prot="public" static="no">
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, T &gt;</type>
        <definition>typedef MultiArrayView&lt;N, T&gt; view_type</definition>
        <argsstring></argsstring>
        <name>view_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the view type associated with this array. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2387" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2387" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="classvigra_1_1MultiArray_1a607c140f0bd1f5cd4a4a482493afe93c" prot="protected" static="no">
        <type>difference_type::value_type</type>
        <definition>typedef difference_type::value_type diff_zero_t</definition>
        <argsstring></argsstring>
        <name>diff_zero_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2447" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2447" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classvigra_1_1MultiArray_1a2274deb28809e2e5a5571f525deeb1d0" prot="protected" static="no" mutable="no">
        <type><ref refid="classvigra_1_1MultiArray_1a8876e3aa4a94471d5f91b914f0d37759" kindref="member">allocator_type</ref></type>
        <definition>allocator_type m_alloc</definition>
        <argsstring></argsstring>
        <name>m_alloc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the allocator used to allocate the memory </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2451" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2451" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classvigra_1_1MultiArray_1aa257c44bfd4971977f439473047f9b0e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void allocate</definition>
        <argsstring>(pointer &amp;ptr, difference_type_1 s, const_reference init)</argsstring>
        <name>allocate</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArray_1a7c3b5f1ed08b27119127cb725966a945" kindref="member">pointer</ref> &amp;</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArray_1a6ac789163dd290addb14a4330998df81" kindref="member">difference_type_1</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArray_1a163353faff9e2af647551a93d2db5463" kindref="member">const_reference</ref></type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>allocate memory for s pixels, write its address into the given pointer and initialize the pixels with init. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2456" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2886" bodyend="2901"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1a2b022f9fe0469b1dfb0c25e66437c1f2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void allocate</definition>
        <argsstring>(pointer &amp;ptr, difference_type_1 s, U const *init)</argsstring>
        <name>allocate</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArray_1a7c3b5f1ed08b27119127cb725966a945" kindref="member">pointer</ref> &amp;</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArray_1a6ac789163dd290addb14a4330998df81" kindref="member">difference_type_1</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type>U const *</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>allocate memory for s pixels, write its address into the given pointer and initialize the linearized pixels to the values of init. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2462" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2905" bodyend="2920"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1a9c5daa3d096a6a6663afc1f9b2f654ba" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class StrideTag</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void allocate</definition>
        <argsstring>(pointer &amp;ptr, MultiArrayView&lt; N, U, StrideTag &gt; const &amp;init)</argsstring>
        <name>allocate</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArray_1a7c3b5f1ed08b27119127cb725966a945" kindref="member">pointer</ref> &amp;</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, U, StrideTag &gt; const &amp;</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>allocate memory, write its address into the given pointer and initialize it by copying the data from the given <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2468" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2924" bodyend="2939"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1ad1b9c440bd922da97c257db4f08006e0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class StrideTag</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void copyOrReshape</definition>
        <argsstring>(const MultiArrayView&lt; N, U, StrideTag &gt; &amp;rhs)</argsstring>
        <name>copyOrReshape</name>
        <param>
          <type>const <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, U, StrideTag &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2475" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2836" bodyend="2845"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1ad7dc8927f46c67fcc4efe8937629e866" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void deallocate</definition>
        <argsstring>(pointer &amp;ptr, difference_type_1 s)</argsstring>
        <name>deallocate</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArray_1a7c3b5f1ed08b27119127cb725966a945" kindref="member">pointer</ref> &amp;</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArray_1a6ac789163dd290addb14a4330998df81" kindref="member">difference_type_1</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>deallocate the memory (of length s) starting at the given address. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2472" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2942" bodyend="2950"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvigra_1_1MultiArray_1a52b4b6af5ae26e76305a28d3274cdd15" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArray_1a8876e3aa4a94471d5f91b914f0d37759" kindref="member">allocator_type</ref> const &amp;</type>
        <definition>allocator_type const&amp; allocator</definition>
        <argsstring>() const </argsstring>
        <name>allocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the allocator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2757" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2756" bodyend="2759"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1ad69bd11391be1a1dba5c8202259664f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArray_1a35c955cacac6aacaa1e82874b1628865" kindref="member">iterator</ref></type>
        <definition>iterator begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <reimplements refid="classvigra_1_1MultiArrayView_1ad69bd11391be1a1dba5c8202259664f8">begin</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sequential iterator pointing to the first array element. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2729" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2728" bodyend="2731"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1aa4b02d4f1a8500fb07a551069060709f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArray_1aab6e0e1e7dc8dda19dfa814ed6776833" kindref="member">const_iterator</ref></type>
        <definition>const_iterator begin</definition>
        <argsstring>() const </argsstring>
        <name>begin</name>
        <reimplements refid="classvigra_1_1MultiArrayView_1aa4b02d4f1a8500fb07a551069060709f">begin</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sequential const iterator pointing to the first array element. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2743" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2742" bodyend="2745"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1acad38d52497a975bfb6f2f6acd76631f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArray_1a35c955cacac6aacaa1e82874b1628865" kindref="member">iterator</ref></type>
        <definition>iterator end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <reimplements refid="classvigra_1_1MultiArrayView_1acad38d52497a975bfb6f2f6acd76631f">end</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sequential iterator pointing beyond the last array element. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2736" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2735" bodyend="2738"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1a350132543d80a1c1e5be844e6d2878ea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArray_1aab6e0e1e7dc8dda19dfa814ed6776833" kindref="member">const_iterator</ref></type>
        <definition>const_iterator end</definition>
        <argsstring>() const </argsstring>
        <name>end</name>
        <reimplements refid="classvigra_1_1MultiArrayView_1a350132543d80a1c1e5be844e6d2878ea">end</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sequential const iterator pointing beyond the last array element. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2750" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2749" bodyend="2752"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1aa90c22c574eaf8e0bd703912f644081b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray</ref> &amp;</type>
        <definition>MultiArray&amp; init</definition>
        <argsstring>(const U &amp;init)</argsstring>
        <name>init</name>
        <reimplements refid="classvigra_1_1MultiArrayView_1ae8d75c08347781b9854c8aea98c34610">init</reimplements>
        <reimplementedby refid="classvigra_1_1linalg_1_1Matrix_1abb74842cde52d611354a0d685df1f945">init</reimplementedby>
        <reimplementedby refid="classvigra_1_1linalg_1_1Matrix_1abb74842cde52d611354a0d685df1f945">init</reimplementedby>
        <param>
          <type>const U &amp;</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>init elements with a constant </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2698" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2697" bodyend="2701"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1a596f3b4b4084da422cb3320e165e1d89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MultiArray</definition>
        <argsstring>()</argsstring>
        <name>MultiArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>default constructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2482" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2479" bodyend="2482"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1a7c046d7813f92f155a026b57327f43d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MultiArray</definition>
        <argsstring>(allocator_type const &amp;alloc)</argsstring>
        <name>MultiArray</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArray_1a8876e3aa4a94471d5f91b914f0d37759" kindref="member">allocator_type</ref> const &amp;</type>
          <declname>alloc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>construct with given allocator </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2490" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2486" bodyend="2490"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1abad06a155ed3596c5a9b9118b3013c0b" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>MultiArray</definition>
        <argsstring>(difference_type_1 length, allocator_type const &amp;alloc=allocator_type())</argsstring>
        <name>MultiArray</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArray_1a6ac789163dd290addb14a4330998df81" kindref="member">difference_type_1</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArray_1a8876e3aa4a94471d5f91b914f0d37759" kindref="member">allocator_type</ref> const &amp;</type>
          <declname>alloc</declname>
          <defval><ref refid="classvigra_1_1MultiArray_1a8876e3aa4a94471d5f91b914f0d37759" kindref="member">allocator_type</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>construct with given length</para><para>Use only for 1-dimensional arrays (<computeroutput>N==1</computeroutput>). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2497" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2763" bodyend="2771"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1a4067b31c5cb195e7df9e0b0b4d164f43" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>MultiArray</definition>
        <argsstring>(const difference_type &amp;shape, allocator_type const &amp;alloc=allocator_type())</argsstring>
        <name>MultiArray</name>
        <param>
          <type>const <ref refid="classvigra_1_1MultiArray_1a7a3c9714bbd0b64760c377a88fd36c63" kindref="member">difference_type</ref> &amp;</type>
          <declname>shape</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArray_1a8876e3aa4a94471d5f91b914f0d37759" kindref="member">allocator_type</ref> const &amp;</type>
          <declname>alloc</declname>
          <defval><ref refid="classvigra_1_1MultiArray_1a8876e3aa4a94471d5f91b914f0d37759" kindref="member">allocator_type</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>construct with given shape </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2502" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2774" bodyend="2787"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1abc955c60d7711895b8aee8198b52f424" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MultiArray</definition>
        <argsstring>(const difference_type &amp;shape, const_reference init, allocator_type const &amp;alloc=allocator_type())</argsstring>
        <name>MultiArray</name>
        <param>
          <type>const <ref refid="classvigra_1_1MultiArray_1a7a3c9714bbd0b64760c377a88fd36c63" kindref="member">difference_type</ref> &amp;</type>
          <declname>shape</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArray_1a163353faff9e2af647551a93d2db5463" kindref="member">const_reference</ref></type>
          <declname>init</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArray_1a8876e3aa4a94471d5f91b914f0d37759" kindref="member">allocator_type</ref> const &amp;</type>
          <declname>alloc</declname>
          <defval><ref refid="classvigra_1_1MultiArray_1a8876e3aa4a94471d5f91b914f0d37759" kindref="member">allocator_type</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>construct from shape with an initial value </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2507" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2790" bodyend="2803"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1a50fa8a6a86660d125b59b7439a58acbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MultiArray</definition>
        <argsstring>(const difference_type &amp;shape, const_pointer init, allocator_type const &amp;alloc=allocator_type())</argsstring>
        <name>MultiArray</name>
        <param>
          <type>const <ref refid="classvigra_1_1MultiArray_1a7a3c9714bbd0b64760c377a88fd36c63" kindref="member">difference_type</ref> &amp;</type>
          <declname>shape</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArray_1a6ace1aa97c0128931a921479d2df41c2" kindref="member">const_pointer</ref></type>
          <declname>init</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArray_1a8876e3aa4a94471d5f91b914f0d37759" kindref="member">allocator_type</ref> const &amp;</type>
          <declname>alloc</declname>
          <defval><ref refid="classvigra_1_1MultiArray_1a8876e3aa4a94471d5f91b914f0d37759" kindref="member">allocator_type</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>construct from shape and copy values from the given array </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2512" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2806" bodyend="2819"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1a64aab8620a7edfa633ed4d5553f5a33c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MultiArray</definition>
        <argsstring>(const MultiArray &amp;rhs)</argsstring>
        <name>MultiArray</name>
        <param>
          <type>const <ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>copy constructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2519" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2516" bodyend="2521"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1a25dbbf5b811952bdaccbc1d98b19a3a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Expression</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>MultiArray</definition>
        <argsstring>(multi_math::MultiMathOperand&lt; Expression &gt; const &amp;rhs, allocator_type const &amp;alloc=allocator_type())</argsstring>
        <name>MultiArray</name>
        <param>
          <type>multi_math::MultiMathOperand&lt; Expression &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArray_1a8876e3aa4a94471d5f91b914f0d37759" kindref="member">allocator_type</ref> const &amp;</type>
          <declname>alloc</declname>
          <defval><ref refid="classvigra_1_1MultiArray_1a8876e3aa4a94471d5f91b914f0d37759" kindref="member">allocator_type</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>constructor from an array expression </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2531" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2526" bodyend="2533"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1a9ac62554a9086f9bb27585256a6b8576" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class StrideTag</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>MultiArray</definition>
        <argsstring>(const MultiArrayView&lt; N, U, StrideTag &gt; &amp;rhs, allocator_type const &amp;alloc=allocator_type())</argsstring>
        <name>MultiArray</name>
        <param>
          <type>const <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, U, StrideTag &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArray_1a8876e3aa4a94471d5f91b914f0d37759" kindref="member">allocator_type</ref> const &amp;</type>
          <declname>alloc</declname>
          <defval><ref refid="classvigra_1_1MultiArray_1a8876e3aa4a94471d5f91b914f0d37759" kindref="member">allocator_type</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>construct by copying from a <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2539" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2823" bodyend="2831"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1ab5abfd58da4e496b7ac6f31ab74f869e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class StrideTag</type>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray</ref> &amp;</type>
        <definition>MultiArray&amp; operator*=</definition>
        <argsstring>(const MultiArrayView&lt; N, U, StrideTag &gt; &amp;rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, U, StrideTag &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiply-assignment from arbitrary <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>. Fails with <computeroutput>PreconditionViolation</computeroutput> exception when the shapes do not match. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2590" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2589" bodyend="2593"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1a88ea293d8f6d74123071e5ee63fc0c5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray</ref> &amp;</type>
        <definition>MultiArray&amp; operator*=</definition>
        <argsstring>(const T &amp;rhs)</argsstring>
        <name>operator*=</name>
        <reimplements refid="classvigra_1_1MultiArrayView_1a6cc7ac8b9105a0d95b2c7750252d32ec">operator*=</reimplements>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiply-assignment of a scalar. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2624" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2623" bodyend="2627"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1a78d6b918c2821316ffc5665e4498a62b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Expression</type>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray</ref> &amp;</type>
        <definition>MultiArray&amp; operator*=</definition>
        <argsstring>(multi_math::MultiMathOperand&lt; Expression &gt; const &amp;rhs)</argsstring>
        <name>operator*=</name>
        <reimplements refid="classvigra_1_1MultiArrayView_1a35f6aab0e7f37cbf1de49abe62901ec5">operator*=</reimplements>
        <param>
          <type>multi_math::MultiMathOperand&lt; Expression &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiply-assignment of an array expression. Fails with <computeroutput>PreconditionViolation</computeroutput> exception when the shapes do not match. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2671" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2670" bodyend="2674"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1ac1bb8327f4e4e58fa8123c5503fd912d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class StrideTag</type>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray</ref> &amp;</type>
        <definition>MultiArray&amp; operator+=</definition>
        <argsstring>(const MultiArrayView&lt; N, U, StrideTag &gt; &amp;rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, U, StrideTag &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add-assignment from arbitrary <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>. Fails with <computeroutput>PreconditionViolation</computeroutput> exception when the shapes do not match. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2570" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2569" bodyend="2573"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1afa950f74d05a3e46a65dcaa0e353ec8c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray</ref> &amp;</type>
        <definition>MultiArray&amp; operator+=</definition>
        <argsstring>(const T &amp;rhs)</argsstring>
        <name>operator+=</name>
        <reimplements refid="classvigra_1_1MultiArrayView_1af80e0592a63a35af2748ba5c54bf51ea">operator+=</reimplements>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add-assignment of a scalar. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2608" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2607" bodyend="2611"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1a3afee44754e764e42527a74f10d91162" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Expression</type>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray</ref> &amp;</type>
        <definition>MultiArray&amp; operator+=</definition>
        <argsstring>(multi_math::MultiMathOperand&lt; Expression &gt; const &amp;rhs)</argsstring>
        <name>operator+=</name>
        <reimplements refid="classvigra_1_1MultiArrayView_1a927f4e96d6f5b28c7c7cbc7e6ca978bc">operator+=</reimplements>
        <param>
          <type>multi_math::MultiMathOperand&lt; Expression &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add-assignment of an array expression. Fails with <computeroutput>PreconditionViolation</computeroutput> exception when the shapes do not match. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2651" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2650" bodyend="2654"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1a5df322338746f147fe4c51cd95fa1ed3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class StrideTag</type>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray</ref> &amp;</type>
        <definition>MultiArray&amp; operator-=</definition>
        <argsstring>(const MultiArrayView&lt; N, U, StrideTag &gt; &amp;rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, U, StrideTag &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Subtract-assignment from arbitrary <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>. Fails with <computeroutput>PreconditionViolation</computeroutput> exception when the shapes do not match. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2580" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2579" bodyend="2583"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1a5bd660af26f82ea07946ef35780a04a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray</ref> &amp;</type>
        <definition>MultiArray&amp; operator-=</definition>
        <argsstring>(const T &amp;rhs)</argsstring>
        <name>operator-=</name>
        <reimplements refid="classvigra_1_1MultiArrayView_1aa8b0daf746d75139531bff75b1f43fa9">operator-=</reimplements>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Subtract-assignment of a scalar. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2616" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2615" bodyend="2619"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1a57a1104160719fee7bbc19880aaef568" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Expression</type>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray</ref> &amp;</type>
        <definition>MultiArray&amp; operator-=</definition>
        <argsstring>(multi_math::MultiMathOperand&lt; Expression &gt; const &amp;rhs)</argsstring>
        <name>operator-=</name>
        <reimplements refid="classvigra_1_1MultiArrayView_1af514e5535c2682fcc0970b133a25b158">operator-=</reimplements>
        <param>
          <type>multi_math::MultiMathOperand&lt; Expression &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Subtract-assignment of an array expression. Fails with <computeroutput>PreconditionViolation</computeroutput> exception when the shapes do not match. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2661" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2660" bodyend="2664"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1aae7e28d153b8aea7880b9310942a96e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class StrideTag</type>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray</ref> &amp;</type>
        <definition>MultiArray&amp; operator/=</definition>
        <argsstring>(const MultiArrayView&lt; N, U, StrideTag &gt; &amp;rhs)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, U, StrideTag &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Divide-assignment from arbitrary <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>. Fails with <computeroutput>PreconditionViolation</computeroutput> exception when the shapes do not match. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2600" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2599" bodyend="2603"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1a3417966535ad503c8f293f298205a8f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray</ref> &amp;</type>
        <definition>MultiArray&amp; operator/=</definition>
        <argsstring>(const T &amp;rhs)</argsstring>
        <name>operator/=</name>
        <reimplements refid="classvigra_1_1MultiArrayView_1aad41190865f1ff0b93dcef5d07938a0f">operator/=</reimplements>
        <param>
          <type>const T &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Divide-assignment of a scalar. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2632" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2631" bodyend="2635"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1a6e8d929ccae2ab0f0a07668610b5b172" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Expression</type>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray</ref> &amp;</type>
        <definition>MultiArray&amp; operator/=</definition>
        <argsstring>(multi_math::MultiMathOperand&lt; Expression &gt; const &amp;rhs)</argsstring>
        <name>operator/=</name>
        <reimplements refid="classvigra_1_1MultiArrayView_1a644075b68b6b01524b1b8620dbd79758">operator/=</reimplements>
        <param>
          <type>multi_math::MultiMathOperand&lt; Expression &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Divide-assignment of an array expression. Fails with <computeroutput>PreconditionViolation</computeroutput> exception when the shapes do not match. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2681" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2680" bodyend="2684"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1aa573ed91bf7c43ac1301cc019a5820a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray</ref> &amp;</type>
        <definition>MultiArray&amp; operator=</definition>
        <argsstring>(const MultiArray &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>assignment.<linebreak/>
 If the size of <emphasis>rhs</emphasis> is the same as the left-hand side arrays&apos;s old size, only the data are copied. Otherwise, new storage is allocated, which invalidates all objects (array views, iterators) depending on the lhs array. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2547" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2546" bodyend="2551"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1aa04e374b14935a8cb65734c419874ee1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class StrideTag</type>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray</ref> &amp;</type>
        <definition>MultiArray&amp; operator=</definition>
        <argsstring>(const MultiArrayView&lt; N, U, StrideTag &gt; &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, U, StrideTag &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>assignment from arbitrary <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>.<linebreak/>
 If the size of <emphasis>rhs</emphasis> is the same as the left-hand side arrays&apos;s old size, only the data are copied. Otherwise, new storage is allocated, which invalidates all objects (array views, iterators) depending on the lhs array. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2560" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2559" bodyend="2563"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1ad4d7ed46ffb1338b0654272afa1682f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Expression</type>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray</ref> &amp;</type>
        <definition>MultiArray&amp; operator=</definition>
        <argsstring>(multi_math::MultiMathOperand&lt; Expression &gt; const &amp;rhs)</argsstring>
        <name>operator=</name>
        <reimplements refid="classvigra_1_1MultiArrayView_1aba1db9e0b6bddad5e85929219950e98d">operator=</reimplements>
        <param>
          <type>multi_math::MultiMathOperand&lt; Expression &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assignment of an array expression. Fails with <computeroutput>PreconditionViolation</computeroutput> exception when the shapes do not match. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2641" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2640" bodyend="2644"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1a4ba159bdb66dec55214cdcab25320c1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void reshape</definition>
        <argsstring>(const difference_type &amp;shape)</argsstring>
        <name>reshape</name>
        <reimplementedby refid="classvigra_1_1linalg_1_1Matrix_1a7f58eb1cf89d57154bcfe16fc45b4270">reshape</reimplementedby>
        <reimplementedby refid="classvigra_1_1linalg_1_1Matrix_1a7f58eb1cf89d57154bcfe16fc45b4270">reshape</reimplementedby>
        <param>
          <type>const <ref refid="classvigra_1_1MultiArray_1a7a3c9714bbd0b64760c377a88fd36c63" kindref="member">difference_type</ref> &amp;</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate new memory with the given shape and initialize with zeros.<linebreak/>
 <emphasis>Note:</emphasis> this operation invalidates all dependent objects (array views and iterators) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2708" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2707" bodyend="2710"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1ae3faf1c77f906eeb2a8d315000d63ffb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reshape</definition>
        <argsstring>(const difference_type &amp;shape, const_reference init)</argsstring>
        <name>reshape</name>
        <reimplementedby refid="classvigra_1_1linalg_1_1Matrix_1abc9c642edfbb527968cd801cddc3b08d">reshape</reimplementedby>
        <reimplementedby refid="classvigra_1_1linalg_1_1Matrix_1abc9c642edfbb527968cd801cddc3b08d">reshape</reimplementedby>
        <param>
          <type>const <ref refid="classvigra_1_1MultiArray_1a7a3c9714bbd0b64760c377a88fd36c63" kindref="member">difference_type</ref> &amp;</type>
          <declname>shape</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArray_1a163353faff9e2af647551a93d2db5463" kindref="member">const_reference</ref></type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate new memory with the given shape and initialize it with the given value.<linebreak/>
 <emphasis>Note:</emphasis> this operation invalidates all dependent objects (array views and iterators) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2717" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2848" bodyend="2870"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1a2e15da47fd16916e4165a55e99a0ed3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void swap</definition>
        <argsstring>(MultiArray &amp;other)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Swap the contents with another <ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray</ref>. This is fast, because no data are copied, but only pointers and shapes swapped. <emphasis>Note:</emphasis> this operation invalidates all dependent objects (array views and iterators) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2724" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2875" bodyend="2883"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArray_1ae67638f4b1e3885c9308aac696c195fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>~MultiArray</definition>
        <argsstring>()</argsstring>
        <name>~MultiArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>destructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2689" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2688" bodyend="2691"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Main <computeroutput><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray</ref></computeroutput> class containing the memory management. </para>    </briefdescription>
    <detaileddescription>
<para>This class inherits the interface of <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>, and implements the memory ownership. <ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray</ref>&apos;s are always unstrided, striding them creates a <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>.</para><para>The template parameters are as follows <programlisting><codeline><highlight class="normal">N:<sp/>the<sp/>array<sp/>dimension</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">T:<sp/>the<sp/>type<sp/>of<sp/>the<sp/>array<sp/>elements</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">A:<sp/>the<sp/><ref refid="classvigra_1_1MultiArray_1a52b4b6af5ae26e76305a28d3274cdd15" kindref="member">allocator</ref><sp/>used<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">internal</highlight><highlight class="normal"><sp/>storage<sp/>management</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>(</highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>std::allocator&lt;T&gt;)</highlight></codeline>
</programlisting></para><para><bold>#include</bold> &lt;<ref refid="multi__array_8hxx_source" kindref="compound">vigra/multi_array.hxx</ref>&gt;</para><para>Namespace: vigra </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1100">
        <label>MultiArrayView&lt; N, T &gt;</label>
        <link refid="classvigra_1_1MultiArrayView"/>
      </node>
      <node id="1099">
        <label>MultiArray&lt; N, T, A &gt;</label>
        <link refid="classvigra_1_1MultiArray"/>
        <childnode refid="1100" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1102">
        <label>MultiArrayView&lt; N, T &gt;</label>
        <link refid="classvigra_1_1MultiArrayView"/>
        <childnode refid="1103" relation="usage">
          <edgelabel>m_stride</edgelabel>
          <edgelabel>m_shape</edgelabel>
        </childnode>
      </node>
      <node id="1101">
        <label>MultiArray&lt; N, T, A &gt;</label>
        <link refid="classvigra_1_1MultiArray"/>
        <childnode refid="1102" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1103">
        <label>MultiArrayShape&lt; actual_dimension &gt;</label>
        <link refid="classvigra_1_1MultiArrayShape"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="2376" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2375" bodyend="2760"/>
    <listofallmembers>
      <member refid="classvigra_1_1MultiArrayView_1ad1ff5270f93b932185051401f1bdc351ad5e9f57920c8f3be820823a379d521ea" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>actual_dimension</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ad1ff5270f93b932185051401f1bdc351" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>ActualDimension</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a8df8a389781b95596f98ef919b00d5f0" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>all</name></member>
      <member refid="classvigra_1_1MultiArray_1aa257c44bfd4971977f439473047f9b0e" prot="protected" virt="non-virtual"><scope>vigra::MultiArray</scope><name>allocate</name></member>
      <member refid="classvigra_1_1MultiArray_1a2b022f9fe0469b1dfb0c25e66437c1f2" prot="protected" virt="non-virtual"><scope>vigra::MultiArray</scope><name>allocate</name></member>
      <member refid="classvigra_1_1MultiArray_1a9c5daa3d096a6a6663afc1f9b2f654ba" prot="protected" virt="non-virtual"><scope>vigra::MultiArray</scope><name>allocate</name></member>
      <member refid="classvigra_1_1MultiArray_1a52b4b6af5ae26e76305a28d3274cdd15" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>allocator</name></member>
      <member refid="classvigra_1_1MultiArray_1a8876e3aa4a94471d5f91b914f0d37759" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>allocator_type</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a8be230fdd50e0ce842dd3b0a3012821b" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>any</name></member>
      <member refid="classvigra_1_1MultiArrayView_1acfc6e475db7e5d4f439c5940f4b18c6d" prot="protected" virt="non-virtual"><scope>vigra::MultiArray</scope><name>arraysOverlap</name></member>
      <member refid="classvigra_1_1MultiArrayView_1aa4c08bc293c9e26bc3a5888f9af8f05f" prot="protected" virt="non-virtual"><scope>vigra::MultiArray</scope><name>arraysOverlap</name></member>
      <member refid="classvigra_1_1MultiArray_1ad69bd11391be1a1dba5c8202259664f8" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>begin</name></member>
      <member refid="classvigra_1_1MultiArray_1aa4b02d4f1a8500fb07a551069060709f" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>begin</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a5620a71abd33556ab702350b31b123da" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>bind</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a1e24fcdbd0c298cbbb07fe21368d5abc" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>bindAt</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a59031884a541eed08347b5b626ba5613" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>bindElementChannel</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a262f8f52cd526b497522b444a53aeb1c" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>bindInner</name></member>
      <member refid="classvigra_1_1MultiArrayView_1acf6b7dc4ce0db4457beed5f3d90b5e7e" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>bindInner</name></member>
      <member refid="classvigra_1_1MultiArrayView_1acaca6e5790fa86120c4df40c3385d324" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>bindOuter</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a8ca5e1bbe796369b97ee1711671b9ca7" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>bindOuter</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ada10d77a4929689e467bf3478d5dc538" prot="protected" virt="non-virtual"><scope>vigra::MultiArray</scope><name>checkInnerStride</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a193cf45dcc77a4247554361ca1835330" prot="protected" virt="non-virtual"><scope>vigra::MultiArray</scope><name>checkInnerStride</name></member>
      <member refid="classvigra_1_1MultiArray_1aab6e0e1e7dc8dda19dfa814ed6776833" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>const_iterator</name></member>
      <member refid="classvigra_1_1MultiArray_1a6ace1aa97c0128931a921479d2df41c2" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>const_pointer</name></member>
      <member refid="classvigra_1_1MultiArray_1a163353faff9e2af647551a93d2db5463" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>const_reference</name></member>
      <member refid="classvigra_1_1MultiArray_1a6147584bb2ee1463a0ad29e120b4d12e" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>const_traverser</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a55d0184c5fbde73165533111441bb8ff" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>coordinateToScanOrderIndex</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a93b4cd51930b5c3f49081829c06a10da" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>copy</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a93cc8e36bc3893691f7c34f6f2b742ff" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>copy</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a84313f2a23b1242a0a0c556d6d97ba06" prot="protected" virt="non-virtual"><scope>vigra::MultiArray</scope><name>copyImpl</name></member>
      <member refid="classvigra_1_1MultiArray_1ad1b9c440bd922da97c257db4f08006e0" prot="protected" virt="non-virtual"><scope>vigra::MultiArray</scope><name>copyOrReshape</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a9711a38a3b5f2d85c44505938499a0e2" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>data</name></member>
      <member refid="classvigra_1_1MultiArray_1ad7dc8927f46c67fcc4efe8937629e866" prot="protected" virt="non-virtual"><scope>vigra::MultiArray</scope><name>deallocate</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a94fcd2d26ff25d3e428031416b75054d" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>diagonal</name></member>
      <member refid="classvigra_1_1MultiArray_1a607c140f0bd1f5cd4a4a482493afe93c" prot="protected" virt="non-virtual"><scope>vigra::MultiArray</scope><name>diff_zero_t</name></member>
      <member refid="classvigra_1_1MultiArray_1a7a3c9714bbd0b64760c377a88fd36c63" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>difference_type</name></member>
      <member refid="classvigra_1_1MultiArray_1a6ac789163dd290addb14a4330998df81" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>difference_type_1</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a76f6c30e31c82e61b8b7e09ce3d8871d" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>elementCount</name></member>
      <member refid="classvigra_1_1MultiArray_1acad38d52497a975bfb6f2f6acd76631f" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>end</name></member>
      <member refid="classvigra_1_1MultiArray_1a350132543d80a1c1e5be844e6d2878ea" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>end</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ab005801d6e252c3ae75ce9da36d1a600" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>expandElements</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a0effbd4cf91891700ac41e86defe4aa6" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>hasData</name></member>
      <member refid="classvigra_1_1MultiArray_1aa90c22c574eaf8e0bd703912f644081b" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>init</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a70170072585722399abd07c46f168909" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>insertSingletonDimension</name></member>
      <member refid="classvigra_1_1MultiArrayView_1acc16a9ac0801c380fcfe1841566efb99" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>isInside</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a3e1a9e07d9bc055f20a1b216370afd2f" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>isUnstrided</name></member>
      <member refid="classvigra_1_1MultiArray_1a35c955cacac6aacaa1e82874b1628865" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>iterator</name></member>
      <member refid="classvigra_1_1MultiArray_1a2274deb28809e2e5a5571f525deeb1d0" prot="protected" virt="non-virtual"><scope>vigra::MultiArray</scope><name>m_alloc</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" prot="protected" virt="non-virtual"><scope>vigra::MultiArray</scope><name>m_ptr</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" prot="protected" virt="non-virtual"><scope>vigra::MultiArray</scope><name>m_shape</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" prot="protected" virt="non-virtual"><scope>vigra::MultiArray</scope><name>m_stride</name></member>
      <member refid="classvigra_1_1MultiArray_1ad563f259ed215bbfb3c115ec44238e88" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>matrix_type</name></member>
      <member refid="classvigra_1_1MultiArrayView_1acd4c954a3c2fe5db856c4608f773eb45" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>meanVariance</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a6d8831009ea104ac1d9f36a2af5b0176" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>minmax</name></member>
      <member refid="classvigra_1_1MultiArray_1a596f3b4b4084da422cb3320e165e1d89" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>MultiArray</name></member>
      <member refid="classvigra_1_1MultiArray_1a7c046d7813f92f155a026b57327f43d2" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>MultiArray</name></member>
      <member refid="classvigra_1_1MultiArray_1abad06a155ed3596c5a9b9118b3013c0b" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>MultiArray</name></member>
      <member refid="classvigra_1_1MultiArray_1a4067b31c5cb195e7df9e0b0b4d164f43" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>MultiArray</name></member>
      <member refid="classvigra_1_1MultiArray_1abc955c60d7711895b8aee8198b52f424" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>MultiArray</name></member>
      <member refid="classvigra_1_1MultiArray_1a50fa8a6a86660d125b59b7439a58acbe" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>MultiArray</name></member>
      <member refid="classvigra_1_1MultiArray_1a64aab8620a7edfa633ed4d5553f5a33c" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>MultiArray</name></member>
      <member refid="classvigra_1_1MultiArray_1a25dbbf5b811952bdaccbc1d98b19a3a4" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>MultiArray</name></member>
      <member refid="classvigra_1_1MultiArray_1a9ac62554a9086f9bb27585256a6b8576" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>MultiArray</name></member>
      <member refid="classvigra_1_1MultiArrayView_1acddece61538d74dc1d7f71ea7c581e67" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>MultiArrayView</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a2d2c039824d104f03d97d00a5b87d914" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>MultiArrayView</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ac8e675f45de1e53c3cc147375a920ea4" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>MultiArrayView</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a0816d7af1f17517f39dbef405d2e4a47" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>norm</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ae01c274541e9b1d39eab573df7344fd1" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator MultiArrayView&lt; N, T, StridedArrayTag &gt;</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a018c002f23f0985c9ca89cd0a244f59d" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator!=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a902647635a189183308cb1fa8457f54a" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator()</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a3fe9a64fd6323465b3bf17ef76de53b7" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator()</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a95f6b94c53d6aa8ba4a9c4671a9daa65" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator()</name></member>
      <member refid="classvigra_1_1MultiArrayView_1af2c5eb62f1650fb7a3735990346478ed" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator()</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a05f95d6148a375885a7be85819dcbc02" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator()</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a2fa26a6082ac991137129dcbc4257ae0" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator()</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a5fbf52c1c9127b0e97f2cd1c263f9c5f" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator()</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ad157dd636e184ad7a235158bab39c5d8" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator()</name></member>
      <member refid="classvigra_1_1MultiArrayView_1abcbc55ed1f30019f85a6f25bf376ef2a" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator()</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a7792042817681cc6d8f5674b168419c1" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator()</name></member>
      <member refid="classvigra_1_1MultiArray_1ab5abfd58da4e496b7ac6f31ab74f869e" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator*=</name></member>
      <member refid="classvigra_1_1MultiArray_1a88ea293d8f6d74123071e5ee63fc0c5a" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator*=</name></member>
      <member refid="classvigra_1_1MultiArray_1a78d6b918c2821316ffc5665e4498a62b" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator*=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a2246e065e45bd9bd792efabac9fab724" prot="public" virt="non-virtual" ambiguityscope="MultiArrayView&lt; N, T &gt;::"><scope>vigra::MultiArray</scope><name>operator*=</name></member>
      <member refid="classvigra_1_1MultiArray_1ac1bb8327f4e4e58fa8123c5503fd912d" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator+=</name></member>
      <member refid="classvigra_1_1MultiArray_1afa950f74d05a3e46a65dcaa0e353ec8c" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator+=</name></member>
      <member refid="classvigra_1_1MultiArray_1a3afee44754e764e42527a74f10d91162" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator+=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a0db6c678b054c0cfba823c0fd355cc92" prot="public" virt="non-virtual" ambiguityscope="MultiArrayView&lt; N, T &gt;::"><scope>vigra::MultiArray</scope><name>operator+=</name></member>
      <member refid="classvigra_1_1MultiArray_1a5df322338746f147fe4c51cd95fa1ed3" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator-=</name></member>
      <member refid="classvigra_1_1MultiArray_1a5bd660af26f82ea07946ef35780a04a3" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator-=</name></member>
      <member refid="classvigra_1_1MultiArray_1a57a1104160719fee7bbc19880aaef568" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator-=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ac9d3cda29b22226f730c4520bcb2c1ad" prot="public" virt="non-virtual" ambiguityscope="MultiArrayView&lt; N, T &gt;::"><scope>vigra::MultiArray</scope><name>operator-=</name></member>
      <member refid="classvigra_1_1MultiArray_1aae7e28d153b8aea7880b9310942a96e9" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator/=</name></member>
      <member refid="classvigra_1_1MultiArray_1a3417966535ad503c8f293f298205a8f5" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator/=</name></member>
      <member refid="classvigra_1_1MultiArray_1a6e8d929ccae2ab0f0a07668610b5b172" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator/=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ae4dd7bff037e05a3580cd66ca857c3f2" prot="public" virt="non-virtual" ambiguityscope="MultiArrayView&lt; N, T &gt;::"><scope>vigra::MultiArray</scope><name>operator/=</name></member>
      <member refid="classvigra_1_1MultiArray_1aa573ed91bf7c43ac1301cc019a5820a8" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator=</name></member>
      <member refid="classvigra_1_1MultiArray_1aa04e374b14935a8cb65734c419874ee1" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator=</name></member>
      <member refid="classvigra_1_1MultiArray_1ad4d7ed46ffb1338b0654272afa1682f8" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1aaf7167061b3a03a33146694f32aa380f" prot="public" virt="non-virtual" ambiguityscope="MultiArrayView&lt; N, T &gt;::"><scope>vigra::MultiArray</scope><name>operator=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a47317f3dddbd8b1d447eee03040ae00b" prot="public" virt="non-virtual" ambiguityscope="MultiArrayView&lt; N, T &gt;::"><scope>vigra::MultiArray</scope><name>operator=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1af2799b196fd761fc6d5313cf374f2b5a" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator==</name></member>
      <member refid="classvigra_1_1MultiArrayView_1aebc939b0cbcef6234def78f6fcb50bf2" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator[]</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a77fdced99246dc012c098ffdd020e336" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator[]</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ace2c9cd7baee89bc7f005e3664693235" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator[]</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a994b70e9a282ffd06e7fc7df7308e4c0" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator[]</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a7ec14f3bf1d4cdfc41d8630176a82a07" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>operator[]</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a62a571ba62a9cc4b4f27af78b20a6d0e" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>permuteDimensions</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a4f32a16f89e9ff9927a20dc3c7abee6b" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>permuteStridesAscending</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a421ac71c17f86f900041784e3c77857a" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>permuteStridesDescending</name></member>
      <member refid="classvigra_1_1MultiArray_1a7c3b5f1ed08b27119127cb725966a945" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>pointer</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a5b3042c71814da638e52b4d547771cf4" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>product</name></member>
      <member refid="classvigra_1_1MultiArray_1a7ea9d2af939d562b74071b884d5e59b3" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>reference</name></member>
      <member refid="classvigra_1_1MultiArray_1a4ba159bdb66dec55214cdcab25320c1d" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>reshape</name></member>
      <member refid="classvigra_1_1MultiArray_1ae3faf1c77f906eeb2a8d315000d63ffb" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>reshape</name></member>
      <member refid="classvigra_1_1MultiArrayView_1aa2a1a7741de3368ab949dff7b574680c" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>scanOrderIndexToCoordinate</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>shape</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a33c2d2f3676a54c9393d06fbda8bd190" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>shape</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a14c1df938ca1578ffc71bc9728b4e401" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>size</name></member>
      <member refid="classvigra_1_1MultiArrayView_1abfcdc6d232e4633fe63ba5f0881e0998" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>size</name></member>
      <member refid="classvigra_1_1MultiArray_1a49de2bda8c5700d3d386b176401e4a66" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>size_type</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a6ada450d8e72c934a5406d1c2b5cf033" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>squaredNorm</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a3fee5f2594095fe1e747155d6bad57b0" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>stride</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a38ba1f2e9f964bc1e2f8531bd030c84e" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>stride</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ac5561077d69e2d8b92a62bc5206664e4" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>stridearray</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a614a382ab304114f19a2c1168502647d" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>strideOrdering</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a78785a3e970fb24bb63462af833934d8" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>strideOrdering</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a2271545a765e00427cb6c59f6c4d78e0" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>subarray</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a2863f8aff8f52d7471f7b8f6f3b41390" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>sum</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a3b2d9689550ecef9ddc5b225f253b7d7" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>sum</name></member>
      <member refid="classvigra_1_1MultiArray_1a2e15da47fd16916e4165a55e99a0ed3b" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>swap</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a1d0311cdc0759be49f6e54595b88c5c5" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>swapData</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a37c3d67af76aa3ab3c6ceecd01efe841" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>swapData</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a4d4727187e1a94b33400901c1c815c0b" prot="protected" virt="non-virtual"><scope>vigra::MultiArray</scope><name>swapDataImpl</name></member>
      <member refid="classvigra_1_1MultiArrayView_1af54479ad2ee57be8181f50013864cc33" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>transpose</name></member>
      <member refid="classvigra_1_1MultiArray_1a25503acdb8a49fc3ce1c8a0697440f54" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>traverser</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a6da88764aadffdf26736523ba73a53b2" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>traverser_begin</name></member>
      <member refid="classvigra_1_1MultiArrayView_1af5bd133df88785669c1f7058fd6ee4b5" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>traverser_begin</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a8e25dc1fff81a9ff3776106365bbd73f" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>traverser_end</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a8eeb5d1af1828e5f7f99548c03f51640" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>traverser_end</name></member>
      <member refid="classvigra_1_1MultiArray_1adee9ba124f2423126f678c913667a229" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>value_type</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a6317301617e7845bcd8d940a7af43156" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>view</name></member>
      <member refid="classvigra_1_1MultiArray_1af81e3b6334c7d3981b0be15ddf5b1cce" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>view_type</name></member>
      <member refid="classvigra_1_1MultiArray_1ae67638f4b1e3885c9308aac696c195fa" prot="public" virt="non-virtual"><scope>vigra::MultiArray</scope><name>~MultiArray</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
