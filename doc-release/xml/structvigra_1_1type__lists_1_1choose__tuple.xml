<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="structvigra_1_1type__lists_1_1choose__tuple" kind="struct" prot="public">
    <compoundname>vigra::type_lists::choose_tuple</compoundname>
    <derivedcompoundref refid="structvigra_1_1detail_1_1accu__context__base_1_1chooser" prot="public" virt="non-virtual">accu_context_base&lt; T, L, TUPLE &gt;::chooser&lt; V &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>V</declname>
        <defname>V</defname>
      </param>
      <param>
        <type>class</type>
        <declname>L</declname>
        <defname>L</defname>
      </param>
      <param>
        <type>class</type>
        <declname>A</declname>
        <defname>A</defname>
      </param>
      <param>
        <type>class</type>
        <declname>B</declname>
        <defname>B</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvigra_1_1type__lists_1_1choose__tuple_1a7fffb2eba0ca76865344b964511bb19a" prot="public" static="no">
        <type>type::template ref_returns&lt; V &gt;::const_type</type>
        <definition>typedef type::template ref_returns&lt;V&gt;::const_type const_ref_type</definition>
        <argsstring></argsstring>
        <name>const_ref_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1827" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1827" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvigra_1_1type__lists_1_1choose__tuple_1af33a2c5fcafcaa866204a36369b816de" prot="public" static="no">
        <type>type::template ref_returns&lt; V &gt;::type</type>
        <definition>typedef type::template ref_returns&lt;V&gt;:: type ref_type</definition>
        <argsstring></argsstring>
        <name>ref_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1825" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1825" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvigra_1_1type__lists_1_1choose__tuple_1a04ae8ef8ee35c11ef993fdfce7450cc8" prot="public" static="no">
        <type>IfBool&lt; value, A, B &gt;::type</type>
        <definition>typedef IfBool&lt;value, A, B&gt;::type type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1814" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1814" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structvigra_1_1type__lists_1_1choose__tuple_1a11ddd051208250c32dc4985abcafa86d" prot="public" static="yes" mutable="no">
        <type>const bool</type>
        <definition>const bool value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <initializer> contains&lt;V, L&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1813" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1813" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1choose__tuple_1a959cad034638213a9b8d0a12511f3346" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>type &amp;</type>
        <definition>static type&amp; at</definition>
        <argsstring>(A &amp;a, B &amp;b)</argsstring>
        <name>at</name>
        <param>
          <type>A &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>B &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1816" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1815" bodyend="1818"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1choose__tuple_1ab40c3c9060168311b57ffa5968e7e557" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const type &amp;</type>
        <definition>static const type&amp; at</definition>
        <argsstring>(const A &amp;a, const B &amp;b)</argsstring>
        <name>at</name>
        <param>
          <type>const A &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const B &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1820" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1819" bodyend="1822"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1choose__tuple_1af6de4d3b3c3f543e99823e02d7ba421c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ref_type</type>
        <definition>static ref_type ref</definition>
        <argsstring>(A &amp;a, B &amp;b)</argsstring>
        <name>ref</name>
        <param>
          <type>A &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>B &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1831" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1830" bodyend="1833"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1choose__tuple_1a1fc1e2cb38090536ab11c3d322f90545" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const_ref_type</type>
        <definition>static const_ref_type ref</definition>
        <argsstring>(const A &amp;a, const B &amp;b)</argsstring>
        <name>ref</name>
        <param>
          <type>const A &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const B &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1836" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1835" bodyend="1838"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1812" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1811" bodyend="1839"/>
    <listofallmembers>
      <member refid="structvigra_1_1type__lists_1_1choose__tuple_1a959cad034638213a9b8d0a12511f3346" prot="public" virt="non-virtual"><scope>vigra::type_lists::choose_tuple</scope><name>at</name></member>
      <member refid="structvigra_1_1type__lists_1_1choose__tuple_1ab40c3c9060168311b57ffa5968e7e557" prot="public" virt="non-virtual"><scope>vigra::type_lists::choose_tuple</scope><name>at</name></member>
      <member refid="structvigra_1_1type__lists_1_1choose__tuple_1a7fffb2eba0ca76865344b964511bb19a" prot="public" virt="non-virtual"><scope>vigra::type_lists::choose_tuple</scope><name>const_ref_type</name></member>
      <member refid="structvigra_1_1type__lists_1_1choose__tuple_1af6de4d3b3c3f543e99823e02d7ba421c" prot="public" virt="non-virtual"><scope>vigra::type_lists::choose_tuple</scope><name>ref</name></member>
      <member refid="structvigra_1_1type__lists_1_1choose__tuple_1a1fc1e2cb38090536ab11c3d322f90545" prot="public" virt="non-virtual"><scope>vigra::type_lists::choose_tuple</scope><name>ref</name></member>
      <member refid="structvigra_1_1type__lists_1_1choose__tuple_1af33a2c5fcafcaa866204a36369b816de" prot="public" virt="non-virtual"><scope>vigra::type_lists::choose_tuple</scope><name>ref_type</name></member>
      <member refid="structvigra_1_1type__lists_1_1choose__tuple_1a04ae8ef8ee35c11ef993fdfce7450cc8" prot="public" virt="non-virtual"><scope>vigra::type_lists::choose_tuple</scope><name>type</name></member>
      <member refid="structvigra_1_1type__lists_1_1choose__tuple_1a11ddd051208250c32dc4985abcafa86d" prot="public" virt="non-virtual"><scope>vigra::type_lists::choose_tuple</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
