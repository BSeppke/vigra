<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="inspectimage_8hxx" kind="file">
    <compoundname>inspectimage.hxx</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">algorithm</includes>
    <includes refid="utilities_8hxx" local="yes">utilities.hxx</includes>
    <includes refid="numerictraits_8hxx" local="yes">numerictraits.hxx</includes>
    <includes refid="iteratortraits_8hxx" local="yes">iteratortraits.hxx</includes>
    <includes refid="functortraits_8hxx" local="yes">functortraits.hxx</includes>
    <includes refid="rgbvalue_8hxx" local="yes">rgbvalue.hxx</includes>
    <includes refid="inspector__passes_8hxx" local="yes">inspector_passes.hxx</includes>
    <includedby refid="transformimage_8hxx" local="yes">vigra/transformimage.hxx</includedby>
    <includedby refid="multi__pointoperators_8hxx" local="yes">vigra/multi_pointoperators.hxx</includedby>
    <includedby refid="stdimagefunctions_8hxx" local="yes">vigra/stdimagefunctions.hxx</includedby>
    <includedby refid="impex_8hxx" local="yes">vigra/impex.hxx</includedby>
    <incdepgraph>
      <node id="3192">
        <label>functional</label>
      </node>
      <node id="3171">
        <label>limits</label>
      </node>
      <node id="3184">
        <label>sized_int.hxx</label>
        <link refid="sized__int_8hxx_source"/>
        <childnode refid="3169" relation="include">
        </childnode>
        <childnode refid="3171" relation="include">
        </childnode>
      </node>
      <node id="3178">
        <label>iterator</label>
      </node>
      <node id="3191">
        <label>inspector_passes.hxx</label>
        <link refid="inspector__passes_8hxx_source"/>
        <childnode refid="3169" relation="include">
        </childnode>
      </node>
      <node id="3185">
        <label>promote_traits.hxx</label>
        <link refid="promote__traits_8hxx_source"/>
      </node>
      <node id="3190">
        <label>algorithm.hxx</label>
        <link refid="algorithm_8hxx_source"/>
        <childnode refid="3184" relation="include">
        </childnode>
        <childnode refid="3181" relation="include">
        </childnode>
        <childnode refid="3191" relation="include">
        </childnode>
        <childnode refid="3161" relation="include">
        </childnode>
        <childnode refid="3192" relation="include">
        </childnode>
        <childnode refid="3178" relation="include">
        </childnode>
      </node>
      <node id="3175">
        <label>cmath</label>
      </node>
      <node id="3165">
        <label>stdexcept</label>
      </node>
      <node id="3193">
        <label>functortraits.hxx</label>
        <link refid="functortraits_8hxx_source"/>
        <childnode refid="3192" relation="include">
        </childnode>
        <childnode refid="3169" relation="include">
        </childnode>
      </node>
      <node id="3177">
        <label>iteratortags.hxx</label>
        <link refid="iteratortags_8hxx_source"/>
        <childnode refid="3178" relation="include">
        </childnode>
      </node>
      <node id="3168">
        <label>string</label>
      </node>
      <node id="3179">
        <label>iteratortraits.hxx</label>
        <link refid="iteratortraits_8hxx_source"/>
        <childnode refid="3180" relation="include">
        </childnode>
        <childnode refid="3186" relation="include">
        </childnode>
      </node>
      <node id="3182">
        <label>cfloat</label>
      </node>
      <node id="3162">
        <label>utilities.hxx</label>
        <link refid="utilities_8hxx_source"/>
        <childnode refid="3163" relation="include">
        </childnode>
        <childnode refid="3166" relation="include">
        </childnode>
        <childnode refid="3169" relation="include">
        </childnode>
        <childnode refid="3172" relation="include">
        </childnode>
        <childnode refid="3174" relation="include">
        </childnode>
        <childnode refid="3188" relation="include">
        </childnode>
        <childnode refid="3168" relation="include">
        </childnode>
        <childnode refid="3167" relation="include">
        </childnode>
      </node>
      <node id="3164">
        <label>vigra/configVersion.hxx</label>
        <link refid="configVersion_8hxx_source"/>
      </node>
      <node id="3172">
        <label>tuple.hxx</label>
        <link refid="tuple_8hxx_source"/>
        <childnode refid="3173" relation="include">
        </childnode>
      </node>
      <node id="3195">
        <label>tinyvector.hxx</label>
        <link refid="tinyvector_8hxx_source"/>
        <childnode refid="3175" relation="include">
        </childnode>
        <childnode refid="3189" relation="include">
        </childnode>
        <childnode refid="3176" relation="include">
        </childnode>
        <childnode refid="3161" relation="include">
        </childnode>
        <childnode refid="3163" relation="include">
        </childnode>
        <childnode refid="3166" relation="include">
        </childnode>
        <childnode refid="3169" relation="include">
        </childnode>
        <childnode refid="3181" relation="include">
        </childnode>
        <childnode refid="3196" relation="include">
        </childnode>
        <childnode refid="3188" relation="include">
        </childnode>
        <childnode refid="3174" relation="include">
        </childnode>
      </node>
      <node id="3159">
        <label>vigra/inspectimage.hxx</label>
        <link refid="inspectimage.hxx"/>
        <childnode refid="3160" relation="include">
        </childnode>
        <childnode refid="3161" relation="include">
        </childnode>
        <childnode refid="3162" relation="include">
        </childnode>
        <childnode refid="3181" relation="include">
        </childnode>
        <childnode refid="3179" relation="include">
        </childnode>
        <childnode refid="3193" relation="include">
        </childnode>
        <childnode refid="3194" relation="include">
        </childnode>
        <childnode refid="3191" relation="include">
        </childnode>
      </node>
      <node id="3188">
        <label>mathutil.hxx</label>
        <link refid="mathutil_8hxx_source"/>
        <childnode refid="3175" relation="include">
        </childnode>
        <childnode refid="3189" relation="include">
        </childnode>
        <childnode refid="3183" relation="include">
        </childnode>
        <childnode refid="3163" relation="include">
        </childnode>
        <childnode refid="3166" relation="include">
        </childnode>
        <childnode refid="3172" relation="include">
        </childnode>
        <childnode refid="3184" relation="include">
        </childnode>
        <childnode refid="3181" relation="include">
        </childnode>
        <childnode refid="3190" relation="include">
        </childnode>
      </node>
      <node id="3163">
        <label>config.hxx</label>
        <link refid="config_8hxx_source"/>
        <childnode refid="3164" relation="include">
        </childnode>
        <childnode refid="3165" relation="include">
        </childnode>
      </node>
      <node id="3181">
        <label>numerictraits.hxx</label>
        <link refid="numerictraits_8hxx_source"/>
        <childnode refid="3170" relation="include">
        </childnode>
        <childnode refid="3171" relation="include">
        </childnode>
        <childnode refid="3182" relation="include">
        </childnode>
        <childnode refid="3183" relation="include">
        </childnode>
        <childnode refid="3169" relation="include">
        </childnode>
        <childnode refid="3184" relation="include">
        </childnode>
        <childnode refid="3185" relation="include">
        </childnode>
      </node>
      <node id="3160">
        <label>vector</label>
      </node>
      <node id="3187">
        <label>iteratoradapter.hxx</label>
        <link refid="iteratoradapter_8hxx_source"/>
      </node>
      <node id="3186">
        <label>imageiteratoradapter.hxx</label>
        <link refid="imageiteratoradapter_8hxx_source"/>
        <childnode refid="3178" relation="include">
        </childnode>
      </node>
      <node id="3173">
        <label>utility</label>
      </node>
      <node id="3167">
        <label>sstream</label>
      </node>
      <node id="3194">
        <label>rgbvalue.hxx</label>
        <link refid="rgbvalue_8hxx_source"/>
        <childnode refid="3175" relation="include">
        </childnode>
        <childnode refid="3189" relation="include">
        </childnode>
        <childnode refid="3163" relation="include">
        </childnode>
        <childnode refid="3181" relation="include">
        </childnode>
        <childnode refid="3180" relation="include">
        </childnode>
        <childnode refid="3195" relation="include">
        </childnode>
        <childnode refid="3197" relation="include">
        </childnode>
      </node>
      <node id="3174">
        <label>diff2d.hxx</label>
        <link refid="diff2d_8hxx_source"/>
        <childnode refid="3175" relation="include">
        </childnode>
        <childnode refid="3176" relation="include">
        </childnode>
        <childnode refid="3163" relation="include">
        </childnode>
        <childnode refid="3177" relation="include">
        </childnode>
        <childnode refid="3179" relation="include">
        </childnode>
        <childnode refid="3187" relation="include">
        </childnode>
        <childnode refid="3172" relation="include">
        </childnode>
      </node>
      <node id="3166">
        <label>error.hxx</label>
        <link refid="error_8hxx_source"/>
        <childnode refid="3165" relation="include">
        </childnode>
        <childnode refid="3167" relation="include">
        </childnode>
        <childnode refid="3168" relation="include">
        </childnode>
        <childnode refid="3163" relation="include">
        </childnode>
      </node>
      <node id="3197">
        <label>static_assert.hxx</label>
        <link refid="static__assert_8hxx_source"/>
      </node>
      <node id="3176">
        <label>iosfwd</label>
      </node>
      <node id="3189">
        <label>cstdlib</label>
      </node>
      <node id="3170">
        <label>climits</label>
      </node>
      <node id="3169">
        <label>metaprogramming.hxx</label>
        <link refid="metaprogramming_8hxx_source"/>
        <childnode refid="3163" relation="include">
        </childnode>
        <childnode refid="3170" relation="include">
        </childnode>
        <childnode refid="3171" relation="include">
        </childnode>
        <childnode refid="3161" relation="include">
        </childnode>
      </node>
      <node id="3183">
        <label>complex</label>
      </node>
      <node id="3161">
        <label>algorithm</label>
      </node>
      <node id="3196">
        <label>memory.hxx</label>
        <link refid="memory_8hxx_source"/>
        <childnode refid="3169" relation="include">
        </childnode>
      </node>
      <node id="3180">
        <label>accessor.hxx</label>
        <link refid="accessor_8hxx_source"/>
        <childnode refid="3169" relation="include">
        </childnode>
        <childnode refid="3181" relation="include">
        </childnode>
        <childnode refid="3172" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3219">
        <label>vigra/quaternion.hxx</label>
        <link refid="quaternion_8hxx_source"/>
        <childnode refid="3218" relation="include">
        </childnode>
        <childnode refid="3220" relation="include">
        </childnode>
      </node>
      <node id="3202">
        <label>vigra/affine_registration.hxx</label>
        <link refid="affine__registration_8hxx_source"/>
      </node>
      <node id="3200">
        <label>vigra/multi_pointoperators.hxx</label>
        <link refid="multi__pointoperators_8hxx_source"/>
        <childnode refid="3201" relation="include">
        </childnode>
        <childnode refid="3227" relation="include">
        </childnode>
        <childnode refid="3229" relation="include">
        </childnode>
        <childnode refid="3230" relation="include">
        </childnode>
        <childnode refid="3231" relation="include">
        </childnode>
        <childnode refid="3232" relation="include">
        </childnode>
        <childnode refid="3233" relation="include">
        </childnode>
        <childnode refid="3234" relation="include">
        </childnode>
      </node>
      <node id="3242">
        <label>vigra/symmetry.hxx</label>
        <link refid="symmetry_8hxx_source"/>
      </node>
      <node id="3246">
        <label>vigra/resizeimage.hxx</label>
        <link refid="resizeimage_8hxx_source"/>
        <childnode refid="3236" relation="include">
        </childnode>
        <childnode refid="3247" relation="include">
        </childnode>
      </node>
      <node id="3218">
        <label>vigra/invariant_features3D.hxx</label>
        <link refid="invariant__features3D_8hxx_source"/>
      </node>
      <node id="3215">
        <label>vigra/affinegeometry.hxx</label>
        <link refid="affinegeometry_8hxx_source"/>
      </node>
      <node id="3207">
        <label>vigra/noise_normalization.hxx</label>
        <link refid="noise__normalization_8hxx_source"/>
      </node>
      <node id="3208">
        <label>vigra/quadprog.hxx</label>
        <link refid="quadprog_8hxx_source"/>
      </node>
      <node id="3225">
        <label>vigra/random_forest/rf_region.hxx</label>
        <link refid="rf__region_8hxx_source"/>
        <childnode refid="3224" relation="include">
        </childnode>
        <childnode refid="3211" relation="include">
        </childnode>
      </node>
      <node id="3247">
        <label>vigra/multi_resize.hxx</label>
        <link refid="multi__resize_8hxx_source"/>
      </node>
      <node id="3206">
        <label>vigra/linear_algebra.hxx</label>
        <link refid="linear__algebra_8hxx_source"/>
      </node>
      <node id="3224">
        <label>vigra/random_forest/rf_split.hxx</label>
        <link refid="rf__split_8hxx_source"/>
        <childnode refid="3210" relation="include">
        </childnode>
        <childnode refid="3211" relation="include">
        </childnode>
      </node>
      <node id="3250">
        <label>vigra/gaborfilter.hxx</label>
        <link refid="gaborfilter_8hxx_source"/>
      </node>
      <node id="3212">
        <label>vigra/random_forest_hdf5_impex.hxx</label>
        <link refid="random__forest__hdf5__impex_8hxx_source"/>
      </node>
      <node id="3236">
        <label>vigra/stdimagefunctions.hxx</label>
        <link refid="stdimagefunctions_8hxx_source"/>
        <childnode refid="3237" relation="include">
        </childnode>
        <childnode refid="3204" relation="include">
        </childnode>
        <childnode refid="3243" relation="include">
        </childnode>
        <childnode refid="3234" relation="include">
        </childnode>
      </node>
      <node id="3203">
        <label>vigra/linear_solve.hxx</label>
        <link refid="linear__solve_8hxx_source"/>
        <childnode refid="3202" relation="include">
        </childnode>
        <childnode refid="3204" relation="include">
        </childnode>
        <childnode refid="3206" relation="include">
        </childnode>
        <childnode refid="3207" relation="include">
        </childnode>
        <childnode refid="3208" relation="include">
        </childnode>
        <childnode refid="3209" relation="include">
        </childnode>
        <childnode refid="3205" relation="include">
        </childnode>
      </node>
      <node id="3235">
        <label>vigra/watersheds3d.hxx</label>
        <link refid="watersheds3d_8hxx_source"/>
      </node>
      <node id="3213">
        <label>vigra/singular_value_decomposition.hxx</label>
        <link refid="singular__value__decomposition_8hxx_source"/>
        <childnode refid="3203" relation="include">
        </childnode>
        <childnode refid="3209" relation="include">
        </childnode>
        <childnode refid="3214" relation="include">
        </childnode>
      </node>
      <node id="3239">
        <label>vigra/boundarytensor.hxx</label>
        <link refid="boundarytensor_8hxx_source"/>
      </node>
      <node id="3204">
        <label>vigra/edgedetection.hxx</label>
        <link refid="edgedetection_8hxx_source"/>
        <childnode refid="3205" relation="include">
        </childnode>
      </node>
      <node id="3220">
        <label>vigra/wigner-matrix.hxx</label>
        <link refid="wigner-matrix_8hxx_source"/>
      </node>
      <node id="3199">
        <label>vigra/transformimage.hxx</label>
        <link refid="transformimage_8hxx_source"/>
        <childnode refid="3200" relation="include">
        </childnode>
        <childnode refid="3236" relation="include">
        </childnode>
        <childnode refid="3245" relation="include">
        </childnode>
        <childnode refid="3248" relation="include">
        </childnode>
        <childnode refid="3250" relation="include">
        </childnode>
        <childnode refid="3251" relation="include">
        </childnode>
        <childnode refid="3207" relation="include">
        </childnode>
        <childnode refid="3205" relation="include">
        </childnode>
      </node>
      <node id="3249">
        <label>vigra/multi_fft.hxx</label>
        <link refid="multi__fft_8hxx_source"/>
      </node>
      <node id="3238">
        <label>vigra/convolution.hxx</label>
        <link refid="convolution_8hxx_source"/>
        <childnode refid="3239" relation="include">
        </childnode>
        <childnode refid="3240" relation="include">
        </childnode>
        <childnode refid="3204" relation="include">
        </childnode>
        <childnode refid="3241" relation="include">
        </childnode>
        <childnode refid="3242" relation="include">
        </childnode>
        <childnode refid="3217" relation="include">
        </childnode>
      </node>
      <node id="3237">
        <label>vigra/nonlineardiffusion.hxx</label>
        <link refid="nonlineardiffusion_8hxx_source"/>
        <childnode refid="3238" relation="include">
        </childnode>
      </node>
      <node id="3245">
        <label>vigra/resampling_convolution.hxx</label>
        <link refid="resampling__convolution_8hxx_source"/>
        <childnode refid="3246" relation="include">
        </childnode>
      </node>
      <node id="3205">
        <label>vigra/slanted_edge_mtf.hxx</label>
        <link refid="slanted__edge__mtf_8hxx_source"/>
      </node>
      <node id="3229">
        <label>vigra/multi_convolution.hxx</label>
        <link refid="multi__convolution_8hxx_source"/>
      </node>
      <node id="3198">
        <label>vigra/inspectimage.hxx</label>
        <link refid="inspectimage.hxx"/>
        <childnode refid="3199" relation="include">
        </childnode>
        <childnode refid="3200" relation="include">
        </childnode>
        <childnode refid="3236" relation="include">
        </childnode>
        <childnode refid="3251" relation="include">
        </childnode>
      </node>
      <node id="3226">
        <label>vigra/random_forest_deprec.hxx</label>
        <link refid="random__forest__deprec_8hxx_source"/>
      </node>
      <node id="3210">
        <label>vigra/random_forest/rf_ridge_split.hxx</label>
        <link refid="rf__ridge__split_8hxx_source"/>
        <childnode refid="3211" relation="include">
        </childnode>
      </node>
      <node id="3223">
        <label>vigra/random_forest/rf_nodeproxy.hxx</label>
        <link refid="rf__nodeproxy_8hxx_source"/>
        <childnode refid="3222" relation="include">
        </childnode>
        <childnode refid="3224" relation="include">
        </childnode>
        <childnode refid="3210" relation="include">
        </childnode>
        <childnode refid="3211" relation="include">
        </childnode>
      </node>
      <node id="3214">
        <label>vigra/unsupervised_decomposition.hxx</label>
        <link refid="unsupervised__decomposition_8hxx_source"/>
      </node>
      <node id="3211">
        <label>vigra/random_forest.hxx</label>
        <link refid="random__forest_8hxx_source"/>
        <childnode refid="3212" relation="include">
        </childnode>
      </node>
      <node id="3209">
        <label>vigra/regression.hxx</label>
        <link refid="regression_8hxx_source"/>
        <childnode refid="3210" relation="include">
        </childnode>
      </node>
      <node id="3221">
        <label>vigra/matlab.hxx</label>
        <link refid="matlab_8hxx_source"/>
      </node>
      <node id="3222">
        <label>vigra/random_forest/rf_decisionTree.hxx</label>
        <link refid="rf__decisionTree_8hxx_source"/>
        <childnode refid="3211" relation="include">
        </childnode>
      </node>
      <node id="3230">
        <label>vigra/multi_distance.hxx</label>
        <link refid="multi__distance_8hxx_source"/>
        <childnode refid="3231" relation="include">
        </childnode>
      </node>
      <node id="3217">
        <label>vigra/tv_filter.hxx</label>
        <link refid="tv__filter_8hxx_source"/>
      </node>
      <node id="3251">
        <label>vigra/impex.hxx</label>
        <link refid="impex_8hxx"/>
        <childnode refid="3228" relation="include">
        </childnode>
        <childnode refid="3227" relation="include">
        </childnode>
        <childnode refid="3217" relation="include">
        </childnode>
      </node>
      <node id="3231">
        <label>vigra/multi_morphology.hxx</label>
        <link refid="multi__morphology_8hxx_source"/>
      </node>
      <node id="3243">
        <label>vigra/seededregiongrowing.hxx</label>
        <link refid="seededregiongrowing_8hxx_source"/>
        <childnode refid="3234" relation="include">
        </childnode>
        <childnode refid="3244" relation="include">
        </childnode>
      </node>
      <node id="3234">
        <label>vigra/seededregiongrowing3d.hxx</label>
        <link refid="seededregiongrowing3d_8hxx_source"/>
        <childnode refid="3235" relation="include">
        </childnode>
      </node>
      <node id="3241">
        <label>vigra/gradient_energy_tensor.hxx</label>
        <link refid="gradient__energy__tensor_8hxx_source"/>
      </node>
      <node id="3244">
        <label>vigra/watersheds.hxx</label>
        <link refid="watersheds_8hxx_source"/>
        <childnode refid="3235" relation="include">
        </childnode>
      </node>
      <node id="3216">
        <label>vigra/eigensystem.hxx</label>
        <link refid="eigensystem_8hxx_source"/>
        <childnode refid="3206" relation="include">
        </childnode>
        <childnode refid="3217" relation="include">
        </childnode>
      </node>
      <node id="3240">
        <label>vigra/cornerdetection.hxx</label>
        <link refid="cornerdetection_8hxx_source"/>
      </node>
      <node id="3232">
        <label>vigra/multi_tensorutilities.hxx</label>
        <link refid="multi__tensorutilities_8hxx_source"/>
      </node>
      <node id="3201">
        <label>vigra/matrix.hxx</label>
        <link refid="matrix_8hxx_source"/>
        <childnode refid="3202" relation="include">
        </childnode>
        <childnode refid="3203" relation="include">
        </childnode>
        <childnode refid="3213" relation="include">
        </childnode>
        <childnode refid="3215" relation="include">
        </childnode>
        <childnode refid="3216" relation="include">
        </childnode>
        <childnode refid="3218" relation="include">
        </childnode>
        <childnode refid="3219" relation="include">
        </childnode>
        <childnode refid="3206" relation="include">
        </childnode>
        <childnode refid="3221" relation="include">
        </childnode>
        <childnode refid="3208" relation="include">
        </childnode>
        <childnode refid="3222" relation="include">
        </childnode>
        <childnode refid="3223" relation="include">
        </childnode>
        <childnode refid="3225" relation="include">
        </childnode>
        <childnode refid="3224" relation="include">
        </childnode>
        <childnode refid="3209" relation="include">
        </childnode>
        <childnode refid="3211" relation="include">
        </childnode>
        <childnode refid="3226" relation="include">
        </childnode>
        <childnode refid="3214" relation="include">
        </childnode>
        <childnode refid="3220" relation="include">
        </childnode>
      </node>
      <node id="3233">
        <label>vigra/random_forest/rf_visitors.hxx</label>
        <link refid="rf__visitors_8hxx_source"/>
        <childnode refid="3222" relation="include">
        </childnode>
        <childnode refid="3211" relation="include">
        </childnode>
      </node>
      <node id="3228">
        <label>vigra/hdf5impex.hxx</label>
        <link refid="hdf5impex_8hxx_source"/>
        <childnode refid="3212" relation="include">
        </childnode>
      </node>
      <node id="3227">
        <label>vigra/multi_impex.hxx</label>
        <link refid="multi__impex_8hxx_source"/>
        <childnode refid="3228" relation="include">
        </childnode>
      </node>
      <node id="3248">
        <label>vigra/fftw3.hxx</label>
        <link refid="fftw3_8hxx_source"/>
        <childnode refid="3249" relation="include">
        </childnode>
        <childnode refid="3205" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classvigra_1_1ArrayOfRegionStatistics" prot="public">vigra::ArrayOfRegionStatistics</innerclass>
    <innerclass refid="classvigra_1_1FindAverage" prot="public">vigra::FindAverage</innerclass>
    <innerclass refid="classvigra_1_1FindAverageAndVariance" prot="public">vigra::FindAverageAndVariance</innerclass>
    <innerclass refid="classvigra_1_1FindBoundingRectangle" prot="public">vigra::FindBoundingRectangle</innerclass>
    <innerclass refid="classvigra_1_1FindMinMax" prot="public">vigra::FindMinMax</innerclass>
    <innerclass refid="classvigra_1_1FindROISize" prot="public">vigra::FindROISize</innerclass>
    <innerclass refid="classvigra_1_1FindSum" prot="public">vigra::FindSum</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01ArrayOfRegionStatistics_3_01RegionStatistics_00_01LabelType_01_4_01_4" prot="public">vigra::FunctorTraits&lt; ArrayOfRegionStatistics&lt; RegionStatistics, LabelType &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01FindAverage_3_01VALUETYPE_01_4_01_4" prot="public">vigra::FunctorTraits&lt; FindAverage&lt; VALUETYPE &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01FindAverageAndVariance_3_01VALUETYPE_01_4_01_4" prot="public">vigra::FunctorTraits&lt; FindAverageAndVariance&lt; VALUETYPE &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01FindBoundingRectangle_01_4" prot="public">vigra::FunctorTraits&lt; FindBoundingRectangle &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01FindMinMax_3_01VALUETYPE_01_4_01_4" prot="public">vigra::FunctorTraits&lt; FindMinMax&lt; VALUETYPE &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01FindROISize_3_01VALUETYPE_01_4_01_4" prot="public">vigra::FunctorTraits&lt; FindROISize&lt; VALUETYPE &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01LastValueFunctor_3_01VALUETYPE_01_4_01_4" prot="public">vigra::FunctorTraits&lt; LastValueFunctor&lt; VALUETYPE &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01ReduceFunctor_3_01FUNCTOR_00_01VALUETYPE_01_4_01_4" prot="public">vigra::FunctorTraits&lt; ReduceFunctor&lt; FUNCTOR, VALUETYPE &gt; &gt;</innerclass>
    <innerclass refid="structvigra_1_1inspectImage__binder" prot="public">vigra::inspectImage_binder</innerclass>
    <innerclass refid="structvigra_1_1inspectImageIf__binder" prot="public">vigra::inspectImageIf_binder</innerclass>
    <innerclass refid="structvigra_1_1inspectTwoImages__binder" prot="public">vigra::inspectTwoImages_binder</innerclass>
    <innerclass refid="structvigra_1_1inspectTwoImagesIf__binder" prot="public">vigra::inspectTwoImagesIf_binder</innerclass>
    <innerclass refid="classvigra_1_1LastValueFunctor" prot="public">vigra::LastValueFunctor</innerclass>
    <innerclass refid="structvigra_1_1ArrayOfRegionStatistics_1_1pass__n__dispatch" prot="public">vigra::ArrayOfRegionStatistics::pass_n_dispatch</innerclass>
    <innerclass refid="classvigra_1_1ReduceFunctor" prot="public">vigra::ReduceFunctor</innerclass>
    <innernamespace refid="namespacevigra">vigra</innernamespace>
    <innernamespace refid="namespacevigra_1_1functor">vigra::functor</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>1998-2002<sp/>by<sp/>Ullrich<sp/>Koethe<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>VIGRA<sp/>computer<sp/>vision<sp/>library.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>The<sp/>VIGRA<sp/>Website<sp/>is<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://hci.iwr.uni-heidelberg.de/vigra/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Please<sp/>direct<sp/>questions,<sp/>bug<sp/>reports,<sp/>and<sp/>contributions<sp/>to<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ullrich.koethe@iwr.uni-heidelberg.de<sp/><sp/><sp/><sp/>or<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra@informatik.uni-hamburg.de<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>conditions:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Software.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VIGRA_INSPECTIMAGE_HXX</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_INSPECTIMAGE_HXX</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;utilities.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;numerictraits.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iteratortraits.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;functortraits.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rgbvalue.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;inspector_passes.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vigra<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="51"><highlight class="comment">/**<sp/>\addtogroup<sp/>InspectAlgo<sp/>Algorithms<sp/>to<sp/>Inspect<sp/>Images</highlight></codeline>
<codeline lineno="52"><highlight class="comment"></highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/><sp/>Apply<sp/>read-only<sp/>functor<sp/>to<sp/>every<sp/>pixel</highlight></codeline>
<codeline lineno="54"><highlight class="comment">*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="55"><highlight class="comment">//@{</highlight></codeline>
<codeline lineno="56"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inspectLine<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcAccessor,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Functor&gt;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">inspectLine(SrcIterator<sp/>s,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcIterator<sp/>send,<sp/>SrcAccessor<sp/>src,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Functor<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>s<sp/>!=<sp/>send;<sp/>++s)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(src(s));</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcAccessor,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskAccessor,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor&gt;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">inspectLineIf(SrcIterator<sp/>s,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcIterator<sp/>send,<sp/>SrcAccessor<sp/>src,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaskIterator<sp/>m,<sp/>MaskAccessor<sp/>mask,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Functor<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>s<sp/>!=<sp/>send;<sp/>++s,<sp/>++m)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mask(m))</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(src(s));</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcIterator1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcAccessor1,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcIterator2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcAccessor2,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor&gt;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">inspectTwoLines(SrcIterator1<sp/>s1,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcIterator1<sp/>s1end,<sp/>SrcAccessor1<sp/>src1,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcIterator2<sp/>s2,<sp/>SrcAccessor2<sp/>src2,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Functor<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>s1<sp/>!=<sp/>s1end;<sp/>++s1,<sp/>++s2)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(src1(s1),<sp/>src2(s2));</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcIterator1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcAccessor1,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcIterator2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcAccessor2,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskAccessor,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor&gt;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">inspectTwoLinesIf(SrcIterator1<sp/>s1,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcIterator1<sp/>s1end,<sp/>SrcAccessor1<sp/>src1,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcIterator2<sp/>s2,<sp/>SrcAccessor2<sp/>src2,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaskIterator<sp/>m,<sp/>MaskAccessor<sp/>mask,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Functor<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>s1<sp/>!=<sp/>s1end;<sp/>++s1,<sp/>++s2,<sp/>++m)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mask(m))</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(src1(s1),<sp/>src2(s2));</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inspectImage<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="122"><highlight class="comment">/**<sp/>\brief<sp/>Apply<sp/>read-only<sp/>functor<sp/>to<sp/>every<sp/>pixel<sp/>in<sp/>the<sp/>image.</highlight></codeline>
<codeline lineno="123"><highlight class="comment"></highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>function<sp/>can<sp/>be<sp/>used<sp/>to<sp/>collect<sp/>statistics<sp/>of<sp/>the<sp/>image<sp/>etc.</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>results<sp/>must<sp/>be<sp/>stored<sp/>in<sp/>the<sp/>functor,<sp/>which<sp/>serves<sp/>as<sp/>a<sp/>return</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/><sp/>value.</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>function<sp/>uses<sp/>an<sp/>accessor<sp/>to<sp/>access<sp/>the<sp/>pixel<sp/>data.</highlight></codeline>
<codeline lineno="128"><highlight class="comment"></highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declarations:&lt;/b&gt;</highlight></codeline>
<codeline lineno="130"><highlight class="comment"></highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/>pass<sp/>arguments<sp/>explicitly:</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>ImageIterator,<sp/>class<sp/>Accessor,<sp/>class<sp/>Functor&gt;</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inspectImage(ImageIterator<sp/>upperleft,<sp/>ImageIterator<sp/>lowerright,</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Accessor<sp/>a,<sp/>Functor<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="140"><highlight class="comment"></highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/>use<sp/>argument<sp/>objects<sp/>in<sp/>conjunction<sp/>with<sp/>\ref<sp/>ArgumentObjectFactories<sp/>:</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>ImageIterator,<sp/>class<sp/>Accessor,<sp/>class<sp/>Functor&gt;</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inspectImage(triple&lt;ImageIterator,<sp/>ImageIterator,<sp/>Accessor&gt;<sp/>img,</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Functor<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="150"><highlight class="comment"></highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="152"><highlight class="comment"></highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/inspectimage.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="155"><highlight class="comment"></highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>init<sp/>functor</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BImage<sp/>img;</highlight></codeline>
<codeline lineno="159"><highlight class="comment"></highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::FindMinMax&lt;vigra::BImage::PixelType&gt;<sp/>minmax;</highlight></codeline>
<codeline lineno="161"><highlight class="comment"></highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::inspectImage(srcImageRange(img),<sp/>minmax);</highlight></codeline>
<codeline lineno="163"><highlight class="comment"></highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;Min:<sp/>&quot;<sp/>&lt;&lt;<sp/>minmax.min<sp/>&lt;&lt;<sp/>&quot;<sp/>Max:<sp/>&quot;<sp/>&lt;&lt;<sp/>minmax.max;</highlight></codeline>
<codeline lineno="165"><highlight class="comment"></highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="167"><highlight class="comment"></highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Required<sp/>Interface:&lt;/b&gt;</highlight></codeline>
<codeline lineno="169"><highlight class="comment"></highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/>ConstImageIterator<sp/>upperleft,<sp/>lowerright;</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/><sp/>ConstImageIterator::row_iterator<sp/>ix<sp/>=<sp/>upperleft.rowIterator();</highlight></codeline>
<codeline lineno="173"><highlight class="comment"></highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/><sp/>Accessor<sp/>accessor;</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/><sp/>Functor<sp/>functor;</highlight></codeline>
<codeline lineno="176"><highlight class="comment"></highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/><sp/>functor(accessor(ix));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>return<sp/>not<sp/>used</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="179"><highlight class="comment"></highlight></codeline>
<codeline lineno="180"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">doxygen_overloaded_function(template<sp/>&lt;...&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__InspectAlgo_1gaa055bcaf71c209fdeb006fe3e44b0452" kindref="member" tooltip="Apply read-only functor to every pixel in the image.">inspectImage</ref>)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ImageIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Accessor&gt;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">inspectImage_binder</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>ImageIterator<sp/>upperleft;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>ImageIterator<sp/>lowerright;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>Accessor<sp/>a;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>inspectImage_binder(ImageIterator<sp/>ul,<sp/>ImageIterator<sp/>lr,<sp/>Accessor<sp/>ac)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>upperleft(ul),<sp/>lowerright(lr),<sp/>a(ac)<sp/>{}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Functor&gt;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()(Functor<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>lowerright.x<sp/>-<sp/>upperleft.x;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ImageIterator<sp/>t<sp/>=<sp/>upperleft;<sp/>t.y<sp/>&lt;<sp/>lowerright.y;<sp/>++t.y)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inspectLine(t.rowIterator(),<sp/>t.rowIterator()<sp/>+<sp/>w,<sp/>a,<sp/>f);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal">};</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ImageIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Accessor,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Functor&gt;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><ref refid="group__InspectAlgo_1gaa055bcaf71c209fdeb006fe3e44b0452" kindref="member" tooltip="Apply read-only functor to every pixel in the image.">inspectImage</ref>(ImageIterator<sp/>upperleft,<sp/>ImageIterator<sp/>lowerright,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Accessor<sp/>a,<sp/>Functor<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>inspectImage_binder&lt;ImageIterator,<sp/>Accessor&gt;<sp/>g(upperleft,<sp/>lowerright,<sp/>a);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::extra_passes_select(g,<sp/>f);</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ImageIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Accessor,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Functor&gt;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><ref refid="group__InspectAlgo_1gaa055bcaf71c209fdeb006fe3e44b0452" kindref="member" tooltip="Apply read-only functor to every pixel in the image.">inspectImage</ref>(triple&lt;ImageIterator,<sp/>ImageIterator,<sp/>Accessor&gt;<sp/>img,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Functor<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__InspectAlgo_1gaa055bcaf71c209fdeb006fe3e44b0452" kindref="member" tooltip="Apply read-only functor to every pixel in the image.">inspectImage</ref>(img.first,<sp/>img.second,<sp/>img.third,<sp/>f);</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">functor</highlight></codeline>
<codeline lineno="223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">UnaryAnalyser;</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ImageIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Accessor,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Functor&gt;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><ref refid="group__InspectAlgo_1gaa055bcaf71c209fdeb006fe3e44b0452" kindref="member" tooltip="Apply read-only functor to every pixel in the image.">inspectImage</ref>(ImageIterator<sp/>upperleft,<sp/>ImageIterator<sp/>lowerright,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Accessor<sp/>a,<sp/>functor::UnaryAnalyser&lt;Functor&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__InspectAlgo_1gaa055bcaf71c209fdeb006fe3e44b0452" kindref="member" tooltip="Apply read-only functor to every pixel in the image.">inspectImage</ref>(upperleft,<sp/>lowerright,<sp/>a,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">functor::UnaryAnalyser&lt;Functor&gt;<sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(f));</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ImageIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Accessor,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Functor&gt;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><ref refid="group__InspectAlgo_1gaa055bcaf71c209fdeb006fe3e44b0452" kindref="member" tooltip="Apply read-only functor to every pixel in the image.">inspectImage</ref>(triple&lt;ImageIterator,<sp/>ImageIterator,<sp/>Accessor&gt;<sp/>img,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functor::UnaryAnalyser&lt;Functor&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__InspectAlgo_1gaa055bcaf71c209fdeb006fe3e44b0452" kindref="member" tooltip="Apply read-only functor to every pixel in the image.">inspectImage</ref>(img.first,<sp/>img.second,<sp/>img.third,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_cast&lt;functor::UnaryAnalyser&lt;Functor&gt;<sp/>&amp;&gt;(f));</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inspectImageIf<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="253"><highlight class="comment">/**<sp/>\brief<sp/>Apply<sp/>read-only<sp/>functor<sp/>to<sp/>every<sp/>pixel<sp/>in<sp/>the<sp/>ROI.</highlight></codeline>
<codeline lineno="254"><highlight class="comment"></highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>function<sp/>can<sp/>be<sp/>used<sp/>to<sp/>collect<sp/>statistics<sp/>of<sp/>the<sp/>roi<sp/>etc.</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>functor<sp/>is<sp/>called<sp/>whenever<sp/>the<sp/>return<sp/>value<sp/>of<sp/>the<sp/>mask&apos;s</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/><sp/><sp/>accessor<sp/>is<sp/>not<sp/>zero.</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>results<sp/>must<sp/>be<sp/>stored<sp/>in<sp/>the<sp/>functor,<sp/>which<sp/>serves<sp/>as<sp/>a<sp/>return</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/><sp/>value.</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/><sp/><sp/><sp/>Accessors<sp/>are<sp/>used<sp/>to<sp/>access<sp/>the<sp/>pixel<sp/>and<sp/>mask<sp/>data.</highlight></codeline>
<codeline lineno="261"><highlight class="comment"></highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declarations:&lt;/b&gt;</highlight></codeline>
<codeline lineno="263"><highlight class="comment"></highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/><sp/><sp/><sp/>pass<sp/>arguments<sp/>explicitly:</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>ImageIterator,<sp/>class<sp/>Accessor,</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>MaskImageIterator,<sp/>class<sp/>MaskAccessor,<sp/>class<sp/>Functor&gt;</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inspectImageIf(ImageIterator<sp/>upperleft,<sp/>ImageIterator<sp/>lowerright,</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaskImageIterator<sp/>mask_upperleft,<sp/>MaskAccessor<sp/>ma,</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Functor<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="275"><highlight class="comment"></highlight></codeline>
<codeline lineno="276"><highlight class="comment"></highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/>use<sp/>argument<sp/>objects<sp/>in<sp/>conjunction<sp/>with<sp/>\ref<sp/>ArgumentObjectFactories<sp/>:</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>ImageIterator,<sp/>class<sp/>Accessor,</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>MaskImageIterator,<sp/>class<sp/>MaskAccessor,<sp/>class<sp/>Functor&gt;</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inspectImageIf(triple&lt;ImageIterator,<sp/>ImageIterator,<sp/>Accessor&gt;<sp/>img,</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;MaskImageIterator,<sp/>MaskAccessor&gt;<sp/>mask,</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Functor<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="288"><highlight class="comment"></highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="290"><highlight class="comment"></highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/inspectimage.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="293"><highlight class="comment"></highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BImage<sp/>img(100,<sp/>100);</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BImage<sp/>mask(100,<sp/>100);</highlight></codeline>
<codeline lineno="297"><highlight class="comment"></highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>init<sp/>functor</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::FindMinMax&lt;vigra::BImage::PixelType&gt;<sp/>minmax;</highlight></codeline>
<codeline lineno="300"><highlight class="comment"></highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::inspectImageIf(srcImageRange(img),</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maskImage(mask),<sp/>minmax);</highlight></codeline>
<codeline lineno="303"><highlight class="comment"></highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;Min:<sp/>&quot;<sp/>&lt;&lt;<sp/>minmax.min<sp/>&lt;&lt;<sp/>&quot;<sp/>Max:<sp/>&quot;<sp/>&lt;&lt;<sp/>minmax.max;</highlight></codeline>
<codeline lineno="305"><highlight class="comment"></highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="307"><highlight class="comment"></highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Required<sp/>Interface:&lt;/b&gt;</highlight></codeline>
<codeline lineno="309"><highlight class="comment"></highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/><sp/><sp/><sp/>ConstImageIterator<sp/>upperleft,<sp/>lowerright;</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/><sp/><sp/><sp/>MaskImageIterator<sp/>mask_upperleft;</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/><sp/><sp/><sp/>ConstImageIterator::row_iterator<sp/>ix<sp/>=<sp/>upperleft.rowIterator();</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/><sp/><sp/><sp/>MaskImageIterator::row_iterator<sp/>mx<sp/>=<sp/>mask_upperleft.rowIterator();</highlight></codeline>
<codeline lineno="315"><highlight class="comment"></highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/><sp/><sp/><sp/>Accessor<sp/>accessor;</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/><sp/><sp/><sp/>MaskAccessor<sp/>mask_accessor;</highlight></codeline>
<codeline lineno="318"><highlight class="comment"></highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/><sp/><sp/><sp/>Functor<sp/>functor;</highlight></codeline>
<codeline lineno="320"><highlight class="comment"></highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/><sp/><sp/><sp/>if(mask_accessor(mx))<sp/>functor(accessor(ix));</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="323"><highlight class="comment"></highlight></codeline>
<codeline lineno="324"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal">doxygen_overloaded_function(template<sp/>&lt;...&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__InspectAlgo_1ga8fb06f2d379b65eb3e2a970e38964ecd" kindref="member" tooltip="Apply read-only functor to every pixel in the ROI.">inspectImageIf</ref>)</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Accessor,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskAccessor&gt;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">inspectImageIf_binder</highlight></codeline>
<codeline lineno="330"><highlight class="normal">{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>ImageIterator<sp/>upperleft;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>ImageIterator<sp/>lowerright;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>Accessor<sp/>a;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>MaskImageIterator<sp/>mask_upperleft;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>MaskAccessor<sp/>ma;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>inspectImageIf_binder(ImageIterator<sp/>ul,<sp/>ImageIterator<sp/>lr,<sp/>Accessor<sp/>ac,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaskImageIterator<sp/>m_ul,<sp/>MaskAccessor<sp/>m_ac)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>upperleft(ul),<sp/>lowerright(lr),<sp/>a(ac),<sp/>mask_upperleft(m_ul),<sp/>ma(m_ac)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Functor&gt;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()(Functor<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>lowerright.x<sp/>-<sp/>upperleft.x;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaskImageIterator<sp/>mt<sp/>=<sp/>mask_upperleft;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ImageIterator<sp/>t<sp/>=<sp/>upperleft;<sp/>t.y<sp/>&lt;<sp/>lowerright.y;<sp/>++t.y,<sp/>++mt.y)</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inspectLineIf(t.rowIterator(),</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.rowIterator()<sp/>+<sp/>w,<sp/>a,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mt.rowIterator(),<sp/>ma,<sp/>f);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal">};</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Accessor,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskAccessor,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor&gt;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><ref refid="group__InspectAlgo_1ga8fb06f2d379b65eb3e2a970e38964ecd" kindref="member" tooltip="Apply read-only functor to every pixel in the ROI.">inspectImageIf</ref>(ImageIterator<sp/>upperleft,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageIterator<sp/>lowerright,<sp/>Accessor<sp/>a,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaskImageIterator<sp/>mask_upperleft,<sp/>MaskAccessor<sp/>ma,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Functor<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>inspectImageIf_binder&lt;ImageIterator,<sp/>Accessor,<sp/>MaskImageIterator,</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaskAccessor&gt;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g(upperleft,<sp/>lowerright,<sp/>a,<sp/>mask_upperleft,<sp/>ma);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::extra_passes_select(g,<sp/>f);</highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Accessor,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskAccessor,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor&gt;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><ref refid="group__InspectAlgo_1ga8fb06f2d379b65eb3e2a970e38964ecd" kindref="member" tooltip="Apply read-only functor to every pixel in the ROI.">inspectImageIf</ref>(triple&lt;ImageIterator,<sp/>ImageIterator,<sp/>Accessor&gt;<sp/>img,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;MaskImageIterator,<sp/>MaskAccessor&gt;<sp/>mask,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Functor<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__InspectAlgo_1ga8fb06f2d379b65eb3e2a970e38964ecd" kindref="member" tooltip="Apply read-only functor to every pixel in the ROI.">inspectImageIf</ref>(img.first,<sp/>img.second,<sp/>img.third,</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask.first,<sp/>mask.second,<sp/>f);</highlight></codeline>
<codeline lineno="380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Accessor,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskAccessor,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor&gt;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><ref refid="group__InspectAlgo_1ga8fb06f2d379b65eb3e2a970e38964ecd" kindref="member" tooltip="Apply read-only functor to every pixel in the ROI.">inspectImageIf</ref>(ImageIterator<sp/>upperleft,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageIterator<sp/>lowerright,<sp/>Accessor<sp/>a,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaskImageIterator<sp/>mask_upperleft,<sp/>MaskAccessor<sp/>ma,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functor::UnaryAnalyser&lt;Functor&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__InspectAlgo_1ga8fb06f2d379b65eb3e2a970e38964ecd" kindref="member" tooltip="Apply read-only functor to every pixel in the ROI.">inspectImageIf</ref>(upperleft,<sp/>lowerright,<sp/>a,</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask_upperleft,<sp/>ma,<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">functor::UnaryAnalyser&lt;Functor&gt;<sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(f));</highlight></codeline>
<codeline lineno="392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Accessor,</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskAccessor,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor&gt;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><ref refid="group__InspectAlgo_1ga8fb06f2d379b65eb3e2a970e38964ecd" kindref="member" tooltip="Apply read-only functor to every pixel in the ROI.">inspectImageIf</ref>(triple&lt;ImageIterator,<sp/>ImageIterator,<sp/>Accessor&gt;<sp/>img,</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;MaskImageIterator,<sp/>MaskAccessor&gt;<sp/>mask,</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functor::UnaryAnalyser&lt;Functor&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="400"><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__InspectAlgo_1ga8fb06f2d379b65eb3e2a970e38964ecd" kindref="member" tooltip="Apply read-only functor to every pixel in the ROI.">inspectImageIf</ref>(img.first,<sp/>img.second,<sp/>img.third,</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask.first,<sp/>mask.second,<sp/>const_cast&lt;functor::UnaryAnalyser&lt;Functor&gt;<sp/>&amp;&gt;(f));</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inspectTwoImages<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="411"><highlight class="comment">/**<sp/>\brief<sp/>Apply<sp/>read-only<sp/>functor<sp/>to<sp/>every<sp/>pixel<sp/>of<sp/>both<sp/>images.</highlight></codeline>
<codeline lineno="412"><highlight class="comment"></highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>function<sp/>can<sp/>be<sp/>used<sp/>to<sp/>collect<sp/>statistics<sp/>for<sp/>each<sp/>region<sp/>of<sp/>a</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/><sp/><sp/><sp/>labeled<sp/>image,<sp/>especially<sp/>in<sp/>conjunction<sp/>with</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>\ref<sp/>ArrayOfRegionStatistics<sp/>functor.<sp/>The<sp/>results<sp/>must<sp/>be</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/><sp/><sp/><sp/>stored<sp/>in<sp/>the<sp/>functor<sp/>which<sp/>serves<sp/>as<sp/>a<sp/>return<sp/>value.</highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/><sp/><sp/><sp/>Accessors<sp/>are<sp/>used<sp/>to<sp/>access<sp/>the<sp/>pixel<sp/>data.</highlight></codeline>
<codeline lineno="418"><highlight class="comment"></highlight></codeline>
<codeline lineno="419"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declarations:&lt;/b&gt;</highlight></codeline>
<codeline lineno="420"><highlight class="comment"></highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/><sp/><sp/><sp/>pass<sp/>arguments<sp/>explicitly:</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>ImageIterator1,<sp/>class<sp/>Accessor1,</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>ImageIterator2,<sp/>class<sp/>Accessor2,</highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>Functor&gt;</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inspectTwoImages(ImageIterator1<sp/>upperleft1,<sp/>ImageIterator1<sp/>lowerright1,<sp/>Accessor1<sp/>a1,</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageIterator2<sp/>upperleft2,<sp/>Accessor2<sp/>a2,</highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Functor<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="431"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="433"><highlight class="comment"></highlight></codeline>
<codeline lineno="434"><highlight class="comment"></highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/><sp/><sp/><sp/>use<sp/>argument<sp/>objects<sp/>in<sp/>conjunction<sp/>with<sp/>\ref<sp/>ArgumentObjectFactories<sp/>:</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="437"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>ImageIterator1,<sp/>class<sp/>Accessor1,</highlight></codeline>
<codeline lineno="439"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>ImageIterator2,<sp/>class<sp/>Accessor2,</highlight></codeline>
<codeline lineno="440"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>Functor&gt;</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inspectTwoImages(triple&lt;ImageIterator1,<sp/>ImageIterator1,<sp/>Accessor1&gt;<sp/>img1,</highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;ImageIterator2,<sp/>Accessor2&gt;<sp/>img2,</highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Functor<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="447"><highlight class="comment"></highlight></codeline>
<codeline lineno="448"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="449"><highlight class="comment"></highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/inspectimage.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="451"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="452"><highlight class="comment"></highlight></codeline>
<codeline lineno="453"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="454"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BImage<sp/>image1;</highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BImage<sp/>image2;</highlight></codeline>
<codeline lineno="456"><highlight class="comment"></highlight></codeline>
<codeline lineno="457"><highlight class="comment"><sp/><sp/><sp/><sp/>SomeStatisticsFunctor<sp/>stats(...);<sp/><sp/><sp/><sp/><sp/>//<sp/>init<sp/>functor</highlight></codeline>
<codeline lineno="458"><highlight class="comment"></highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::inspectTwoImages(srcImageRange(image1),<sp/>srcImage(image2),</highlight></codeline>
<codeline lineno="460"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats);</highlight></codeline>
<codeline lineno="461"><highlight class="comment"></highlight></codeline>
<codeline lineno="462"><highlight class="comment"></highlight></codeline>
<codeline lineno="463"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="464"><highlight class="comment"></highlight></codeline>
<codeline lineno="465"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Required<sp/>Interface:&lt;/b&gt;</highlight></codeline>
<codeline lineno="466"><highlight class="comment"></highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/><sp/><sp/><sp/>ImageIterator1<sp/>upperleft1,<sp/>lowerright1;</highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/><sp/><sp/><sp/>ImageIterator2<sp/>upperleft2;</highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/><sp/><sp/><sp/>ImageIterator1::row_iterator<sp/>ix1<sp/>=<sp/>upperleft1.rowIterator();</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/><sp/><sp/><sp/>ImageIterator2::row_iterator<sp/>ix2<sp/>=<sp/>upperleft2.rowIterator();</highlight></codeline>
<codeline lineno="472"><highlight class="comment"></highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/><sp/><sp/><sp/>Accessor1<sp/>accessor1;</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/><sp/><sp/><sp/>Accessor2<sp/>accessor2;</highlight></codeline>
<codeline lineno="475"><highlight class="comment"></highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/><sp/><sp/><sp/>Functor<sp/>functor;</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/><sp/><sp/><sp/>functor(accessor1(ix1),<sp/>accessor2(ix2));<sp/><sp/>//<sp/>return<sp/>not<sp/>used</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="479"><highlight class="comment"></highlight></codeline>
<codeline lineno="480"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal">doxygen_overloaded_function(template<sp/>&lt;...&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__InspectAlgo_1gad70a53a9ab68eab8c6d3371b1269b6ac" kindref="member" tooltip="Apply read-only functor to every pixel of both images.">inspectTwoImages</ref>)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ImageIterator1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Accessor1,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ImageIterator2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Accessor2&gt;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">inspectTwoImages_binder</highlight></codeline>
<codeline lineno="486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>ImageIterator1<sp/>upperleft1;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>ImageIterator1<sp/>lowerright1;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>Accessor1<sp/><sp/><sp/><sp/><sp/><sp/>a1;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>ImageIterator2<sp/>upperleft2;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>Accessor2<sp/><sp/><sp/><sp/><sp/><sp/>a2;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>inspectTwoImages_binder(ImageIterator1<sp/>u1,<sp/>ImageIterator1<sp/>l1,<sp/>Accessor1<sp/>a1_,</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageIterator2<sp/>u2,<sp/>Accessor2<sp/>a2_)</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>upperleft1(u1),<sp/>lowerright1(l1),<sp/>a1(a1_),<sp/>upperleft2(u2),<sp/>a2(a2_)<sp/>{}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Functor&gt;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()(Functor<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>lowerright1.x<sp/>-<sp/>upperleft1.x;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageIterator1<sp/>t1<sp/>=<sp/>upperleft1;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageIterator2<sp/>t2<sp/>=<sp/>upperleft2;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>t1.y<sp/>&lt;<sp/>lowerright1.y;<sp/>++t1.y,<sp/>++t2.y)</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inspectTwoLines(t1.rowIterator(),</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1.rowIterator()<sp/>+<sp/>w,<sp/>a1,</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2.rowIterator(),<sp/>a2,<sp/>f);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal">};</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ImageIterator1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Accessor1,</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ImageIterator2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Accessor2,</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor&gt;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><ref refid="group__InspectAlgo_1gad70a53a9ab68eab8c6d3371b1269b6ac" kindref="member" tooltip="Apply read-only functor to every pixel of both images.">inspectTwoImages</ref>(ImageIterator1<sp/>upperleft1,<sp/>ImageIterator1<sp/>lowerright1,</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Accessor1<sp/>a1,</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageIterator2<sp/>upperleft2,<sp/>Accessor2<sp/>a2,</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Functor<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="519"><highlight class="normal">{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>inspectTwoImages_binder&lt;ImageIterator1,<sp/>Accessor1,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageIterator2,<sp/>Accessor2&gt;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g(upperleft1,<sp/>lowerright1,<sp/>a1,<sp/>upperleft2,<sp/>a2);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::extra_passes_select(g,<sp/>f);</highlight></codeline>
<codeline lineno="524"><highlight class="normal">}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ImageIterator1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Accessor1,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ImageIterator2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Accessor2,</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor&gt;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><ref refid="group__InspectAlgo_1gad70a53a9ab68eab8c6d3371b1269b6ac" kindref="member" tooltip="Apply read-only functor to every pixel of both images.">inspectTwoImages</ref>(triple&lt;ImageIterator1,<sp/>ImageIterator1,<sp/>Accessor1&gt;<sp/>img1,</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;ImageIterator2,<sp/>Accessor2&gt;<sp/>img2,</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Functor<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="534"><highlight class="normal">{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__InspectAlgo_1gad70a53a9ab68eab8c6d3371b1269b6ac" kindref="member" tooltip="Apply read-only functor to every pixel of both images.">inspectTwoImages</ref>(img1.first,<sp/>img1.second,<sp/>img1.third,</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>img2.first,<sp/>img2.second,<sp/>f);</highlight></codeline>
<codeline lineno="537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ImageIterator1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Accessor1,</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ImageIterator2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Accessor2,</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor&gt;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><ref refid="group__InspectAlgo_1gad70a53a9ab68eab8c6d3371b1269b6ac" kindref="member" tooltip="Apply read-only functor to every pixel of both images.">inspectTwoImages</ref>(ImageIterator1<sp/>upperleft1,<sp/>ImageIterator1<sp/>lowerright1,<sp/>Accessor1<sp/>a1,</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageIterator2<sp/>upperleft2,<sp/>Accessor2<sp/>a2,</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functor::UnaryAnalyser&lt;Functor&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="546"><highlight class="normal">{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__InspectAlgo_1gad70a53a9ab68eab8c6d3371b1269b6ac" kindref="member" tooltip="Apply read-only functor to every pixel of both images.">inspectTwoImages</ref>(upperleft1,<sp/>lowerright1,<sp/>a1,</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upperleft2,<sp/>a2,<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">functor::UnaryAnalyser&lt;Functor&gt;<sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(f));</highlight></codeline>
<codeline lineno="549"><highlight class="normal">}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ImageIterator1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Accessor1,</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ImageIterator2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Accessor2,</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor&gt;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><ref refid="group__InspectAlgo_1gad70a53a9ab68eab8c6d3371b1269b6ac" kindref="member" tooltip="Apply read-only functor to every pixel of both images.">inspectTwoImages</ref>(triple&lt;ImageIterator1,<sp/>ImageIterator1,<sp/>Accessor1&gt;<sp/>img1,</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;ImageIterator2,<sp/>Accessor2&gt;<sp/>img2,</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functor::UnaryAnalyser&lt;Functor&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="559"><highlight class="normal">{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__InspectAlgo_1gad70a53a9ab68eab8c6d3371b1269b6ac" kindref="member" tooltip="Apply read-only functor to every pixel of both images.">inspectTwoImages</ref>(img1.first,<sp/>img1.second,<sp/>img1.third,</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>img2.first,<sp/>img2.second,<sp/>const_cast&lt;functor::UnaryAnalyser&lt;Functor&gt;<sp/>&amp;&gt;(f));</highlight></codeline>
<codeline lineno="562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inspectTwoImagesIf<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="570"><highlight class="comment">/**<sp/>\brief<sp/>Apply<sp/>read-only<sp/>functor<sp/>to<sp/>those<sp/>pixels<sp/>of<sp/>both<sp/>images<sp/>where</highlight></codeline>
<codeline lineno="571"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>mask<sp/>image<sp/>is<sp/>non-zero.</highlight></codeline>
<codeline lineno="572"><highlight class="comment"></highlight></codeline>
<codeline lineno="573"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>function<sp/>can<sp/>be<sp/>used<sp/>to<sp/>collect<sp/>statistics<sp/>for<sp/>selected<sp/>regions<sp/>of<sp/>a</highlight></codeline>
<codeline lineno="574"><highlight class="comment"><sp/><sp/><sp/><sp/>labeled<sp/>image,<sp/>especially<sp/>in<sp/>conjunction<sp/>with</highlight></codeline>
<codeline lineno="575"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>\ref<sp/>ArrayOfRegionStatistics<sp/>functor.<sp/>The<sp/>results<sp/>must<sp/>be</highlight></codeline>
<codeline lineno="576"><highlight class="comment"><sp/><sp/><sp/><sp/>stored<sp/>in<sp/>the<sp/>functor<sp/>which<sp/>serves<sp/>as<sp/>a<sp/>return<sp/>value.</highlight></codeline>
<codeline lineno="577"><highlight class="comment"><sp/><sp/><sp/><sp/>Accessors<sp/>are<sp/>used<sp/>to<sp/>access<sp/>the<sp/>pixel<sp/>data.</highlight></codeline>
<codeline lineno="578"><highlight class="comment"></highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declarations:&lt;/b&gt;</highlight></codeline>
<codeline lineno="580"><highlight class="comment"></highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/><sp/><sp/><sp/>pass<sp/>arguments<sp/>explicitly:</highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="583"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>ImageIterator1,<sp/>class<sp/>Accessor1,</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>ImageIterator2,<sp/>class<sp/>Accessor2,</highlight></codeline>
<codeline lineno="586"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>MaskImageIterator,<sp/>class<sp/>MaskAccessor,</highlight></codeline>
<codeline lineno="587"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>Functor&gt;</highlight></codeline>
<codeline lineno="588"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void</highlight></codeline>
<codeline lineno="589"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inspectTwoImagesIf(ImageIterator1<sp/>upperleft1,<sp/>ImageIterator1<sp/>lowerright1,<sp/>Accessor1<sp/>a1,</highlight></codeline>
<codeline lineno="590"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageIterator2<sp/>upperleft2,<sp/>Accessor2<sp/>a2,</highlight></codeline>
<codeline lineno="591"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaskImageIterator<sp/>mupperleft,<sp/>MaskAccessor<sp/>mask,</highlight></codeline>
<codeline lineno="592"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Functor<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="593"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="595"><highlight class="comment"></highlight></codeline>
<codeline lineno="596"><highlight class="comment"></highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/><sp/><sp/><sp/>use<sp/>argument<sp/>objects<sp/>in<sp/>conjunction<sp/>with<sp/>\ref<sp/>ArgumentObjectFactories<sp/>:</highlight></codeline>
<codeline lineno="598"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>ImageIterator1,<sp/>class<sp/>Accessor1,</highlight></codeline>
<codeline lineno="601"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>ImageIterator2,<sp/>class<sp/>Accessor2,</highlight></codeline>
<codeline lineno="602"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>MaskImageIterator,<sp/>class<sp/>MaskAccessor,</highlight></codeline>
<codeline lineno="603"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>Functor&gt;</highlight></codeline>
<codeline lineno="604"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void</highlight></codeline>
<codeline lineno="605"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inspectTwoImagesIf(triple&lt;ImageIterator1,<sp/>ImageIterator1,<sp/>Accessor1&gt;<sp/>img1,</highlight></codeline>
<codeline lineno="606"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;ImageIterator2,<sp/>Accessor2&gt;<sp/>img2,</highlight></codeline>
<codeline lineno="607"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;MaskImageIterator,<sp/>MaskAccessor&gt;<sp/>mimg,</highlight></codeline>
<codeline lineno="608"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Functor<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="609"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="611"><highlight class="comment"></highlight></codeline>
<codeline lineno="612"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="613"><highlight class="comment"></highlight></codeline>
<codeline lineno="614"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/inspectimage.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="615"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="616"><highlight class="comment"></highlight></codeline>
<codeline lineno="617"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="618"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BImage<sp/>image1;</highlight></codeline>
<codeline lineno="619"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BImage<sp/>image2;</highlight></codeline>
<codeline lineno="620"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BImage<sp/>maskimage;</highlight></codeline>
<codeline lineno="621"><highlight class="comment"></highlight></codeline>
<codeline lineno="622"><highlight class="comment"><sp/><sp/><sp/><sp/>SomeStatisticsFunctor<sp/>stats(...);<sp/><sp/><sp/><sp/><sp/>//<sp/>init<sp/>functor</highlight></codeline>
<codeline lineno="623"><highlight class="comment"></highlight></codeline>
<codeline lineno="624"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::inspectTwoImagesIf(srcImageRange(image1),<sp/>srcImage(image2),</highlight></codeline>
<codeline lineno="625"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcImage(maskimage),<sp/>region_stats);</highlight></codeline>
<codeline lineno="626"><highlight class="comment"></highlight></codeline>
<codeline lineno="627"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="628"><highlight class="comment"></highlight></codeline>
<codeline lineno="629"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Required<sp/>Interface:&lt;/b&gt;</highlight></codeline>
<codeline lineno="630"><highlight class="comment"></highlight></codeline>
<codeline lineno="631"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="632"><highlight class="comment"><sp/><sp/><sp/><sp/>ImageIterator1<sp/>upperleft1,<sp/>lowerright1;</highlight></codeline>
<codeline lineno="633"><highlight class="comment"><sp/><sp/><sp/><sp/>ImageIterator2<sp/>upperleft2;</highlight></codeline>
<codeline lineno="634"><highlight class="comment"><sp/><sp/><sp/><sp/>MaskImageIterator<sp/>upperleftm;</highlight></codeline>
<codeline lineno="635"><highlight class="comment"><sp/><sp/><sp/><sp/>ImageIterator1::row_iterator<sp/>ix1<sp/>=<sp/>upperleft1.rowIterator();</highlight></codeline>
<codeline lineno="636"><highlight class="comment"><sp/><sp/><sp/><sp/>ImageIterator2::row_iterator<sp/>ix2<sp/>=<sp/>upperleft2.rowIterator();</highlight></codeline>
<codeline lineno="637"><highlight class="comment"><sp/><sp/><sp/><sp/>MaskImageIterator::row_iterator<sp/>mx<sp/>=<sp/>mupperleft.rowIterator();</highlight></codeline>
<codeline lineno="638"><highlight class="comment"></highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/><sp/><sp/><sp/>Accessor1<sp/>accessor1;</highlight></codeline>
<codeline lineno="640"><highlight class="comment"><sp/><sp/><sp/><sp/>Accessor2<sp/>accessor2;</highlight></codeline>
<codeline lineno="641"><highlight class="comment"><sp/><sp/><sp/><sp/>MaskAccessor<sp/>mask;</highlight></codeline>
<codeline lineno="642"><highlight class="comment"></highlight></codeline>
<codeline lineno="643"><highlight class="comment"><sp/><sp/><sp/><sp/>Functor<sp/>functor;</highlight></codeline>
<codeline lineno="644"><highlight class="comment"><sp/><sp/><sp/><sp/>if(mask(mx))</highlight></codeline>
<codeline lineno="645"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functor(accessor1(ix1),<sp/>accessor2(ix2));</highlight></codeline>
<codeline lineno="646"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="647"><highlight class="comment"></highlight></codeline>
<codeline lineno="648"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal">doxygen_overloaded_function(template<sp/>&lt;...&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__InspectAlgo_1gade5a57c06d2ab13ddf4522c931d9e757" kindref="member" tooltip="Apply read-only functor to those pixels of both images where the mask image is non-zero.">inspectTwoImagesIf</ref>)</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ImageIterator1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Accessor1,</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ImageIterator2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Accessor2,</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskAccessor&gt;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">inspectTwoImagesIf_binder</highlight></codeline>
<codeline lineno="655"><highlight class="normal">{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>ImageIterator1<sp/><sp/><sp/><sp/>upperleft1;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>ImageIterator1<sp/><sp/><sp/><sp/>lowerright1;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>Accessor1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a1;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>ImageIterator2<sp/><sp/><sp/><sp/>upperleft2;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>Accessor2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a2;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>MaskImageIterator<sp/>mupperleft;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>MaskAccessor<sp/><sp/><sp/><sp/><sp/><sp/>mask;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>inspectTwoImagesIf_binder(ImageIterator1<sp/>u1,<sp/>ImageIterator1<sp/>l1,</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Accessor1<sp/>a1_,<sp/>ImageIterator2<sp/>u2,<sp/>Accessor2<sp/>a2_,</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaskImageIterator<sp/>mu,<sp/>MaskAccessor<sp/>ma)</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>upperleft1(u1),<sp/>lowerright1(l1),<sp/>a1(a1_),<sp/>upperleft2(u2),<sp/>a2(a2_),</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mupperleft(mu),<sp/>mask(ma)<sp/>{}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Functor&gt;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()(Functor<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>lowerright1.x<sp/>-<sp/>upperleft1.x;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageIterator1<sp/>t1<sp/>=<sp/>upperleft1;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageIterator2<sp/>t2<sp/>=<sp/>upperleft2;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaskImageIterator<sp/>mu<sp/>=<sp/>mupperleft;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>t1.y<sp/>&lt;<sp/>lowerright1.y;<sp/>++t1.y,<sp/>++t2.y,<sp/>++mu.y)</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inspectTwoLinesIf(t1.rowIterator(),</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1.rowIterator()<sp/>+<sp/>w,<sp/>a1,</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2.rowIterator(),<sp/>a2,</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mu.rowIterator(),<sp/>mask,<sp/>f);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal">};</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ImageIterator1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Accessor1,</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ImageIterator2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Accessor2,</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskAccessor,</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor&gt;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><ref refid="group__InspectAlgo_1gade5a57c06d2ab13ddf4522c931d9e757" kindref="member" tooltip="Apply read-only functor to those pixels of both images where the mask image is non-zero.">inspectTwoImagesIf</ref>(ImageIterator1<sp/>upperleft1,<sp/>ImageIterator1<sp/>lowerright1,</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Accessor1<sp/>a1,</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageIterator2<sp/>upperleft2,<sp/>Accessor2<sp/>a2,</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaskImageIterator<sp/>mupperleft,<sp/>MaskAccessor<sp/>mask,</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Functor<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="696"><highlight class="normal">{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>inspectTwoImagesIf_binder&lt;ImageIterator1,<sp/>Accessor1,</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageIterator2,<sp/>Accessor2,</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaskImageIterator,<sp/>MaskAccessor&gt;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g(upperleft1,<sp/>lowerright1,<sp/>a1,<sp/>upperleft2,<sp/>a2,<sp/>mupperleft,<sp/>mask);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::extra_passes_select(g,<sp/>f);</highlight></codeline>
<codeline lineno="702"><highlight class="normal">}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ImageIterator1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Accessor1,</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ImageIterator2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Accessor2,</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskAccessor,</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor&gt;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><ref refid="group__InspectAlgo_1gade5a57c06d2ab13ddf4522c931d9e757" kindref="member" tooltip="Apply read-only functor to those pixels of both images where the mask image is non-zero.">inspectTwoImagesIf</ref>(triple&lt;ImageIterator1,<sp/>ImageIterator1,<sp/>Accessor1&gt;<sp/>img1,</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;ImageIterator2,<sp/>Accessor2&gt;<sp/>img2,</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;MaskImageIterator,<sp/>MaskAccessor&gt;<sp/>m,</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Functor<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="714"><highlight class="normal">{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__InspectAlgo_1gade5a57c06d2ab13ddf4522c931d9e757" kindref="member" tooltip="Apply read-only functor to those pixels of both images where the mask image is non-zero.">inspectTwoImagesIf</ref>(img1.first,<sp/>img1.second,<sp/>img1.third,</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>img2.first,<sp/>img2.second,</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.first,<sp/>m.second,</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f);</highlight></codeline>
<codeline lineno="719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ImageIterator1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Accessor1,</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ImageIterator2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Accessor2,</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskAccessor,</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor&gt;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><ref refid="group__InspectAlgo_1gade5a57c06d2ab13ddf4522c931d9e757" kindref="member" tooltip="Apply read-only functor to those pixels of both images where the mask image is non-zero.">inspectTwoImagesIf</ref>(ImageIterator1<sp/>upperleft1,<sp/>ImageIterator1<sp/>lowerright1,<sp/>Accessor1<sp/>a1,</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageIterator2<sp/>upperleft2,<sp/>Accessor2<sp/>a2,</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaskImageIterator<sp/>mupperleft,<sp/>MaskAccessor<sp/>mask,</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functor::UnaryAnalyser&lt;Functor&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="730"><highlight class="normal">{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__InspectAlgo_1gade5a57c06d2ab13ddf4522c931d9e757" kindref="member" tooltip="Apply read-only functor to those pixels of both images where the mask image is non-zero.">inspectTwoImagesIf</ref>(upperleft1,<sp/>lowerright1,<sp/>a1,</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upperleft2,<sp/>a2,</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mupperleft,<sp/>mask,</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">functor::UnaryAnalyser&lt;Functor&gt;<sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(f));</highlight></codeline>
<codeline lineno="735"><highlight class="normal">}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ImageIterator1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Accessor1,</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ImageIterator2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Accessor2,</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskAccessor,</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor&gt;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><ref refid="group__InspectAlgo_1gade5a57c06d2ab13ddf4522c931d9e757" kindref="member" tooltip="Apply read-only functor to those pixels of both images where the mask image is non-zero.">inspectTwoImagesIf</ref>(triple&lt;ImageIterator1,<sp/>ImageIterator1,<sp/>Accessor1&gt;<sp/>img1,</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;ImageIterator2,<sp/>Accessor2&gt;<sp/>img2,</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;MaskImageIterator,<sp/>MaskAccessor&gt;<sp/>m,</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functor::UnaryAnalyser&lt;Functor&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="747"><highlight class="normal">{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__InspectAlgo_1gade5a57c06d2ab13ddf4522c931d9e757" kindref="member" tooltip="Apply read-only functor to those pixels of both images where the mask image is non-zero.">inspectTwoImagesIf</ref>(img1.first,<sp/>img1.second,<sp/>img1.third,</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>img2.first,<sp/>img2.second,</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.first,<sp/>m.second,</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_cast&lt;functor::UnaryAnalyser&lt;Functor&gt;<sp/>&amp;&gt;(f));</highlight></codeline>
<codeline lineno="752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="754"><highlight class="comment">//@}</highlight></codeline>
<codeline lineno="755"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="756"><highlight class="comment">/**<sp/>\addtogroup<sp/>InspectFunctor<sp/>Functors<sp/>To<sp/>Inspect<sp/>Images</highlight></codeline>
<codeline lineno="757"><highlight class="comment"><sp/><sp/><sp/><sp/>Functors<sp/>which<sp/>report<sp/>image<sp/>statistics</highlight></codeline>
<codeline lineno="758"><highlight class="comment">*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="759"><highlight class="comment">//@{</highlight></codeline>
<codeline lineno="760"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FindMinMax<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="767"><highlight class="comment">/**<sp/>\brief<sp/>Find<sp/>the<sp/>minimum<sp/>and<sp/>maximum<sp/>pixel<sp/>value<sp/>in<sp/>an<sp/>image<sp/>or<sp/>ROI.</highlight></codeline>
<codeline lineno="768"><highlight class="comment"></highlight></codeline>
<codeline lineno="769"><highlight class="comment"><sp/><sp/><sp/><sp/>In<sp/>addition<sp/>the<sp/>size<sp/>of<sp/>the<sp/>ROI<sp/>is<sp/>calculated.</highlight></codeline>
<codeline lineno="770"><highlight class="comment"><sp/><sp/><sp/><sp/>These<sp/>functors<sp/>can<sp/>also<sp/>be<sp/>used<sp/>in<sp/>conjunction<sp/>with</highlight></codeline>
<codeline lineno="771"><highlight class="comment"><sp/><sp/><sp/><sp/>\ref<sp/>ArrayOfRegionStatistics<sp/>to<sp/>find<sp/>the<sp/>extremes<sp/>of<sp/>all<sp/>regions<sp/>in</highlight></codeline>
<codeline lineno="772"><highlight class="comment"><sp/><sp/><sp/><sp/>a<sp/>labeled<sp/>image.</highlight></codeline>
<codeline lineno="773"><highlight class="comment"></highlight></codeline>
<codeline lineno="774"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="775"><highlight class="comment"></highlight></codeline>
<codeline lineno="776"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryAnalyser&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="777"><highlight class="comment"></highlight></codeline>
<codeline lineno="778"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="779"><highlight class="comment"></highlight></codeline>
<codeline lineno="780"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/inspectimage.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="781"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="782"><highlight class="comment"></highlight></codeline>
<codeline lineno="783"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="784"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BImage<sp/>img;</highlight></codeline>
<codeline lineno="785"><highlight class="comment"></highlight></codeline>
<codeline lineno="786"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::FindMinMax&lt;vigra::BImage::PixelType&gt;<sp/>minmax;<sp/><sp/><sp/>//<sp/>init<sp/>functor</highlight></codeline>
<codeline lineno="787"><highlight class="comment"></highlight></codeline>
<codeline lineno="788"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::inspectImage(srcImageRange(img),<sp/>minmax);</highlight></codeline>
<codeline lineno="789"><highlight class="comment"></highlight></codeline>
<codeline lineno="790"><highlight class="comment"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;Min:<sp/>&quot;<sp/>&lt;&lt;<sp/>minmax.min<sp/>&lt;&lt;<sp/>&quot;<sp/>Max:<sp/>&quot;<sp/>&lt;&lt;<sp/>minmax.max;</highlight></codeline>
<codeline lineno="791"><highlight class="comment"></highlight></codeline>
<codeline lineno="792"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="793"><highlight class="comment"></highlight></codeline>
<codeline lineno="794"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Required<sp/>Interface:&lt;/b&gt;</highlight></codeline>
<codeline lineno="795"><highlight class="comment"></highlight></codeline>
<codeline lineno="796"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="797"><highlight class="comment"><sp/><sp/><sp/><sp/>VALUETYPE<sp/>v1,<sp/>v2(v1);</highlight></codeline>
<codeline lineno="798"><highlight class="comment"></highlight></codeline>
<codeline lineno="799"><highlight class="comment"><sp/><sp/><sp/><sp/>v1<sp/>&lt;<sp/>v2;</highlight></codeline>
<codeline lineno="800"><highlight class="comment"><sp/><sp/><sp/><sp/>v1<sp/>=<sp/>v2;</highlight></codeline>
<codeline lineno="801"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="802"><highlight class="comment"></highlight></codeline>
<codeline lineno="803"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUETYPE&gt;</highlight></codeline>
<codeline lineno="805" refid="classvigra_1_1FindMinMax" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1FindMinMax" kindref="compound" tooltip="Find the minimum and maximum pixel value in an image or ROI.">FindMinMax</ref></highlight></codeline>
<codeline lineno="806"><highlight class="normal">{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="809"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="810"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811" refid="classvigra_1_1FindMinMax_1a6d55e4278792f01590981c60ec0a1313" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUETYPE<sp/><ref refid="classvigra_1_1FindMinMax_1a6d55e4278792f01590981c60ec0a1313" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="813"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="814"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815" refid="classvigra_1_1FindMinMax_1ae791128ea87b5ec289170ed2b2566c8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUETYPE<sp/><ref refid="classvigra_1_1FindMinMax_1ae791128ea87b5ec289170ed2b2566c8c" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="817"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type</highlight></codeline>
<codeline lineno="818"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819" refid="classvigra_1_1FindMinMax_1ad81add7f462b51d2bedbccd43c12e32a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUETYPE<sp/><ref refid="classvigra_1_1FindMinMax_1ad81add7f462b51d2bedbccd43c12e32a" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="821"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>init<sp/>min<sp/>and<sp/>max</highlight></codeline>
<codeline lineno="822"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823" refid="classvigra_1_1FindMinMax_1a1d797ad3eefe9db4f8793df5f7c1ff29" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindMinMax_1a1d797ad3eefe9db4f8793df5f7c1ff29" kindref="member">FindMinMax</ref>()</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1FindMinMax_1a0ae3408e83fa258f08ece61e194251a9" kindref="member">min</ref>(<sp/>NumericTraits&lt;<ref refid="classvigra_1_1FindMinMax_1ad81add7f462b51d2bedbccd43c12e32a" kindref="member">value_type</ref>&gt;::<ref refid="classvigra_1_1FindMinMax_1a7a6d5ee26475974260562366c1a71b01" kindref="member">max</ref>()<sp/>),</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindMinMax_1a7a6d5ee26475974260562366c1a71b01" kindref="member">max</ref>(<sp/>NumericTraits&lt;<ref refid="classvigra_1_1FindMinMax_1ad81add7f462b51d2bedbccd43c12e32a" kindref="member">value_type</ref>&gt;::<ref refid="classvigra_1_1FindMinMax_1a0ae3408e83fa258f08ece61e194251a9" kindref="member">min</ref>()<sp/>),</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindMinMax_1a16ff2d8e15ade4948398b0aeb80124a8" kindref="member">count</ref>(0)</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="829"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>(re-)init<sp/>functor<sp/>(clear<sp/>min,<sp/>max)</highlight></codeline>
<codeline lineno="830"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831" refid="classvigra_1_1FindMinMax_1ad20897c5c8bd47f5d4005989bead0e55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindMinMax_1ad20897c5c8bd47f5d4005989bead0e55" kindref="member">reset</ref>()</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindMinMax_1a16ff2d8e15ade4948398b0aeb80124a8" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="836"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>update<sp/>min<sp/>and<sp/>max</highlight></codeline>
<codeline lineno="837"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838" refid="classvigra_1_1FindMinMax_1a7efb8704c3fc7036ba86aa1de05be2b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindMinMax_1a7efb8704c3fc7036ba86aa1de05be2b8" kindref="member">operator()</ref>(<ref refid="classvigra_1_1FindMinMax_1a6d55e4278792f01590981c60ec0a1313" kindref="member">argument_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classvigra_1_1FindMinMax_1a16ff2d8e15ade4948398b0aeb80124a8" kindref="member">count</ref>)</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v<sp/>&lt;<sp/><ref refid="classvigra_1_1FindMinMax_1a0ae3408e83fa258f08ece61e194251a9" kindref="member">min</ref>)<sp/><ref refid="classvigra_1_1FindMinMax_1a0ae3408e83fa258f08ece61e194251a9" kindref="member">min</ref><sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classvigra_1_1FindMinMax_1a7a6d5ee26475974260562366c1a71b01" kindref="member">max</ref><sp/>&lt;<sp/>v)<sp/><ref refid="classvigra_1_1FindMinMax_1a7a6d5ee26475974260562366c1a71b01" kindref="member">max</ref><sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindMinMax_1a0ae3408e83fa258f08ece61e194251a9" kindref="member">min</ref><sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindMinMax_1a7a6d5ee26475974260562366c1a71b01" kindref="member">max</ref><sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="classvigra_1_1FindMinMax_1a16ff2d8e15ade4948398b0aeb80124a8" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="853"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>update<sp/>min<sp/>and<sp/>max<sp/>with<sp/>components<sp/>of<sp/>RGBValue&lt;VALUETYPE&gt;</highlight></codeline>
<codeline lineno="854"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855" refid="classvigra_1_1FindMinMax_1a87adb1351681ac5285645c726b8ee88d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindMinMax_1a7efb8704c3fc7036ba86aa1de05be2b8" kindref="member">operator()</ref>(<ref refid="classvigra_1_1RGBValue" kindref="compound" tooltip="Class for a single RGB value.">RGBValue&lt;VALUETYPE&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindMinMax_1a7efb8704c3fc7036ba86aa1de05be2b8" kindref="member">operator()</ref>(v.<ref refid="classvigra_1_1RGBValue_1a1c1a385819753739d316121d3dd93790" kindref="member">red</ref>());</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindMinMax_1a7efb8704c3fc7036ba86aa1de05be2b8" kindref="member">operator()</ref>(v.<ref refid="classvigra_1_1RGBValue_1a621468b43b29f760d455e413ec494a8e" kindref="member">green</ref>());</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindMinMax_1a7efb8704c3fc7036ba86aa1de05be2b8" kindref="member">operator()</ref>(v.<ref refid="classvigra_1_1RGBValue_1a7894aacc3b4ea7a1e8a3b1f84f6bdea9" kindref="member">blue</ref>());</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="862"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>merge<sp/>two<sp/>statistics</highlight></codeline>
<codeline lineno="863"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864" refid="classvigra_1_1FindMinMax_1a6e5d61f265804f789b9e958387be3fab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindMinMax_1a7efb8704c3fc7036ba86aa1de05be2b8" kindref="member">operator()</ref>(<ref refid="classvigra_1_1FindMinMax" kindref="compound" tooltip="Find the minimum and maximum pixel value in an image or ROI.">FindMinMax</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v.<ref refid="classvigra_1_1FindMinMax_1a16ff2d8e15ade4948398b0aeb80124a8" kindref="member">count</ref>)</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classvigra_1_1FindMinMax_1a16ff2d8e15ade4948398b0aeb80124a8" kindref="member">count</ref>)</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v.<ref refid="classvigra_1_1FindMinMax_1a0ae3408e83fa258f08ece61e194251a9" kindref="member">min</ref><sp/>&lt;<sp/><ref refid="classvigra_1_1FindMinMax_1a0ae3408e83fa258f08ece61e194251a9" kindref="member">min</ref>)<sp/><ref refid="classvigra_1_1FindMinMax_1a0ae3408e83fa258f08ece61e194251a9" kindref="member">min</ref><sp/>=<sp/>v.<ref refid="classvigra_1_1FindMinMax_1a0ae3408e83fa258f08ece61e194251a9" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((this-&gt;<ref refid="classvigra_1_1FindMinMax_1a7a6d5ee26475974260562366c1a71b01" kindref="member">max</ref>)<sp/>&lt;<sp/>v.<ref refid="classvigra_1_1FindMinMax_1a7a6d5ee26475974260562366c1a71b01" kindref="member">max</ref>)<sp/><ref refid="classvigra_1_1FindMinMax_1a7a6d5ee26475974260562366c1a71b01" kindref="member">max</ref><sp/>=<sp/>v.<ref refid="classvigra_1_1FindMinMax_1a7a6d5ee26475974260562366c1a71b01" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindMinMax_1a0ae3408e83fa258f08ece61e194251a9" kindref="member">min</ref><sp/>=<sp/>v.<ref refid="classvigra_1_1FindMinMax_1a0ae3408e83fa258f08ece61e194251a9" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindMinMax_1a7a6d5ee26475974260562366c1a71b01" kindref="member">max</ref><sp/>=<sp/>v.<ref refid="classvigra_1_1FindMinMax_1a7a6d5ee26475974260562366c1a71b01" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindMinMax_1a16ff2d8e15ade4948398b0aeb80124a8" kindref="member">count</ref><sp/>+=<sp/>v.<ref refid="classvigra_1_1FindMinMax_1a16ff2d8e15ade4948398b0aeb80124a8" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="882"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>current<sp/>min</highlight></codeline>
<codeline lineno="883"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884" refid="classvigra_1_1FindMinMax_1a0ae3408e83fa258f08ece61e194251a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>VALUETYPE<sp/><ref refid="classvigra_1_1FindMinMax_1a0ae3408e83fa258f08ece61e194251a9" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="886"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>current<sp/>max</highlight></codeline>
<codeline lineno="887"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888" refid="classvigra_1_1FindMinMax_1a7a6d5ee26475974260562366c1a71b01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>VALUETYPE<sp/><ref refid="classvigra_1_1FindMinMax_1a7a6d5ee26475974260562366c1a71b01" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="890"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>number<sp/>of<sp/>values<sp/>processed<sp/>so<sp/>far</highlight></codeline>
<codeline lineno="891"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892" refid="classvigra_1_1FindMinMax_1a16ff2d8e15ade4948398b0aeb80124a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindMinMax_1a16ff2d8e15ade4948398b0aeb80124a8" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal">};</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUETYPE&gt;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1FunctorTraits" kindref="compound" tooltip="Export associated information for a functor.">FunctorTraits</ref>&lt;<ref refid="classvigra_1_1FindMinMax" kindref="compound" tooltip="Find the minimum and maximum pixel value in an image or ROI.">FindMinMax</ref>&lt;VALUETYPE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="898"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;FindMinMax&lt;VALUETYPE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="899"><highlight class="normal">{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryAnalyser;</highlight></codeline>
<codeline lineno="902"><highlight class="normal">};</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FindSum<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="910"><highlight class="comment">/**<sp/>\brief<sp/><sp/>Find<sp/>the<sp/>sum<sp/>of<sp/>the<sp/>pixel<sp/>values<sp/>in<sp/>an<sp/>image<sp/>or<sp/>ROI.</highlight></codeline>
<codeline lineno="911"><highlight class="comment"></highlight></codeline>
<codeline lineno="912"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>Functor<sp/>can<sp/>also<sp/>be<sp/>used<sp/>in<sp/>conjunction<sp/>with</highlight></codeline>
<codeline lineno="913"><highlight class="comment"><sp/><sp/><sp/><sp/>\ref<sp/>ArrayOfRegionStatistics<sp/>to<sp/>find<sp/>the<sp/>sum<sp/>of<sp/>all<sp/>regions<sp/>in</highlight></codeline>
<codeline lineno="914"><highlight class="comment"><sp/><sp/><sp/><sp/>a<sp/>labeled<sp/>image,<sp/>and<sp/>with<sp/>the<sp/>reduce<sp/>mode<sp/>of<sp/>transformMultiArray().</highlight></codeline>
<codeline lineno="915"><highlight class="comment"></highlight></codeline>
<codeline lineno="916"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="917"><highlight class="comment"></highlight></codeline>
<codeline lineno="918"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryAnalyser&lt;/tt&gt;<sp/>and<sp/>&lt;tt&gt;FunctorTraits::isInitializer&lt;/tt&gt;</highlight></codeline>
<codeline lineno="919"><highlight class="comment"><sp/><sp/><sp/><sp/>are<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="920"><highlight class="comment"></highlight></codeline>
<codeline lineno="921"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="922"><highlight class="comment"></highlight></codeline>
<codeline lineno="923"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/inspectimage.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="924"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="925"><highlight class="comment"></highlight></codeline>
<codeline lineno="926"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="927"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BImage<sp/>img;</highlight></codeline>
<codeline lineno="928"><highlight class="comment"></highlight></codeline>
<codeline lineno="929"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::FindSum&lt;vigra::BImage::PixelType&gt;<sp/>sum;<sp/><sp/><sp/>//<sp/>init<sp/>functor</highlight></codeline>
<codeline lineno="930"><highlight class="comment"></highlight></codeline>
<codeline lineno="931"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::inspectImage(srcImageRange(img),<sp/>sum);</highlight></codeline>
<codeline lineno="932"><highlight class="comment"></highlight></codeline>
<codeline lineno="933"><highlight class="comment"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;Sum:<sp/>&quot;<sp/>&lt;&lt;<sp/>sum();</highlight></codeline>
<codeline lineno="934"><highlight class="comment"></highlight></codeline>
<codeline lineno="935"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="936"><highlight class="comment"></highlight></codeline>
<codeline lineno="937"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Required<sp/>Interface:&lt;/b&gt;</highlight></codeline>
<codeline lineno="938"><highlight class="comment"></highlight></codeline>
<codeline lineno="939"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="940"><highlight class="comment"><sp/><sp/><sp/><sp/>VALUETYPE<sp/>v1,<sp/>v2(v1);</highlight></codeline>
<codeline lineno="941"><highlight class="comment"></highlight></codeline>
<codeline lineno="942"><highlight class="comment"><sp/><sp/><sp/><sp/>v1<sp/>+=<sp/>v2;</highlight></codeline>
<codeline lineno="943"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="944"><highlight class="comment"></highlight></codeline>
<codeline lineno="945"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUETYPE&gt;</highlight></codeline>
<codeline lineno="947" refid="classvigra_1_1FindSum" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1FindSum" kindref="compound" tooltip="Find the sum of the pixel values in an image or ROI.">FindSum</ref></highlight></codeline>
<codeline lineno="948"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>UnaryReduceFunctorTag</highlight></codeline>
<codeline lineno="949"><highlight class="normal">{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="952"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="953"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954" refid="classvigra_1_1FindSum_1a6d55e4278792f01590981c60ec0a1313" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUETYPE<sp/><ref refid="classvigra_1_1FindSum_1a6d55e4278792f01590981c60ec0a1313" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="956"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="957"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958" refid="classvigra_1_1FindSum_1a522836db4c397f1a1c9a792f886eec83" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;VALUETYPE&gt;::Promote<sp/><ref refid="classvigra_1_1FindSum_1a522836db4c397f1a1c9a792f886eec83" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="960"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>init<sp/>sum</highlight></codeline>
<codeline lineno="961"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962" refid="classvigra_1_1FindSum_1a914650fdc4b7d106ee184e4c26c8201c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindSum_1a914650fdc4b7d106ee184e4c26c8201c" kindref="member">FindSum</ref>()</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>sum_(NumericTraits&lt;<ref refid="classvigra_1_1FindSum_1a522836db4c397f1a1c9a792f886eec83" kindref="member">result_type</ref>&gt;::zero())</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="966"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>(re-)init<sp/>sum</highlight></codeline>
<codeline lineno="967"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968" refid="classvigra_1_1FindSum_1ad20897c5c8bd47f5d4005989bead0e55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindSum_1ad20897c5c8bd47f5d4005989bead0e55" kindref="member">reset</ref>()</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_<sp/>=<sp/>NumericTraits&lt;result_type&gt;::zero();</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="973"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>update<sp/>sum</highlight></codeline>
<codeline lineno="974"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975" refid="classvigra_1_1FindSum_1a7efb8704c3fc7036ba86aa1de05be2b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindSum_1a3611568390db60a6b592467581d58324" kindref="member">operator()</ref>(<ref refid="classvigra_1_1FindSum_1a6d55e4278792f01590981c60ec0a1313" kindref="member">argument_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_<sp/>+=<sp/>v;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="980"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>merge<sp/>two<sp/>statistics</highlight></codeline>
<codeline lineno="981"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982" refid="classvigra_1_1FindSum_1aab3c4b4f8135f7a22e3c8047eb6a291c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindSum_1a3611568390db60a6b592467581d58324" kindref="member">operator()</ref>(<ref refid="classvigra_1_1FindSum" kindref="compound" tooltip="Find the sum of the pixel values in an image or ROI.">FindSum</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_<sp/><sp/><sp/>+=<sp/>v.sum_;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="987"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>return<sp/>current<sp/>sum</highlight></codeline>
<codeline lineno="988"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989" refid="classvigra_1_1FindSum_1abcbd58c449406faedb740e8c570b282a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindSum_1a522836db4c397f1a1c9a792f886eec83" kindref="member">result_type</ref><sp/><ref refid="classvigra_1_1FindSum_1abcbd58c449406faedb740e8c570b282a" kindref="member">sum</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="990"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum_;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="994"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>return<sp/>current<sp/>sum</highlight></codeline>
<codeline lineno="995"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996" refid="classvigra_1_1FindSum_1a3611568390db60a6b592467581d58324" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindSum_1a522836db4c397f1a1c9a792f886eec83" kindref="member">result_type</ref><sp/><ref refid="classvigra_1_1FindSum_1a3611568390db60a6b592467581d58324" kindref="member">operator()</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="997"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum_;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindSum_1a522836db4c397f1a1c9a792f886eec83" kindref="member">result_type</ref><sp/>sum_;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FindAverage<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1012"><highlight class="comment">/**<sp/>\brief<sp/><sp/>Find<sp/>the<sp/>average<sp/>pixel<sp/>value<sp/>in<sp/>an<sp/>image<sp/>or<sp/>ROI.</highlight></codeline>
<codeline lineno="1013"><highlight class="comment"></highlight></codeline>
<codeline lineno="1014"><highlight class="comment"><sp/><sp/><sp/><sp/>In<sp/>addition<sp/>the<sp/>size<sp/>of<sp/>the<sp/>ROI<sp/>is<sp/>calculated.</highlight></codeline>
<codeline lineno="1015"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>Functor<sp/>can<sp/>also<sp/>be<sp/>used<sp/>in<sp/>conjunction<sp/>with</highlight></codeline>
<codeline lineno="1016"><highlight class="comment"><sp/><sp/><sp/><sp/>\ref<sp/>ArrayOfRegionStatistics<sp/>to<sp/>find<sp/>the<sp/>average<sp/>of<sp/>all<sp/>regions<sp/>in</highlight></codeline>
<codeline lineno="1017"><highlight class="comment"><sp/><sp/><sp/><sp/>a<sp/>labeled<sp/>image.</highlight></codeline>
<codeline lineno="1018"><highlight class="comment"></highlight></codeline>
<codeline lineno="1019"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1020"><highlight class="comment"></highlight></codeline>
<codeline lineno="1021"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryAnalyser&lt;/tt&gt;<sp/>and<sp/>&lt;tt&gt;FunctorTraits::isInitializer&lt;/tt&gt;</highlight></codeline>
<codeline lineno="1022"><highlight class="comment"><sp/><sp/><sp/><sp/>are<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="1023"><highlight class="comment"></highlight></codeline>
<codeline lineno="1024"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1025"><highlight class="comment"></highlight></codeline>
<codeline lineno="1026"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/inspectimage.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="1027"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="1028"><highlight class="comment"></highlight></codeline>
<codeline lineno="1029"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1030"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BImage<sp/>img;</highlight></codeline>
<codeline lineno="1031"><highlight class="comment"></highlight></codeline>
<codeline lineno="1032"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::FindAverage&lt;vigra::BImage::PixelType&gt;<sp/>average;<sp/><sp/><sp/>//<sp/>init<sp/>functor</highlight></codeline>
<codeline lineno="1033"><highlight class="comment"></highlight></codeline>
<codeline lineno="1034"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::inspectImage(srcImageRange(img),<sp/>average);</highlight></codeline>
<codeline lineno="1035"><highlight class="comment"></highlight></codeline>
<codeline lineno="1036"><highlight class="comment"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;Average:<sp/>&quot;<sp/>&lt;&lt;<sp/>average();</highlight></codeline>
<codeline lineno="1037"><highlight class="comment"></highlight></codeline>
<codeline lineno="1038"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1039"><highlight class="comment"></highlight></codeline>
<codeline lineno="1040"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Required<sp/>Interface:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1041"><highlight class="comment"></highlight></codeline>
<codeline lineno="1042"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1043"><highlight class="comment"><sp/><sp/><sp/><sp/>VALUETYPE<sp/>v1,<sp/>v2(v1);</highlight></codeline>
<codeline lineno="1044"><highlight class="comment"><sp/><sp/><sp/><sp/>double<sp/>d;</highlight></codeline>
<codeline lineno="1045"><highlight class="comment"></highlight></codeline>
<codeline lineno="1046"><highlight class="comment"><sp/><sp/><sp/><sp/>v1<sp/>+=<sp/>v2;</highlight></codeline>
<codeline lineno="1047"><highlight class="comment"><sp/><sp/><sp/><sp/>v1<sp/>/<sp/>d;</highlight></codeline>
<codeline lineno="1048"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1049"><highlight class="comment"></highlight></codeline>
<codeline lineno="1050"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUETYPE&gt;</highlight></codeline>
<codeline lineno="1052" refid="classvigra_1_1FindAverage" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1FindAverage" kindref="compound" tooltip="Find the average pixel value in an image or ROI.">FindAverage</ref></highlight></codeline>
<codeline lineno="1053"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1056"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="1057"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058" refid="classvigra_1_1FindAverage_1a6d55e4278792f01590981c60ec0a1313" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUETYPE<sp/><ref refid="classvigra_1_1FindAverage_1a6d55e4278792f01590981c60ec0a1313" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1060"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>first<sp/>argument<sp/>type<sp/>(for<sp/>calls<sp/>with<sp/>a<sp/>weight)</highlight></codeline>
<codeline lineno="1061"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062" refid="classvigra_1_1FindAverage_1a227d9f9e0d316b5771e73c3734157fc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUETYPE<sp/><ref refid="classvigra_1_1FindAverage_1a227d9f9e0d316b5771e73c3734157fc0" kindref="member">first_argument_type</ref>;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1064"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>second<sp/>argument<sp/>type<sp/>(for<sp/>calls<sp/>with<sp/>a<sp/>weight)</highlight></codeline>
<codeline lineno="1065"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1066" refid="classvigra_1_1FindAverage_1a669d316548d53121b8bba1eacb56fd6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindAverage_1a669d316548d53121b8bba1eacb56fd6f" kindref="member">second_argument_type</ref>;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1068"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="1069"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070" refid="classvigra_1_1FindAverage_1ac88690a997a2d26a4ae350b7ba894bbf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;VALUETYPE&gt;::RealPromote<sp/><ref refid="classvigra_1_1FindAverage_1ac88690a997a2d26a4ae350b7ba894bbf" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1072"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="1073"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1074" refid="classvigra_1_1FindAverage_1a02ffbee005b7e35ced4792fbe4b14f10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;VALUETYPE&gt;::RealPromote<sp/><ref refid="classvigra_1_1FindAverage_1a02ffbee005b7e35ced4792fbe4b14f10" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1076"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>init<sp/>average</highlight></codeline>
<codeline lineno="1077"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078" refid="classvigra_1_1FindAverage_1a4b4c23471c32e8b0eebaede2e07c9656" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindAverage_1a4b4c23471c32e8b0eebaede2e07c9656" kindref="member">FindAverage</ref>()</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>sum_(NumericTraits&lt;<ref refid="classvigra_1_1FindAverage_1ac88690a997a2d26a4ae350b7ba894bbf" kindref="member">result_type</ref>&gt;::zero()),<sp/>count_(0)</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1082"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>(re-)init<sp/>average</highlight></codeline>
<codeline lineno="1083"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084" refid="classvigra_1_1FindAverage_1ad20897c5c8bd47f5d4005989bead0e55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindAverage_1ad20897c5c8bd47f5d4005989bead0e55" kindref="member">reset</ref>()</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_<sp/>=<sp/>NumericTraits&lt;result_type&gt;::zero();</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1090"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>update<sp/>average</highlight></codeline>
<codeline lineno="1091"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092" refid="classvigra_1_1FindAverage_1a7efb8704c3fc7036ba86aa1de05be2b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindAverage_1a3611568390db60a6b592467581d58324" kindref="member">operator()</ref>(<ref refid="classvigra_1_1FindAverage_1a6d55e4278792f01590981c60ec0a1313" kindref="member">argument_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_<sp/>+=<sp/>v;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++count_;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1098"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>update<sp/>average,<sp/>using<sp/>weighted<sp/>input.</highlight></codeline>
<codeline lineno="1099"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>&lt;tt&gt;stats(value,<sp/>1.0)&lt;/tt&gt;<sp/>is<sp/>equivalent<sp/>to<sp/>the<sp/>unweighted</highlight></codeline>
<codeline lineno="1100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>call<sp/>&lt;tt&gt;stats(value)&lt;/tt&gt;,<sp/>and<sp/>&lt;tt&gt;stats(value,<sp/>2.0)&lt;/tt&gt;</highlight></codeline>
<codeline lineno="1101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>is<sp/>equivalent<sp/>to<sp/>two<sp/>unweighted<sp/>calls.</highlight></codeline>
<codeline lineno="1102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103" refid="classvigra_1_1FindAverage_1ac4ea6193c01a67366cb3fe75223af359" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindAverage_1a3611568390db60a6b592467581d58324" kindref="member">operator()</ref>(<ref refid="classvigra_1_1FindAverage_1a227d9f9e0d316b5771e73c3734157fc0" kindref="member">first_argument_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v,<sp/><ref refid="classvigra_1_1FindAverage_1a669d316548d53121b8bba1eacb56fd6f" kindref="member">second_argument_type</ref><sp/>weight)</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_<sp/><sp/><sp/>+=<sp/>v<sp/>*<sp/>weight;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count_<sp/>+=<sp/>weight;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1109"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>merge<sp/>two<sp/>statistics</highlight></codeline>
<codeline lineno="1110"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111" refid="classvigra_1_1FindAverage_1a448281f4043abd3f4cdfdcf126d24e8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindAverage_1a3611568390db60a6b592467581d58324" kindref="member">operator()</ref>(<ref refid="classvigra_1_1FindAverage" kindref="compound" tooltip="Find the average pixel value in an image or ROI.">FindAverage</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum_<sp/><sp/><sp/>+=<sp/>v.sum_;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count_<sp/>+=<sp/>v.count_;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1117"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>return<sp/>number<sp/>of<sp/>values<sp/>(sum<sp/>of<sp/>weights)<sp/>seen<sp/>so<sp/>far</highlight></codeline>
<codeline lineno="1118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119" refid="classvigra_1_1FindAverage_1a0bc359433e4ac9bc3c9e9506dbb76954" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindAverage_1a0bc359433e4ac9bc3c9e9506dbb76954" kindref="member">count</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1120"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count_;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1124"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>return<sp/>current<sp/>average</highlight></codeline>
<codeline lineno="1125"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126" refid="classvigra_1_1FindAverage_1a2cc61b4fc18a1c0ed2c2910e2c87fc6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindAverage_1ac88690a997a2d26a4ae350b7ba894bbf" kindref="member">result_type</ref><sp/><ref refid="classvigra_1_1FindAverage_1a2cc61b4fc18a1c0ed2c2910e2c87fc6d" kindref="member">average</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1127"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum_<sp/>/<sp/>(double)count_;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1131"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>return<sp/>current<sp/>average</highlight></codeline>
<codeline lineno="1132"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1133" refid="classvigra_1_1FindAverage_1a3611568390db60a6b592467581d58324" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindAverage_1ac88690a997a2d26a4ae350b7ba894bbf" kindref="member">result_type</ref><sp/><ref refid="classvigra_1_1FindAverage_1a3611568390db60a6b592467581d58324" kindref="member">operator()</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1134"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum_<sp/>/<sp/>(double)count_;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindAverage_1ac88690a997a2d26a4ae350b7ba894bbf" kindref="member">result_type</ref><sp/>sum_;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>count_;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUETYPE&gt;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;FindAverage&lt;VALUETYPE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;FindAverage&lt;VALUETYPE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isInitializer;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryAnalyser;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FindAverageAndVariance<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1157"><highlight class="comment">/**<sp/>\brief<sp/><sp/>Find<sp/>the<sp/>average<sp/>pixel<sp/>value<sp/>and<sp/>its<sp/>variance<sp/>in<sp/>an<sp/>image<sp/>or<sp/>ROI.</highlight></codeline>
<codeline lineno="1158"><highlight class="comment"></highlight></codeline>
<codeline lineno="1159"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>Functor<sp/>uses<sp/>West&apos;s<sp/>algorithm<sp/>to<sp/>accumulate<sp/>highly<sp/>accurate<sp/>values<sp/>for</highlight></codeline>
<codeline lineno="1160"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>mean<sp/>and<sp/>the<sp/>sum<sp/>of<sp/>squared<sp/>differences<sp/>of<sp/>all<sp/>values<sp/>seen<sp/>so<sp/>far<sp/>(the</highlight></codeline>
<codeline lineno="1161"><highlight class="comment"><sp/><sp/><sp/><sp/>naive<sp/>incremental<sp/>algorithm<sp/>for<sp/>the<sp/>computation<sp/>of<sp/>the<sp/>sum<sp/>of<sp/>squares</highlight></codeline>
<codeline lineno="1162"><highlight class="comment"><sp/><sp/><sp/><sp/>produces<sp/>large<sp/>round-off<sp/>errors<sp/>when<sp/>the<sp/>mean<sp/>is<sp/>much<sp/>larger<sp/>than<sp/>the</highlight></codeline>
<codeline lineno="1163"><highlight class="comment"><sp/><sp/><sp/><sp/>standard<sp/>deviation<sp/>of<sp/>the<sp/>data.)<sp/>This<sp/>Functor<sp/>can<sp/>also<sp/>be<sp/>used<sp/>in</highlight></codeline>
<codeline lineno="1164"><highlight class="comment"><sp/><sp/><sp/><sp/>conjunction<sp/>with<sp/>\ref<sp/>ArrayOfRegionStatistics<sp/>to<sp/>find<sp/>the<sp/>statistics<sp/>of<sp/>all</highlight></codeline>
<codeline lineno="1165"><highlight class="comment"><sp/><sp/><sp/><sp/>regions<sp/>in<sp/>a<sp/>labeled<sp/>image.</highlight></codeline>
<codeline lineno="1166"><highlight class="comment"></highlight></codeline>
<codeline lineno="1167"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1168"><highlight class="comment"></highlight></codeline>
<codeline lineno="1169"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryAnalyser&lt;/tt&gt;<sp/>and<sp/>&lt;tt&gt;FunctorTraits::isInitializer&lt;/tt&gt;</highlight></codeline>
<codeline lineno="1170"><highlight class="comment"><sp/><sp/><sp/><sp/>are<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="1171"><highlight class="comment"></highlight></codeline>
<codeline lineno="1172"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1173"><highlight class="comment"></highlight></codeline>
<codeline lineno="1174"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/inspectimage.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="1175"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="1176"><highlight class="comment"></highlight></codeline>
<codeline lineno="1177"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1178"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BImage<sp/>img;</highlight></codeline>
<codeline lineno="1179"><highlight class="comment"></highlight></codeline>
<codeline lineno="1180"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::FindAverageAndVariance&lt;vigra::BImage::PixelType&gt;<sp/>averageAndVariance;<sp/><sp/><sp/>//<sp/>init<sp/>functor</highlight></codeline>
<codeline lineno="1181"><highlight class="comment"></highlight></codeline>
<codeline lineno="1182"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::inspectImage(srcImageRange(img),<sp/>averageAndVariance);</highlight></codeline>
<codeline lineno="1183"><highlight class="comment"></highlight></codeline>
<codeline lineno="1184"><highlight class="comment"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;Average:<sp/>&quot;<sp/>&lt;&lt;<sp/>averageAndVariance.average()<sp/>&lt;&lt;<sp/>&quot;\n&quot;;</highlight></codeline>
<codeline lineno="1185"><highlight class="comment"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;Standard<sp/>deviation:<sp/>&quot;<sp/>&lt;&lt;<sp/>sqrt(averageAndVariance.variance())<sp/>&lt;&lt;<sp/>&quot;\n&quot;;</highlight></codeline>
<codeline lineno="1186"><highlight class="comment"></highlight></codeline>
<codeline lineno="1187"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1188"><highlight class="comment"></highlight></codeline>
<codeline lineno="1189"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Required<sp/>Interface:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1190"><highlight class="comment"></highlight></codeline>
<codeline lineno="1191"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1192"><highlight class="comment"><sp/><sp/><sp/><sp/>VALUETYPE<sp/>v1,<sp/>v2(v1);</highlight></codeline>
<codeline lineno="1193"><highlight class="comment"><sp/><sp/><sp/><sp/>double<sp/>d;</highlight></codeline>
<codeline lineno="1194"><highlight class="comment"></highlight></codeline>
<codeline lineno="1195"><highlight class="comment"><sp/><sp/><sp/><sp/>v1<sp/>+=<sp/>v2;</highlight></codeline>
<codeline lineno="1196"><highlight class="comment"><sp/><sp/><sp/><sp/>v1<sp/>+<sp/>v2;</highlight></codeline>
<codeline lineno="1197"><highlight class="comment"><sp/><sp/><sp/><sp/>v1<sp/>-<sp/>v2;</highlight></codeline>
<codeline lineno="1198"><highlight class="comment"><sp/><sp/><sp/><sp/>v1<sp/>*<sp/>v2;</highlight></codeline>
<codeline lineno="1199"><highlight class="comment"><sp/><sp/><sp/><sp/>v1<sp/>/<sp/>d;</highlight></codeline>
<codeline lineno="1200"><highlight class="comment"><sp/><sp/><sp/><sp/>d<sp/>*<sp/>v1;</highlight></codeline>
<codeline lineno="1201"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1202"><highlight class="comment"></highlight></codeline>
<codeline lineno="1203"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUETYPE&gt;</highlight></codeline>
<codeline lineno="1205" refid="classvigra_1_1FindAverageAndVariance" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1FindAverageAndVariance" kindref="compound" tooltip="Find the average pixel value and its variance in an image or ROI.">FindAverageAndVariance</ref></highlight></codeline>
<codeline lineno="1206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1209"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="1210"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211" refid="classvigra_1_1FindAverageAndVariance_1a6d55e4278792f01590981c60ec0a1313" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUETYPE<sp/><ref refid="classvigra_1_1FindAverageAndVariance_1a6d55e4278792f01590981c60ec0a1313" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1213"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>first<sp/>argument<sp/>type<sp/>(for<sp/>calls<sp/>with<sp/>a<sp/>weight)</highlight></codeline>
<codeline lineno="1214"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215" refid="classvigra_1_1FindAverageAndVariance_1a227d9f9e0d316b5771e73c3734157fc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUETYPE<sp/><ref refid="classvigra_1_1FindAverageAndVariance_1a227d9f9e0d316b5771e73c3734157fc0" kindref="member">first_argument_type</ref>;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1217"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>second<sp/>argument<sp/>type<sp/>(for<sp/>calls<sp/>with<sp/>a<sp/>weight)</highlight></codeline>
<codeline lineno="1218"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219" refid="classvigra_1_1FindAverageAndVariance_1a669d316548d53121b8bba1eacb56fd6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindAverageAndVariance_1a669d316548d53121b8bba1eacb56fd6f" kindref="member">second_argument_type</ref>;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1221"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="1222"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223" refid="classvigra_1_1FindAverageAndVariance_1ac88690a997a2d26a4ae350b7ba894bbf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;VALUETYPE&gt;::RealPromote<sp/><ref refid="classvigra_1_1FindAverageAndVariance_1ac88690a997a2d26a4ae350b7ba894bbf" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1225"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="1226"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227" refid="classvigra_1_1FindAverageAndVariance_1a02ffbee005b7e35ced4792fbe4b14f10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;VALUETYPE&gt;::RealPromote<sp/><ref refid="classvigra_1_1FindAverageAndVariance_1a02ffbee005b7e35ced4792fbe4b14f10" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1229"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>init<sp/>average</highlight></codeline>
<codeline lineno="1230"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231" refid="classvigra_1_1FindAverageAndVariance_1a29834a18c78934cd2632081e0230b626" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindAverageAndVariance_1a29834a18c78934cd2632081e0230b626" kindref="member">FindAverageAndVariance</ref>()</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>mean_(NumericTraits&lt;<ref refid="classvigra_1_1FindAverageAndVariance_1ac88690a997a2d26a4ae350b7ba894bbf" kindref="member">result_type</ref>&gt;::zero()),</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sumOfSquaredDifferences_(NumericTraits&lt;<ref refid="classvigra_1_1FindAverageAndVariance_1ac88690a997a2d26a4ae350b7ba894bbf" kindref="member">result_type</ref>&gt;::zero()),</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>count_(0.0)</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1237"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>(re-)init<sp/>average<sp/>and<sp/>variance</highlight></codeline>
<codeline lineno="1238"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239" refid="classvigra_1_1FindAverageAndVariance_1ad20897c5c8bd47f5d4005989bead0e55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindAverageAndVariance_1ad20897c5c8bd47f5d4005989bead0e55" kindref="member">reset</ref>()</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count_<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mean_<sp/>=<sp/>NumericTraits&lt;result_type&gt;::zero();</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumOfSquaredDifferences_<sp/>=<sp/>NumericTraits&lt;result_type&gt;::zero();</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1246"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>update<sp/>average<sp/>and<sp/>variance</highlight></codeline>
<codeline lineno="1247"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248" refid="classvigra_1_1FindAverageAndVariance_1a7efb8704c3fc7036ba86aa1de05be2b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindAverageAndVariance_1a3611568390db60a6b592467581d58324" kindref="member">operator()</ref>(<ref refid="classvigra_1_1FindAverageAndVariance_1a6d55e4278792f01590981c60ec0a1313" kindref="member">argument_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++count_;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindAverageAndVariance_1ac88690a997a2d26a4ae350b7ba894bbf" kindref="member">result_type</ref><sp/>t1<sp/>=<sp/>v<sp/>-<sp/>mean_;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindAverageAndVariance_1ac88690a997a2d26a4ae350b7ba894bbf" kindref="member">result_type</ref><sp/>t2<sp/>=<sp/>t1<sp/>/<sp/>count_;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mean_<sp/>+=<sp/>t2;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumOfSquaredDifferences_<sp/>+=<sp/>(count_-1.0)*t1*t2;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1257"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>update<sp/>average<sp/>and<sp/>variance,<sp/>using<sp/>weighted<sp/>input.</highlight></codeline>
<codeline lineno="1258"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>&lt;tt&gt;stats(value,<sp/>1.0)&lt;/tt&gt;<sp/>is<sp/>equivalent<sp/>to<sp/>the<sp/>unweighted</highlight></codeline>
<codeline lineno="1259"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>call<sp/>&lt;tt&gt;stats(value)&lt;/tt&gt;,<sp/>and<sp/>&lt;tt&gt;stats(value,<sp/>2.0)&lt;/tt&gt;</highlight></codeline>
<codeline lineno="1260"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>is<sp/>equivalent<sp/>to<sp/>two<sp/>unweighted<sp/>calls.</highlight></codeline>
<codeline lineno="1261"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1262" refid="classvigra_1_1FindAverageAndVariance_1ac4ea6193c01a67366cb3fe75223af359" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindAverageAndVariance_1a3611568390db60a6b592467581d58324" kindref="member">operator()</ref>(<ref refid="classvigra_1_1FindAverageAndVariance_1a227d9f9e0d316b5771e73c3734157fc0" kindref="member">first_argument_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v,<sp/><ref refid="classvigra_1_1FindAverageAndVariance_1a669d316548d53121b8bba1eacb56fd6f" kindref="member">second_argument_type</ref><sp/>weight)</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count_<sp/>+=<sp/>weight;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindAverageAndVariance_1ac88690a997a2d26a4ae350b7ba894bbf" kindref="member">result_type</ref><sp/>t1<sp/>=<sp/>v<sp/>-<sp/>mean_;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindAverageAndVariance_1ac88690a997a2d26a4ae350b7ba894bbf" kindref="member">result_type</ref><sp/>t2<sp/>=<sp/>t1<sp/>*<sp/>weight<sp/>/<sp/>count_;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mean_<sp/>+=<sp/>t2;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sumOfSquaredDifferences_<sp/>+=<sp/>(count_<sp/>-<sp/>weight)*t1*t2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(count_<sp/>&gt;<sp/>weight)</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumOfSquaredDifferences_<sp/>+=</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(t1<sp/>*<sp/>t1<sp/>*<sp/>weight<sp/>/<sp/>count_)<sp/>*<sp/>(count_<sp/>-<sp/>weight<sp/>);</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1276"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>merge<sp/>two<sp/>statistics</highlight></codeline>
<codeline lineno="1277"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278" refid="classvigra_1_1FindAverageAndVariance_1aae0f4a99d761a431044e163b1008414c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindAverageAndVariance_1a3611568390db60a6b592467581d58324" kindref="member">operator()</ref>(<ref refid="classvigra_1_1FindAverageAndVariance" kindref="compound" tooltip="Find the average pixel value and its variance in an image or ROI.">FindAverageAndVariance</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newCount<sp/>=<sp/>count_<sp/>+<sp/>v.count_;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumOfSquaredDifferences_<sp/>+=<sp/>v.sumOfSquaredDifferences_<sp/>+</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count_<sp/>/<sp/>newCount<sp/>*<sp/>v.count_<sp/>*<sp/>(mean_<sp/>-<sp/>v.mean_)<sp/>*<sp/>(mean_<sp/>-<sp/>v.mean_);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mean_<sp/>=<sp/>(count_<sp/>*<sp/>mean_<sp/>+<sp/>v.count_<sp/>*<sp/>v.mean_)<sp/>/<sp/>newCount;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count_<sp/>+=<sp/>v.count_;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1287"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>return<sp/>number<sp/>of<sp/>values<sp/>(sum<sp/>of<sp/>weights)<sp/>seen<sp/>so<sp/>far</highlight></codeline>
<codeline lineno="1288"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289" refid="classvigra_1_1FindAverageAndVariance_1ab1eb6de2bf3aa228929ab4b40c73507c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindAverageAndVariance_1ab1eb6de2bf3aa228929ab4b40c73507c" kindref="member">count</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1290"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)count_;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1294"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>return<sp/>current<sp/>average</highlight></codeline>
<codeline lineno="1295"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1296" refid="classvigra_1_1FindAverageAndVariance_1a2cc61b4fc18a1c0ed2c2910e2c87fc6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindAverageAndVariance_1ac88690a997a2d26a4ae350b7ba894bbf" kindref="member">result_type</ref><sp/><ref refid="classvigra_1_1FindAverageAndVariance_1a2cc61b4fc18a1c0ed2c2910e2c87fc6d" kindref="member">average</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1297"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mean_;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1301"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>return<sp/>current<sp/>variance.</highlight></codeline>
<codeline lineno="1302"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>&lt;tt&gt;unbiased<sp/>=<sp/>true&lt;/tt&gt;,<sp/>the<sp/>sum<sp/>of<sp/>squared<sp/>differences</highlight></codeline>
<codeline lineno="1303"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>divided<sp/>by<sp/>&lt;tt&gt;count()-1&lt;/tt&gt;<sp/>instead<sp/>of<sp/>just<sp/>&lt;tt&gt;count()&lt;/tt&gt;.</highlight></codeline>
<codeline lineno="1304"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1305" refid="classvigra_1_1FindAverageAndVariance_1aa4e17c25b2ca584fbbbe79b8a22ae51a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindAverageAndVariance_1ac88690a997a2d26a4ae350b7ba894bbf" kindref="member">result_type</ref><sp/><ref refid="classvigra_1_1FindAverageAndVariance_1aa4e17c25b2ca584fbbbe79b8a22ae51a" kindref="member">variance</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>unbiased<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1306"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unbiased</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>sumOfSquaredDifferences_<sp/>/<sp/>(count_<sp/>-<sp/>1.0)</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>sumOfSquaredDifferences_<sp/>/<sp/>count_;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1312"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>return<sp/>current<sp/>variance.<sp/>calls<sp/>&lt;tt&gt;variance()&lt;/tt&gt;.</highlight></codeline>
<codeline lineno="1313"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314" refid="classvigra_1_1FindAverageAndVariance_1a3611568390db60a6b592467581d58324" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindAverageAndVariance_1ac88690a997a2d26a4ae350b7ba894bbf" kindref="member">result_type</ref><sp/><ref refid="classvigra_1_1FindAverageAndVariance_1a3611568390db60a6b592467581d58324" kindref="member">operator()</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1315"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindAverageAndVariance_1aa4e17c25b2ca584fbbbe79b8a22ae51a" kindref="member">variance</ref>();</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindAverageAndVariance_1ac88690a997a2d26a4ae350b7ba894bbf" kindref="member">result_type</ref><sp/>mean_,<sp/>sumOfSquaredDifferences_;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>count_;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUETYPE&gt;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;FindAverageAndVariance&lt;VALUETYPE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;FindAverageAndVariance&lt;VALUETYPE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isInitializer;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryAnalyser;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FindROISize<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1338"><highlight class="comment">/**<sp/>\brief<sp/>Calculate<sp/>the<sp/>size<sp/>of<sp/>an<sp/>ROI<sp/>in<sp/>an<sp/>image.</highlight></codeline>
<codeline lineno="1339"><highlight class="comment"></highlight></codeline>
<codeline lineno="1340"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>Functor<sp/>is<sp/>often<sp/>used<sp/>in<sp/>conjunction<sp/>with</highlight></codeline>
<codeline lineno="1341"><highlight class="comment"><sp/><sp/><sp/><sp/>\ref<sp/>ArrayOfRegionStatistics<sp/>to<sp/>find<sp/>the<sp/>sizes<sp/>of<sp/>all<sp/>regions<sp/>in</highlight></codeline>
<codeline lineno="1342"><highlight class="comment"><sp/><sp/><sp/><sp/>a<sp/>labeled<sp/>image.</highlight></codeline>
<codeline lineno="1343"><highlight class="comment"></highlight></codeline>
<codeline lineno="1344"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1345"><highlight class="comment"></highlight></codeline>
<codeline lineno="1346"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryAnalyser&lt;/tt&gt;<sp/>and<sp/>&lt;tt&gt;FunctorTraits::isInitializer&lt;/tt&gt;</highlight></codeline>
<codeline lineno="1347"><highlight class="comment"><sp/><sp/><sp/><sp/>are<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="1348"><highlight class="comment"></highlight></codeline>
<codeline lineno="1349"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1350"><highlight class="comment"></highlight></codeline>
<codeline lineno="1351"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/inspectimage.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="1352"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="1353"><highlight class="comment"></highlight></codeline>
<codeline lineno="1354"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1355"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BImage<sp/>img,<sp/>mask;</highlight></codeline>
<codeline lineno="1356"><highlight class="comment"></highlight></codeline>
<codeline lineno="1357"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::FindROISize&lt;vigra::BImage::PixelType&gt;<sp/>roisize;<sp/><sp/><sp/>//<sp/>init<sp/>functor</highlight></codeline>
<codeline lineno="1358"><highlight class="comment"></highlight></codeline>
<codeline lineno="1359"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::inspectImageIf(srcImageRange(img),<sp/>srcImage(mask),<sp/>roisize);</highlight></codeline>
<codeline lineno="1360"><highlight class="comment"></highlight></codeline>
<codeline lineno="1361"><highlight class="comment"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;Size<sp/>of<sp/>ROI:<sp/>&quot;<sp/>&lt;&lt;<sp/>roisize.count;</highlight></codeline>
<codeline lineno="1362"><highlight class="comment"></highlight></codeline>
<codeline lineno="1363"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1364"><highlight class="comment"></highlight></codeline>
<codeline lineno="1365"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUETYPE&gt;</highlight></codeline>
<codeline lineno="1367" refid="classvigra_1_1FindROISize" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1FindROISize" kindref="compound" tooltip="Calculate the size of an ROI in an image.">FindROISize</ref></highlight></codeline>
<codeline lineno="1368"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1371"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="1372"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1373" refid="classvigra_1_1FindROISize_1a6d55e4278792f01590981c60ec0a1313" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUETYPE<sp/><ref refid="classvigra_1_1FindROISize_1a6d55e4278792f01590981c60ec0a1313" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1375"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="1376"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1377" refid="classvigra_1_1FindROISize_1ad3ae359ebef83ead2aa53e14dcdfb7de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindROISize_1ad3ae359ebef83ead2aa53e14dcdfb7de" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1379"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="1380"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1381" refid="classvigra_1_1FindROISize_1ad81add7f462b51d2bedbccd43c12e32a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUETYPE<sp/><ref refid="classvigra_1_1FindROISize_1ad81add7f462b51d2bedbccd43c12e32a" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1383"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>init<sp/>counter<sp/>to<sp/>0</highlight></codeline>
<codeline lineno="1384"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385" refid="classvigra_1_1FindROISize_1aa73a2dd48062214a05d88cf261914c5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindROISize_1aa73a2dd48062214a05d88cf261914c5f" kindref="member">FindROISize</ref>()</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1FindROISize_1a45645fe9212aa13dd60fd2220a155892" kindref="member">count</ref>(0)</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1389"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>(re-)init<sp/>ROI<sp/>size<sp/>with<sp/>0</highlight></codeline>
<codeline lineno="1390"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1391" refid="classvigra_1_1FindROISize_1ad20897c5c8bd47f5d4005989bead0e55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindROISize_1ad20897c5c8bd47f5d4005989bead0e55" kindref="member">reset</ref>()</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindROISize_1a45645fe9212aa13dd60fd2220a155892" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1396"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>update<sp/>counter</highlight></codeline>
<codeline lineno="1397"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1398" refid="classvigra_1_1FindROISize_1a66d851c6a329133702d6cd1e41901c43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindROISize_1a3611568390db60a6b592467581d58324" kindref="member">operator()</ref>(<ref refid="classvigra_1_1FindROISize_1a6d55e4278792f01590981c60ec0a1313" kindref="member">argument_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="classvigra_1_1FindROISize_1a45645fe9212aa13dd60fd2220a155892" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1403"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>return<sp/>current<sp/>size</highlight></codeline>
<codeline lineno="1404"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1405" refid="classvigra_1_1FindROISize_1a3611568390db60a6b592467581d58324" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindROISize_1ad3ae359ebef83ead2aa53e14dcdfb7de" kindref="member">result_type</ref><sp/><ref refid="classvigra_1_1FindROISize_1a3611568390db60a6b592467581d58324" kindref="member">operator()</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1406"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindROISize_1a45645fe9212aa13dd60fd2220a155892" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1410"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>return<sp/>current<sp/>size</highlight></codeline>
<codeline lineno="1411"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1412" refid="classvigra_1_1FindROISize_1a7e0490881d1a0a08d62d276071bc7cc7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindROISize_1ad3ae359ebef83ead2aa53e14dcdfb7de" kindref="member">result_type</ref><sp/><ref refid="classvigra_1_1FindROISize_1a7e0490881d1a0a08d62d276071bc7cc7" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1413"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindROISize_1a45645fe9212aa13dd60fd2220a155892" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1417"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>merge<sp/>two<sp/>statistics</highlight></codeline>
<codeline lineno="1418"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1419" refid="classvigra_1_1FindROISize_1a3c3bc092ddbbf9d2d92a29aef7fef2d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindROISize_1a3611568390db60a6b592467581d58324" kindref="member">operator()</ref>(<ref refid="classvigra_1_1FindROISize" kindref="compound" tooltip="Calculate the size of an ROI in an image.">FindROISize</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>o)</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindROISize_1a45645fe9212aa13dd60fd2220a155892" kindref="member">count</ref><sp/>+=<sp/>o.<ref refid="classvigra_1_1FindROISize_1a45645fe9212aa13dd60fd2220a155892" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1424"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>current<sp/>counter</highlight></codeline>
<codeline lineno="1425"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1426" refid="classvigra_1_1FindROISize_1a45645fe9212aa13dd60fd2220a155892" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindROISize_1ad3ae359ebef83ead2aa53e14dcdfb7de" kindref="member">result_type</ref><sp/><ref refid="classvigra_1_1FindROISize_1a45645fe9212aa13dd60fd2220a155892" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUETYPE&gt;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1FunctorTraits" kindref="compound" tooltip="Export associated information for a functor.">FunctorTraits</ref>&lt;<ref refid="classvigra_1_1FindROISize" kindref="compound" tooltip="Calculate the size of an ROI in an image.">FindROISize</ref>&lt;VALUETYPE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;FindROISize&lt;VALUETYPE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isInitializer;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryAnalyser;</highlight></codeline>
<codeline lineno="1437"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FindBoundingRectangle<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1445"><highlight class="comment">/**<sp/>\brief<sp/>Calculate<sp/>the<sp/>bounding<sp/>rectangle<sp/>of<sp/>an<sp/>ROI<sp/>in<sp/>an<sp/>image.</highlight></codeline>
<codeline lineno="1446"><highlight class="comment"></highlight></codeline>
<codeline lineno="1447"><highlight class="comment"><sp/><sp/><sp/><sp/>As<sp/>always<sp/>in<sp/>VIGRA,<sp/>&lt;TT&gt;roiRect.lowerRight&lt;/TT&gt;<sp/>is<sp/>&lt;em&gt;<sp/>just<sp/>outside<sp/>the<sp/>rectangle&lt;/em&gt;.</highlight></codeline>
<codeline lineno="1448"><highlight class="comment"><sp/><sp/><sp/><sp/>That<sp/>is,<sp/>the<sp/>last<sp/>pixel<sp/>actually<sp/>in<sp/>the<sp/>rectangle<sp/>is<sp/>&lt;TT&gt;roiRect.lowerRight<sp/>-<sp/>Diff2D(1,1)&lt;/TT&gt;.</highlight></codeline>
<codeline lineno="1449"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>Functor<sp/>is<sp/>often<sp/>used<sp/>in<sp/>conjunction<sp/>with</highlight></codeline>
<codeline lineno="1450"><highlight class="comment"><sp/><sp/><sp/><sp/>\ref<sp/>ArrayOfRegionStatistics<sp/>to<sp/>find<sp/>the<sp/>bounding<sp/>rectangles</highlight></codeline>
<codeline lineno="1451"><highlight class="comment"><sp/><sp/><sp/><sp/>of<sp/>all<sp/>regions<sp/>in<sp/>a<sp/>labeled<sp/>image.</highlight></codeline>
<codeline lineno="1452"><highlight class="comment"></highlight></codeline>
<codeline lineno="1453"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1454"><highlight class="comment"></highlight></codeline>
<codeline lineno="1455"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryAnalyser&lt;/tt&gt;<sp/>and<sp/>&lt;tt&gt;FunctorTraits::isInitializer&lt;/tt&gt;</highlight></codeline>
<codeline lineno="1456"><highlight class="comment"><sp/><sp/><sp/><sp/>are<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="1457"><highlight class="comment"></highlight></codeline>
<codeline lineno="1458"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1459"><highlight class="comment"></highlight></codeline>
<codeline lineno="1460"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/inspectimage.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="1461"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="1462"><highlight class="comment"></highlight></codeline>
<codeline lineno="1463"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1464"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BImage<sp/>img,<sp/>mask;</highlight></codeline>
<codeline lineno="1465"><highlight class="comment"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="1466"><highlight class="comment"></highlight></codeline>
<codeline lineno="1467"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::FindBoundingRectangle<sp/>roiRect;<sp/><sp/><sp/>//<sp/>init<sp/>functor</highlight></codeline>
<codeline lineno="1468"><highlight class="comment"></highlight></codeline>
<codeline lineno="1469"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Diff2D<sp/>is<sp/>used<sp/>as<sp/>the<sp/>iterator<sp/>for<sp/>the<sp/>source<sp/>image.<sp/>This</highlight></codeline>
<codeline lineno="1470"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>simulates<sp/>an<sp/>image<sp/>where<sp/>each<sp/>pixel<sp/>value<sp/>equals<sp/>the<sp/>pixel&apos;s</highlight></codeline>
<codeline lineno="1471"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>coordinates.<sp/>The<sp/>image<sp/>&apos;mask&apos;<sp/>determines<sp/>the<sp/>ROI.</highlight></codeline>
<codeline lineno="1472"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::inspectImageIf(srcIterRange(Diff2D(0,0),<sp/>(Diff2D)img.size()),</highlight></codeline>
<codeline lineno="1473"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcImage(mask),<sp/>roiRect);</highlight></codeline>
<codeline lineno="1474"><highlight class="comment"></highlight></codeline>
<codeline lineno="1475"><highlight class="comment"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;Upper<sp/>left<sp/>of<sp/>ROI:<sp/>&quot;<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="1476"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>roiRect.upperLeft.x<sp/>&lt;&lt;<sp/>&quot;,<sp/>&quot;<sp/>&lt;&lt;<sp/>roiRect.upperLeft.y<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1477"><highlight class="comment"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;Lower<sp/>right<sp/>of<sp/>ROI:<sp/>&quot;<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="1478"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>roiRect.lowerRight.x<sp/>&lt;&lt;<sp/>&quot;,<sp/>&quot;<sp/>&lt;&lt;<sp/>roiRect.lowerRight.y<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1479"><highlight class="comment"></highlight></codeline>
<codeline lineno="1480"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1481"><highlight class="comment"></highlight></codeline>
<codeline lineno="1482"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483" refid="classvigra_1_1FindBoundingRectangle" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1FindBoundingRectangle" kindref="compound" tooltip="Calculate the bounding rectangle of an ROI in an image.">FindBoundingRectangle</ref></highlight></codeline>
<codeline lineno="1484"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1487"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="1488"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1489" refid="classvigra_1_1FindBoundingRectangle_1a1fa2513a45cc4946146f9d2c633c9b6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1Diff2D" kindref="compound" tooltip="Two dimensional difference vector.">Diff2D</ref><sp/><ref refid="classvigra_1_1FindBoundingRectangle_1a1fa2513a45cc4946146f9d2c633c9b6e" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1491"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functors<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="1492"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1493" refid="classvigra_1_1FindBoundingRectangle_1a4fae1289d57fe4ce84e6ed83cf95ce66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1Rect2D" kindref="compound" tooltip="Two dimensional rectangle.">Rect2D</ref><sp/><ref refid="classvigra_1_1FindBoundingRectangle_1a4fae1289d57fe4ce84e6ed83cf95ce66" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1495"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type</highlight></codeline>
<codeline lineno="1496"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1497" refid="classvigra_1_1FindBoundingRectangle_1ad9f0e1f6ec90dd3417c628b3f30e77c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1Diff2D" kindref="compound" tooltip="Two dimensional difference vector.">Diff2D</ref><sp/><ref refid="classvigra_1_1FindBoundingRectangle_1ad9f0e1f6ec90dd3417c628b3f30e77c0" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1499"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Upper<sp/>left<sp/>of<sp/>the<sp/>region<sp/>as<sp/>seen<sp/>so<sp/>far</highlight></codeline>
<codeline lineno="1500"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1501" refid="classvigra_1_1FindBoundingRectangle_1ab4fd0fcb3210976b2e7ec2395beeea12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Point2D" kindref="compound" tooltip="Two dimensional point or position.">Point2D</ref><sp/><ref refid="classvigra_1_1FindBoundingRectangle_1ab4fd0fcb3210976b2e7ec2395beeea12" kindref="member">upperLeft</ref>;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1503"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Lower<sp/>right<sp/>of<sp/>the<sp/>region<sp/>as<sp/>seen<sp/>so<sp/>far</highlight></codeline>
<codeline lineno="1504"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1505" refid="classvigra_1_1FindBoundingRectangle_1a7ba1eb04aac4b686207158a4b0491107" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Point2D" kindref="compound" tooltip="Two dimensional point or position.">Point2D</ref><sp/><ref refid="classvigra_1_1FindBoundingRectangle_1a7ba1eb04aac4b686207158a4b0491107" kindref="member">lowerRight</ref>;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1507"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>are<sp/>the<sp/>functors<sp/>contents<sp/>valid<sp/>?</highlight></codeline>
<codeline lineno="1508"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1509" refid="classvigra_1_1FindBoundingRectangle_1a28e3c179a86f337095088b3ca02a2b2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindBoundingRectangle_1a28e3c179a86f337095088b3ca02a2b2a" kindref="member">valid</ref>;</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1511"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>init<sp/>rectangle<sp/>to<sp/>invalid<sp/>values</highlight></codeline>
<codeline lineno="1512"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1513" refid="classvigra_1_1FindBoundingRectangle_1ac65af7ee1155a918bf4e0f99cf066d94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindBoundingRectangle_1ac65af7ee1155a918bf4e0f99cf066d94" kindref="member">FindBoundingRectangle</ref>()</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1FindBoundingRectangle_1a28e3c179a86f337095088b3ca02a2b2a" kindref="member">valid</ref>(false)</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1517"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>(re-)init<sp/>functor<sp/>to<sp/>find<sp/>other<sp/>bounds</highlight></codeline>
<codeline lineno="1518"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1519" refid="classvigra_1_1FindBoundingRectangle_1ad20897c5c8bd47f5d4005989bead0e55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindBoundingRectangle_1ad20897c5c8bd47f5d4005989bead0e55" kindref="member">reset</ref>()</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindBoundingRectangle_1a28e3c179a86f337095088b3ca02a2b2a" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1524"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>update<sp/>rectangle<sp/>by<sp/>including<sp/>the<sp/>coordinate<sp/>coord</highlight></codeline>
<codeline lineno="1525"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1526" refid="classvigra_1_1FindBoundingRectangle_1a5ec004fd7f2a0408a060b0f54181b6f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindBoundingRectangle_1a3611568390db60a6b592467581d58324" kindref="member">operator()</ref>(<ref refid="classvigra_1_1Diff2D" kindref="compound" tooltip="Two dimensional difference vector.">argument_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>coord)</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classvigra_1_1FindBoundingRectangle_1a28e3c179a86f337095088b3ca02a2b2a" kindref="member">valid</ref>)</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindBoundingRectangle_1ab4fd0fcb3210976b2e7ec2395beeea12" kindref="member">upperLeft</ref><sp/>=<sp/><ref refid="classvigra_1_1Point2D" kindref="compound" tooltip="Two dimensional point or position.">Point2D</ref>(coord);</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindBoundingRectangle_1a7ba1eb04aac4b686207158a4b0491107" kindref="member">lowerRight</ref><sp/>=<sp/><ref refid="classvigra_1_1Point2D" kindref="compound" tooltip="Two dimensional point or position.">Point2D</ref>(coord<sp/>+<sp/><ref refid="classvigra_1_1Diff2D" kindref="compound" tooltip="Two dimensional difference vector.">Diff2D</ref>(1,1));</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindBoundingRectangle_1a28e3c179a86f337095088b3ca02a2b2a" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindBoundingRectangle_1ab4fd0fcb3210976b2e7ec2395beeea12" kindref="member">upperLeft</ref>.<ref refid="classvigra_1_1Diff2D_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member">x</ref><sp/>=<sp/><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">std::min</ref>(<ref refid="classvigra_1_1FindBoundingRectangle_1ab4fd0fcb3210976b2e7ec2395beeea12" kindref="member">upperLeft</ref>.<ref refid="classvigra_1_1Diff2D_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member">x</ref>,<sp/>coord.<ref refid="classvigra_1_1Diff2D_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindBoundingRectangle_1ab4fd0fcb3210976b2e7ec2395beeea12" kindref="member">upperLeft</ref>.<ref refid="classvigra_1_1Diff2D_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member">y</ref><sp/>=<sp/><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">std::min</ref>(<ref refid="classvigra_1_1FindBoundingRectangle_1ab4fd0fcb3210976b2e7ec2395beeea12" kindref="member">upperLeft</ref>.<ref refid="classvigra_1_1Diff2D_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member">y</ref>,<sp/>coord.<ref refid="classvigra_1_1Diff2D_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindBoundingRectangle_1a7ba1eb04aac4b686207158a4b0491107" kindref="member">lowerRight</ref>.<ref refid="classvigra_1_1Diff2D_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member">x</ref><sp/>=<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">std::max</ref>(<ref refid="classvigra_1_1FindBoundingRectangle_1a7ba1eb04aac4b686207158a4b0491107" kindref="member">lowerRight</ref>.<ref refid="classvigra_1_1Diff2D_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member">x</ref>,<sp/>coord.<ref refid="classvigra_1_1Diff2D_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member">x</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindBoundingRectangle_1a7ba1eb04aac4b686207158a4b0491107" kindref="member">lowerRight</ref>.<ref refid="classvigra_1_1Diff2D_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member">y</ref><sp/>=<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">std::max</ref>(<ref refid="classvigra_1_1FindBoundingRectangle_1a7ba1eb04aac4b686207158a4b0491107" kindref="member">lowerRight</ref>.<ref refid="classvigra_1_1Diff2D_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member">y</ref>,<sp/>coord.<ref refid="classvigra_1_1Diff2D_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member">y</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1543"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>update<sp/>rectangle<sp/>by<sp/>merging<sp/>it<sp/>with<sp/>another<sp/>rectangle</highlight></codeline>
<codeline lineno="1544"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1545" refid="classvigra_1_1FindBoundingRectangle_1acc48148f8b60788d47946ebadea6dbdc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindBoundingRectangle_1a3611568390db60a6b592467581d58324" kindref="member">operator()</ref>(<ref refid="classvigra_1_1FindBoundingRectangle" kindref="compound" tooltip="Calculate the bounding rectangle of an ROI in an image.">FindBoundingRectangle</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>otherRegion)</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classvigra_1_1FindBoundingRectangle_1a28e3c179a86f337095088b3ca02a2b2a" kindref="member">valid</ref>)</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindBoundingRectangle_1ab4fd0fcb3210976b2e7ec2395beeea12" kindref="member">upperLeft</ref><sp/>=<sp/>otherRegion.<ref refid="classvigra_1_1FindBoundingRectangle_1ab4fd0fcb3210976b2e7ec2395beeea12" kindref="member">upperLeft</ref>;</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindBoundingRectangle_1a7ba1eb04aac4b686207158a4b0491107" kindref="member">lowerRight</ref><sp/>=<sp/>otherRegion.<ref refid="classvigra_1_1FindBoundingRectangle_1a7ba1eb04aac4b686207158a4b0491107" kindref="member">lowerRight</ref>;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindBoundingRectangle_1a28e3c179a86f337095088b3ca02a2b2a" kindref="member">valid</ref><sp/>=<sp/>otherRegion.<ref refid="classvigra_1_1FindBoundingRectangle_1a28e3c179a86f337095088b3ca02a2b2a" kindref="member">valid</ref>;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(otherRegion.<ref refid="classvigra_1_1FindBoundingRectangle_1a28e3c179a86f337095088b3ca02a2b2a" kindref="member">valid</ref>)</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindBoundingRectangle_1ab4fd0fcb3210976b2e7ec2395beeea12" kindref="member">upperLeft</ref>.<ref refid="classvigra_1_1Diff2D_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member">x</ref><sp/>=<sp/><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">std::min</ref>(<ref refid="classvigra_1_1FindBoundingRectangle_1ab4fd0fcb3210976b2e7ec2395beeea12" kindref="member">upperLeft</ref>.<ref refid="classvigra_1_1Diff2D_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member">x</ref>,<sp/>otherRegion.<ref refid="classvigra_1_1FindBoundingRectangle_1ab4fd0fcb3210976b2e7ec2395beeea12" kindref="member">upperLeft</ref>.<ref refid="classvigra_1_1Diff2D_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindBoundingRectangle_1ab4fd0fcb3210976b2e7ec2395beeea12" kindref="member">upperLeft</ref>.<ref refid="classvigra_1_1Diff2D_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member">y</ref><sp/>=<sp/><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">std::min</ref>(<ref refid="classvigra_1_1FindBoundingRectangle_1ab4fd0fcb3210976b2e7ec2395beeea12" kindref="member">upperLeft</ref>.<ref refid="classvigra_1_1Diff2D_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member">y</ref>,<sp/>otherRegion.<ref refid="classvigra_1_1FindBoundingRectangle_1ab4fd0fcb3210976b2e7ec2395beeea12" kindref="member">upperLeft</ref>.<ref refid="classvigra_1_1Diff2D_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindBoundingRectangle_1a7ba1eb04aac4b686207158a4b0491107" kindref="member">lowerRight</ref>.<ref refid="classvigra_1_1Diff2D_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member">x</ref><sp/>=<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">std::max</ref>(<ref refid="classvigra_1_1FindBoundingRectangle_1a7ba1eb04aac4b686207158a4b0491107" kindref="member">lowerRight</ref>.<ref refid="classvigra_1_1Diff2D_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member">x</ref>,<sp/>otherRegion.<ref refid="classvigra_1_1FindBoundingRectangle_1a7ba1eb04aac4b686207158a4b0491107" kindref="member">lowerRight</ref>.<ref refid="classvigra_1_1Diff2D_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindBoundingRectangle_1a7ba1eb04aac4b686207158a4b0491107" kindref="member">lowerRight</ref>.<ref refid="classvigra_1_1Diff2D_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member">y</ref><sp/>=<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">std::max</ref>(<ref refid="classvigra_1_1FindBoundingRectangle_1a7ba1eb04aac4b686207158a4b0491107" kindref="member">lowerRight</ref>.<ref refid="classvigra_1_1Diff2D_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member">y</ref>,<sp/>otherRegion.<ref refid="classvigra_1_1FindBoundingRectangle_1a7ba1eb04aac4b686207158a4b0491107" kindref="member">lowerRight</ref>.<ref refid="classvigra_1_1Diff2D_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1562"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Get<sp/>size<sp/>of<sp/>current<sp/>rectangle.</highlight></codeline>
<codeline lineno="1563"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1564" refid="classvigra_1_1FindBoundingRectangle_1ada7e687e2eff4c367496c91daf04e66c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Size2D" kindref="compound" tooltip="Two dimensional size object.">Size2D</ref><sp/><ref refid="classvigra_1_1FindBoundingRectangle_1ada7e687e2eff4c367496c91daf04e66c" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1565"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindBoundingRectangle_1a7ba1eb04aac4b686207158a4b0491107" kindref="member">lowerRight</ref><sp/>-<sp/><ref refid="classvigra_1_1FindBoundingRectangle_1ab4fd0fcb3210976b2e7ec2395beeea12" kindref="member">upperLeft</ref>;</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1569"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Get<sp/>current<sp/>rectangle.<sp/>&lt;TT&gt;result_type::first&lt;/TT&gt;<sp/>is<sp/>the<sp/>upper</highlight></codeline>
<codeline lineno="1570"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>corner<sp/>of<sp/>the<sp/>rectangle,<sp/>&lt;TT&gt;result_type::second&lt;/TT&gt;</highlight></codeline>
<codeline lineno="1571"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>lower<sp/>right.</highlight></codeline>
<codeline lineno="1572"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1573" refid="classvigra_1_1FindBoundingRectangle_1a3611568390db60a6b592467581d58324" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Rect2D" kindref="compound" tooltip="Two dimensional rectangle.">result_type</ref><sp/><ref refid="classvigra_1_1FindBoundingRectangle_1a3611568390db60a6b592467581d58324" kindref="member">operator()</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1574"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1FindBoundingRectangle_1a4fae1289d57fe4ce84e6ed83cf95ce66" kindref="member">result_type</ref>(<ref refid="classvigra_1_1FindBoundingRectangle_1ab4fd0fcb3210976b2e7ec2395beeea12" kindref="member">upperLeft</ref>,<sp/><ref refid="classvigra_1_1FindBoundingRectangle_1a7ba1eb04aac4b686207158a4b0491107" kindref="member">lowerRight</ref>);</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1577"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;FindBoundingRectangle&gt;</highlight></codeline>
<codeline lineno="1581"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;FindBoundingRectangle&gt;</highlight></codeline>
<codeline lineno="1582"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isInitializer;</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryAnalyser;</highlight></codeline>
<codeline lineno="1586"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastValueFunctor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1594"><highlight class="comment">/**<sp/>\brief<sp/>Stores<sp/>and<sp/>returns<sp/>the<sp/>last<sp/>value<sp/>it<sp/>has<sp/>seen.</highlight></codeline>
<codeline lineno="1595"><highlight class="comment"></highlight></codeline>
<codeline lineno="1596"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>Functor<sp/>is<sp/>best<sp/>used<sp/>in<sp/>conjunction<sp/>with</highlight></codeline>
<codeline lineno="1597"><highlight class="comment"><sp/><sp/><sp/><sp/>\ref<sp/>ArrayOfRegionStatistics<sp/>to<sp/>realize<sp/>a<sp/>look-up<sp/>table.</highlight></codeline>
<codeline lineno="1598"><highlight class="comment"></highlight></codeline>
<codeline lineno="1599"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1600"><highlight class="comment"></highlight></codeline>
<codeline lineno="1601"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryAnalyser&lt;/tt&gt;<sp/>and<sp/>&lt;tt&gt;FunctorTraits::isInitializer&lt;/tt&gt;</highlight></codeline>
<codeline lineno="1602"><highlight class="comment"><sp/><sp/><sp/><sp/>are<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="1603"><highlight class="comment"></highlight></codeline>
<codeline lineno="1604"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1605"><highlight class="comment"></highlight></codeline>
<codeline lineno="1606"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/inspectimage.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="1607"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="1608"><highlight class="comment"></highlight></codeline>
<codeline lineno="1609"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1610"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BImage<sp/>img;</highlight></codeline>
<codeline lineno="1611"><highlight class="comment"></highlight></codeline>
<codeline lineno="1612"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::ArrayOfRegionStatistics&lt;LastValueFunctor&lt;unsigned<sp/>char&gt;<sp/>&gt;<sp/>lut(255);</highlight></codeline>
<codeline lineno="1613"><highlight class="comment"></highlight></codeline>
<codeline lineno="1614"><highlight class="comment"><sp/><sp/><sp/><sp/>for(int<sp/>i=0;<sp/>i&lt;256;<sp/>++i)</highlight></codeline>
<codeline lineno="1615"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1616"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lut[i]<sp/>=<sp/>...;<sp/>//<sp/>init<sp/>look-up<sp/>table</highlight></codeline>
<codeline lineno="1617"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1618"><highlight class="comment"></highlight></codeline>
<codeline lineno="1619"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::transformImage(srcImageRange(img),<sp/>destImage(img),<sp/>lut);</highlight></codeline>
<codeline lineno="1620"><highlight class="comment"></highlight></codeline>
<codeline lineno="1621"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1622"><highlight class="comment"></highlight></codeline>
<codeline lineno="1623"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUETYPE&gt;</highlight></codeline>
<codeline lineno="1625" refid="classvigra_1_1LastValueFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1LastValueFunctor" kindref="compound" tooltip="Stores and returns the last value it has seen.">LastValueFunctor</ref></highlight></codeline>
<codeline lineno="1626"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1629"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="1630"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1631" refid="classvigra_1_1LastValueFunctor_1a6d55e4278792f01590981c60ec0a1313" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUETYPE<sp/><ref refid="classvigra_1_1LastValueFunctor_1a6d55e4278792f01590981c60ec0a1313" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1633"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="1634"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1635" refid="classvigra_1_1LastValueFunctor_1ae791128ea87b5ec289170ed2b2566c8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUETYPE<sp/><ref refid="classvigra_1_1LastValueFunctor_1ae791128ea87b5ec289170ed2b2566c8c" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1637"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="1638"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1639" refid="classvigra_1_1LastValueFunctor_1ad81add7f462b51d2bedbccd43c12e32a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUETYPE<sp/><ref refid="classvigra_1_1LastValueFunctor_1ad81add7f462b51d2bedbccd43c12e32a" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1641"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>default<sp/>construction<sp/>of<sp/>value<sp/>(i.e.<sp/>builtin<sp/>types<sp/>will<sp/>be<sp/>set<sp/>to<sp/>zero)</highlight></codeline>
<codeline lineno="1642"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1643" refid="classvigra_1_1LastValueFunctor_1a767062c2067d18088866fc5f355a573c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1LastValueFunctor_1a767062c2067d18088866fc5f355a573c" kindref="member">LastValueFunctor</ref>(<ref refid="classvigra_1_1LastValueFunctor_1a6d55e4278792f01590981c60ec0a1313" kindref="member">argument_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;initial<sp/>=<sp/><ref refid="classvigra_1_1LastValueFunctor_1a6d55e4278792f01590981c60ec0a1313" kindref="member">argument_type</ref>())</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1LastValueFunctor_1aaf5c9ecde825cdeca44414be5121152f" kindref="member">value</ref>(initial)</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1647"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>replace<sp/>value</highlight></codeline>
<codeline lineno="1648"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1649" refid="classvigra_1_1LastValueFunctor_1a5f4a3328d7b29cf2640936bccd9178dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1LastValueFunctor_1a5f4a3328d7b29cf2640936bccd9178dd" kindref="member">operator=</ref>(<ref refid="classvigra_1_1LastValueFunctor_1a6d55e4278792f01590981c60ec0a1313" kindref="member">argument_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)<sp/>{<sp/><ref refid="classvigra_1_1LastValueFunctor_1aaf5c9ecde825cdeca44414be5121152f" kindref="member">value</ref><sp/>=<sp/>v;<sp/>}</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1651"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>reset<sp/>to<sp/>initial<sp/>value<sp/>(the<sp/>same<sp/>as<sp/>after<sp/>default<sp/>construction)</highlight></codeline>
<codeline lineno="1652"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1653" refid="classvigra_1_1LastValueFunctor_1ad20897c5c8bd47f5d4005989bead0e55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1LastValueFunctor_1ad20897c5c8bd47f5d4005989bead0e55" kindref="member">reset</ref>()<sp/>{<sp/><ref refid="classvigra_1_1LastValueFunctor_1aaf5c9ecde825cdeca44414be5121152f" kindref="member">value</ref><sp/>=<sp/>VALUETYPE();<sp/>}</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1655"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>replace<sp/>value</highlight></codeline>
<codeline lineno="1656"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1657" refid="classvigra_1_1LastValueFunctor_1a7efb8704c3fc7036ba86aa1de05be2b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1LastValueFunctor_1a7efb8704c3fc7036ba86aa1de05be2b8" kindref="member">operator()</ref>(<ref refid="classvigra_1_1LastValueFunctor_1a6d55e4278792f01590981c60ec0a1313" kindref="member">argument_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)<sp/>{<sp/><ref refid="classvigra_1_1LastValueFunctor_1aaf5c9ecde825cdeca44414be5121152f" kindref="member">value</ref><sp/>=<sp/>v;<sp/>}</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1659"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>return<sp/>current<sp/>value</highlight></codeline>
<codeline lineno="1660"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1661" refid="classvigra_1_1LastValueFunctor_1a8fee9646b825fab0c0b3b5a24595b26d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1LastValueFunctor_1ae791128ea87b5ec289170ed2b2566c8c" kindref="member">result_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="classvigra_1_1LastValueFunctor_1a8fee9646b825fab0c0b3b5a24595b26d" kindref="member">operator()</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1LastValueFunctor_1aaf5c9ecde825cdeca44414be5121152f" kindref="member">value</ref>;<sp/>}</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1663"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>current<sp/>value</highlight></codeline>
<codeline lineno="1664"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1665" refid="classvigra_1_1LastValueFunctor_1aaf5c9ecde825cdeca44414be5121152f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>VALUETYPE<sp/><ref refid="classvigra_1_1LastValueFunctor_1aaf5c9ecde825cdeca44414be5121152f" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUETYPE&gt;</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1FunctorTraits" kindref="compound" tooltip="Export associated information for a functor.">FunctorTraits</ref>&lt;<ref refid="classvigra_1_1LastValueFunctor" kindref="compound" tooltip="Stores and returns the last value it has seen.">LastValueFunctor</ref>&lt;VALUETYPE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1671"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;LastValueFunctor&lt;VALUETYPE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isInitializer;</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryAnalyser;</highlight></codeline>
<codeline lineno="1676"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceFunctor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1683"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1684"><highlight class="comment">/**<sp/>\brief<sp/>Apply<sp/>a<sp/>functor<sp/>to<sp/>reduce<sp/>the<sp/>dimensionality<sp/>of<sp/>an<sp/>array.</highlight></codeline>
<codeline lineno="1685"><highlight class="comment"></highlight></codeline>
<codeline lineno="1686"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>functor<sp/>can<sp/>be<sp/>used<sp/>to<sp/>emulate<sp/>the<sp/>&lt;tt&gt;reduce&lt;/tt&gt;<sp/>standard<sp/>function<sp/>of</highlight></codeline>
<codeline lineno="1687"><highlight class="comment"><sp/><sp/><sp/><sp/>functional<sp/>programming<sp/>using<sp/>&lt;tt&gt;std::for_each()&lt;/tt&gt;<sp/>or<sp/>&lt;tt&gt;inspectImage()&lt;/tt&gt;</highlight></codeline>
<codeline lineno="1688"><highlight class="comment"><sp/><sp/><sp/><sp/>and<sp/>similar<sp/>functions.<sp/>This<sp/>functor<sp/>is<sp/>initialized<sp/>with<sp/>a<sp/>functor<sp/>encoding</highlight></codeline>
<codeline lineno="1689"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>expression<sp/>to<sp/>be<sp/>applied,<sp/>and<sp/>an<sp/>accumulator<sp/>storing<sp/>the<sp/>current<sp/>state</highlight></codeline>
<codeline lineno="1690"><highlight class="comment"><sp/><sp/><sp/><sp/>of<sp/>the<sp/>reduction.<sp/>For<sp/>each<sp/>element<sp/>of<sp/>the<sp/>array,<sp/>the<sp/>embedded<sp/>functor<sp/>is<sp/>called</highlight></codeline>
<codeline lineno="1691"><highlight class="comment"><sp/><sp/><sp/><sp/>with<sp/>the<sp/>accumulator<sp/>and<sp/>the<sp/>current<sp/>element(s)<sp/>of<sp/>the<sp/>array.<sp/>The<sp/>result</highlight></codeline>
<codeline lineno="1692"><highlight class="comment"><sp/><sp/><sp/><sp/>of<sp/>the<sp/>reduction<sp/>is<sp/>available<sp/>by<sp/>calling<sp/>&lt;tt&gt;reduceFunctor()&lt;/tt&gt;.</highlight></codeline>
<codeline lineno="1693"><highlight class="comment"></highlight></codeline>
<codeline lineno="1694"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1695"><highlight class="comment"></highlight></codeline>
<codeline lineno="1696"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryAnalyser&lt;/tt&gt;,<sp/>&lt;tt&gt;FunctorTraits::isBinaryAnalyser&lt;/tt&gt;</highlight></codeline>
<codeline lineno="1697"><highlight class="comment"><sp/><sp/><sp/><sp/>and<sp/>&lt;tt&gt;FunctorTraits::isInitializer&lt;/tt&gt;</highlight></codeline>
<codeline lineno="1698"><highlight class="comment"><sp/><sp/><sp/><sp/>are<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="1699"><highlight class="comment"></highlight></codeline>
<codeline lineno="1700"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1701"><highlight class="comment"></highlight></codeline>
<codeline lineno="1702"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/inspectimage.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="1703"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="1704"><highlight class="comment"></highlight></codeline>
<codeline lineno="1705"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1706"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BImage<sp/>img;</highlight></codeline>
<codeline lineno="1707"><highlight class="comment"><sp/><sp/><sp/><sp/>...<sp/>//<sp/>fill<sp/>the<sp/>image</highlight></codeline>
<codeline lineno="1708"><highlight class="comment"></highlight></codeline>
<codeline lineno="1709"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>create<sp/>a<sp/>functor<sp/>to<sp/>sum<sp/>the<sp/>elements<sp/>of<sp/>the<sp/>image</highlight></codeline>
<codeline lineno="1710"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::ReduceFunctor&lt;std::plus&lt;int&gt;,<sp/>int&gt;<sp/>sumElements(std::plus&lt;int&gt;,<sp/>0);</highlight></codeline>
<codeline lineno="1711"><highlight class="comment"></highlight></codeline>
<codeline lineno="1712"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::inspectImage(srcImageRange(img),<sp/>sumElements);</highlight></codeline>
<codeline lineno="1713"><highlight class="comment"></highlight></codeline>
<codeline lineno="1714"><highlight class="comment"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;The<sp/>sum<sp/>of<sp/>the<sp/>elements<sp/>&quot;<sp/>&lt;&lt;<sp/>sumElements()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1715"><highlight class="comment"></highlight></codeline>
<codeline lineno="1716"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1717"><highlight class="comment"></highlight></codeline>
<codeline lineno="1718"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Required<sp/>Interface:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1719"><highlight class="comment"></highlight></codeline>
<codeline lineno="1720"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1721"><highlight class="comment"><sp/><sp/><sp/><sp/>FUNCTOR<sp/>f;</highlight></codeline>
<codeline lineno="1722"><highlight class="comment"><sp/><sp/><sp/><sp/>VALUETYPE<sp/>accumulator,<sp/>current1,<sp/>current2;</highlight></codeline>
<codeline lineno="1723"><highlight class="comment"></highlight></codeline>
<codeline lineno="1724"><highlight class="comment"><sp/><sp/><sp/><sp/>f(accumulator,<sp/>current1);<sp/>//<sp/>for<sp/>inspectImage()</highlight></codeline>
<codeline lineno="1725"><highlight class="comment"><sp/><sp/><sp/><sp/>f(accumulator,<sp/>current1,<sp/>current2);<sp/>//<sp/>for<sp/>inspectTwoImages()</highlight></codeline>
<codeline lineno="1726"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1727"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FUNCTOR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUETYPE&gt;</highlight></codeline>
<codeline lineno="1729" refid="classvigra_1_1ReduceFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1ReduceFunctor" kindref="compound" tooltip="Apply a functor to reduce the dimensionality of an array.">ReduceFunctor</ref></highlight></codeline>
<codeline lineno="1730"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/>FUNCTOR<sp/>f_;</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/>VALUETYPE<sp/>start_,<sp/>accumulator_;</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1735"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="1736"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>used<sp/>as<sp/>a<sp/>unary<sp/>inspector.</highlight></codeline>
<codeline lineno="1737"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(This<sp/>is<sp/>not<sp/>strictly<sp/>correct<sp/>since<sp/>the<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="1738"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>actually<sp/>a<sp/>template<sp/>parameter.)</highlight></codeline>
<codeline lineno="1739"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1740" refid="classvigra_1_1ReduceFunctor_1a6d55e4278792f01590981c60ec0a1313" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUETYPE<sp/><ref refid="classvigra_1_1ReduceFunctor_1a6d55e4278792f01590981c60ec0a1313" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1742"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>first<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="1743"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>used<sp/>as<sp/>a<sp/>binary<sp/>inspector.</highlight></codeline>
<codeline lineno="1744"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(This<sp/>is<sp/>not<sp/>strictly<sp/>correct<sp/>since<sp/>the<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="1745"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>actually<sp/>a<sp/>template<sp/>parameter.)</highlight></codeline>
<codeline lineno="1746"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1747" refid="classvigra_1_1ReduceFunctor_1a227d9f9e0d316b5771e73c3734157fc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUETYPE<sp/><ref refid="classvigra_1_1ReduceFunctor_1a227d9f9e0d316b5771e73c3734157fc0" kindref="member">first_argument_type</ref>;</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1749"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>second<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="1750"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>used<sp/>as<sp/>a<sp/>binary<sp/>inspector.</highlight></codeline>
<codeline lineno="1751"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(This<sp/>is<sp/>not<sp/>strictly<sp/>correct<sp/>since<sp/>the<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="1752"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>actually<sp/>a<sp/>template<sp/>parameter.)</highlight></codeline>
<codeline lineno="1753"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1754" refid="classvigra_1_1ReduceFunctor_1a3925db7eedea86589c36e0029e46bb04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUETYPE<sp/><ref refid="classvigra_1_1ReduceFunctor_1a3925db7eedea86589c36e0029e46bb04" kindref="member">second_argument_type</ref>;</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1756"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="1757"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1758" refid="classvigra_1_1ReduceFunctor_1ae791128ea87b5ec289170ed2b2566c8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUETYPE<sp/><ref refid="classvigra_1_1ReduceFunctor_1ae791128ea87b5ec289170ed2b2566c8c" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1760"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>create<sp/>with<sp/>the<sp/>given<sp/>functor<sp/>and<sp/>initial<sp/>value<sp/>\a<sp/>initial</highlight></codeline>
<codeline lineno="1761"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>the<sp/>accumulator.</highlight></codeline>
<codeline lineno="1762"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1763" refid="classvigra_1_1ReduceFunctor_1ad0050856787414ea2a7d7532c92b0ac5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ReduceFunctor_1ad0050856787414ea2a7d7532c92b0ac5" kindref="member">ReduceFunctor</ref>(FUNCTOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>f,<sp/>VALUETYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>initial)</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>f_(f),</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start_(initial),</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>accumulator_(initial)</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1769"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Reset<sp/>accumulator<sp/>to<sp/>the<sp/>initial<sp/>value.</highlight></codeline>
<codeline lineno="1770"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1771" refid="classvigra_1_1ReduceFunctor_1ad20897c5c8bd47f5d4005989bead0e55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ReduceFunctor_1ad20897c5c8bd47f5d4005989bead0e55" kindref="member">reset</ref>()</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>accumulator_<sp/>=<sp/>start_;<sp/>}</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1774"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Use<sp/>binary<sp/>functor<sp/>to<sp/>connect<sp/>given<sp/>value<sp/>with<sp/>the<sp/>accumulator.</highlight></codeline>
<codeline lineno="1775"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>accumulator<sp/>is<sp/>used<sp/>as<sp/>the<sp/>first<sp/>argument,<sp/>the<sp/>value<sp/>\a<sp/>v</highlight></codeline>
<codeline lineno="1776"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>as<sp/>the<sp/>second.</highlight></codeline>
<codeline lineno="1777"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1779" refid="classvigra_1_1ReduceFunctor_1a6805651eb753b34dec1d15bab6a3ca6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ReduceFunctor_1a8fee9646b825fab0c0b3b5a24595b26d" kindref="member">operator()</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accumulator_<sp/>=<sp/>f_(accumulator_,<sp/>v);</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1784"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Use<sp/>ternary<sp/>functor<sp/>to<sp/>connect<sp/>given<sp/>values<sp/>with<sp/>accumulator.</highlight></codeline>
<codeline lineno="1785"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>accumulator<sp/>is<sp/>used<sp/>as<sp/>the<sp/>first<sp/>argument,<sp/>the<sp/>values<sp/>\a<sp/>v1</highlight></codeline>
<codeline lineno="1786"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ans<sp/>\a<sp/>v2<sp/>as<sp/>the<sp/>second<sp/>and<sp/>third.</highlight></codeline>
<codeline lineno="1787"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="1789" refid="classvigra_1_1ReduceFunctor_1ad923401447609a95a9e79686188936af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ReduceFunctor_1a8fee9646b825fab0c0b3b5a24595b26d" kindref="member">operator()</ref>(T1<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v1,<sp/>T2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v2)</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accumulator_<sp/>=<sp/>f_(accumulator_,<sp/>v1,<sp/>v2);</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1794"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>return<sp/>current<sp/>value</highlight></codeline>
<codeline lineno="1795"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1796" refid="classvigra_1_1ReduceFunctor_1a8fee9646b825fab0c0b3b5a24595b26d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ReduceFunctor_1ae791128ea87b5ec289170ed2b2566c8c" kindref="member">result_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="classvigra_1_1ReduceFunctor_1a8fee9646b825fab0c0b3b5a24595b26d" kindref="member">operator()</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1797"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>accumulator_;<sp/>}</highlight></codeline>
<codeline lineno="1798"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FUNCTOR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUETYPE&gt;</highlight></codeline>
<codeline lineno="1801"><highlight class="normal">ReduceFunctor&lt;FUNCTOR,<sp/>VALUETYPE&gt;</highlight></codeline>
<codeline lineno="1802"><highlight class="normal">reduceFunctor(FUNCTOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>f,<sp/>VALUETYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>initial)</highlight></codeline>
<codeline lineno="1803"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ReduceFunctor&lt;FUNCTOR,<sp/>VALUETYPE&gt;(f,<sp/>initial);</highlight></codeline>
<codeline lineno="1805"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FUNCTOR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUETYPE&gt;</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;ReduceFunctor&lt;FUNCTOR,<sp/>VALUETYPE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1809"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;ReduceFunctor&lt;FUNCTOR,<sp/>VALUETYPE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1810"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isInitializer;</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryAnalyser;</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isBinaryAnalyser;</highlight></codeline>
<codeline lineno="1815"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ArrayOfRegionStatistics<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1823"><highlight class="comment">/**<sp/>\brief<sp/>Calculate<sp/>statistics<sp/>for<sp/>all<sp/>regions<sp/>of<sp/>a<sp/>labeled<sp/>image.</highlight></codeline>
<codeline lineno="1824"><highlight class="comment"></highlight></codeline>
<codeline lineno="1825"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>Functor<sp/>encapsulates<sp/>an<sp/>array<sp/>of<sp/>statistics<sp/>functors,<sp/>one</highlight></codeline>
<codeline lineno="1826"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>each<sp/>label,<sp/>and<sp/>selects<sp/>the<sp/>one<sp/>to<sp/>be<sp/>updated<sp/>according<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="1827"><highlight class="comment"><sp/><sp/><sp/><sp/>pixel&apos;s<sp/>label.</highlight></codeline>
<codeline lineno="1828"><highlight class="comment"></highlight></codeline>
<codeline lineno="1829"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1830"><highlight class="comment"></highlight></codeline>
<codeline lineno="1831"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isBinaryAnalyser&lt;/tt&gt;<sp/>and<sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;</highlight></codeline>
<codeline lineno="1832"><highlight class="comment"><sp/><sp/><sp/><sp/>are<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="1833"><highlight class="comment"></highlight></codeline>
<codeline lineno="1834"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1835"><highlight class="comment"></highlight></codeline>
<codeline lineno="1836"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/inspectimage.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="1837"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="1838"><highlight class="comment"></highlight></codeline>
<codeline lineno="1839"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1840"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BImage<sp/>img;</highlight></codeline>
<codeline lineno="1841"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::IImage<sp/>labels;</highlight></codeline>
<codeline lineno="1842"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>max_label;</highlight></codeline>
<codeline lineno="1843"><highlight class="comment"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="1844"><highlight class="comment"></highlight></codeline>
<codeline lineno="1845"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>init<sp/>functor<sp/>as<sp/>an<sp/>array<sp/>of<sp/>&apos;max_label&apos;<sp/>FindMinMax-Functors</highlight></codeline>
<codeline lineno="1846"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::ArrayOfRegionStatistics&lt;vigra::FindMinMax&lt;vigra::BImage::PixelType&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1847"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minmax(max_label);</highlight></codeline>
<codeline lineno="1848"><highlight class="comment"></highlight></codeline>
<codeline lineno="1849"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::inspectTwoImages(srcImageRange(img),<sp/>srcImage(labels),<sp/>minmax);</highlight></codeline>
<codeline lineno="1850"><highlight class="comment"></highlight></codeline>
<codeline lineno="1851"><highlight class="comment"><sp/><sp/><sp/><sp/>for(int<sp/>i=0;<sp/>i&lt;=<sp/>max_label;<sp/>++i)</highlight></codeline>
<codeline lineno="1852"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1853"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;Max<sp/>gray<sp/>level<sp/>of<sp/>region<sp/>&quot;<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>&quot;:<sp/>&quot;</highlight></codeline>
<codeline lineno="1854"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>minmax.region[i].max<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="1855"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1856"><highlight class="comment"></highlight></codeline>
<codeline lineno="1857"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>init<sp/>functor<sp/>as<sp/>an<sp/>array<sp/>of<sp/>&apos;max_label&apos;<sp/>FindAverage-Functors</highlight></codeline>
<codeline lineno="1858"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::ArrayOfRegionStatistics&lt;vigra::FindAverage&lt;vigra::BImage::PixelType&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1859"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>average(max_label);</highlight></codeline>
<codeline lineno="1860"><highlight class="comment"></highlight></codeline>
<codeline lineno="1861"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::inspectTwoImages(srcImageRange(img),<sp/>srcImage(labels),<sp/>average);</highlight></codeline>
<codeline lineno="1862"><highlight class="comment"></highlight></codeline>
<codeline lineno="1863"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>write<sp/>back<sp/>the<sp/>average<sp/>of<sp/>each<sp/>region<sp/>into<sp/>the<sp/>original<sp/>image</highlight></codeline>
<codeline lineno="1864"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::transformImage(srcImageRange(labels),<sp/>destImage(img),<sp/>average);</highlight></codeline>
<codeline lineno="1865"><highlight class="comment"></highlight></codeline>
<codeline lineno="1866"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1867"><highlight class="comment"></highlight></codeline>
<codeline lineno="1868"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Required<sp/>Interface:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1869"><highlight class="comment"></highlight></codeline>
<codeline lineno="1870"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1871"><highlight class="comment"><sp/><sp/><sp/><sp/>RegionStatistics<sp/>region;</highlight></codeline>
<codeline lineno="1872"><highlight class="comment"><sp/><sp/><sp/><sp/>RegionStatistics::argument_type<sp/>a;</highlight></codeline>
<codeline lineno="1873"><highlight class="comment"><sp/><sp/><sp/><sp/>RegionStatistics::result_type<sp/>r;</highlight></codeline>
<codeline lineno="1874"><highlight class="comment"></highlight></codeline>
<codeline lineno="1875"><highlight class="comment"><sp/><sp/><sp/><sp/>region(a);<sp/><sp/><sp/><sp/><sp/>//<sp/>update<sp/>statistics</highlight></codeline>
<codeline lineno="1876"><highlight class="comment"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>region();<sp/><sp/>//<sp/>return<sp/>statistics</highlight></codeline>
<codeline lineno="1877"><highlight class="comment"></highlight></codeline>
<codeline lineno="1878"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1879"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RegionStatistics,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LabelType<sp/>=<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="1881" refid="classvigra_1_1ArrayOfRegionStatistics" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1ArrayOfRegionStatistics" kindref="compound" tooltip="Calculate statistics for all regions of a labeled image.">ArrayOfRegionStatistics</ref></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>detail::get_extra_passes&lt;RegionStatistics&gt;</highlight></codeline>
<codeline lineno="1883"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;RegionStatistics&gt;<sp/>RegionArray;</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1887"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>argument<sp/>type<sp/>of<sp/>the<sp/>contained<sp/>statistics<sp/>object</highlight></codeline>
<codeline lineno="1888"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>becomes<sp/>first<sp/>argument<sp/>of<sp/>the<sp/>analyser</highlight></codeline>
<codeline lineno="1889"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1890" refid="classvigra_1_1ArrayOfRegionStatistics_1a207bb151f0dbbde769fee862fd244ce6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RegionStatistics::argument_type<sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1a207bb151f0dbbde769fee862fd244ce6" kindref="member">first_argument_type</ref>;</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1892"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>label<sp/>type<sp/>is<sp/>used<sp/>to<sp/>determine<sp/>the<sp/>region<sp/>to<sp/>be<sp/>updated</highlight></codeline>
<codeline lineno="1893"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1894" refid="classvigra_1_1ArrayOfRegionStatistics_1ac7daf294184d1fc72b7131f510a4de12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>LabelType<sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1ac7daf294184d1fc72b7131f510a4de12" kindref="member">second_argument_type</ref>;</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1896"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>label<sp/>type<sp/>is<sp/>also<sp/>used<sp/>to<sp/>determine<sp/>the<sp/>region<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="1897"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returned<sp/>by<sp/>the<sp/>1<sp/>argument<sp/>operator()</highlight></codeline>
<codeline lineno="1898"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1899" refid="classvigra_1_1ArrayOfRegionStatistics_1adea4a227d2d504178152724c548968e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>LabelType<sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1adea4a227d2d504178152724c548968e3" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1901"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>result<sp/>type<sp/>of<sp/>the<sp/>contained<sp/>statistics<sp/>object</highlight></codeline>
<codeline lineno="1902"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>becomes<sp/>result<sp/>type<sp/>of<sp/>the<sp/>analyser</highlight></codeline>
<codeline lineno="1903"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1904" refid="classvigra_1_1ArrayOfRegionStatistics_1aa4ffadb79e0192db780319236996235c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RegionStatistics::result_type<sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1aa4ffadb79e0192db780319236996235c" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1906"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>value<sp/>type<sp/>of<sp/>the<sp/>array:<sp/>the<sp/>contained<sp/>statistics<sp/>object.</highlight></codeline>
<codeline lineno="1907"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;Note:&lt;/b&gt;<sp/>this<sp/>definition<sp/>was<sp/>different<sp/>in<sp/>older</highlight></codeline>
<codeline lineno="1908"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VIGRA<sp/>versions.<sp/>The<sp/>old<sp/>definition<sp/>was<sp/>wrong.</highlight></codeline>
<codeline lineno="1909"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1910" refid="classvigra_1_1ArrayOfRegionStatistics_1afffa4d5af24fc64dbd16ade7d40f50df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>RegionStatistics<sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1afffa4d5af24fc64dbd16ade7d40f50df" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1912"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>array&apos;s<sp/>reference<sp/>type</highlight></codeline>
<codeline lineno="1913"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1914" refid="classvigra_1_1ArrayOfRegionStatistics_1af41656f34098ce37e9943e68fde61878" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>RegionStatistics<sp/>&amp;<sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1af41656f34098ce37e9943e68fde61878" kindref="member">reference</ref>;</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1916"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>array&apos;s<sp/>const<sp/>reference<sp/>type</highlight></codeline>
<codeline lineno="1917"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1918" refid="classvigra_1_1ArrayOfRegionStatistics_1adebe6d141572d11bbcb965288a4efe30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>RegionStatistics<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1adebe6d141572d11bbcb965288a4efe30" kindref="member">const_reference</ref>;</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1920"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>type<sp/>to<sp/>iterate<sp/>over<sp/>the<sp/>statistics<sp/>array</highlight></codeline>
<codeline lineno="1921"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1922" refid="classvigra_1_1ArrayOfRegionStatistics_1af60437ea93dce79095c79c0766a57eaf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RegionArray::iterator<sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1af60437ea93dce79095c79c0766a57eaf" kindref="member">iterator</ref>;</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1924"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>type<sp/>to<sp/>iterate<sp/>over<sp/>a<sp/>const<sp/>statistics<sp/>array</highlight></codeline>
<codeline lineno="1925"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1926" refid="classvigra_1_1ArrayOfRegionStatistics_1a96706ea4127db66e99f16c2a212a1f66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RegionArray::const_iterator<sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1a96706ea4127db66e99f16c2a212a1f66" kindref="member">const_iterator</ref>;</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1928"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>init<sp/>array<sp/>of<sp/>RegionStatistics<sp/>with<sp/>default<sp/>size<sp/>0.</highlight></codeline>
<codeline lineno="1929"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1930" refid="classvigra_1_1ArrayOfRegionStatistics_1aa2ac52ceb1cc4397a1f7c350a05552b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1aa2ac52ceb1cc4397a1f7c350a05552b0" kindref="member">ArrayOfRegionStatistics</ref>()</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1933"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>init<sp/>array<sp/>of<sp/>RegionStatistics<sp/>with<sp/>index<sp/>domain</highlight></codeline>
<codeline lineno="1934"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0...max_region_label.</highlight></codeline>
<codeline lineno="1935"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1936" refid="classvigra_1_1ArrayOfRegionStatistics_1a33978f4158a24b8a9d39941f7a7f8f6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1aa2ac52ceb1cc4397a1f7c350a05552b0" kindref="member">ArrayOfRegionStatistics</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_region_label)</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>regions(max_region_label+1)</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1940"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>resize<sp/>array<sp/>to<sp/>new<sp/>index<sp/>domain<sp/>0...max_region_label.</highlight></codeline>
<codeline lineno="1941"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>All<sp/>bin<sp/>are<sp/>re-initialized.</highlight></codeline>
<codeline lineno="1942"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1943" refid="classvigra_1_1ArrayOfRegionStatistics_1ab83257c91c01ba0ff4a1d73b50ffa7f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1ab83257c91c01ba0ff4a1d73b50ffa7f1" kindref="member">resize</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_region_label)</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegionArray<sp/>newRegions(max_region_label+1);</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>regions.swap(newRegions);</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1949"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>reset<sp/>the<sp/>contained<sp/>functors<sp/>to<sp/>their<sp/>initial<sp/>state.</highlight></codeline>
<codeline lineno="1950"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1951" refid="classvigra_1_1ArrayOfRegionStatistics_1ad20897c5c8bd47f5d4005989bead0e55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1ad20897c5c8bd47f5d4005989bead0e55" kindref="member">reset</ref>()</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegionArray<sp/>newRegions(regions.size());</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>regions.swap(newRegions);</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1957"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>update<sp/>regions<sp/>statistics<sp/>for<sp/>region<sp/>&lt;TT&gt;label&lt;/TT&gt;.<sp/>The<sp/>label<sp/>type</highlight></codeline>
<codeline lineno="1958"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>converted<sp/>to<sp/>&lt;TT&gt;unsigned<sp/>int&lt;/TT&gt;.</highlight></codeline>
<codeline lineno="1959"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1960" refid="classvigra_1_1ArrayOfRegionStatistics_1a150e39ea7734375916b33becc494cba6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1a150e39ea7734375916b33becc494cba6" kindref="member">operator()</ref>(<ref refid="classvigra_1_1ArrayOfRegionStatistics_1a207bb151f0dbbde769fee862fd244ce6" kindref="member">first_argument_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v,<sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1ac7daf294184d1fc72b7131f510a4de12" kindref="member">second_argument_type</ref><sp/>label)<sp/>{</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>regions[</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(label)](v);</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1964"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>merge<sp/>second<sp/>region<sp/>into<sp/>first</highlight></codeline>
<codeline lineno="1965"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1966" refid="classvigra_1_1ArrayOfRegionStatistics_1acd91a7ece856fa9edc859594e049fa5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1acd91a7ece856fa9edc859594e049fa5b" kindref="member">merge</ref>(<ref refid="classvigra_1_1ArrayOfRegionStatistics_1adea4a227d2d504178152724c548968e3" kindref="member">argument_type</ref><sp/>label1,<sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1adea4a227d2d504178152724c548968e3" kindref="member">argument_type</ref><sp/>label2)<sp/>{</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>regions[</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(label1)](regions[static_cast&lt;unsigned<sp/>int&gt;(label2)]);</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1970"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>ask<sp/>for<sp/>maximal<sp/>index<sp/>(label)<sp/>allowed</highlight></codeline>
<codeline lineno="1971"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1972" refid="classvigra_1_1ArrayOfRegionStatistics_1a7f4f7f18b3d7f2ebbe9360036b9585d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1a7f4f7f18b3d7f2ebbe9360036b9585d9" kindref="member">maxRegionLabel</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1973"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1a90ca964ebcc1b02bbcde225edd49e812" kindref="member">size</ref>()<sp/>-<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1975"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>ask<sp/>for<sp/>array<sp/>size<sp/>(i.e.<sp/>maxRegionLabel()<sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="1976"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1977" refid="classvigra_1_1ArrayOfRegionStatistics_1a90ca964ebcc1b02bbcde225edd49e812" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1a90ca964ebcc1b02bbcde225edd49e812" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1978"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>regions.size();<sp/>}</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1980"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>access<sp/>the<sp/>statistics<sp/>for<sp/>a<sp/>region<sp/>via<sp/>its<sp/>label.<sp/>The<sp/>label<sp/>type</highlight></codeline>
<codeline lineno="1981"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>converted<sp/>to<sp/>&lt;TT&gt;unsigned<sp/>int&lt;/TT&gt;.</highlight></codeline>
<codeline lineno="1982"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1983" refid="classvigra_1_1ArrayOfRegionStatistics_1a3105722f0909ceb522a910f31861b28f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1aa4ffadb79e0192db780319236996235c" kindref="member">result_type</ref><sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1a150e39ea7734375916b33becc494cba6" kindref="member">operator()</ref>(<ref refid="classvigra_1_1ArrayOfRegionStatistics_1adea4a227d2d504178152724c548968e3" kindref="member">argument_type</ref><sp/>label)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1984"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>regions[</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(label)]();<sp/>}</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1986"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>read<sp/>the<sp/>statistics<sp/>functor<sp/>for<sp/>a<sp/>region<sp/>via<sp/>its<sp/>label</highlight></codeline>
<codeline lineno="1987"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1988" refid="classvigra_1_1ArrayOfRegionStatistics_1a3422e63aa337d00ce57b63b6b9d93b8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1adebe6d141572d11bbcb965288a4efe30" kindref="member">const_reference</ref><sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1a3422e63aa337d00ce57b63b6b9d93b8a" kindref="member">operator[]</ref>(<ref refid="classvigra_1_1ArrayOfRegionStatistics_1adea4a227d2d504178152724c548968e3" kindref="member">argument_type</ref><sp/>label)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1989"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>regions[</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(label)];<sp/>}</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1991"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>access<sp/>the<sp/>statistics<sp/>functor<sp/>for<sp/>a<sp/>region<sp/>via<sp/>its<sp/>label</highlight></codeline>
<codeline lineno="1992"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1993" refid="classvigra_1_1ArrayOfRegionStatistics_1a52fdd0b13796fcbb57d28df59e5992a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1af41656f34098ce37e9943e68fde61878" kindref="member">reference</ref><sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1a3422e63aa337d00ce57b63b6b9d93b8a" kindref="member">operator[]</ref>(<ref refid="classvigra_1_1ArrayOfRegionStatistics_1adea4a227d2d504178152724c548968e3" kindref="member">argument_type</ref><sp/>label)</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>regions[</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(label)];<sp/>}</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1996"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>iterator<sp/>to<sp/>the<sp/>begin<sp/>of<sp/>the<sp/>region<sp/>array</highlight></codeline>
<codeline lineno="1997"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1998" refid="classvigra_1_1ArrayOfRegionStatistics_1ad69bd11391be1a1dba5c8202259664f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1af60437ea93dce79095c79c0766a57eaf" kindref="member">iterator</ref><sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>()</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>regions.begin();<sp/>}</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2001"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>const<sp/>iterator<sp/>to<sp/>the<sp/>begin<sp/>of<sp/>the<sp/>region<sp/>array</highlight></codeline>
<codeline lineno="2002"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2003" refid="classvigra_1_1ArrayOfRegionStatistics_1aa4b02d4f1a8500fb07a551069060709f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1a96706ea4127db66e99f16c2a212a1f66" kindref="member">const_iterator</ref><sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2004"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>regions.begin();<sp/>}</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2006"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>iterator<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>region<sp/>array</highlight></codeline>
<codeline lineno="2007"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2008" refid="classvigra_1_1ArrayOfRegionStatistics_1acad38d52497a975bfb6f2f6acd76631f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1af60437ea93dce79095c79c0766a57eaf" kindref="member">iterator</ref><sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1acad38d52497a975bfb6f2f6acd76631f" kindref="member">end</ref>()</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>regions.end();<sp/>}</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2011"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>const<sp/>iterator<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>region<sp/>array</highlight></codeline>
<codeline lineno="2012"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2013" refid="classvigra_1_1ArrayOfRegionStatistics_1a350132543d80a1c1e5be844e6d2878ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1a96706ea4127db66e99f16c2a212a1f66" kindref="member">const_iterator</ref><sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1acad38d52497a975bfb6f2f6acd76631f" kindref="member">end</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2014"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>regions.end();<sp/>}</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2016"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>prepare<sp/>next<sp/>pass<sp/>for<sp/>multi-pass<sp/>RegionStatistics<sp/>types</highlight></codeline>
<codeline lineno="2017"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2018" refid="classvigra_1_1ArrayOfRegionStatistics_1a7565d6d119fa015553ceaba2091b1e50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1a7565d6d119fa015553ceaba2091b1e50" kindref="member">calc_sync</ref>()</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classvigra_1_1ArrayOfRegionStatistics_1af60437ea93dce79095c79c0766a57eaf" kindref="member">iterator</ref><sp/>j<sp/>=<sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>();<sp/>j<sp/>!=<sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1acad38d52497a975bfb6f2f6acd76631f" kindref="member">end</ref>();<sp/>++j)</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;sync(*j);</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update:<sp/>passes<sp/>&gt;=<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">pass_n_dispatch</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics" kindref="compound" tooltip="Calculate statistics for all regions of a labeled image.">ArrayOfRegionStatistics</ref><sp/>&amp;<sp/>x;</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass_number;</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass_n_dispatch(<ref refid="classvigra_1_1ArrayOfRegionStatistics" kindref="compound" tooltip="Calculate statistics for all regions of a labeled image.">ArrayOfRegionStatistics</ref><sp/>&amp;<sp/>a,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>x(a),<sp/>pass_number(n)<sp/>{}</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>S&gt;<sp/></highlight><highlight class="comment">//<sp/>instantiate<sp/>only<sp/>when<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1a150e39ea7734375916b33becc494cba6" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ArrayOfRegionStatistics_1a207bb151f0dbbde769fee862fd244ce6" kindref="member">first_argument_type</ref><sp/>&amp;<sp/>v,<sp/>S<sp/>label)</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.regions[</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(label)].updatePassN(v,<sp/>pass_number);</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>N&gt;<sp/></highlight><highlight class="comment">//<sp/>instantiate<sp/>only<sp/>when<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/>pass_n_dispatch<sp/>pass_n(N<sp/>n)</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>2<sp/>||<sp/>static_cast&lt;unsigned&gt;(n)<sp/>&gt;<sp/>this-&gt;max_passes)</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra_fail(</highlight><highlight class="stringliteral">&quot;ArrayOfRegionStatistics::pass_n():<sp/>inconsistent<sp/>use.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pass_n_dispatch(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>n);</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"></highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;RegionStatistics&gt;<sp/>regions;</highlight></codeline>
<codeline lineno="2045"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"></highlight></codeline>
<codeline lineno="2047"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>RegionStatistics,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>LabelType&gt;</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;ArrayOfRegionStatistics&lt;RegionStatistics,<sp/>LabelType&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="2049"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;ArrayOfRegionStatistics&lt;RegionStatistics,<sp/>LabelType&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="2050"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isBinaryAnalyser;</highlight></codeline>
<codeline lineno="2054"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2056"><highlight class="comment">//@}</highlight></codeline>
<codeline lineno="2057"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2058"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>vigra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2059"><highlight class="normal"></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>VIGRA_INSPECTIMAGE_HXX</highlight></codeline>
    </programlisting>
    <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/inspectimage.hxx"/>
  </compounddef>
</doxygen>
