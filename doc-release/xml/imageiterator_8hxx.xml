<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="imageiterator_8hxx" kind="file">
    <compoundname>imageiterator.hxx</compoundname>
    <includes refid="utilities_8hxx" local="yes">utilities.hxx</includes>
    <includes refid="accessor_8hxx" local="yes">accessor.hxx</includes>
    <includes refid="iteratortraits_8hxx" local="yes">iteratortraits.hxx</includes>
    <includes refid="metaprogramming_8hxx" local="yes">metaprogramming.hxx</includes>
    <includedby refid="basicimageview_8hxx" local="yes">vigra/basicimageview.hxx</includedby>
    <includedby refid="multi__array_8hxx" local="yes">vigra/multi_array.hxx</includedby>
    <incdepgraph>
      <node id="2835">
        <label>functional</label>
      </node>
      <node id="2813">
        <label>limits</label>
      </node>
      <node id="2827">
        <label>sized_int.hxx</label>
        <link refid="sized__int_8hxx_source"/>
        <childnode refid="2811" relation="include">
        </childnode>
        <childnode refid="2813" relation="include">
        </childnode>
      </node>
      <node id="2821">
        <label>iterator</label>
      </node>
      <node id="2834">
        <label>inspector_passes.hxx</label>
        <link refid="inspector__passes_8hxx_source"/>
        <childnode refid="2811" relation="include">
        </childnode>
      </node>
      <node id="2828">
        <label>promote_traits.hxx</label>
        <link refid="promote__traits_8hxx_source"/>
      </node>
      <node id="2833">
        <label>algorithm.hxx</label>
        <link refid="algorithm_8hxx_source"/>
        <childnode refid="2827" relation="include">
        </childnode>
        <childnode refid="2824" relation="include">
        </childnode>
        <childnode refid="2834" relation="include">
        </childnode>
        <childnode refid="2814" relation="include">
        </childnode>
        <childnode refid="2835" relation="include">
        </childnode>
        <childnode refid="2821" relation="include">
        </childnode>
      </node>
      <node id="2818">
        <label>cmath</label>
      </node>
      <node id="2807">
        <label>stdexcept</label>
      </node>
      <node id="2820">
        <label>iteratortags.hxx</label>
        <link refid="iteratortags_8hxx_source"/>
        <childnode refid="2821" relation="include">
        </childnode>
      </node>
      <node id="2810">
        <label>string</label>
      </node>
      <node id="2822">
        <label>iteratortraits.hxx</label>
        <link refid="iteratortraits_8hxx_source"/>
        <childnode refid="2823" relation="include">
        </childnode>
        <childnode refid="2829" relation="include">
        </childnode>
      </node>
      <node id="2825">
        <label>cfloat</label>
      </node>
      <node id="2804">
        <label>utilities.hxx</label>
        <link refid="utilities_8hxx_source"/>
        <childnode refid="2805" relation="include">
        </childnode>
        <childnode refid="2808" relation="include">
        </childnode>
        <childnode refid="2811" relation="include">
        </childnode>
        <childnode refid="2815" relation="include">
        </childnode>
        <childnode refid="2817" relation="include">
        </childnode>
        <childnode refid="2831" relation="include">
        </childnode>
        <childnode refid="2810" relation="include">
        </childnode>
        <childnode refid="2809" relation="include">
        </childnode>
      </node>
      <node id="2806">
        <label>vigra/configVersion.hxx</label>
        <link refid="configVersion_8hxx_source"/>
      </node>
      <node id="2815">
        <label>tuple.hxx</label>
        <link refid="tuple_8hxx_source"/>
        <childnode refid="2816" relation="include">
        </childnode>
      </node>
      <node id="2831">
        <label>mathutil.hxx</label>
        <link refid="mathutil_8hxx_source"/>
        <childnode refid="2818" relation="include">
        </childnode>
        <childnode refid="2832" relation="include">
        </childnode>
        <childnode refid="2826" relation="include">
        </childnode>
        <childnode refid="2805" relation="include">
        </childnode>
        <childnode refid="2808" relation="include">
        </childnode>
        <childnode refid="2815" relation="include">
        </childnode>
        <childnode refid="2827" relation="include">
        </childnode>
        <childnode refid="2824" relation="include">
        </childnode>
        <childnode refid="2833" relation="include">
        </childnode>
      </node>
      <node id="2805">
        <label>config.hxx</label>
        <link refid="config_8hxx_source"/>
        <childnode refid="2806" relation="include">
        </childnode>
        <childnode refid="2807" relation="include">
        </childnode>
      </node>
      <node id="2824">
        <label>numerictraits.hxx</label>
        <link refid="numerictraits_8hxx_source"/>
        <childnode refid="2812" relation="include">
        </childnode>
        <childnode refid="2813" relation="include">
        </childnode>
        <childnode refid="2825" relation="include">
        </childnode>
        <childnode refid="2826" relation="include">
        </childnode>
        <childnode refid="2811" relation="include">
        </childnode>
        <childnode refid="2827" relation="include">
        </childnode>
        <childnode refid="2828" relation="include">
        </childnode>
      </node>
      <node id="2803">
        <label>vigra/imageiterator.hxx</label>
        <link refid="imageiterator.hxx"/>
        <childnode refid="2804" relation="include">
        </childnode>
        <childnode refid="2823" relation="include">
        </childnode>
        <childnode refid="2822" relation="include">
        </childnode>
        <childnode refid="2811" relation="include">
        </childnode>
      </node>
      <node id="2830">
        <label>iteratoradapter.hxx</label>
        <link refid="iteratoradapter_8hxx_source"/>
      </node>
      <node id="2829">
        <label>imageiteratoradapter.hxx</label>
        <link refid="imageiteratoradapter_8hxx_source"/>
        <childnode refid="2821" relation="include">
        </childnode>
      </node>
      <node id="2816">
        <label>utility</label>
      </node>
      <node id="2809">
        <label>sstream</label>
      </node>
      <node id="2817">
        <label>diff2d.hxx</label>
        <link refid="diff2d_8hxx_source"/>
        <childnode refid="2818" relation="include">
        </childnode>
        <childnode refid="2819" relation="include">
        </childnode>
        <childnode refid="2805" relation="include">
        </childnode>
        <childnode refid="2820" relation="include">
        </childnode>
        <childnode refid="2822" relation="include">
        </childnode>
        <childnode refid="2830" relation="include">
        </childnode>
        <childnode refid="2815" relation="include">
        </childnode>
      </node>
      <node id="2808">
        <label>error.hxx</label>
        <link refid="error_8hxx_source"/>
        <childnode refid="2807" relation="include">
        </childnode>
        <childnode refid="2809" relation="include">
        </childnode>
        <childnode refid="2810" relation="include">
        </childnode>
        <childnode refid="2805" relation="include">
        </childnode>
      </node>
      <node id="2819">
        <label>iosfwd</label>
      </node>
      <node id="2832">
        <label>cstdlib</label>
      </node>
      <node id="2812">
        <label>climits</label>
      </node>
      <node id="2811">
        <label>metaprogramming.hxx</label>
        <link refid="metaprogramming_8hxx_source"/>
        <childnode refid="2805" relation="include">
        </childnode>
        <childnode refid="2812" relation="include">
        </childnode>
        <childnode refid="2813" relation="include">
        </childnode>
        <childnode refid="2814" relation="include">
        </childnode>
      </node>
      <node id="2826">
        <label>complex</label>
      </node>
      <node id="2814">
        <label>algorithm</label>
      </node>
      <node id="2823">
        <label>accessor.hxx</label>
        <link refid="accessor_8hxx_source"/>
        <childnode refid="2811" relation="include">
        </childnode>
        <childnode refid="2824" relation="include">
        </childnode>
        <childnode refid="2815" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2875">
        <label>vigra/splineimageview.hxx</label>
        <link refid="splineimageview_8hxx_source"/>
        <childnode refid="2840" relation="include">
        </childnode>
        <childnode refid="2853" relation="include">
        </childnode>
      </node>
      <node id="2857">
        <label>vigra/quaternion.hxx</label>
        <link refid="quaternion_8hxx_source"/>
        <childnode refid="2856" relation="include">
        </childnode>
        <childnode refid="2858" relation="include">
        </childnode>
      </node>
      <node id="2840">
        <label>vigra/affine_registration.hxx</label>
        <link refid="affine__registration_8hxx_source"/>
      </node>
      <node id="2865">
        <label>vigra/multi_pointoperators.hxx</label>
        <link refid="multi__pointoperators_8hxx_source"/>
        <childnode refid="2839" relation="include">
        </childnode>
        <childnode refid="2866" relation="include">
        </childnode>
        <childnode refid="2868" relation="include">
        </childnode>
        <childnode refid="2869" relation="include">
        </childnode>
        <childnode refid="2870" relation="include">
        </childnode>
        <childnode refid="2871" relation="include">
        </childnode>
        <childnode refid="2872" relation="include">
        </childnode>
        <childnode refid="2873" relation="include">
        </childnode>
      </node>
      <node id="2838">
        <label>vigra/multi_array.hxx</label>
        <link refid="multi__array_8hxx_source"/>
        <childnode refid="2839" relation="include">
        </childnode>
        <childnode refid="2865" relation="include">
        </childnode>
        <childnode refid="2875" relation="include">
        </childnode>
        <childnode refid="2876" relation="include">
        </childnode>
        <childnode refid="2877" relation="include">
        </childnode>
        <childnode refid="2867" relation="include">
        </childnode>
        <childnode refid="2866" relation="include">
        </childnode>
        <childnode refid="2878" relation="include">
        </childnode>
        <childnode refid="2868" relation="include">
        </childnode>
        <childnode refid="2869" relation="include">
        </childnode>
        <childnode refid="2882" relation="include">
        </childnode>
        <childnode refid="2880" relation="include">
        </childnode>
        <childnode refid="2883" relation="include">
        </childnode>
        <childnode refid="2870" relation="include">
        </childnode>
        <childnode refid="2884" relation="include">
        </childnode>
        <childnode refid="2886" relation="include">
        </childnode>
        <childnode refid="2887" relation="include">
        </childnode>
        <childnode refid="2860" relation="include">
        </childnode>
        <childnode refid="2889" relation="include">
        </childnode>
        <childnode refid="2890" relation="include">
        </childnode>
        <childnode refid="2855" relation="include">
        </childnode>
        <childnode refid="2874" relation="include">
        </childnode>
      </node>
      <node id="2856">
        <label>vigra/invariant_features3D.hxx</label>
        <link refid="invariant__features3D_8hxx_source"/>
      </node>
      <node id="2853">
        <label>vigra/affinegeometry.hxx</label>
        <link refid="affinegeometry_8hxx_source"/>
      </node>
      <node id="2845">
        <label>vigra/noise_normalization.hxx</label>
        <link refid="noise__normalization_8hxx_source"/>
      </node>
      <node id="2846">
        <label>vigra/quadprog.hxx</label>
        <link refid="quadprog_8hxx_source"/>
      </node>
      <node id="2863">
        <label>vigra/random_forest/rf_region.hxx</label>
        <link refid="rf__region_8hxx_source"/>
        <childnode refid="2862" relation="include">
        </childnode>
        <childnode refid="2849" relation="include">
        </childnode>
      </node>
      <node id="2844">
        <label>vigra/linear_algebra.hxx</label>
        <link refid="linear__algebra_8hxx_source"/>
      </node>
      <node id="2879">
        <label>vigra/localminmax.hxx</label>
        <link refid="localminmax_8hxx_source"/>
        <childnode refid="2880" relation="include">
        </childnode>
        <childnode refid="2845" relation="include">
        </childnode>
        <childnode refid="2881" relation="include">
        </childnode>
      </node>
      <node id="2862">
        <label>vigra/random_forest/rf_split.hxx</label>
        <link refid="rf__split_8hxx_source"/>
        <childnode refid="2848" relation="include">
        </childnode>
        <childnode refid="2849" relation="include">
        </childnode>
      </node>
      <node id="2837">
        <label>vigra/basicimageview.hxx</label>
        <link refid="basicimageview_8hxx_source"/>
        <childnode refid="2838" relation="include">
        </childnode>
        <childnode refid="2866" relation="include">
        </childnode>
      </node>
      <node id="2878">
        <label>vigra/labelvolume.hxx</label>
        <link refid="labelvolume_8hxx_source"/>
        <childnode refid="2879" relation="include">
        </childnode>
        <childnode refid="2874" relation="include">
        </childnode>
      </node>
      <node id="2850">
        <label>vigra/random_forest_hdf5_impex.hxx</label>
        <link refid="random__forest__hdf5__impex_8hxx_source"/>
      </node>
      <node id="2841">
        <label>vigra/linear_solve.hxx</label>
        <link refid="linear__solve_8hxx_source"/>
        <childnode refid="2840" relation="include">
        </childnode>
        <childnode refid="2842" relation="include">
        </childnode>
        <childnode refid="2844" relation="include">
        </childnode>
        <childnode refid="2845" relation="include">
        </childnode>
        <childnode refid="2846" relation="include">
        </childnode>
        <childnode refid="2847" relation="include">
        </childnode>
        <childnode refid="2843" relation="include">
        </childnode>
      </node>
      <node id="2889">
        <label>vigra/random_forest/rf_online_prediction_set.hxx</label>
        <link refid="rf__online__prediction__set_8hxx_source"/>
        <childnode refid="2849" relation="include">
        </childnode>
      </node>
      <node id="2874">
        <label>vigra/watersheds3d.hxx</label>
        <link refid="watersheds3d_8hxx_source"/>
      </node>
      <node id="2883">
        <label>vigra/multi_math.hxx</label>
        <link refid="multi__math_8hxx_source"/>
        <childnode refid="2855" relation="include">
        </childnode>
      </node>
      <node id="2851">
        <label>vigra/singular_value_decomposition.hxx</label>
        <link refid="singular__value__decomposition_8hxx_source"/>
        <childnode refid="2841" relation="include">
        </childnode>
        <childnode refid="2847" relation="include">
        </childnode>
        <childnode refid="2852" relation="include">
        </childnode>
      </node>
      <node id="2842">
        <label>vigra/edgedetection.hxx</label>
        <link refid="edgedetection_8hxx_source"/>
        <childnode refid="2843" relation="include">
        </childnode>
      </node>
      <node id="2858">
        <label>vigra/wigner-matrix.hxx</label>
        <link refid="wigner-matrix_8hxx_source"/>
      </node>
      <node id="2882">
        <label>vigra/multi_fft.hxx</label>
        <link refid="multi__fft_8hxx_source"/>
      </node>
      <node id="2885">
        <label>vigra/numpy_array_converters.hxx</label>
        <link refid="numpy__array__converters_8hxx_source"/>
      </node>
      <node id="2843">
        <label>vigra/slanted_edge_mtf.hxx</label>
        <link refid="slanted__edge__mtf_8hxx_source"/>
      </node>
      <node id="2868">
        <label>vigra/multi_convolution.hxx</label>
        <link refid="multi__convolution_8hxx_source"/>
      </node>
      <node id="2864">
        <label>vigra/random_forest_deprec.hxx</label>
        <link refid="random__forest__deprec_8hxx_source"/>
      </node>
      <node id="2890">
        <label>vigra/sifImport.hxx</label>
        <link refid="sifImport_8hxx_source"/>
      </node>
      <node id="2848">
        <label>vigra/random_forest/rf_ridge_split.hxx</label>
        <link refid="rf__ridge__split_8hxx_source"/>
        <childnode refid="2849" relation="include">
        </childnode>
      </node>
      <node id="2861">
        <label>vigra/random_forest/rf_nodeproxy.hxx</label>
        <link refid="rf__nodeproxy_8hxx_source"/>
        <childnode refid="2860" relation="include">
        </childnode>
        <childnode refid="2862" relation="include">
        </childnode>
        <childnode refid="2848" relation="include">
        </childnode>
        <childnode refid="2849" relation="include">
        </childnode>
      </node>
      <node id="2852">
        <label>vigra/unsupervised_decomposition.hxx</label>
        <link refid="unsupervised__decomposition_8hxx_source"/>
      </node>
      <node id="2888">
        <label>vigra/random_forest/rf_algorithm.hxx</label>
        <link refid="rf__algorithm_8hxx_source"/>
        <childnode refid="2849" relation="include">
        </childnode>
      </node>
      <node id="2836">
        <label>vigra/imageiterator.hxx</label>
        <link refid="imageiterator.hxx"/>
        <childnode refid="2837" relation="include">
        </childnode>
        <childnode refid="2838" relation="include">
        </childnode>
      </node>
      <node id="2849">
        <label>vigra/random_forest.hxx</label>
        <link refid="random__forest_8hxx_source"/>
        <childnode refid="2850" relation="include">
        </childnode>
      </node>
      <node id="2847">
        <label>vigra/regression.hxx</label>
        <link refid="regression_8hxx_source"/>
        <childnode refid="2848" relation="include">
        </childnode>
      </node>
      <node id="2859">
        <label>vigra/matlab.hxx</label>
        <link refid="matlab_8hxx_source"/>
      </node>
      <node id="2860">
        <label>vigra/random_forest/rf_decisionTree.hxx</label>
        <link refid="rf__decisionTree_8hxx_source"/>
        <childnode refid="2849" relation="include">
        </childnode>
      </node>
      <node id="2869">
        <label>vigra/multi_distance.hxx</label>
        <link refid="multi__distance_8hxx_source"/>
        <childnode refid="2870" relation="include">
        </childnode>
      </node>
      <node id="2855">
        <label>vigra/tv_filter.hxx</label>
        <link refid="tv__filter_8hxx_source"/>
      </node>
      <node id="2877">
        <label>vigra/impex.hxx</label>
        <link refid="impex_8hxx"/>
        <childnode refid="2867" relation="include">
        </childnode>
        <childnode refid="2866" relation="include">
        </childnode>
        <childnode refid="2855" relation="include">
        </childnode>
      </node>
      <node id="2870">
        <label>vigra/multi_morphology.hxx</label>
        <link refid="multi__morphology_8hxx_source"/>
      </node>
      <node id="2887">
        <label>vigra/random_forest/splices.hxx</label>
        <link refid="splices_8hxx_source"/>
        <childnode refid="2888" relation="include">
        </childnode>
      </node>
      <node id="2880">
        <label>vigra/multi_localminmax.hxx</label>
        <link refid="multi__localminmax_8hxx_source"/>
        <childnode refid="2874" relation="include">
        </childnode>
      </node>
      <node id="2873">
        <label>vigra/seededregiongrowing3d.hxx</label>
        <link refid="seededregiongrowing3d_8hxx_source"/>
        <childnode refid="2874" relation="include">
        </childnode>
      </node>
      <node id="2886">
        <label>vigra/numpy_array_traits.hxx</label>
        <link refid="numpy__array__traits_8hxx_source"/>
        <childnode refid="2884" relation="include">
        </childnode>
      </node>
      <node id="2881">
        <label>vigra/watersheds.hxx</label>
        <link refid="watersheds_8hxx_source"/>
        <childnode refid="2874" relation="include">
        </childnode>
      </node>
      <node id="2854">
        <label>vigra/eigensystem.hxx</label>
        <link refid="eigensystem_8hxx_source"/>
        <childnode refid="2844" relation="include">
        </childnode>
        <childnode refid="2855" relation="include">
        </childnode>
      </node>
      <node id="2871">
        <label>vigra/multi_tensorutilities.hxx</label>
        <link refid="multi__tensorutilities_8hxx_source"/>
      </node>
      <node id="2876">
        <label>vigra/coordinate_iterator.hxx</label>
        <link refid="coordinate__iterator_8hxx_source"/>
      </node>
      <node id="2839">
        <label>vigra/matrix.hxx</label>
        <link refid="matrix_8hxx_source"/>
        <childnode refid="2840" relation="include">
        </childnode>
        <childnode refid="2841" relation="include">
        </childnode>
        <childnode refid="2851" relation="include">
        </childnode>
        <childnode refid="2853" relation="include">
        </childnode>
        <childnode refid="2854" relation="include">
        </childnode>
        <childnode refid="2856" relation="include">
        </childnode>
        <childnode refid="2857" relation="include">
        </childnode>
        <childnode refid="2844" relation="include">
        </childnode>
        <childnode refid="2859" relation="include">
        </childnode>
        <childnode refid="2846" relation="include">
        </childnode>
        <childnode refid="2860" relation="include">
        </childnode>
        <childnode refid="2861" relation="include">
        </childnode>
        <childnode refid="2863" relation="include">
        </childnode>
        <childnode refid="2862" relation="include">
        </childnode>
        <childnode refid="2847" relation="include">
        </childnode>
        <childnode refid="2849" relation="include">
        </childnode>
        <childnode refid="2864" relation="include">
        </childnode>
        <childnode refid="2852" relation="include">
        </childnode>
        <childnode refid="2858" relation="include">
        </childnode>
      </node>
      <node id="2872">
        <label>vigra/random_forest/rf_visitors.hxx</label>
        <link refid="rf__visitors_8hxx_source"/>
        <childnode refid="2860" relation="include">
        </childnode>
        <childnode refid="2849" relation="include">
        </childnode>
      </node>
      <node id="2867">
        <label>vigra/hdf5impex.hxx</label>
        <link refid="hdf5impex_8hxx_source"/>
        <childnode refid="2850" relation="include">
        </childnode>
      </node>
      <node id="2866">
        <label>vigra/multi_impex.hxx</label>
        <link refid="multi__impex_8hxx_source"/>
        <childnode refid="2867" relation="include">
        </childnode>
      </node>
      <node id="2884">
        <label>vigra/numpy_array.hxx</label>
        <link refid="numpy__array_8hxx_source"/>
        <childnode refid="2885" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structvigra_1_1ConstValueIteratorPolicy_1_1BaseType" prot="public">vigra::ConstValueIteratorPolicy::BaseType</innerclass>
    <innerclass refid="structvigra_1_1StridedIteratorPolicy_1_1BaseType" prot="public">vigra::StridedIteratorPolicy::BaseType</innerclass>
    <innerclass refid="classvigra_1_1ConstImageIterator" prot="public">vigra::ConstImageIterator</innerclass>
    <innerclass refid="classvigra_1_1ConstStridedImageIterator" prot="public">vigra::ConstStridedImageIterator</innerclass>
    <innerclass refid="classvigra_1_1ConstValueIterator" prot="public">vigra::ConstValueIterator</innerclass>
    <innerclass refid="classvigra_1_1ConstValueIteratorPolicy" prot="public">vigra::ConstValueIteratorPolicy</innerclass>
    <innerclass refid="classvigra_1_1ImageIterator" prot="public">vigra::ImageIterator</innerclass>
    <innerclass refid="classvigra_1_1ImageIteratorBase" prot="public">vigra::ImageIteratorBase</innerclass>
    <innerclass refid="structvigra_1_1IteratorTraits_3_01ConstImageIterator_3_01T_01_4_01_4" prot="public">vigra::IteratorTraits&lt; ConstImageIterator&lt; T &gt; &gt;</innerclass>
    <innerclass refid="structvigra_1_1IteratorTraits_3_01ConstStridedImageIterator_3_01T_01_4_01_4" prot="public">vigra::IteratorTraits&lt; ConstStridedImageIterator&lt; T &gt; &gt;</innerclass>
    <innerclass refid="structvigra_1_1IteratorTraits_3_01ConstValueIterator_3_01T_01_4_01_4" prot="public">vigra::IteratorTraits&lt; ConstValueIterator&lt; T &gt; &gt;</innerclass>
    <innerclass refid="structvigra_1_1IteratorTraits_3_01ImageIterator_3_01T_01_4_01_4" prot="public">vigra::IteratorTraits&lt; ImageIterator&lt; T &gt; &gt;</innerclass>
    <innerclass refid="structvigra_1_1IteratorTraits_3_01StridedImageIterator_3_01T_01_4_01_4" prot="public">vigra::IteratorTraits&lt; StridedImageIterator&lt; T &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1StridedImageIterator" prot="public">vigra::StridedImageIterator</innerclass>
    <innerclass refid="classvigra_1_1StridedIteratorPolicy" prot="public">vigra::StridedIteratorPolicy</innerclass>
    <innernamespace refid="namespacevigra">vigra</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>1998-2002<sp/>by<sp/>Ullrich<sp/>Koethe<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>VIGRA<sp/>computer<sp/>vision<sp/>library.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>The<sp/>VIGRA<sp/>Website<sp/>is<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://hci.iwr.uni-heidelberg.de/vigra/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Please<sp/>direct<sp/>questions,<sp/>bug<sp/>reports,<sp/>and<sp/>contributions<sp/>to<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ullrich.koethe@iwr.uni-heidelberg.de<sp/><sp/><sp/><sp/>or<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra@informatik.uni-hamburg.de<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>conditions:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Software.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VIGRA_IMAGEITERATOR_HXX</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_IMAGEITERATOR_HXX</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;utilities.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;accessor.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iteratortraits.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;metaprogramming.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vigra<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>IMAGEITERATOR&gt;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StridedIteratorPolicy</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>IMAGEITERATOR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageIterator;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IMAGEITERATOR::value_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_type;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IMAGEITERATOR::difference_type::MoveY</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>difference_type;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IMAGEITERATOR::reference<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reference;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IMAGEITERATOR::index_reference<sp/><sp/>index_reference;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IMAGEITERATOR::pointer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::random_access_iterator_tag<sp/>iterator_category;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">BaseType</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>BaseType(pointer<sp/>c<sp/>=<sp/>0,<sp/>difference_type<sp/>stride<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>current_(c),<sp/>stride_(stride)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>current_;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>difference_type<sp/>stride_;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initialize(BaseType<sp/>&amp;<sp/></highlight><highlight class="comment">/*<sp/>d<sp/>*/</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>reference<sp/>dereference(BaseType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">reference</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*d.current_);<sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>index_reference<sp/>dereference(BaseType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d,<sp/>difference_type<sp/>n)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">index_reference</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(d.current_[n*d.stride_]);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>equal(BaseType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d1,<sp/>BaseType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d2)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d1.current_<sp/>==<sp/>d2.current_;<sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>less(BaseType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d1,<sp/>BaseType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d2)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d1.current_<sp/>&lt;<sp/>d2.current_;<sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>difference_type<sp/>difference(BaseType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d1,<sp/>BaseType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d2)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(d1.current_<sp/>-<sp/>d2.current_)<sp/>/<sp/>d1.stride_;<sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>increment(BaseType<sp/>&amp;<sp/>d)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>d.current_<sp/>+=<sp/>d.stride_;<sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decrement(BaseType<sp/>&amp;<sp/>d)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>d.current_<sp/>-=<sp/>d.stride_;<sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>advance(BaseType<sp/>&amp;<sp/>d,<sp/>difference_type<sp/>n)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>d.current_<sp/>+=<sp/>d.stride_*n;<sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal">};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="100"><highlight class="comment">/**<sp/>\addtogroup<sp/>ImageIterators<sp/><sp/>Image<sp/>Iterators</highlight></codeline>
<codeline lineno="101"><highlight class="comment"></highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/>\brief<sp/>General<sp/>image<sp/>iterator<sp/>definition<sp/>and<sp/>implementations.</highlight></codeline>
<codeline lineno="103"><highlight class="comment"></highlight></codeline>
<codeline lineno="104"><highlight class="comment">&lt;p&gt;</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>following<sp/>tables<sp/>describe<sp/>the<sp/>general<sp/>requirements<sp/>for<sp/>image<sp/>iterators</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/>and<sp/>their<sp/>iterator<sp/>traits.<sp/>The<sp/>iterator<sp/>implementations<sp/>provided<sp/>here</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/><sp/>may<sp/>be<sp/>used<sp/>for<sp/>any<sp/>image<sp/>data<sp/>type<sp/>that<sp/>stores<sp/>its</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/>data<sp/>as<sp/>a<sp/>linear<sp/>array<sp/>of<sp/>pixels.<sp/>The<sp/>array<sp/>will<sp/>be<sp/>interpreted<sp/>as<sp/>a</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/>row-major<sp/>matrix<sp/>with<sp/>a<sp/>particular<sp/>width.</highlight></codeline>
<codeline lineno="110"><highlight class="comment">&lt;/p&gt;</highlight></codeline>
<codeline lineno="111"><highlight class="comment">&lt;h3&gt;Requirements<sp/>for<sp/>Image<sp/>Iterators&lt;/h3&gt;</highlight></codeline>
<codeline lineno="112"><highlight class="comment">&lt;p&gt;</highlight></codeline>
<codeline lineno="113"><highlight class="comment"></highlight></codeline>
<codeline lineno="114"><highlight class="comment">&lt;table<sp/>border=2<sp/>cellspacing=0<sp/>cellpadding=2<sp/>width=&quot;100%&quot;&gt;</highlight></codeline>
<codeline lineno="115"><highlight class="comment">&lt;tr&gt;&lt;th<sp/>colspan=2&gt;</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/><sp/>Local<sp/>Types</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/th&gt;&lt;th&gt;</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/>Meaning</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/th&gt;</highlight></codeline>
<codeline lineno="120"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="121"><highlight class="comment">&lt;tr&gt;&lt;td<sp/>colspan=2&gt;</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;ImageIterator::value_type&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;the<sp/>underlying<sp/>image&apos;s<sp/>pixel<sp/>type&lt;/td&gt;</highlight></codeline>
<codeline lineno="123"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="124"><highlight class="comment">&lt;tr&gt;&lt;td<sp/>colspan=2&gt;</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;ImageIterator::PixelType&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;the<sp/>underlying<sp/>image&apos;s<sp/>pixel<sp/>type&lt;/td&gt;</highlight></codeline>
<codeline lineno="126"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="127"><highlight class="comment">&lt;tr&gt;&lt;td<sp/>colspan=2&gt;</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;ImageIterator::reference&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;the<sp/>iterator&apos;s<sp/>reference<sp/>type<sp/>(return<sp/>type<sp/>of<sp/>&lt;TT&gt;*iter&lt;/TT&gt;).<sp/>Will<sp/>be</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;value_type<sp/>&amp;&lt;/tt&gt;<sp/>for<sp/>a<sp/>mutable<sp/>iterator,<sp/>and<sp/>convertible<sp/>to</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;value_type<sp/>const<sp/>&amp;&lt;/tt&gt;<sp/>for<sp/>a<sp/>const<sp/>iterator.&lt;/td&gt;</highlight></codeline>
<codeline lineno="132"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="133"><highlight class="comment">&lt;tr&gt;&lt;td<sp/>colspan=2&gt;</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;ImageIterator::index_reference&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;the<sp/>iterator&apos;s<sp/>index<sp/>reference<sp/>type<sp/>(return<sp/>type<sp/>of<sp/>&lt;TT&gt;iter[diff]&lt;/TT&gt;).<sp/>Will<sp/>be</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;value_type<sp/>&amp;&lt;/tt&gt;<sp/>for<sp/>a<sp/>mutable<sp/>iterator,<sp/>and<sp/>convertible<sp/>to</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;value_type<sp/>const<sp/>&amp;&lt;/tt&gt;<sp/>for<sp/>a<sp/>const<sp/>iterator.&lt;/td&gt;</highlight></codeline>
<codeline lineno="138"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="139"><highlight class="comment">&lt;tr&gt;&lt;td<sp/>colspan=2&gt;</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;ImageIterator::pointer&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;the<sp/>iterator&apos;s<sp/>pointer<sp/>type<sp/>(return<sp/>type<sp/>of<sp/>&lt;TT&gt;iter.operator-&gt;()&lt;/TT&gt;).<sp/>Will<sp/>be</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;value_type<sp/>*&lt;/tt&gt;<sp/>for<sp/>a<sp/>mutable<sp/>iterator,<sp/>and<sp/>convertible<sp/>to</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;value_type<sp/>const<sp/>*&lt;/tt&gt;<sp/>for<sp/>a<sp/>const<sp/>iterator.&lt;/td&gt;</highlight></codeline>
<codeline lineno="144"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="145"><highlight class="comment">&lt;tr&gt;&lt;td<sp/>colspan=2&gt;</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;ImageIterator::difference_type&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;the<sp/>iterator&apos;s<sp/>difference<sp/>type<sp/>(&lt;TT&gt;vigra::Diff2D&lt;/TT&gt;)&lt;/td&gt;</highlight></codeline>
<codeline lineno="148"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="149"><highlight class="comment">&lt;tr&gt;&lt;td<sp/>colspan=2&gt;</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;ImageIterator::iterator_category&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;the<sp/>iterator<sp/>tag<sp/>(&lt;tt&gt;vigra::image_traverser_tag&lt;/tt&gt;)&lt;/td&gt;</highlight></codeline>
<codeline lineno="152"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="153"><highlight class="comment">&lt;tr&gt;&lt;td<sp/>colspan=2&gt;</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;ImageIterator::row_iterator&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;the<sp/>associated<sp/>row<sp/>iterator&lt;/td&gt;</highlight></codeline>
<codeline lineno="155"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="156"><highlight class="comment">&lt;tr&gt;&lt;td<sp/>colspan=2&gt;</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;ImageIterator::column_iterator&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;the<sp/>associated<sp/>column<sp/>iterator&lt;/td&gt;</highlight></codeline>
<codeline lineno="158"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="159"><highlight class="comment">&lt;tr&gt;&lt;td<sp/>colspan=2&gt;</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;ImageIterator::MoveX&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;type<sp/>of<sp/>the<sp/>horizontal<sp/>navigator&lt;/td&gt;</highlight></codeline>
<codeline lineno="161"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="162"><highlight class="comment">&lt;tr&gt;&lt;td<sp/>colspan=2&gt;</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;ImageIterator::MoveY&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;type<sp/>of<sp/>the<sp/>vertical<sp/>navigator&lt;/td&gt;</highlight></codeline>
<codeline lineno="164"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="165"><highlight class="comment">&lt;tr&gt;&lt;th&gt;</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/>Operation</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/th&gt;&lt;th&gt;</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/><sp/>Result</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/th&gt;&lt;th&gt;</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/>Semantics</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/th&gt;</highlight></codeline>
<codeline lineno="172"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="173"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;++i.x&lt;br&gt;i.x--&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;void&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;increment<sp/>x-coordinate&lt;/td&gt;</highlight></codeline>
<codeline lineno="175"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="176"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;--i.x&lt;br&gt;i.x--&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;void&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;decrement<sp/>x-coordinate&lt;/td&gt;</highlight></codeline>
<codeline lineno="178"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="179"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i.x<sp/>+=<sp/>dx&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;ImageIterator::MoveX<sp/>&amp;&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;add<sp/>&lt;tt&gt;dx&lt;/tt&gt;<sp/>to<sp/>x-coordinate&lt;/td&gt;</highlight></codeline>
<codeline lineno="182"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="183"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i.x<sp/>-=<sp/>dx&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;ImageIterator::MoveX<sp/>&amp;&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;subtract<sp/>&lt;tt&gt;dx&lt;/tt&gt;<sp/>from<sp/>x-coordinate&lt;/td&gt;</highlight></codeline>
<codeline lineno="186"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="187"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i.x<sp/>-<sp/>j.x&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;int&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;difference<sp/>of<sp/>the<sp/>x-coordinates<sp/>of<sp/>&lt;tt&gt;i&lt;/tt&gt;<sp/>and<sp/>&lt;tt&gt;j&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="190"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="191"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i.x<sp/>=<sp/>j.x&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;ImageIterator::MoveX<sp/>&amp;&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;i.x<sp/>+=<sp/>j.x<sp/>-<sp/>i.x&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="193"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="194"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i.x<sp/>==<sp/>i.y&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;bool&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;j.x<sp/>-<sp/>i.x<sp/>==<sp/>0&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="196"><highlight class="comment"></highlight></codeline>
<codeline lineno="197"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="198"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i.x<sp/>&lt;<sp/>j.x&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;bool&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;j.x<sp/>-<sp/>i.x<sp/>&gt;<sp/>0&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="200"><highlight class="comment"></highlight></codeline>
<codeline lineno="201"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="202"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;++i.y&lt;br&gt;i.y++&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;void&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;increment<sp/>y-coordinate&lt;/td&gt;</highlight></codeline>
<codeline lineno="204"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="205"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;--i.y&lt;br&gt;i.y--&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;void&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;decrement<sp/>y-coordinate&lt;/td&gt;</highlight></codeline>
<codeline lineno="207"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="208"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i.y<sp/>+=<sp/>dy&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;ImageIterator::MoveY<sp/>&amp;&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;add<sp/>&lt;tt&gt;dy&lt;/tt&gt;<sp/>to<sp/>y-coordinate&lt;/td&gt;</highlight></codeline>
<codeline lineno="211"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="212"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i.y<sp/>-=<sp/>dy&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;ImageIterator::MoveY<sp/>&amp;&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;subtract<sp/>&lt;tt&gt;dy&lt;/tt&gt;<sp/>from<sp/>y-coordinate&lt;/td&gt;</highlight></codeline>
<codeline lineno="215"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="216"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i.y<sp/>-<sp/>j.y&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;int&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;difference<sp/>of<sp/>the<sp/>y-coordinates<sp/>of<sp/>&lt;tt&gt;i&lt;/tt&gt;<sp/>and<sp/>&lt;tt&gt;j&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="219"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="220"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i.y<sp/>=<sp/>j.y&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;ImageIterator::MoveY<sp/>&amp;&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;i.y<sp/>+=<sp/>j.y<sp/>-<sp/>i.y&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="222"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="223"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i.y<sp/>==<sp/>j.y&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;bool&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;j.y<sp/>-<sp/>i.y<sp/>==<sp/>0&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="225"><highlight class="comment"></highlight></codeline>
<codeline lineno="226"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="227"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i.y<sp/>&lt;<sp/>j.y&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;bool&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;j.y<sp/>-<sp/>i.y<sp/>&gt;<sp/>0&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="229"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="230"><highlight class="comment">&lt;tr&gt;&lt;td<sp/>colspan=2&gt;</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;ImageIterator<sp/>k(i)&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;copy<sp/>constructor&lt;/td&gt;</highlight></codeline>
<codeline lineno="232"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="233"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;k<sp/>=<sp/>i&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;ImageIterator<sp/>&amp;&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;assignment&lt;/td&gt;</highlight></codeline>
<codeline lineno="235"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="236"><highlight class="comment">&lt;tr&gt;&lt;td<sp/>colspan=2&gt;</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;ImageIterator<sp/>k&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;default<sp/>constructor&lt;/td&gt;</highlight></codeline>
<codeline lineno="238"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="239"><highlight class="comment">&lt;tr&gt;&lt;td<sp/>colspan=2&gt;</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;ImageIterator::row_iterator<sp/>r(i)&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;construction<sp/>of<sp/>row<sp/>iterator&lt;/td&gt;</highlight></codeline>
<codeline lineno="241"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="242"><highlight class="comment">&lt;tr&gt;&lt;td<sp/>colspan=2&gt;</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;ImageIterator::column_iterator<sp/>c(i)&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;construction<sp/>of<sp/>column<sp/>iterator&lt;/td&gt;</highlight></codeline>
<codeline lineno="244"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="245"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i<sp/>+=<sp/>diff&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;ImageIterator<sp/>&amp;&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;{<sp/>i.x<sp/>+=<sp/>diff.x&lt;br&gt;i.y<sp/>+=<sp/>diff.y;<sp/>}&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="248"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="249"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i<sp/>-=<sp/>diff&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;ImageIterator<sp/>&amp;&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;{<sp/>i.x<sp/>-=<sp/>diff.x&lt;br&gt;i.y<sp/>-=<sp/>diff.y;<sp/>}&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="252"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="253"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i<sp/>+<sp/>diff&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;ImageIterator&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;{<sp/>ImageIterator<sp/>tmp(i);&lt;br&gt;tmp<sp/>+=<sp/>diff;&lt;br&gt;return<sp/>tmp;<sp/>}&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="256"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="257"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i<sp/>-<sp/>diff&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;ImageIterator&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;{<sp/>ImageIterator<sp/>tmp(i);&lt;br&gt;tmp<sp/>-=<sp/>diff;&lt;br&gt;return<sp/>tmp;<sp/>}&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="260"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="261"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i<sp/>-<sp/>j&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;ImageIterator::difference_type&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;{<sp/>ImageIterator::difference_type<sp/>tmp(i.x<sp/>-<sp/>j.x,<sp/>i.y<sp/>-<sp/>j.y);&lt;br&gt;return<sp/>tmp;<sp/>}&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="264"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="265"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i<sp/>==<sp/>j&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;bool&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i.x<sp/>==<sp/>j.x<sp/>&amp;&amp;<sp/>i.y<sp/>==<sp/>j.y&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="268"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="269"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;*i&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;ImageIterator::reference&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;access<sp/>the<sp/>current<sp/>pixel&lt;/td&gt;</highlight></codeline>
<codeline lineno="272"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="273"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i[diff]&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;ImageIterator::index_reference&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;access<sp/>pixel<sp/>at<sp/>offset<sp/>&lt;tt&gt;diff&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="276"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="277"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i(dx,<sp/>dy)&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;ImageIterator::index_reference&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;access<sp/>pixel<sp/>at<sp/>offset<sp/>&lt;tt&gt;(dx,<sp/>dy)&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="280"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="281"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i-&gt;member()&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;depends<sp/>on<sp/>operation&lt;/td&gt;</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;call<sp/>member<sp/>function<sp/>of<sp/>underlying<sp/>pixel<sp/>type<sp/>via<sp/>&lt;tt&gt;operator-&gt;&lt;/tt&gt;<sp/>of<sp/>iterator&lt;/td&gt;</highlight></codeline>
<codeline lineno="284"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="285"><highlight class="comment">&lt;tr&gt;&lt;td<sp/>colspan=3&gt;</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;i,<sp/>j,<sp/>k&lt;/tt&gt;<sp/>are<sp/>of<sp/>type<sp/>&lt;tt&gt;ImageIterator&lt;/tt&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;diff&lt;/tt&gt;<sp/>is<sp/>of<sp/>type<sp/>&lt;tt&gt;ImageIterator::difference_type&lt;/tt&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;dx,<sp/>dy&lt;/tt&gt;<sp/>are<sp/>of<sp/>type<sp/>&lt;tt&gt;int&lt;/tt&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/td&gt;</highlight></codeline>
<codeline lineno="290"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="291"><highlight class="comment">&lt;/table&gt;</highlight></codeline>
<codeline lineno="292"><highlight class="comment">&lt;/p&gt;</highlight></codeline>
<codeline lineno="293"><highlight class="comment">&lt;h3&gt;Requirements<sp/>for<sp/>Image<sp/>Iterator<sp/>Traits&lt;/h3&gt;</highlight></codeline>
<codeline lineno="294"><highlight class="comment">&lt;p&gt;</highlight></codeline>
<codeline lineno="295"><highlight class="comment">The<sp/>following<sp/>iterator<sp/>traits<sp/>must<sp/>be<sp/>defined<sp/>for<sp/>an<sp/>image<sp/>iterator:</highlight></codeline>
<codeline lineno="296"><highlight class="comment">&lt;/p&gt;</highlight></codeline>
<codeline lineno="297"><highlight class="comment">&lt;p&gt;</highlight></codeline>
<codeline lineno="298"><highlight class="comment">&lt;table<sp/>border=2<sp/>cellspacing=0<sp/>cellpadding=2<sp/>width=&quot;100%&quot;&gt;</highlight></codeline>
<codeline lineno="299"><highlight class="comment">&lt;tr&gt;&lt;th&gt;</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/><sp/><sp/><sp/>Types</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/th&gt;&lt;th&gt;</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/><sp/><sp/>Meaning</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/th&gt;</highlight></codeline>
<codeline lineno="304"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="305"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;IteratorTraits&lt;ImageIterator&gt;::Iterator&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;the<sp/>iterator<sp/>type<sp/>the<sp/>traits<sp/>are<sp/>referring<sp/>to&lt;/td&gt;</highlight></codeline>
<codeline lineno="307"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="308"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;IteratorTraits&lt;ImageIterator&gt;::iterator&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;the<sp/>iterator<sp/>type<sp/>the<sp/>traits<sp/>are<sp/>referring<sp/>to&lt;/td&gt;</highlight></codeline>
<codeline lineno="310"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="311"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;IteratorTraits&lt;ImageIterator&gt;::value_type&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;the<sp/>underlying<sp/>image&apos;s<sp/>pixel<sp/>type&lt;/td&gt;</highlight></codeline>
<codeline lineno="313"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="314"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;IteratorTraits&lt;ImageIterator&gt;::reference&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;the<sp/>iterator&apos;s<sp/>reference<sp/>type<sp/>(return<sp/>type<sp/>of<sp/>&lt;TT&gt;*iter&lt;/TT&gt;)&lt;/td&gt;</highlight></codeline>
<codeline lineno="317"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="318"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;IteratorTraits&lt;ImageIterator&gt;::index_reference&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;the<sp/>iterator&apos;s<sp/>index<sp/>reference<sp/>type<sp/>(return<sp/>type<sp/>of<sp/>&lt;TT&gt;iter[diff]&lt;/TT&gt;)&lt;/td&gt;</highlight></codeline>
<codeline lineno="321"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="322"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;IteratorTraits&lt;ImageIterator&gt;::pointer&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;the<sp/>iterator&apos;s<sp/>pointer<sp/>type<sp/>(return<sp/>type<sp/>of<sp/>&lt;TT&gt;iter.operator-&gt;()&lt;/TT&gt;)&lt;/td&gt;</highlight></codeline>
<codeline lineno="325"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="326"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;IteratorTraits&lt;ImageIterator&gt;::difference_type&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;the<sp/>iterator&apos;s<sp/>difference<sp/>type&lt;/td&gt;</highlight></codeline>
<codeline lineno="329"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="330"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;IteratorTraits&lt;ImageIterator&gt;::iterator_category&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;the<sp/>iterator<sp/>tag<sp/>(&lt;tt&gt;vigra::image_traverser_tag&lt;/tt&gt;)&lt;/td&gt;</highlight></codeline>
<codeline lineno="333"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="334"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;IteratorTraits&lt;ImageIterator&gt;::row_iterator&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;the<sp/>associated<sp/>row<sp/>iterator&lt;/td&gt;</highlight></codeline>
<codeline lineno="336"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="337"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;IteratorTraits&lt;ImageIterator&gt;::column_iterator&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;the<sp/>associated<sp/>column<sp/>iterator&lt;/td&gt;</highlight></codeline>
<codeline lineno="339"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="340"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;IteratorTraits&lt;ImageIterator&gt;::DefaultAccessor&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;the<sp/>default<sp/>accessor<sp/>to<sp/>be<sp/>used<sp/>with<sp/>the<sp/>iterator&lt;/td&gt;</highlight></codeline>
<codeline lineno="343"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="344"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;IteratorTraits&lt;ImageIterator&gt;::default_accessor&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;the<sp/>default<sp/>accessor<sp/>to<sp/>be<sp/>used<sp/>with<sp/>the<sp/>iterator&lt;/td&gt;</highlight></codeline>
<codeline lineno="347"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="348"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;IteratorTraits&lt;ImageIterator&gt;::hasConstantStrides&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;whether<sp/>the<sp/>iterator<sp/>uses<sp/>constant<sp/>strides<sp/>on<sp/>the<sp/>underlying<sp/>memory</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(always<sp/>&lt;tt&gt;VigraTrueType&lt;/tt&gt;<sp/>for<sp/>&lt;tt&gt;ImageIterator&lt;/tt&gt;s).&lt;/td&gt;</highlight></codeline>
<codeline lineno="352"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="353"><highlight class="comment">&lt;/table&gt;</highlight></codeline>
<codeline lineno="354"><highlight class="comment">&lt;/p&gt;</highlight></codeline>
<codeline lineno="355"><highlight class="comment">*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="356"><highlight class="comment">//@{</highlight></codeline>
<codeline lineno="357"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">edOrUnstr</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">ed&gt;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DirectionSelector;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DirectionSelector&lt;UnstridedArrayTag&gt;</highlight></codeline>
<codeline lineno="365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">type</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type(T<sp/>base)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>current_(base)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type(type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>current_(rhs.current_)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>&amp;<sp/>operator=(type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_<sp/>=<sp/>rhs.current_;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator++()<sp/>{++current_;}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator++(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{++current_;}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator--()<sp/>{--current_;}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator--(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{--current_;}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__FFTWComplexOperators_1ga23c9113f38123caf2ae30a59a1a5cfc5" kindref="member" tooltip="add-assignment">operator+=</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dx)<sp/>{current_<sp/>+=<sp/>dx;<sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__FFTWComplexOperators_1ga5f4de017fa0a604ec08a41a1b12d9ae1" kindref="member" tooltip="subtract-assignment">operator-=</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dx)<sp/>{current_<sp/>-=<sp/>dx;<sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__FFTWComplexOperators_1ga51aa30ebec3e036cbd162a05d9a34f7f" kindref="member" tooltip="equal">operator==</ref>(type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="394"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current_<sp/>==<sp/>rhs.current_;<sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__FFTWComplexOperators_1gab6fe0235404f2cfe54c027ce7cb1c048" kindref="member" tooltip="not equal">operator!=</ref>(type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="397"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current_<sp/>!=<sp/>rhs.current_;<sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__FixedPointOperations_1ga59b7015d21fe02774a7663e6b663e3fc" kindref="member" tooltip="less than">operator&lt;</ref>(type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="400"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current_<sp/>&lt;<sp/>rhs.current_;<sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__FixedPointOperations_1ga7a2707122ac37df0e799ee89ff743791" kindref="member" tooltip="less or equal">operator&lt;=</ref>(type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="403"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current_<sp/>&lt;=<sp/>rhs.current_;<sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__FixedPointOperations_1gab8c9b89e1d7d338ca3243a0a6226a331" kindref="member" tooltip="greater">operator&gt;</ref>(type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="406"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current_<sp/>&gt;<sp/>rhs.current_;<sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__FixedPointOperations_1ga9e66b07e0f99f4a0c73afe630d9ec9e6" kindref="member" tooltip="greater or equal">operator&gt;=</ref>(type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="409"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current_<sp/>&gt;=<sp/>rhs.current_;<sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__RangesAndPoints_1ga8bc0dbe52072019f3c87980a96db2ddd" kindref="member">operator-</ref>(type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="412"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current_<sp/>-<sp/>rhs.current_;<sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>operator()()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="415"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current_;<sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>operator()(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="418"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current_<sp/>+<sp/>d;<sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>current_;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="422"><highlight class="normal">};</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DirectionSelector&lt;StridedArrayTag&gt;</highlight></codeline>
<codeline lineno="426"><highlight class="normal">{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">type</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride,<sp/>T<sp/>base<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>stride_(stride),</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_(base)</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type(type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>stride_(rhs.stride_),</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_(rhs.current_)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>&amp;<sp/>operator=(type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride_<sp/>=<sp/>rhs.stride_;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_<sp/>=<sp/>rhs.current_;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator++()<sp/>{current_<sp/>+=<sp/>stride_;<sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator++(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{current_<sp/>+=<sp/>stride_;<sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator--()<sp/>{current_<sp/>-=<sp/>stride_;<sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator--(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{current_<sp/>-=<sp/>stride_;<sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__FFTWComplexOperators_1ga23c9113f38123caf2ae30a59a1a5cfc5" kindref="member" tooltip="add-assignment">operator+=</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dy)<sp/>{current_<sp/>+=<sp/>dy*stride_;<sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__FFTWComplexOperators_1ga5f4de017fa0a604ec08a41a1b12d9ae1" kindref="member" tooltip="subtract-assignment">operator-=</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dy)<sp/>{current_<sp/>-=<sp/>dy*stride_;<sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__FFTWComplexOperators_1ga51aa30ebec3e036cbd162a05d9a34f7f" kindref="member" tooltip="equal">operator==</ref>(type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="458"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(current_<sp/>==<sp/>rhs.current_);<sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__FFTWComplexOperators_1gab6fe0235404f2cfe54c027ce7cb1c048" kindref="member" tooltip="not equal">operator!=</ref>(type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="461"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(current_<sp/>!=<sp/>rhs.current_);<sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__FixedPointOperations_1ga59b7015d21fe02774a7663e6b663e3fc" kindref="member" tooltip="less than">operator&lt;</ref>(type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="464"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(current_<sp/>&lt;<sp/>rhs.current_);<sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__FixedPointOperations_1ga7a2707122ac37df0e799ee89ff743791" kindref="member" tooltip="less or equal">operator&lt;=</ref>(type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="467"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(current_<sp/>&lt;=<sp/>rhs.current_);<sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__FixedPointOperations_1gab8c9b89e1d7d338ca3243a0a6226a331" kindref="member" tooltip="greater">operator&gt;</ref>(type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="470"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(current_<sp/>&gt;<sp/>rhs.current_);<sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__FixedPointOperations_1ga9e66b07e0f99f4a0c73afe630d9ec9e6" kindref="member" tooltip="greater or equal">operator&gt;=</ref>(type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="473"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(current_<sp/>&gt;=<sp/>rhs.current_);<sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__RangesAndPoints_1ga8bc0dbe52072019f3c87980a96db2ddd" kindref="member">operator-</ref>(type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="476"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(current_<sp/>-<sp/>rhs.current_)<sp/>/<sp/>stride_;<sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>operator()()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="479"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current_;<sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>operator()(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="482"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current_<sp/>+<sp/>d*stride_;<sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride_;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>current_;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="487"><highlight class="normal">};</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">edOrUnstr</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">ed&gt;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">LinearIteratorSelector;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">LinearIteratorSelector&lt;UnstridedArrayTag&gt;</highlight></codeline>
<codeline lineno="494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>IMAGEITERATOR&gt;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">type</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IMAGEITERATOR::pointer<sp/>res;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DirSelect&gt;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>res<sp/>construct(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IMAGEITERATOR::pointer<sp/>data,<sp/>DirSelect<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="508"><highlight class="normal">};</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">LinearIteratorSelector&lt;StridedArrayTag&gt;</highlight></codeline>
<codeline lineno="512"><highlight class="normal">{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>IMAGEITERATOR&gt;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">type</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>IteratorAdaptor&lt;StridedIteratorPolicy&lt;IMAGEITERATOR&gt;<sp/>&gt;<sp/>res;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DirSelect&gt;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>res<sp/>construct(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IMAGEITERATOR::pointer<sp/>data,<sp/>DirSelect<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>res::BaseType<sp/>Base;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res(Base(data,<sp/>d.stride_));</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="527"><highlight class="normal">};</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageIteratorBase<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="538"><highlight class="comment">/**<sp/>\brief<sp/>Base<sp/>class<sp/>for<sp/>2D<sp/>random<sp/>access<sp/>iterators.</highlight></codeline>
<codeline lineno="539"><highlight class="comment"></highlight></codeline>
<codeline lineno="540"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>class<sp/>contains<sp/>the<sp/>navigational<sp/>part<sp/>of<sp/>the<sp/>iterator.</highlight></codeline>
<codeline lineno="541"><highlight class="comment"><sp/><sp/><sp/><sp/>It<sp/>is<sp/>usually<sp/>not<sp/>constructed<sp/>directly,<sp/>but<sp/>via<sp/>some<sp/>derived<sp/>class<sp/>such<sp/>as</highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/><sp/><sp/><sp/>\ref<sp/>ImageIterator<sp/>or<sp/>\ref<sp/>StridedImageIterator.</highlight></codeline>
<codeline lineno="543"><highlight class="comment"></highlight></codeline>
<codeline lineno="544"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/imageiterator.hxx\&gt;</highlight></codeline>
<codeline lineno="545"><highlight class="comment"></highlight></codeline>
<codeline lineno="546"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="547"><highlight class="comment"></highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>usage<sp/>examples<sp/>assume<sp/>that<sp/>you<sp/>constructed<sp/>two<sp/>iterators<sp/>like</highlight></codeline>
<codeline lineno="549"><highlight class="comment"><sp/><sp/><sp/><sp/>this:</highlight></codeline>
<codeline lineno="550"><highlight class="comment"></highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::ImageIterator&lt;SomePixelType&gt;<sp/>iterator(base,<sp/>width);</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::ImageIterator&lt;SomePixelType&gt;<sp/>iterator1(base,<sp/>width);</highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="555"><highlight class="comment"></highlight></codeline>
<codeline lineno="556"><highlight class="comment"><sp/><sp/><sp/><sp/>See<sp/>the<sp/>paper:<sp/>U.<sp/>Koethe:</highlight></codeline>
<codeline lineno="557"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;a<sp/>href=&quot;documents/GenericProg2D.ps&quot;&gt;Reusable<sp/>Algorithms<sp/>in<sp/>Image<sp/>Processing&lt;/a&gt;</highlight></codeline>
<codeline lineno="558"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>a<sp/>discussion<sp/>of<sp/>the<sp/>concepts<sp/>behind<sp/>ImageIterators.</highlight></codeline>
<codeline lineno="559"><highlight class="comment"></highlight></codeline>
<codeline lineno="560"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">IMAGEITERATOR,</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">PIXELTYPE,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">REFERENCE,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">POINTER,</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StridedOrUnstrided<sp/>=<sp/>UnstridedArrayTag&gt;</highlight></codeline>
<codeline lineno="564" refid="classvigra_1_1ImageIteratorBase" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1ImageIteratorBase" kindref="compound" tooltip="Base class for 2D random access iterators.">ImageIteratorBase</ref></highlight></codeline>
<codeline lineno="565"><highlight class="normal">{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra::detail::LinearIteratorSelector&lt;StridedOrUnstrided&gt;::template<sp/>type&lt;ImageIteratorBase&gt;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RowIteratorSelector;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra::detail::LinearIteratorSelector&lt;StridedArrayTag&gt;::template<sp/>type&lt;ImageIteratorBase&gt;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColumnIteratorSelector;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ImageIteratorBase" kindref="compound" tooltip="Base class for 2D random access iterators.">ImageIteratorBase</ref>&lt;IMAGEITERATOR,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIXELTYPE,<sp/>REFERENCE,<sp/>POINTER,<sp/>StridedOrUnstrided&gt;<sp/><ref refid="classvigra_1_1ImageIteratorBase" kindref="compound" tooltip="Base class for 2D random access iterators.">self_type</ref>;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="576"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>The<sp/>underlying<sp/>image&apos;s<sp/>pixel<sp/>type.</highlight></codeline>
<codeline lineno="577"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578" refid="classvigra_1_1ImageIteratorBase_1ad618f240f2b743f553b20beac68bbaf8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PIXELTYPE<sp/><ref refid="classvigra_1_1ImageIteratorBase_1ad618f240f2b743f553b20beac68bbaf8" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>deprecated,<sp/>use<sp/>&lt;TT&gt;value_type&lt;/TT&gt;<sp/>instead.</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582" refid="classvigra_1_1ImageIteratorBase_1ac8456b73e94855de7203e3e337f2b872" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PIXELTYPE<sp/><ref refid="classvigra_1_1ImageIteratorBase_1ac8456b73e94855de7203e3e337f2b872" kindref="member">PixelType</ref>;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>iterator&apos;s<sp/>reference<sp/>type<sp/>(return<sp/>type<sp/>of<sp/>&lt;TT&gt;*iter&lt;/TT&gt;)</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586" refid="classvigra_1_1ImageIteratorBase_1aabedc6031d7df619a0c453c558af87a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>REFERENCE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1aabedc6031d7df619a0c453c558af87a0" kindref="member">reference</ref>;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="588"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>iterator&apos;s<sp/>index<sp/>reference<sp/>type<sp/>(return<sp/>type<sp/>of<sp/>&lt;TT&gt;iter[diff]&lt;/TT&gt;)</highlight></codeline>
<codeline lineno="589"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590" refid="classvigra_1_1ImageIteratorBase_1af499f8cb218354b4e846a233590c15da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>REFERENCE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1af499f8cb218354b4e846a233590c15da" kindref="member">index_reference</ref>;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="592"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>iterator&apos;s<sp/>pointer<sp/>type<sp/>(return<sp/>type<sp/>of<sp/>&lt;TT&gt;iter.operator-&gt;()&lt;/TT&gt;)</highlight></codeline>
<codeline lineno="593"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594" refid="classvigra_1_1ImageIteratorBase_1afe70b629b395bd93fb14c8300eabcb43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>POINTER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="596"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>iterator&apos;s<sp/>difference<sp/>type<sp/>(argument<sp/>type<sp/>of<sp/>&lt;TT&gt;iter[diff]&lt;/TT&gt;)</highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598" refid="classvigra_1_1ImageIteratorBase_1afe1e2807a8c98a020588d6eeb28a1b7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1Diff2D" kindref="compound" tooltip="Two dimensional difference vector.">Diff2D</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1afe1e2807a8c98a020588d6eeb28a1b7a" kindref="member">difference_type</ref>;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="600"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>iterator<sp/>tag<sp/>(image<sp/>traverser)</highlight></codeline>
<codeline lineno="601"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602" refid="classvigra_1_1ImageIteratorBase_1a93321121482225e0577a134820fc5c6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>image_traverser_tag<sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1a93321121482225e0577a134820fc5c6b" kindref="member">iterator_category</ref>;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="604"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>The<sp/>associated<sp/>row<sp/>iterator.</highlight></codeline>
<codeline lineno="605"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606" refid="classvigra_1_1ImageIteratorBase_1a68b7f1ca083eb038b4810c8926a83fce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RowIteratorSelector::res<sp/><ref refid="classvigra_1_1ImageIteratorBase_1a68b7f1ca083eb038b4810c8926a83fce" kindref="member">row_iterator</ref>;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="608"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>The<sp/>associated<sp/>column<sp/>iterator.</highlight></codeline>
<codeline lineno="609"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610" refid="classvigra_1_1ImageIteratorBase_1aa92bdd7ecc849908fd104c12a8c89360" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ColumnIteratorSelector::res<sp/><ref refid="classvigra_1_1ImageIteratorBase_1aa92bdd7ecc849908fd104c12a8c89360" kindref="member">column_iterator</ref>;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="612"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Let<sp/>operations<sp/>act<sp/>in<sp/>X<sp/>direction</highlight></codeline>
<codeline lineno="613"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615" refid="classvigra_1_1ImageIteratorBase_1a90d38e8e631e426dc4e1e6c275b3ed69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra::detail::DirectionSelector&lt;StridedOrUnstrided&gt;::template<sp/>type&lt;pointer&gt;<sp/><ref refid="classvigra_1_1ImageIteratorBase_1a90d38e8e631e426dc4e1e6c275b3ed69" kindref="member">MoveX</ref>;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="617"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Let<sp/>operations<sp/>act<sp/>in<sp/>Y<sp/>direction</highlight></codeline>
<codeline lineno="618"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620" refid="classvigra_1_1ImageIteratorBase_1a0063a159df3efb1a4d17a609a5b8e0d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra::detail::DirectionSelector&lt;StridedArrayTag&gt;::template<sp/>type&lt;int&gt;<sp/><ref refid="classvigra_1_1ImageIteratorBase_1a0063a159df3efb1a4d17a609a5b8e0d3" kindref="member">MoveY</ref>;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="622"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>@name<sp/>Comparison<sp/>of<sp/>Iterators<sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="623"><highlight class="comment"><sp/><sp/><sp/><sp/>//@{</highlight></codeline>
<codeline lineno="624"><highlight class="comment"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>usage:<sp/>&lt;TT&gt;<sp/>iterator<sp/>==<sp/>iterator1<sp/>&lt;/TT&gt;</highlight></codeline>
<codeline lineno="625"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626" refid="classvigra_1_1ImageIteratorBase_1a6ad6f52a11f62ac4fde56d8328d940cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ImageIteratorBase_1a6ad6f52a11f62ac4fde56d8328d940cf" kindref="member">operator==</ref>(<ref refid="classvigra_1_1ImageIteratorBase" kindref="compound" tooltip="Base class for 2D random access iterators.">ImageIteratorBase</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="627"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classvigra_1_1ImageIteratorBase_1a8d3fabc500cf613a26b37d7aea7fb0ac" kindref="member">x</ref><sp/>==<sp/>rhs.<ref refid="classvigra_1_1ImageIteratorBase_1a8d3fabc500cf613a26b37d7aea7fb0ac" kindref="member">x</ref>)<sp/>&amp;&amp;<sp/>(<ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref><sp/>==<sp/>rhs.<ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="631"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>usage:<sp/>&lt;TT&gt;<sp/>iterator<sp/>!=<sp/>iterator1<sp/>&lt;/TT&gt;</highlight></codeline>
<codeline lineno="632"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633" refid="classvigra_1_1ImageIteratorBase_1a63c0db7944f0106965c7a6cd62ec341f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ImageIteratorBase_1a63c0db7944f0106965c7a6cd62ec341f" kindref="member">operator!=</ref>(<ref refid="classvigra_1_1ImageIteratorBase" kindref="compound" tooltip="Base class for 2D random access iterators.">ImageIteratorBase</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="634"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classvigra_1_1ImageIteratorBase_1a8d3fabc500cf613a26b37d7aea7fb0ac" kindref="member">x</ref><sp/>!=<sp/>rhs.<ref refid="classvigra_1_1ImageIteratorBase_1a8d3fabc500cf613a26b37d7aea7fb0ac" kindref="member">x</ref>)<sp/>||<sp/>(<ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref><sp/>!=<sp/>rhs.<ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="638"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>usage:<sp/>&lt;TT&gt;<sp/>Diff2D<sp/>dist<sp/>=<sp/>iterator<sp/>-<sp/>iterator1<sp/>&lt;/TT&gt;</highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640" refid="classvigra_1_1ImageIteratorBase_1a81d1dd6d74bfcc1c8b3944a780557db9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Diff2D" kindref="compound" tooltip="Two dimensional difference vector.">difference_type</ref><sp/><ref refid="classvigra_1_1ImageIteratorBase_1a81d1dd6d74bfcc1c8b3944a780557db9" kindref="member">operator-</ref>(<ref refid="classvigra_1_1ImageIteratorBase" kindref="compound" tooltip="Base class for 2D random access iterators.">ImageIteratorBase</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="641"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ImageIteratorBase_1afe1e2807a8c98a020588d6eeb28a1b7a" kindref="member">difference_type</ref>(<ref refid="classvigra_1_1ImageIteratorBase_1a8d3fabc500cf613a26b37d7aea7fb0ac" kindref="member">x</ref><sp/>-<sp/>rhs.<ref refid="classvigra_1_1ImageIteratorBase_1a8d3fabc500cf613a26b37d7aea7fb0ac" kindref="member">x</ref>,<sp/><ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref><sp/>-<sp/>rhs.<ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="645"><highlight class="comment"><sp/><sp/><sp/><sp/>//@}</highlight></codeline>
<codeline lineno="646"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="647"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>@name<sp/>Specify<sp/>coordinate<sp/>to<sp/>operate<sp/>on<sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="648"><highlight class="comment"><sp/><sp/><sp/><sp/>//@{</highlight></codeline>
<codeline lineno="649"><highlight class="comment"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Refer<sp/>to<sp/>iterator&apos;s<sp/>x<sp/>coordinate.</highlight></codeline>
<codeline lineno="650"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Usage<sp/>examples:&lt;br&gt;</highlight></codeline>
<codeline lineno="651"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="652"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iterator.x;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>move<sp/>one<sp/>step<sp/>to<sp/>the<sp/>right</highlight></codeline>
<codeline lineno="653"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--iterator.x;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>move<sp/>one<sp/>step<sp/>to<sp/>the<sp/>left</highlight></codeline>
<codeline lineno="654"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator.x<sp/>+=<sp/>dx;<sp/><sp/><sp/><sp/>//<sp/>move<sp/>dx<sp/>steps<sp/>to<sp/>the<sp/>right</highlight></codeline>
<codeline lineno="655"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator.x<sp/>-=<sp/>dx;<sp/><sp/><sp/><sp/>//<sp/>move<sp/>dx<sp/>steps<sp/>to<sp/>the<sp/>left</highlight></codeline>
<codeline lineno="656"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>notAtEndOfRow<sp/>=<sp/>iterator.x<sp/>&lt;<sp/>lowerRight.x;<sp/><sp/><sp/>//<sp/>compare<sp/>x<sp/>coordinates<sp/>of<sp/>two<sp/>iterators</highlight></codeline>
<codeline lineno="657"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>width<sp/>=<sp/>lowerRight.x<sp/>-<sp/>upperLeft.x;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>calculate<sp/>difference<sp/>of<sp/>x<sp/>coordinates</highlight></codeline>
<codeline lineno="658"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>between<sp/>two<sp/>iterators</highlight></codeline>
<codeline lineno="659"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="660"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661" refid="classvigra_1_1ImageIteratorBase_1a8d3fabc500cf613a26b37d7aea7fb0ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1a90d38e8e631e426dc4e1e6c275b3ed69" kindref="member">MoveX</ref><sp/><ref refid="classvigra_1_1ImageIteratorBase_1a8d3fabc500cf613a26b37d7aea7fb0ac" kindref="member">x</ref>;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="662"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Refer<sp/>to<sp/>iterator&apos;s<sp/>y<sp/>coordinate.</highlight></codeline>
<codeline lineno="663"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Usage<sp/>examples:&lt;br&gt;</highlight></codeline>
<codeline lineno="664"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="665"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iterator.y;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>move<sp/>one<sp/>step<sp/>down</highlight></codeline>
<codeline lineno="666"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--iterator.y;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>move<sp/>one<sp/>step<sp/>up</highlight></codeline>
<codeline lineno="667"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator.y<sp/>+=<sp/>dy;<sp/><sp/><sp/><sp/>//<sp/>move<sp/>dy<sp/>steps<sp/>down</highlight></codeline>
<codeline lineno="668"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator.y<sp/>-=<sp/>dy;<sp/><sp/><sp/><sp/>//<sp/>move<sp/>dy<sp/>steps<sp/>up</highlight></codeline>
<codeline lineno="669"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>notAtEndOfColumn<sp/>=<sp/>iterator.y<sp/>&lt;<sp/>lowerRight.y;<sp/>//<sp/>compare<sp/>y<sp/>coordinates<sp/>of<sp/>two<sp/>iterators</highlight></codeline>
<codeline lineno="670"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>height<sp/>=<sp/>lowerRight.y<sp/>-<sp/>upperLeft.y;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>calculate<sp/>difference<sp/>of<sp/>y<sp/>coordinates</highlight></codeline>
<codeline lineno="671"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>between<sp/>two<sp/>iterators</highlight></codeline>
<codeline lineno="672"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="673"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674" refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1a0063a159df3efb1a4d17a609a5b8e0d3" kindref="member">MoveY</ref><sp/><ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref>;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="675"><highlight class="comment"><sp/><sp/><sp/><sp/>//@}</highlight></codeline>
<codeline lineno="676"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="678"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Construct<sp/>from<sp/>raw<sp/>memory<sp/>with<sp/>a<sp/>vertical<sp/>stride<sp/>of<sp/>&lt;TT&gt;ystride&lt;/TT&gt;.</highlight></codeline>
<codeline lineno="679"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;TT&gt;ystride&lt;/TT&gt;<sp/>must<sp/>equal<sp/>the<sp/>physical<sp/>image<sp/>width<sp/>(row<sp/>length),</highlight></codeline>
<codeline lineno="680"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>even<sp/>if<sp/>the<sp/>iterator<sp/>will<sp/>only<sp/>be<sp/>used<sp/>for<sp/>a<sp/>sub<sp/>image.<sp/>This<sp/>constructor</highlight></codeline>
<codeline lineno="681"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>must<sp/>only<sp/>be<sp/>called<sp/>for<sp/>unstrided<sp/>iterators</highlight></codeline>
<codeline lineno="682"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(&lt;tt&gt;StridedOrUnstrided<sp/>==<sp/>UnstridedArrayTag&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="683"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684" refid="classvigra_1_1ImageIteratorBase_1a24864a3b37a33eeea9f49382f5a15e5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1ac33d81821bc103e1841ef021de3aa121" kindref="member">ImageIteratorBase</ref>(<ref refid="classvigra_1_1ImageIteratorBase_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">pointer</ref><sp/>base,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ystride)</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1ImageIteratorBase_1a8d3fabc500cf613a26b37d7aea7fb0ac" kindref="member">x</ref>(base),</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref>(ystride)</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="689"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Construct<sp/>from<sp/>raw<sp/>memory<sp/>with<sp/>a<sp/>horizontal<sp/>stride<sp/>of<sp/>&lt;TT&gt;xstride&lt;/TT&gt;</highlight></codeline>
<codeline lineno="690"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>a<sp/>vertical<sp/>stride<sp/>of<sp/>&lt;TT&gt;ystride&lt;/TT&gt;.<sp/>This<sp/>constructor</highlight></codeline>
<codeline lineno="691"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>may<sp/>be<sp/>used<sp/>for<sp/>iterators<sp/>that<sp/>shall<sp/>skip<sp/>pixels.<sp/>Thus,<sp/>it</highlight></codeline>
<codeline lineno="692"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>must<sp/>only<sp/>be<sp/>called<sp/>for<sp/>strided<sp/>iterators</highlight></codeline>
<codeline lineno="693"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(&lt;tt&gt;StridedOrUnstrided<sp/>==<sp/>StridedArrayTag&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="694"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695" refid="classvigra_1_1ImageIteratorBase_1aa9d952dbdd2a17d8d1b1fc5ec4f9c9e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1ac33d81821bc103e1841ef021de3aa121" kindref="member">ImageIteratorBase</ref>(<ref refid="classvigra_1_1ImageIteratorBase_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">pointer</ref><sp/>base,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xstride,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ystride)</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1ImageIteratorBase_1a8d3fabc500cf613a26b37d7aea7fb0ac" kindref="member">x</ref>(xstride,<sp/>base),</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref>(ystride)</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="700"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Copy<sp/>constructor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701" refid="classvigra_1_1ImageIteratorBase_1a3ecdf0a4ac8c714e76e18f183bd86c0e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1ac33d81821bc103e1841ef021de3aa121" kindref="member">ImageIteratorBase</ref>(<ref refid="classvigra_1_1ImageIteratorBase" kindref="compound" tooltip="Base class for 2D random access iterators.">ImageIteratorBase</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1ImageIteratorBase_1a8d3fabc500cf613a26b37d7aea7fb0ac" kindref="member">x</ref>(rhs.<ref refid="classvigra_1_1ImageIteratorBase_1a8d3fabc500cf613a26b37d7aea7fb0ac" kindref="member">x</ref>),</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref>(rhs.<ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref>)</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="706"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Default<sp/>constructor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707" refid="classvigra_1_1ImageIteratorBase_1ac33d81821bc103e1841ef021de3aa121" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1ac33d81821bc103e1841ef021de3aa121" kindref="member">ImageIteratorBase</ref>()</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1ImageIteratorBase_1a8d3fabc500cf613a26b37d7aea7fb0ac" kindref="member">x</ref>(0),</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref>(0)</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="712"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Copy<sp/>assignment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713" refid="classvigra_1_1ImageIteratorBase_1a2fe77a77a51b0d3a0732d5d5bee1af1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase" kindref="compound" tooltip="Base class for 2D random access iterators.">ImageIteratorBase</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1ImageIteratorBase_1a2fe77a77a51b0d3a0732d5d5bee1af1a" kindref="member">operator=</ref>(<ref refid="classvigra_1_1ImageIteratorBase" kindref="compound" tooltip="Base class for 2D random access iterators.">ImageIteratorBase</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;rhs)</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1a8d3fabc500cf613a26b37d7aea7fb0ac" kindref="member">x</ref><sp/>=<sp/>rhs.<ref refid="classvigra_1_1ImageIteratorBase_1a8d3fabc500cf613a26b37d7aea7fb0ac" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref><sp/>=<sp/>rhs.<ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="724"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>@name<sp/>Random<sp/>navigation<sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="725"><highlight class="comment"><sp/><sp/><sp/><sp/>//@{</highlight></codeline>
<codeline lineno="726"><highlight class="comment"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Add<sp/>offset<sp/>via<sp/>Diff2D</highlight></codeline>
<codeline lineno="727"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728" refid="classvigra_1_1ImageIteratorBase_1ae93f33ab3cf9827b1863e7822e6195dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>IMAGEITERATOR<sp/>&amp;<sp/><ref refid="classvigra_1_1ImageIteratorBase_1ae93f33ab3cf9827b1863e7822e6195dd" kindref="member">operator+=</ref>(<ref refid="classvigra_1_1Diff2D" kindref="compound" tooltip="Two dimensional difference vector.">difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>s)</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1a8d3fabc500cf613a26b37d7aea7fb0ac" kindref="member">x</ref><sp/>+=<sp/>s.<ref refid="classvigra_1_1Diff2D_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref><sp/>+=<sp/>s.<ref refid="classvigra_1_1Diff2D_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">IMAGEITERATOR<sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="734"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Subtract<sp/>offset<sp/>via<sp/>Diff2D</highlight></codeline>
<codeline lineno="735"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736" refid="classvigra_1_1ImageIteratorBase_1a23672007872b0c3c5e0b50a003021f22" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>IMAGEITERATOR<sp/>&amp;<sp/><ref refid="classvigra_1_1ImageIteratorBase_1a23672007872b0c3c5e0b50a003021f22" kindref="member">operator-=</ref>(<ref refid="classvigra_1_1Diff2D" kindref="compound" tooltip="Two dimensional difference vector.">difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>s)</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1a8d3fabc500cf613a26b37d7aea7fb0ac" kindref="member">x</ref><sp/>-=<sp/>s.<ref refid="classvigra_1_1Diff2D_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref><sp/>-=<sp/>s.<ref refid="classvigra_1_1Diff2D_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">IMAGEITERATOR<sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*this);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="743"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Add<sp/>a<sp/>distance</highlight></codeline>
<codeline lineno="744"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745" refid="classvigra_1_1ImageIteratorBase_1a91590208a10d48db81ccb74392329d29" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>IMAGEITERATOR<sp/><ref refid="classvigra_1_1ImageIteratorBase_1a91590208a10d48db81ccb74392329d29" kindref="member">operator+</ref>(<ref refid="classvigra_1_1Diff2D" kindref="compound" tooltip="Two dimensional difference vector.">difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>s)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="746"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IMAGEITERATOR<sp/>ret(static_cast&lt;IMAGEITERATOR<sp/>const<sp/>&amp;&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/>s;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="754"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Subtract<sp/>a<sp/>distance</highlight></codeline>
<codeline lineno="755"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756" refid="classvigra_1_1ImageIteratorBase_1a8ea5334442906c31b12e6b72a48ac059" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>IMAGEITERATOR<sp/><ref refid="classvigra_1_1ImageIteratorBase_1a81d1dd6d74bfcc1c8b3944a780557db9" kindref="member">operator-</ref>(<ref refid="classvigra_1_1Diff2D" kindref="compound" tooltip="Two dimensional difference vector.">difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>s)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="757"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IMAGEITERATOR<sp/>ret(static_cast&lt;IMAGEITERATOR<sp/>const<sp/>&amp;&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>-=<sp/>s;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="764"><highlight class="comment"><sp/><sp/><sp/>//@}</highlight></codeline>
<codeline lineno="765"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="766"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>@name<sp/>Access<sp/>the<sp/>Pixels<sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="767"><highlight class="comment"><sp/><sp/><sp/><sp/>//@{</highlight></codeline>
<codeline lineno="768"><highlight class="comment"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Access<sp/>current<sp/>pixel.<sp/>&lt;br&gt;</highlight></codeline>
<codeline lineno="769"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usage:<sp/>&lt;TT&gt;<sp/>SomePixelType<sp/>value<sp/>=<sp/>*iterator<sp/>&lt;/TT&gt;</highlight></codeline>
<codeline lineno="770"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771" refid="classvigra_1_1ImageIteratorBase_1aa149c2249879e7727f33688b76bf2c99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1aabedc6031d7df619a0c453c558af87a0" kindref="member">reference</ref><sp/><ref refid="classvigra_1_1ImageIteratorBase_1aa149c2249879e7727f33688b76bf2c99" kindref="member">operator*</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="772"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*current();</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="776"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Call<sp/>member<sp/>of<sp/>current<sp/>pixel.<sp/>&lt;br&gt;</highlight></codeline>
<codeline lineno="777"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usage:<sp/>&lt;TT&gt;<sp/>iterator-&gt;pixelMemberFunction()<sp/>&lt;/TT&gt;</highlight></codeline>
<codeline lineno="778"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779" refid="classvigra_1_1ImageIteratorBase_1a33ce448509e9cc0d73861e4c1919c7a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">pointer</ref><sp/><ref refid="classvigra_1_1ImageIteratorBase_1a33ce448509e9cc0d73861e4c1919c7a7" kindref="member">operator-&gt;</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="780"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current();</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="784"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Access<sp/>pixel<sp/>at<sp/>offset<sp/>from<sp/>current<sp/>location.<sp/>&lt;br&gt;</highlight></codeline>
<codeline lineno="785"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usage:<sp/>&lt;TT&gt;<sp/>SomePixelType<sp/>value<sp/>=<sp/>iterator[Diff2D(1,1)]<sp/>&lt;/TT&gt;</highlight></codeline>
<codeline lineno="786"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787" refid="classvigra_1_1ImageIteratorBase_1a8f87e6a03fe3aabd782d1049c42a7d45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1af499f8cb218354b4e846a233590c15da" kindref="member">index_reference</ref><sp/><ref refid="classvigra_1_1ImageIteratorBase_1a8f87e6a03fe3aabd782d1049c42a7d45" kindref="member">operator[]</ref>(<ref refid="classvigra_1_1Diff2D" kindref="compound" tooltip="Two dimensional difference vector.">Diff2D</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="788"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*current(d.<ref refid="classvigra_1_1Diff2D_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member">x</ref>,<sp/>d.<ref refid="classvigra_1_1Diff2D_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="792"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Access<sp/>pixel<sp/>at<sp/>offset<sp/>(dx,<sp/>dy)<sp/>from<sp/>current<sp/>location.<sp/>&lt;br&gt;</highlight></codeline>
<codeline lineno="793"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usage:<sp/>&lt;TT&gt;<sp/>SomePixelType<sp/>value<sp/>=<sp/>iterator(dx,<sp/>dy)<sp/>&lt;/TT&gt;</highlight></codeline>
<codeline lineno="794"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795" refid="classvigra_1_1ImageIteratorBase_1ad9d5ec3f82103f993fe7b35dbf3346b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1af499f8cb218354b4e846a233590c15da" kindref="member">index_reference</ref><sp/><ref refid="classvigra_1_1ImageIteratorBase_1ad9d5ec3f82103f993fe7b35dbf3346b8" kindref="member">operator()</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dy)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="796"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*current(dx,<sp/>dy);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="800"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Read<sp/>pixel<sp/>with<sp/>offset<sp/>[dy][dx]<sp/>from<sp/>current<sp/>pixel.</highlight></codeline>
<codeline lineno="801"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Note<sp/>that<sp/>the<sp/>&apos;x&apos;<sp/>index<sp/>is<sp/>the<sp/>trailing<sp/>index.<sp/>&lt;br&gt;</highlight></codeline>
<codeline lineno="802"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usage:<sp/>&lt;TT&gt;<sp/>SomePixelType<sp/>value<sp/>=<sp/>iterator[dy][dx]<sp/>&lt;/TT&gt;</highlight></codeline>
<codeline lineno="803"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804" refid="classvigra_1_1ImageIteratorBase_1a4733c2ff7c4bdc151649deef70ac7b16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">pointer</ref><sp/><ref refid="classvigra_1_1ImageIteratorBase_1a8f87e6a03fe3aabd782d1049c42a7d45" kindref="member">operator[]</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dy)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="805"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ImageIteratorBase_1a8d3fabc500cf613a26b37d7aea7fb0ac" kindref="member">x</ref>()<sp/>+<sp/><ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref>(dy);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="808"><highlight class="comment"><sp/><sp/><sp/><sp/>//@}</highlight></codeline>
<codeline lineno="809"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1a68b7f1ca083eb038b4810c8926a83fce" kindref="member">row_iterator</ref><sp/>rowIterator()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="811"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RowIteratorSelector::construct(current(),<sp/><ref refid="classvigra_1_1ImageIteratorBase_1a8d3fabc500cf613a26b37d7aea7fb0ac" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1aa92bdd7ecc849908fd104c12a8c89360" kindref="member">column_iterator</ref><sp/>columnIterator()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="816"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ColumnIteratorSelector::construct(current(),<sp/><ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">pointer</ref><sp/>current()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="823"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ImageIteratorBase_1a8d3fabc500cf613a26b37d7aea7fb0ac" kindref="member">x</ref>()<sp/>+<sp/><ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref>();<sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">pointer</ref><sp/>current(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dy)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="826"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ImageIteratorBase_1a8d3fabc500cf613a26b37d7aea7fb0ac" kindref="member">x</ref>(dx)<sp/>+<sp/><ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref>(dy);<sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal">};</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageIterator<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="835"><highlight class="comment">/**<sp/>\brief<sp/>Standard<sp/>2D<sp/>random<sp/>access<sp/>iterator<sp/>for<sp/>images<sp/>that<sp/>store<sp/>the</highlight></codeline>
<codeline lineno="836"><highlight class="comment"><sp/><sp/><sp/><sp/>data<sp/>in<sp/>a<sp/>linear<sp/>array.</highlight></codeline>
<codeline lineno="837"><highlight class="comment"></highlight></codeline>
<codeline lineno="838"><highlight class="comment"><sp/><sp/><sp/><sp/>Most<sp/>functions<sp/>and<sp/>local<sp/>types<sp/>are<sp/>inherited<sp/>from<sp/>ImageIteratorBase.</highlight></codeline>
<codeline lineno="839"><highlight class="comment"></highlight></codeline>
<codeline lineno="840"><highlight class="comment"><sp/><sp/><sp/><sp/>See<sp/>the<sp/>paper:<sp/>U.<sp/>Koethe:</highlight></codeline>
<codeline lineno="841"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;a<sp/>href=&quot;documents/GenericProg2D.ps&quot;&gt;Reusable<sp/>Algorithms<sp/>in<sp/>Image<sp/>Processing&lt;/a&gt;</highlight></codeline>
<codeline lineno="842"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>a<sp/>discussion<sp/>of<sp/>the<sp/>concepts<sp/>behind<sp/>ImageIterators.</highlight></codeline>
<codeline lineno="843"><highlight class="comment"></highlight></codeline>
<codeline lineno="844"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/imageiterator.hxx\&gt;</highlight></codeline>
<codeline lineno="845"><highlight class="comment"></highlight></codeline>
<codeline lineno="846"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="847"><highlight class="comment"></highlight></codeline>
<codeline lineno="848"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PIXELTYPE&gt;</highlight></codeline>
<codeline lineno="850" refid="classvigra_1_1ImageIterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1ImageIterator" kindref="compound" tooltip="Standard 2D random access iterator for images that store the data in a linear array.">ImageIterator</ref></highlight></codeline>
<codeline lineno="851"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ImageIteratorBase" kindref="compound" tooltip="Base class for 2D random access iterators.">ImageIteratorBase</ref>&lt;ImageIterator&lt;PIXELTYPE&gt;,</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIXELTYPE,<sp/>PIXELTYPE<sp/>&amp;,<sp/>PIXELTYPE<sp/>*&gt;</highlight></codeline>
<codeline lineno="853"><highlight class="normal">{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ImageIteratorBase" kindref="compound" tooltip="Base class for 2D random access iterators.">ImageIteratorBase&lt;ImageIterator&lt;PIXELTYPE&gt;</ref>,</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIXELTYPE,<sp/>PIXELTYPE<sp/>&amp;,<sp/>PIXELTYPE<sp/>*&gt;<sp/><ref refid="classvigra_1_1ImageIteratorBase" kindref="compound">Base</ref>;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ImageIteratorBase_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">Base::pointer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1Diff2D" kindref="compound" tooltip="Two dimensional difference vector.">Base::difference_type</ref><sp/><ref refid="classvigra_1_1Diff2D" kindref="compound" tooltip="Two dimensional difference vector.">difference_type</ref>;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="861"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Construct<sp/>from<sp/>raw<sp/>memory<sp/>with<sp/>a<sp/>vertical<sp/>stride<sp/>of<sp/>&lt;TT&gt;ystride&lt;/TT&gt;.</highlight></codeline>
<codeline lineno="862"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;TT&gt;ystride&lt;/TT&gt;<sp/>must<sp/>equal<sp/>the<sp/>physical<sp/>image<sp/>width<sp/>(row<sp/>length),</highlight></codeline>
<codeline lineno="863"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>even<sp/>if<sp/>the<sp/>iterator<sp/>will<sp/>only<sp/>be<sp/>used<sp/>for<sp/>a<sp/>sub<sp/>image.</highlight></codeline>
<codeline lineno="864"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>the<sp/>raw<sp/>memory<sp/>is<sp/>encapsulated<sp/>in<sp/>an<sp/>image<sp/>object<sp/>this</highlight></codeline>
<codeline lineno="865"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object<sp/>should<sp/>have<sp/>a<sp/>factory<sp/>function<sp/>that<sp/>constructs<sp/>the</highlight></codeline>
<codeline lineno="866"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator.</highlight></codeline>
<codeline lineno="867"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868" refid="classvigra_1_1ImageIterator_1ad0ca3b13ef7282b5175a1da56be240f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIterator_1acb32ded5cd0c6fd4cf4a7b2e7aa7463d" kindref="member">ImageIterator</ref>(pointer<sp/>base,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ystride)</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1ImageIteratorBase" kindref="compound">Base</ref>(base,<sp/>ystride)</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="872"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Default<sp/>constructor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873" refid="classvigra_1_1ImageIterator_1acb32ded5cd0c6fd4cf4a7b2e7aa7463d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIterator_1acb32ded5cd0c6fd4cf4a7b2e7aa7463d" kindref="member">ImageIterator</ref>()</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1ImageIteratorBase" kindref="compound">Base</ref>()</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal">};</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConstImageIterator<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="885"><highlight class="comment">/**<sp/>\brief<sp/>Standard<sp/>2D<sp/>random<sp/>access<sp/>const<sp/>iterator<sp/>for<sp/>images<sp/>that</highlight></codeline>
<codeline lineno="886"><highlight class="comment"><sp/><sp/><sp/><sp/>store<sp/>the<sp/>data<sp/>as<sp/>a<sp/>linear<sp/>array.</highlight></codeline>
<codeline lineno="887"><highlight class="comment"></highlight></codeline>
<codeline lineno="888"><highlight class="comment"><sp/><sp/><sp/><sp/>Most<sp/>functions<sp/>are<sp/>inherited<sp/>from<sp/>ImageIteratorBase.</highlight></codeline>
<codeline lineno="889"><highlight class="comment"></highlight></codeline>
<codeline lineno="890"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/imageiterator.hxx\&gt;</highlight></codeline>
<codeline lineno="891"><highlight class="comment"></highlight></codeline>
<codeline lineno="892"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="893"><highlight class="comment"></highlight></codeline>
<codeline lineno="894"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PIXELTYPE&gt;</highlight></codeline>
<codeline lineno="896" refid="classvigra_1_1ConstImageIterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1ConstImageIterator" kindref="compound" tooltip="Standard 2D random access const iterator for images that store the data as a linear array...">ConstImageIterator</ref></highlight></codeline>
<codeline lineno="897"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ImageIteratorBase" kindref="compound" tooltip="Base class for 2D random access iterators.">ImageIteratorBase</ref>&lt;ConstImageIterator&lt;PIXELTYPE&gt;,</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIXELTYPE,<sp/>PIXELTYPE<sp/>const<sp/>&amp;,<sp/>PIXELTYPE<sp/>const<sp/>*&gt;</highlight></codeline>
<codeline lineno="899"><highlight class="normal">{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ImageIteratorBase" kindref="compound" tooltip="Base class for 2D random access iterators.">ImageIteratorBase&lt;ConstImageIterator&lt;PIXELTYPE&gt;</ref>,</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIXELTYPE,<sp/>PIXELTYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;,<sp/>PIXELTYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*&gt;<sp/><ref refid="classvigra_1_1ImageIteratorBase" kindref="compound">Base</ref>;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ImageIteratorBase_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">Base::pointer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1Diff2D" kindref="compound" tooltip="Two dimensional difference vector.">Base::difference_type</ref><sp/><ref refid="classvigra_1_1Diff2D" kindref="compound" tooltip="Two dimensional difference vector.">difference_type</ref>;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="907"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Construct<sp/>from<sp/>raw<sp/>memory<sp/>with<sp/>a<sp/>vertical<sp/>stride<sp/>of<sp/>&lt;TT&gt;ystride&lt;/TT&gt;.</highlight></codeline>
<codeline lineno="908"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;TT&gt;ystride&lt;/TT&gt;<sp/>must<sp/>equal<sp/>the<sp/>physical<sp/>image<sp/>width<sp/>(row<sp/>length),</highlight></codeline>
<codeline lineno="909"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>even<sp/>if<sp/>the<sp/>iterator<sp/>will<sp/>only<sp/>be<sp/>used<sp/>for<sp/>a<sp/>sub<sp/>image.</highlight></codeline>
<codeline lineno="910"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>the<sp/>raw<sp/>memory<sp/>is<sp/>encapsulated<sp/>in<sp/>an<sp/>image<sp/>object<sp/>this</highlight></codeline>
<codeline lineno="911"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object<sp/>should<sp/>have<sp/>a<sp/>factory<sp/>function<sp/>that<sp/>constructs<sp/>the</highlight></codeline>
<codeline lineno="912"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator.</highlight></codeline>
<codeline lineno="913"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914" refid="classvigra_1_1ConstImageIterator_1acd585d15ef4e84fcd767c1fd42a03ff1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstImageIterator_1a1eafbc0172b66076616622bc98ad55c0" kindref="member">ConstImageIterator</ref>(pointer<sp/>base,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ystride)</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1ImageIteratorBase" kindref="compound">Base</ref>(base,<sp/>ystride)</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstImageIterator_1a1eafbc0172b66076616622bc98ad55c0" kindref="member">ConstImageIterator</ref>(<ref refid="classvigra_1_1ImageIterator" kindref="compound" tooltip="Standard 2D random access iterator for images that store the data in a linear array.">ImageIterator&lt;PIXELTYPE&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>o)</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>Base(o.<ref refid="classvigra_1_1ImageIteratorBase_1a8d3fabc500cf613a26b37d7aea7fb0ac" kindref="member">x</ref>,<sp/>o.<ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref>)</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="922"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Default<sp/>constructor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923" refid="classvigra_1_1ConstImageIterator_1a1eafbc0172b66076616622bc98ad55c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstImageIterator_1a1eafbc0172b66076616622bc98ad55c0" kindref="member">ConstImageIterator</ref>()</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1ImageIteratorBase" kindref="compound">Base</ref>()</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstImageIterator" kindref="compound" tooltip="Standard 2D random access const iterator for images that store the data as a linear array...">ConstImageIterator</ref><sp/>&amp;<sp/>operator=(<ref refid="classvigra_1_1ImageIterator" kindref="compound" tooltip="Standard 2D random access iterator for images that store the data in a linear array.">ImageIterator&lt;PIXELTYPE&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>o)</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1a8d3fabc500cf613a26b37d7aea7fb0ac" kindref="member">Base::x</ref><sp/>=<sp/>o.<ref refid="classvigra_1_1ImageIteratorBase_1a8d3fabc500cf613a26b37d7aea7fb0ac" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">Base::y</ref><sp/>=<sp/>o.<ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="933"><highlight class="normal">};</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StridedImageIterator<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="941"><highlight class="comment">/**<sp/>\brief<sp/>Iterator<sp/>to<sp/>be<sp/>used<sp/>when<sp/>pixels<sp/>are<sp/>to<sp/>be<sp/>skipped.</highlight></codeline>
<codeline lineno="942"><highlight class="comment"></highlight></codeline>
<codeline lineno="943"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>iterator<sp/>can<sp/>be<sp/>used<sp/>when<sp/>some<sp/>pixels<sp/>shall<sp/>be<sp/>automatically<sp/>skipped,<sp/>for<sp/>example</highlight></codeline>
<codeline lineno="944"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>an<sp/>image<sp/>is<sp/>to<sp/>be<sp/>sub-sampled:<sp/>instead<sp/>of<sp/>advancing<sp/>to<sp/>the<sp/>next<sp/>pixel,</highlight></codeline>
<codeline lineno="945"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;++iterator.x&lt;/tt&gt;<sp/>jumps<sp/>to<sp/>the<sp/>pixel<sp/>at<sp/>a<sp/>horizontal<sp/>offset<sp/>of<sp/>&lt;tt&gt;xskip&lt;/tt&gt;.</highlight></codeline>
<codeline lineno="946"><highlight class="comment"><sp/><sp/><sp/><sp/>Likewise<sp/>with<sp/>&lt;tt&gt;yskip&lt;/tt&gt;<sp/>in<sp/>vertical<sp/>direction.<sp/>Most<sp/>functions<sp/>and<sp/>local<sp/>types</highlight></codeline>
<codeline lineno="947"><highlight class="comment"><sp/><sp/><sp/><sp/>are<sp/>inherited<sp/>from<sp/>ImageIteratorBase.</highlight></codeline>
<codeline lineno="948"><highlight class="comment"></highlight></codeline>
<codeline lineno="949"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="950"><highlight class="comment"></highlight></codeline>
<codeline lineno="951"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="952"><highlight class="comment"><sp/><sp/><sp/><sp/>BImage<sp/>img(w,h);</highlight></codeline>
<codeline lineno="953"><highlight class="comment"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="954"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>xskip<sp/>=<sp/>2,<sp/>yskip<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="955"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>wskip<sp/>=<sp/>w<sp/>/<sp/>xskip<sp/>+<sp/>1,<sp/>hskip<sp/>=<sp/>h<sp/>/<sp/>yskip<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="956"><highlight class="comment"></highlight></codeline>
<codeline lineno="957"><highlight class="comment"><sp/><sp/><sp/><sp/>StridedImageIterator&lt;BImage::value_type&gt;<sp/>upperLeft(&amp;img(0,0),<sp/>w,<sp/>xskip,<sp/>yskip);</highlight></codeline>
<codeline lineno="958"><highlight class="comment"><sp/><sp/><sp/><sp/>StridedImageIterator&lt;BImage::value_type&gt;<sp/>lowerRight<sp/>=<sp/>upperLeft<sp/>+<sp/>Diff2D(wskip,<sp/>hskip);</highlight></codeline>
<codeline lineno="959"><highlight class="comment"></highlight></codeline>
<codeline lineno="960"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>now<sp/>navigation<sp/>with<sp/>upperLeft<sp/>and<sp/>lowerRight<sp/>lets<sp/>the<sp/>image<sp/>appear<sp/>to<sp/>have<sp/>half</highlight></codeline>
<codeline lineno="961"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>the<sp/>original<sp/>resolution<sp/>in<sp/>either<sp/>dimension</highlight></codeline>
<codeline lineno="962"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="963"><highlight class="comment"></highlight></codeline>
<codeline lineno="964"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/imageiterator.hxx\&gt;</highlight></codeline>
<codeline lineno="965"><highlight class="comment"></highlight></codeline>
<codeline lineno="966"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="967"><highlight class="comment"></highlight></codeline>
<codeline lineno="968"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PIXELTYPE&gt;</highlight></codeline>
<codeline lineno="970" refid="classvigra_1_1StridedImageIterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1StridedImageIterator" kindref="compound" tooltip="Iterator to be used when pixels are to be skipped.">StridedImageIterator</ref></highlight></codeline>
<codeline lineno="971"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ImageIteratorBase" kindref="compound" tooltip="Base class for 2D random access iterators.">ImageIteratorBase</ref>&lt;StridedImageIterator&lt;PIXELTYPE&gt;,</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIXELTYPE,<sp/>PIXELTYPE<sp/>&amp;,<sp/>PIXELTYPE<sp/>*,<sp/>StridedArrayTag&gt;</highlight></codeline>
<codeline lineno="973"><highlight class="normal">{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ImageIteratorBase" kindref="compound" tooltip="Base class for 2D random access iterators.">ImageIteratorBase&lt;StridedImageIterator&lt;PIXELTYPE&gt;</ref>,</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIXELTYPE,<sp/>PIXELTYPE<sp/>&amp;,<sp/>PIXELTYPE<sp/>*,<sp/><ref refid="structvigra_1_1StridedArrayTag" kindref="compound">StridedArrayTag</ref>&gt;<sp/><ref refid="classvigra_1_1ImageIteratorBase" kindref="compound">Base</ref>;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ImageIteratorBase_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">Base::pointer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1Diff2D" kindref="compound" tooltip="Two dimensional difference vector.">Base::difference_type</ref><sp/><ref refid="classvigra_1_1Diff2D" kindref="compound" tooltip="Two dimensional difference vector.">difference_type</ref>;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="981"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Construct<sp/>from<sp/>raw<sp/>memory<sp/>with<sp/>a<sp/>vertical<sp/>stride<sp/>of<sp/>&lt;TT&gt;ystride&lt;/TT&gt;,</highlight></codeline>
<codeline lineno="982"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jumping<sp/>by<sp/>&lt;tt&gt;xskip&lt;/tt&gt;<sp/>horizontally<sp/>and<sp/>&lt;tt&gt;yskip&lt;/tt&gt;<sp/>vertically.</highlight></codeline>
<codeline lineno="983"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;ystride&lt;/tt&gt;<sp/>must<sp/>be<sp/>the<sp/>physical<sp/>width<sp/>(row<sp/>length)<sp/>of<sp/>the<sp/>image.</highlight></codeline>
<codeline lineno="984"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985" refid="classvigra_1_1StridedImageIterator_1abe9b386ae7621c1971ad02d7b14213c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedImageIterator_1aa90533f181d228560084d544c87c692e" kindref="member">StridedImageIterator</ref>(pointer<sp/>base,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ystride,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xskip,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yskip)</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1ImageIteratorBase" kindref="compound">Base</ref>(base,<sp/>xskip,<sp/>ystride*yskip)</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="989"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Default<sp/>constructor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990" refid="classvigra_1_1StridedImageIterator_1aa90533f181d228560084d544c87c692e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedImageIterator_1aa90533f181d228560084d544c87c692e" kindref="member">StridedImageIterator</ref>()</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1ImageIteratorBase" kindref="compound">Base</ref>()</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal">};</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConstStridedImageIterator<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1002"><highlight class="comment">/**<sp/>\brief<sp/>Const<sp/>iterator<sp/>to<sp/>be<sp/>used<sp/>when<sp/>pixels<sp/>are<sp/>to<sp/>be<sp/>skipped.</highlight></codeline>
<codeline lineno="1003"><highlight class="comment"></highlight></codeline>
<codeline lineno="1004"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>iterator<sp/>can<sp/>be<sp/>used<sp/>when<sp/>some<sp/>pixels<sp/>shall<sp/>be<sp/>automatically<sp/>skipped,<sp/>for<sp/>example</highlight></codeline>
<codeline lineno="1005"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>an<sp/>image<sp/>is<sp/>to<sp/>be<sp/>sub-sampled:<sp/>instead<sp/>of<sp/>advancing<sp/>to<sp/>the<sp/>next<sp/>pixel,</highlight></codeline>
<codeline lineno="1006"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;++iterator.x&lt;/tt&gt;<sp/>jumps<sp/>to<sp/>the<sp/>pixel<sp/>at<sp/>a<sp/>horizontal<sp/>offset<sp/>of<sp/>&lt;tt&gt;xskip&lt;/tt&gt;.</highlight></codeline>
<codeline lineno="1007"><highlight class="comment"><sp/><sp/><sp/><sp/>Likewise<sp/>with<sp/>&lt;tt&gt;yskip&lt;/tt&gt;<sp/>in<sp/>vertical<sp/>direction.<sp/>Most<sp/>functions<sp/>and<sp/>local<sp/>types</highlight></codeline>
<codeline lineno="1008"><highlight class="comment"><sp/><sp/><sp/><sp/>are<sp/>inherited<sp/>from<sp/>ImageIteratorBase.</highlight></codeline>
<codeline lineno="1009"><highlight class="comment"></highlight></codeline>
<codeline lineno="1010"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1011"><highlight class="comment"></highlight></codeline>
<codeline lineno="1012"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1013"><highlight class="comment"><sp/><sp/><sp/><sp/>BImage<sp/>img(w,h);</highlight></codeline>
<codeline lineno="1014"><highlight class="comment"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="1015"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>xskip<sp/>=<sp/>2,<sp/>yskip<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1016"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>wskip<sp/>=<sp/>w<sp/>/<sp/>xskip<sp/>+<sp/>1,<sp/>hskip<sp/>=<sp/>h<sp/>/<sp/>yskip<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1017"><highlight class="comment"></highlight></codeline>
<codeline lineno="1018"><highlight class="comment"><sp/><sp/><sp/><sp/>ConstStridedImageIterator&lt;BImage::value_type&gt;<sp/>upperLeft(&amp;img(0,0),<sp/>w,<sp/>xskip,<sp/>yskip);</highlight></codeline>
<codeline lineno="1019"><highlight class="comment"><sp/><sp/><sp/><sp/>ConstStridedImageIterator&lt;BImage::value_type&gt;<sp/>lowerRight<sp/>=<sp/>upperLeft<sp/>+<sp/>Diff2D(wskip,<sp/>hskip);</highlight></codeline>
<codeline lineno="1020"><highlight class="comment"></highlight></codeline>
<codeline lineno="1021"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>now<sp/>navigation<sp/>with<sp/>upperLeft<sp/>and<sp/>lowerRight<sp/>lets<sp/>the<sp/>image<sp/>appear<sp/>to<sp/>have<sp/>half</highlight></codeline>
<codeline lineno="1022"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>the<sp/>original<sp/>resolution<sp/>in<sp/>either<sp/>dimension</highlight></codeline>
<codeline lineno="1023"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1024"><highlight class="comment"></highlight></codeline>
<codeline lineno="1025"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/imageiterator.hxx\&gt;</highlight></codeline>
<codeline lineno="1026"><highlight class="comment"></highlight></codeline>
<codeline lineno="1027"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="1028"><highlight class="comment"></highlight></codeline>
<codeline lineno="1029"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PIXELTYPE&gt;</highlight></codeline>
<codeline lineno="1031" refid="classvigra_1_1ConstStridedImageIterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1ConstStridedImageIterator" kindref="compound" tooltip="Const iterator to be used when pixels are to be skipped.">ConstStridedImageIterator</ref></highlight></codeline>
<codeline lineno="1032"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ImageIteratorBase" kindref="compound" tooltip="Base class for 2D random access iterators.">ImageIteratorBase</ref>&lt;ConstStridedImageIterator&lt;PIXELTYPE&gt;,</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIXELTYPE,<sp/>PIXELTYPE<sp/>const<sp/>&amp;,<sp/>PIXELTYPE<sp/>const<sp/>*,</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StridedArrayTag&gt;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ImageIteratorBase" kindref="compound" tooltip="Base class for 2D random access iterators.">ImageIteratorBase&lt;ConstStridedImageIterator&lt;PIXELTYPE&gt;</ref>,</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIXELTYPE,<sp/>PIXELTYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;,<sp/>PIXELTYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*,</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvigra_1_1StridedArrayTag" kindref="compound">StridedArrayTag</ref>&gt;<sp/><ref refid="classvigra_1_1ImageIteratorBase" kindref="compound">Base</ref>;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ImageIteratorBase_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">Base::pointer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1Diff2D" kindref="compound" tooltip="Two dimensional difference vector.">Base::difference_type</ref><sp/><ref refid="classvigra_1_1Diff2D" kindref="compound" tooltip="Two dimensional difference vector.">difference_type</ref>;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1044"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Construct<sp/>from<sp/>raw<sp/>memory<sp/>with<sp/>a<sp/>vertical<sp/>stride<sp/>of<sp/>&lt;TT&gt;ystride&lt;/TT&gt;,</highlight></codeline>
<codeline lineno="1045"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jumping<sp/>by<sp/>&lt;tt&gt;xskip&lt;/tt&gt;<sp/>horizontally<sp/>and<sp/>&lt;tt&gt;yskip&lt;/tt&gt;<sp/>vertically.</highlight></codeline>
<codeline lineno="1046"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;ystride&lt;/tt&gt;<sp/>must<sp/>be<sp/>the<sp/>physical<sp/>width<sp/>(row<sp/>length)<sp/>of<sp/>the<sp/>image.</highlight></codeline>
<codeline lineno="1047"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048" refid="classvigra_1_1ConstStridedImageIterator_1a5a64360d3d3ad4b258d878636f367e51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstStridedImageIterator_1a809fe8bd4f3439d1673937875df3257c" kindref="member">ConstStridedImageIterator</ref>(pointer<sp/>base,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ystride,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xskip,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yskip)</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1ImageIteratorBase" kindref="compound">Base</ref>(base,<sp/>xskip,<sp/>ystride*yskip)</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1052"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Copy-construct<sp/>from<sp/>mutable<sp/>iterator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1053" refid="classvigra_1_1ConstStridedImageIterator_1a9bdbdf68a3a3e9f4218dd17ba45c43fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstStridedImageIterator_1a809fe8bd4f3439d1673937875df3257c" kindref="member">ConstStridedImageIterator</ref>(<ref refid="classvigra_1_1StridedImageIterator" kindref="compound" tooltip="Iterator to be used when pixels are to be skipped.">StridedImageIterator&lt;PIXELTYPE&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>o)</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1ImageIteratorBase" kindref="compound">Base</ref>(o.<ref refid="classvigra_1_1ImageIteratorBase_1a8d3fabc500cf613a26b37d7aea7fb0ac" kindref="member">x</ref>,<sp/>o.<ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref>)</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1057"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Default<sp/>constructor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058" refid="classvigra_1_1ConstStridedImageIterator_1a809fe8bd4f3439d1673937875df3257c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstStridedImageIterator_1a809fe8bd4f3439d1673937875df3257c" kindref="member">ConstStridedImageIterator</ref>()</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1ImageIteratorBase" kindref="compound">Base</ref>()</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1062"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Assign<sp/>mutable<sp/>iterator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063" refid="classvigra_1_1ConstStridedImageIterator_1aaedc52d05d0474bc50667e821cfc080e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstStridedImageIterator" kindref="compound" tooltip="Const iterator to be used when pixels are to be skipped.">ConstStridedImageIterator</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1ConstStridedImageIterator_1aaedc52d05d0474bc50667e821cfc080e" kindref="member">operator=</ref>(<ref refid="classvigra_1_1StridedImageIterator" kindref="compound" tooltip="Iterator to be used when pixels are to be skipped.">StridedImageIterator&lt;PIXELTYPE&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>o)</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1a8d3fabc500cf613a26b37d7aea7fb0ac" kindref="member">Base::x</ref><sp/>=<sp/>o.<ref refid="classvigra_1_1ImageIteratorBase_1a8d3fabc500cf613a26b37d7aea7fb0ac" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">Base::y</ref><sp/>=<sp/>o.<ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1069"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>definition<sp/>of<sp/>iterator<sp/>traits<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NO_PARTIAL_TEMPLATE_SPECIALIZATION</highlight></codeline>
<codeline lineno="1079"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IteratorTraits&lt;ImageIterator&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IteratorTraitsBase&lt;ImageIterator&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>ImageIterator&lt;T&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mutable_iterator;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>ConstImageIterator&lt;T&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_iterator;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;T&gt;::default_accessor<sp/><sp/>DefaultAccessor;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>DefaultAccessor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_accessor;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasConstantStrides;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IteratorTraits&lt;ConstImageIterator&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IteratorTraitsBase&lt;ConstImageIterator&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>ImageIterator&lt;T&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mutable_iterator;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>ConstImageIterator&lt;T&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_iterator;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;T&gt;::default_const_accessor<sp/><sp/>DefaultAccessor;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>DefaultAccessor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_accessor;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasConstantStrides;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IteratorTraits&lt;StridedImageIterator&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IteratorTraitsBase&lt;StridedImageIterator&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>StridedImageIterator&lt;T&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mutable_iterator;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>ConstStridedImageIterator&lt;T&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_iterator;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;T&gt;::default_accessor<sp/><sp/>DefaultAccessor;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>DefaultAccessor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_accessor;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasConstantStrides;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IteratorTraits&lt;ConstStridedImageIterator&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IteratorTraitsBase&lt;ConstStridedImageIterator&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>StridedImageIterator&lt;T&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mutable_iterator;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>ConstStridedImageIterator&lt;T&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_iterator;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;T&gt;::default_const_accessor<sp/><sp/>DefaultAccessor;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>DefaultAccessor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_accessor;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasConstantStrides;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/>//<sp/>NO_PARTIAL_TEMPLATE_SPECIALIZATION</highlight></codeline>
<codeline lineno="1125"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_DEFINE_ITERATORTRAITS(VALUETYPE)<sp/>\</highlight></codeline>
<codeline lineno="1127"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;&gt;<sp/><sp/>\</highlight></codeline>
<codeline lineno="1128"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>IteratorTraits&lt;ImageIterator&lt;VALUETYPE<sp/>&gt;<sp/>&gt;<sp/>\</highlight></codeline>
<codeline lineno="1129"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>:<sp/>public<sp/>IteratorTraitsBase&lt;ImageIterator&lt;VALUETYPE<sp/>&gt;<sp/>&gt;<sp/>\</highlight></codeline>
<codeline lineno="1130"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="1131"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>ImageIterator&lt;VALUETYPE&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mutable_iterator;<sp/>\</highlight></codeline>
<codeline lineno="1132"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>ConstImageIterator&lt;VALUETYPE&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_iterator;<sp/>\</highlight></codeline>
<codeline lineno="1133"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>AccessorTraits&lt;VALUETYPE<sp/>&gt;::default_accessor<sp/><sp/>DefaultAccessor;<sp/>\</highlight></codeline>
<codeline lineno="1134"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>DefaultAccessor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_accessor;<sp/>\</highlight></codeline>
<codeline lineno="1135"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>VigraTrueType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasConstantStrides;<sp/>\</highlight></codeline>
<codeline lineno="1136"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};<sp/>\</highlight></codeline>
<codeline lineno="1137"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1138"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;&gt;<sp/><sp/>\</highlight></codeline>
<codeline lineno="1139"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>IteratorTraits&lt;ConstImageIterator&lt;VALUETYPE<sp/>&gt;<sp/>&gt;<sp/>\</highlight></codeline>
<codeline lineno="1140"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>:<sp/>public<sp/>IteratorTraitsBase&lt;ConstImageIterator&lt;VALUETYPE<sp/>&gt;<sp/>&gt;<sp/>\</highlight></codeline>
<codeline lineno="1141"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="1142"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>ImageIterator&lt;VALUETYPE&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mutable_iterator;<sp/>\</highlight></codeline>
<codeline lineno="1143"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>ConstImageIterator&lt;VALUETYPE&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_iterator;<sp/>\</highlight></codeline>
<codeline lineno="1144"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>AccessorTraits&lt;VALUETYPE<sp/>&gt;::default_const_accessor<sp/><sp/>DefaultAccessor;<sp/>\</highlight></codeline>
<codeline lineno="1145"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>DefaultAccessor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_accessor;<sp/>\</highlight></codeline>
<codeline lineno="1146"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>VigraTrueType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasConstantStrides;<sp/>\</highlight></codeline>
<codeline lineno="1147"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};<sp/>\</highlight></codeline>
<codeline lineno="1148"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;&gt;<sp/><sp/>\</highlight></codeline>
<codeline lineno="1149"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>IteratorTraits&lt;StridedImageIterator&lt;VALUETYPE<sp/>&gt;<sp/>&gt;<sp/>\</highlight></codeline>
<codeline lineno="1150"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>:<sp/>public<sp/>IteratorTraitsBase&lt;StridedImageIterator&lt;VALUETYPE<sp/>&gt;<sp/>&gt;<sp/>\</highlight></codeline>
<codeline lineno="1151"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="1152"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>StridedImageIterator&lt;VALUETYPE&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mutable_iterator;<sp/>\</highlight></codeline>
<codeline lineno="1153"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>ConstStridedImageIterator&lt;VALUETYPE&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_iterator;<sp/>\</highlight></codeline>
<codeline lineno="1154"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>AccessorTraits&lt;VALUETYPE<sp/>&gt;::default_accessor<sp/><sp/>DefaultAccessor;<sp/>\</highlight></codeline>
<codeline lineno="1155"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>DefaultAccessor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_accessor;<sp/>\</highlight></codeline>
<codeline lineno="1156"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>VigraTrueType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasConstantStrides;<sp/>\</highlight></codeline>
<codeline lineno="1157"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};<sp/>\</highlight></codeline>
<codeline lineno="1158"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1159"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;&gt;<sp/><sp/>\</highlight></codeline>
<codeline lineno="1160"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>IteratorTraits&lt;ConstStridedImageIterator&lt;VALUETYPE<sp/>&gt;<sp/>&gt;<sp/>\</highlight></codeline>
<codeline lineno="1161"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>:<sp/>public<sp/>IteratorTraitsBase&lt;ConstStridedImageIterator&lt;VALUETYPE<sp/>&gt;<sp/>&gt;<sp/>\</highlight></codeline>
<codeline lineno="1162"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="1163"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>StridedImageIterator&lt;VALUETYPE&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mutable_iterator;<sp/>\</highlight></codeline>
<codeline lineno="1164"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>ConstStridedImageIterator&lt;VALUETYPE&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_iterator;<sp/>\</highlight></codeline>
<codeline lineno="1165"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>AccessorTraits&lt;VALUETYPE<sp/>&gt;::default_const_accessor<sp/><sp/>DefaultAccessor;<sp/>\</highlight></codeline>
<codeline lineno="1166"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>DefaultAccessor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_accessor;<sp/>\</highlight></codeline>
<codeline lineno="1167"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>VigraTrueType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasConstantStrides;<sp/>\</highlight></codeline>
<codeline lineno="1168"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1169"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal">VIGRA_DEFINE_ITERATORTRAITS(RGBValue&lt;unsigned<sp/>char&gt;)</highlight></codeline>
<codeline lineno="1171"><highlight class="normal">VIGRA_DEFINE_ITERATORTRAITS(RGBValue&lt;</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">&gt;)</highlight></codeline>
<codeline lineno="1172"><highlight class="normal">VIGRA_DEFINE_ITERATORTRAITS(RGBValue&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;)</highlight></codeline>
<codeline lineno="1173"><highlight class="normal">VIGRA_DEFINE_ITERATORTRAITS(RGBValue&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;)</highlight></codeline>
<codeline lineno="1174"><highlight class="normal">VIGRA_DEFINE_ITERATORTRAITS(RGBValue&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;)</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_PIXELTYPE<sp/>TinyVector&lt;unsigned<sp/>char,<sp/>2&gt;</highlight></codeline>
<codeline lineno="1177"><highlight class="preprocessor"></highlight><highlight class="normal">VIGRA_DEFINE_ITERATORTRAITS(VIGRA_PIXELTYPE)</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_PIXELTYPE</highlight></codeline>
<codeline lineno="1179"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_PIXELTYPE<sp/>TinyVector&lt;unsigned<sp/>char,<sp/>3&gt;</highlight></codeline>
<codeline lineno="1180"><highlight class="preprocessor"></highlight><highlight class="normal">VIGRA_DEFINE_ITERATORTRAITS(VIGRA_PIXELTYPE)</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_PIXELTYPE</highlight></codeline>
<codeline lineno="1182"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_PIXELTYPE<sp/>TinyVector&lt;unsigned<sp/>char,<sp/>4&gt;</highlight></codeline>
<codeline lineno="1183"><highlight class="preprocessor"></highlight><highlight class="normal">VIGRA_DEFINE_ITERATORTRAITS(VIGRA_PIXELTYPE)</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_PIXELTYPE</highlight></codeline>
<codeline lineno="1185"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_PIXELTYPE<sp/>TinyVector&lt;short,<sp/>2&gt;</highlight></codeline>
<codeline lineno="1186"><highlight class="preprocessor"></highlight><highlight class="normal">VIGRA_DEFINE_ITERATORTRAITS(VIGRA_PIXELTYPE)</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_PIXELTYPE</highlight></codeline>
<codeline lineno="1188"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_PIXELTYPE<sp/>TinyVector&lt;short,<sp/>3&gt;</highlight></codeline>
<codeline lineno="1189"><highlight class="preprocessor"></highlight><highlight class="normal">VIGRA_DEFINE_ITERATORTRAITS(VIGRA_PIXELTYPE)</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_PIXELTYPE</highlight></codeline>
<codeline lineno="1191"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_PIXELTYPE<sp/>TinyVector&lt;short,<sp/>4&gt;</highlight></codeline>
<codeline lineno="1192"><highlight class="preprocessor"></highlight><highlight class="normal">VIGRA_DEFINE_ITERATORTRAITS(VIGRA_PIXELTYPE)</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_PIXELTYPE</highlight></codeline>
<codeline lineno="1194"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_PIXELTYPE<sp/>TinyVector&lt;int,<sp/>2&gt;</highlight></codeline>
<codeline lineno="1195"><highlight class="preprocessor"></highlight><highlight class="normal">VIGRA_DEFINE_ITERATORTRAITS(VIGRA_PIXELTYPE)</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_PIXELTYPE</highlight></codeline>
<codeline lineno="1197"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_PIXELTYPE<sp/>TinyVector&lt;int,<sp/>3&gt;</highlight></codeline>
<codeline lineno="1198"><highlight class="preprocessor"></highlight><highlight class="normal">VIGRA_DEFINE_ITERATORTRAITS(VIGRA_PIXELTYPE)</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_PIXELTYPE</highlight></codeline>
<codeline lineno="1200"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_PIXELTYPE<sp/>TinyVector&lt;int,<sp/>4&gt;</highlight></codeline>
<codeline lineno="1201"><highlight class="preprocessor"></highlight><highlight class="normal">VIGRA_DEFINE_ITERATORTRAITS(VIGRA_PIXELTYPE)</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_PIXELTYPE</highlight></codeline>
<codeline lineno="1203"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_PIXELTYPE<sp/>TinyVector&lt;float,<sp/>2&gt;</highlight></codeline>
<codeline lineno="1204"><highlight class="preprocessor"></highlight><highlight class="normal">VIGRA_DEFINE_ITERATORTRAITS(VIGRA_PIXELTYPE)</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_PIXELTYPE</highlight></codeline>
<codeline lineno="1206"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_PIXELTYPE<sp/>TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="1207"><highlight class="preprocessor"></highlight><highlight class="normal">VIGRA_DEFINE_ITERATORTRAITS(VIGRA_PIXELTYPE)</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_PIXELTYPE</highlight></codeline>
<codeline lineno="1209"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_PIXELTYPE<sp/>TinyVector&lt;float,<sp/>4&gt;</highlight></codeline>
<codeline lineno="1210"><highlight class="preprocessor"></highlight><highlight class="normal">VIGRA_DEFINE_ITERATORTRAITS(VIGRA_PIXELTYPE)</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_PIXELTYPE</highlight></codeline>
<codeline lineno="1212"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_PIXELTYPE<sp/>TinyVector&lt;double,<sp/>2&gt;</highlight></codeline>
<codeline lineno="1213"><highlight class="preprocessor"></highlight><highlight class="normal">VIGRA_DEFINE_ITERATORTRAITS(VIGRA_PIXELTYPE)</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_PIXELTYPE</highlight></codeline>
<codeline lineno="1215"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_PIXELTYPE<sp/>TinyVector&lt;double,<sp/>3&gt;</highlight></codeline>
<codeline lineno="1216"><highlight class="preprocessor"></highlight><highlight class="normal">VIGRA_DEFINE_ITERATORTRAITS(VIGRA_PIXELTYPE)</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_PIXELTYPE</highlight></codeline>
<codeline lineno="1218"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_PIXELTYPE<sp/>TinyVector&lt;double,<sp/>4&gt;</highlight></codeline>
<codeline lineno="1219"><highlight class="preprocessor"></highlight><highlight class="normal">VIGRA_DEFINE_ITERATORTRAITS(VIGRA_PIXELTYPE)</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_PIXELTYPE</highlight></codeline>
<codeline lineno="1221"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_DEFINE_ITERATORTRAITS</highlight></codeline>
<codeline lineno="1223"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>NO_PARTIAL_TEMPLATE_SPECIALIZATION</highlight></codeline>
<codeline lineno="1225"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PIXELTYPE&gt;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ConstValueIteratorPolicy</highlight></codeline>
<codeline lineno="1228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PIXELTYPE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_type;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>difference_type;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PIXELTYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reference;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PIXELTYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_reference;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PIXELTYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::random_access_iterator_tag<sp/>iterator_category;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">BaseType</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseType(PIXELTYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v<sp/>=<sp/>PIXELTYPE(),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>value(v),<sp/>pos(p)</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIXELTYPE<sp/>value;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initialize(BaseType<sp/>&amp;<sp/>d)<sp/>{}</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>reference<sp/>dereference(BaseType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d.value;<sp/>}</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>index_reference<sp/>dereference(BaseType<sp/>d,<sp/>difference_type)</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d.value;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>equal(BaseType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d1,<sp/>BaseType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d2)</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d1.pos<sp/>==<sp/>d2.pos;<sp/>}</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>less(BaseType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d1,<sp/>BaseType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d2)</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d1.pos<sp/>&lt;<sp/>d2.pos;<sp/>}</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>difference_type<sp/>difference(BaseType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d1,<sp/>BaseType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d2)</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d1.pos<sp/>-<sp/>d2.pos;<sp/>}</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>increment(BaseType<sp/>&amp;<sp/>d)</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>++d.pos;<sp/>}</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decrement(BaseType<sp/>&amp;<sp/>d)</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>--d.pos;<sp/>}</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>advance(BaseType<sp/>&amp;<sp/>d,<sp/>difference_type<sp/>n)</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>d.pos<sp/>+=<sp/>n;<sp/>}</highlight></codeline>
<codeline lineno="1275"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConstValueIterator<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1283"><highlight class="comment">/**<sp/>\brief<sp/>Iterator<sp/>that<sp/>always<sp/>returns<sp/>the<sp/>constant<sp/>specified<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="1284"><highlight class="comment"><sp/><sp/><sp/><sp/>constructor.</highlight></codeline>
<codeline lineno="1285"><highlight class="comment"></highlight></codeline>
<codeline lineno="1286"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>iterator<sp/>can<sp/>be<sp/>used<sp/>to<sp/>simulate<sp/>an<sp/>image<sp/>that</highlight></codeline>
<codeline lineno="1287"><highlight class="comment"><sp/><sp/><sp/><sp/>does<sp/>not<sp/>actually<sp/>exist.</highlight></codeline>
<codeline lineno="1288"><highlight class="comment"></highlight></codeline>
<codeline lineno="1289"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/imageiterator.hxx\&gt;</highlight></codeline>
<codeline lineno="1290"><highlight class="comment"></highlight></codeline>
<codeline lineno="1291"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="1292"><highlight class="comment"></highlight></codeline>
<codeline lineno="1293"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PIXELTYPE&gt;</highlight></codeline>
<codeline lineno="1295" refid="classvigra_1_1ConstValueIterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1ConstValueIterator" kindref="compound" tooltip="Iterator that always returns the constant specified in the constructor.">ConstValueIterator</ref></highlight></codeline>
<codeline lineno="1296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1298"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>The<sp/>type<sp/>of<sp/>the<sp/>constant<sp/>the<sp/>iterator<sp/>holds.</highlight></codeline>
<codeline lineno="1299"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300" refid="classvigra_1_1ConstValueIterator_1ad618f240f2b743f553b20beac68bbaf8" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PIXELTYPE<sp/><ref refid="classvigra_1_1ConstValueIterator_1ad618f240f2b743f553b20beac68bbaf8" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1302"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>The<sp/>type<sp/>of<sp/>the<sp/>constant<sp/>the<sp/>iterator<sp/>holds.</highlight></codeline>
<codeline lineno="1303"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304" refid="classvigra_1_1ConstValueIterator_1ac8456b73e94855de7203e3e337f2b872" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PIXELTYPE<sp/><ref refid="classvigra_1_1ConstValueIterator_1ac8456b73e94855de7203e3e337f2b872" kindref="member">PixelType</ref>;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1306"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>iterator&apos;s<sp/>reference<sp/>type<sp/>(return<sp/>type<sp/>of<sp/>&lt;TT&gt;*iter&lt;/TT&gt;)</highlight></codeline>
<codeline lineno="1307"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308" refid="classvigra_1_1ConstValueIterator_1a58b8fc4cc51122a6bfc20e65cc45b6b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PIXELTYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstValueIterator_1a58b8fc4cc51122a6bfc20e65cc45b6b5" kindref="member">reference</ref>;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1310"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>iterator&apos;s<sp/>index<sp/>reference<sp/>type<sp/>(return<sp/>type<sp/>of<sp/>&lt;TT&gt;iter[diff]&lt;/TT&gt;)</highlight></codeline>
<codeline lineno="1311"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312" refid="classvigra_1_1ConstValueIterator_1a3137295ff5928340d98ae934a935e941" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PIXELTYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstValueIterator_1a3137295ff5928340d98ae934a935e941" kindref="member">index_reference</ref>;</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1314"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>iterator&apos;s<sp/>pointer<sp/>type<sp/>(return<sp/>type<sp/>of<sp/>&lt;TT&gt;iter.operator-&gt;()&lt;/TT&gt;)</highlight></codeline>
<codeline lineno="1315"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316" refid="classvigra_1_1ConstValueIterator_1a762ea405aed44675de4d4198b8bb4a1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PIXELTYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstValueIterator_1a762ea405aed44675de4d4198b8bb4a1c" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1318"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>iterator&apos;s<sp/>difference<sp/>type<sp/>(argument<sp/>type<sp/>of<sp/>&lt;TT&gt;iter[diff]&lt;/TT&gt;)</highlight></codeline>
<codeline lineno="1319"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320" refid="classvigra_1_1ConstValueIterator_1afe1e2807a8c98a020588d6eeb28a1b7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1Diff2D" kindref="compound" tooltip="Two dimensional difference vector.">Diff2D</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstValueIterator_1afe1e2807a8c98a020588d6eeb28a1b7a" kindref="member">difference_type</ref>;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1322"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>iterator<sp/>tag<sp/>(image<sp/>traverser)</highlight></codeline>
<codeline lineno="1323"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324" refid="classvigra_1_1ConstValueIterator_1a93321121482225e0577a134820fc5c6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>image_traverser_tag<sp/><sp/><ref refid="classvigra_1_1ConstValueIterator_1a93321121482225e0577a134820fc5c6b" kindref="member">iterator_category</ref>;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1326"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>The<sp/>associated<sp/>row<sp/>iterator.</highlight></codeline>
<codeline lineno="1327"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328" refid="classvigra_1_1ConstValueIterator_1a91b545427f869c79d74f4bc6d2115c4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1IteratorAdaptor" kindref="compound" tooltip="Quickly create 1-dimensional iterator adapters.">IteratorAdaptor&lt;ConstValueIteratorPolicy&lt;PIXELTYPE&gt;</ref><sp/>&gt;<sp/><ref refid="classvigra_1_1ConstValueIterator_1a91b545427f869c79d74f4bc6d2115c4f" kindref="member">row_iterator</ref>;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1330"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>The<sp/>associated<sp/>column<sp/>iterator.</highlight></codeline>
<codeline lineno="1331"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332" refid="classvigra_1_1ConstValueIterator_1a8fb801ae08a56f7dee03b631562baa21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1IteratorAdaptor" kindref="compound" tooltip="Quickly create 1-dimensional iterator adapters.">IteratorAdaptor&lt;ConstValueIteratorPolicy&lt;PIXELTYPE&gt;</ref><sp/>&gt;<sp/><ref refid="classvigra_1_1ConstValueIterator_1a8fb801ae08a56f7dee03b631562baa21" kindref="member">column_iterator</ref>;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1334"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Let<sp/>operations<sp/>act<sp/>in<sp/>X<sp/>direction</highlight></codeline>
<codeline lineno="1335"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1336" refid="classvigra_1_1ConstValueIterator_1aa4c4fefd2a5efebe5e42a52e92c83a7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ConstValueIterator_1aa4c4fefd2a5efebe5e42a52e92c83a7c" kindref="member">MoveX</ref>;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1338"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Let<sp/>operations<sp/>act<sp/>in<sp/>Y<sp/>direction</highlight></codeline>
<codeline lineno="1339"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340" refid="classvigra_1_1ConstValueIterator_1a105936e41da9adee6af55d3bad567faa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ConstValueIterator_1a105936e41da9adee6af55d3bad567faa" kindref="member">MoveY</ref>;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1342"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Default<sp/>Constructor.<sp/>(the<sp/>constant<sp/>is<sp/>set<sp/>to</highlight></codeline>
<codeline lineno="1343"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;TT&gt;NumericTraits&lt;PIXELTYPE&gt;::zero()&lt;/TT&gt;<sp/>)</highlight></codeline>
<codeline lineno="1344"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1345" refid="classvigra_1_1ConstValueIterator_1ab56791b594d8e513c152a5851dcd2517" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstValueIterator_1ab56791b594d8e513c152a5851dcd2517" kindref="member">ConstValueIterator</ref>()</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>value_(NumericTraits&lt;PIXELTYPE&gt;::zero()),<sp/><ref refid="classvigra_1_1ConstValueIterator_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member" tooltip="refer to x coordinate">x</ref>(0),<sp/><ref refid="classvigra_1_1ConstValueIterator_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member" tooltip="refer to y coordinate">y</ref>(0)</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1349"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Construct<sp/>with<sp/>given<sp/>constant.</highlight></codeline>
<codeline lineno="1350"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351" refid="classvigra_1_1ConstValueIterator_1ae2b132c8d62cd039dc2a463c14165a94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstValueIterator_1ab56791b594d8e513c152a5851dcd2517" kindref="member">ConstValueIterator</ref>(<ref refid="classvigra_1_1ConstValueIterator_1ac8456b73e94855de7203e3e337f2b872" kindref="member">PixelType</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>value_(v),<sp/><ref refid="classvigra_1_1ConstValueIterator_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member" tooltip="refer to x coordinate">x</ref>(0),<sp/><ref refid="classvigra_1_1ConstValueIterator_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member" tooltip="refer to y coordinate">y</ref>(0)</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1355"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Copy<sp/>Constructor.</highlight></codeline>
<codeline lineno="1356"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1357" refid="classvigra_1_1ConstValueIterator_1a2b1bf70ff8c59ec099ad33883db91512" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstValueIterator_1ab56791b594d8e513c152a5851dcd2517" kindref="member">ConstValueIterator</ref>(<ref refid="classvigra_1_1ConstValueIterator" kindref="compound" tooltip="Iterator that always returns the constant specified in the constructor.">ConstValueIterator</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>value_(v.value_),<sp/><ref refid="classvigra_1_1ConstValueIterator_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member" tooltip="refer to x coordinate">x</ref>(v.<ref refid="classvigra_1_1ConstValueIterator_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member" tooltip="refer to x coordinate">x</ref>),<sp/><ref refid="classvigra_1_1ConstValueIterator_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member" tooltip="refer to y coordinate">y</ref>(v.<ref refid="classvigra_1_1ConstValueIterator_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member" tooltip="refer to y coordinate">y</ref>)</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1361"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Copy<sp/>Assigment.</highlight></codeline>
<codeline lineno="1362"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363" refid="classvigra_1_1ConstValueIterator_1a91b69513e910e93de3ff0a3e2575805c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstValueIterator" kindref="compound" tooltip="Iterator that always returns the constant specified in the constructor.">ConstValueIterator</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1ConstValueIterator_1a91b69513e910e93de3ff0a3e2575805c" kindref="member">operator=</ref>(<ref refid="classvigra_1_1ConstValueIterator" kindref="compound" tooltip="Iterator that always returns the constant specified in the constructor.">ConstValueIterator</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;v)</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_<sp/>=<sp/>v.value_;</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstValueIterator_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member" tooltip="refer to x coordinate">x</ref><sp/>=<sp/>v.<ref refid="classvigra_1_1ConstValueIterator_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member" tooltip="refer to x coordinate">x</ref>;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstValueIterator_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member" tooltip="refer to y coordinate">y</ref><sp/>=<sp/>v.<ref refid="classvigra_1_1ConstValueIterator_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member" tooltip="refer to y coordinate">y</ref>;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1374"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Move<sp/>iterator<sp/>by<sp/>specified<sp/>distance.</highlight></codeline>
<codeline lineno="1375"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376" refid="classvigra_1_1ConstValueIterator_1a732a6c0fa7935463f5e8922207e117a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstValueIterator" kindref="compound" tooltip="Iterator that always returns the constant specified in the constructor.">ConstValueIterator</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1ConstValueIterator_1a732a6c0fa7935463f5e8922207e117a5" kindref="member">operator+=</ref>(<ref refid="classvigra_1_1Diff2D" kindref="compound" tooltip="Two dimensional difference vector.">Diff2D</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstValueIterator_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member" tooltip="refer to x coordinate">x</ref><sp/>+=<sp/>d.<ref refid="classvigra_1_1Diff2D_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstValueIterator_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member" tooltip="refer to y coordinate">y</ref><sp/>+=<sp/>d.<ref refid="classvigra_1_1Diff2D_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1383"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Move<sp/>iterator<sp/>by<sp/>specified<sp/>distance.</highlight></codeline>
<codeline lineno="1384"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385" refid="classvigra_1_1ConstValueIterator_1afd0b8bc1c5840ecf08a8f0b71f187790" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstValueIterator" kindref="compound" tooltip="Iterator that always returns the constant specified in the constructor.">ConstValueIterator</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1ConstValueIterator_1afd0b8bc1c5840ecf08a8f0b71f187790" kindref="member">operator-=</ref>(<ref refid="classvigra_1_1Diff2D" kindref="compound" tooltip="Two dimensional difference vector.">Diff2D</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstValueIterator_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member" tooltip="refer to x coordinate">x</ref><sp/>-=<sp/>d.<ref refid="classvigra_1_1Diff2D_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstValueIterator_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member" tooltip="refer to y coordinate">y</ref><sp/>-=<sp/>d.<ref refid="classvigra_1_1Diff2D_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1392"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Create<sp/>iterator<sp/>at<sp/>specified<sp/>distance.</highlight></codeline>
<codeline lineno="1393"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1394" refid="classvigra_1_1ConstValueIterator_1aab6d328f995f903cb7c015cab55b2029" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstValueIterator" kindref="compound" tooltip="Iterator that always returns the constant specified in the constructor.">ConstValueIterator</ref><sp/><ref refid="classvigra_1_1ConstValueIterator_1aab6d328f995f903cb7c015cab55b2029" kindref="member">operator+</ref>(<ref refid="classvigra_1_1Diff2D" kindref="compound" tooltip="Two dimensional difference vector.">Diff2D</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1395"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstValueIterator" kindref="compound" tooltip="Iterator that always returns the constant specified in the constructor.">ConstValueIterator</ref><sp/>ret(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/>d;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1401"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Create<sp/>iterator<sp/>at<sp/>specified<sp/>distance.</highlight></codeline>
<codeline lineno="1402"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1403" refid="classvigra_1_1ConstValueIterator_1aec05aefa5e636888be07ebb4be1a86e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstValueIterator" kindref="compound" tooltip="Iterator that always returns the constant specified in the constructor.">ConstValueIterator</ref><sp/><ref refid="classvigra_1_1ConstValueIterator_1aec05aefa5e636888be07ebb4be1a86e2" kindref="member">operator-</ref>(<ref refid="classvigra_1_1Diff2D" kindref="compound" tooltip="Two dimensional difference vector.">Diff2D</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1404"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstValueIterator" kindref="compound" tooltip="Iterator that always returns the constant specified in the constructor.">ConstValueIterator</ref><sp/>ret(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>-=<sp/>d;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1410"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Compute<sp/>distance<sp/>between<sp/>two<sp/>iterators</highlight></codeline>
<codeline lineno="1411"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1412" refid="classvigra_1_1ConstValueIterator_1a3fdb04f858f54cbfb777cb0ebd1c45db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Diff2D" kindref="compound" tooltip="Two dimensional difference vector.">Diff2D</ref><sp/><ref refid="classvigra_1_1ConstValueIterator_1aec05aefa5e636888be07ebb4be1a86e2" kindref="member">operator-</ref>(<ref refid="classvigra_1_1ConstValueIterator" kindref="compound" tooltip="Iterator that always returns the constant specified in the constructor.">ConstValueIterator</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1413"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1Diff2D" kindref="compound" tooltip="Two dimensional difference vector.">Diff2D</ref>(<ref refid="classvigra_1_1ConstValueIterator_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member" tooltip="refer to x coordinate">x</ref><sp/>-<sp/>r.<ref refid="classvigra_1_1ConstValueIterator_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member" tooltip="refer to x coordinate">x</ref>,<sp/><ref refid="classvigra_1_1ConstValueIterator_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member" tooltip="refer to y coordinate">y</ref><sp/>-<sp/>r.<ref refid="classvigra_1_1ConstValueIterator_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member" tooltip="refer to y coordinate">y</ref>);</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1417"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Equality.</highlight></codeline>
<codeline lineno="1418"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1419" refid="classvigra_1_1ConstValueIterator_1a80c1286afd304bb9dd8a3d52b83459b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ConstValueIterator_1a80c1286afd304bb9dd8a3d52b83459b7" kindref="member">operator==</ref>(<ref refid="classvigra_1_1ConstValueIterator" kindref="compound" tooltip="Iterator that always returns the constant specified in the constructor.">ConstValueIterator</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1420"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classvigra_1_1ConstValueIterator_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member" tooltip="refer to x coordinate">x</ref><sp/>==<sp/>r.<ref refid="classvigra_1_1ConstValueIterator_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member" tooltip="refer to x coordinate">x</ref>)<sp/>&amp;&amp;<sp/>(<ref refid="classvigra_1_1ConstValueIterator_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member" tooltip="refer to y coordinate">y</ref><sp/>==<sp/>r.<ref refid="classvigra_1_1ConstValueIterator_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member" tooltip="refer to y coordinate">y</ref>);</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1424"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Inequality.</highlight></codeline>
<codeline lineno="1425"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1426" refid="classvigra_1_1ConstValueIterator_1a44094c694a013bebdd0b7ec535020f29" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ConstValueIterator_1a44094c694a013bebdd0b7ec535020f29" kindref="member">operator!=</ref>(<ref refid="classvigra_1_1ConstValueIterator" kindref="compound" tooltip="Iterator that always returns the constant specified in the constructor.">ConstValueIterator</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1427"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classvigra_1_1ConstValueIterator_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member" tooltip="refer to x coordinate">x</ref><sp/>!=<sp/>r.<ref refid="classvigra_1_1ConstValueIterator_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member" tooltip="refer to x coordinate">x</ref>)<sp/>||<sp/>(<ref refid="classvigra_1_1ConstValueIterator_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member" tooltip="refer to y coordinate">y</ref><sp/>!=<sp/>r.<ref refid="classvigra_1_1ConstValueIterator_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member" tooltip="refer to y coordinate">y</ref>);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1431"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Read<sp/>current<sp/>pixel<sp/>(return<sp/>specified<sp/>constant).</highlight></codeline>
<codeline lineno="1432"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1433" refid="classvigra_1_1ConstValueIterator_1aa149c2249879e7727f33688b76bf2c99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstValueIterator_1a58b8fc4cc51122a6bfc20e65cc45b6b5" kindref="member">reference</ref><sp/><ref refid="classvigra_1_1ConstValueIterator_1aa149c2249879e7727f33688b76bf2c99" kindref="member">operator*</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1434"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1438"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Call<sp/>member<sp/>function<sp/>for<sp/>stored<sp/>constant.</highlight></codeline>
<codeline lineno="1439"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1440" refid="classvigra_1_1ConstValueIterator_1a33ce448509e9cc0d73861e4c1919c7a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstValueIterator_1a762ea405aed44675de4d4198b8bb4a1c" kindref="member">pointer</ref><sp/><ref refid="classvigra_1_1ConstValueIterator_1a33ce448509e9cc0d73861e4c1919c7a7" kindref="member">operator-&gt;</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1441"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;value_;</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1445"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Read<sp/>pixel<sp/>at<sp/>a<sp/>distance<sp/>(return<sp/>specified<sp/>constant).</highlight></codeline>
<codeline lineno="1446"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1447" refid="classvigra_1_1ConstValueIterator_1a6a3817c5fff4971a88053cce7de63ee2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstValueIterator_1a3137295ff5928340d98ae934a935e941" kindref="member">index_reference</ref><sp/><ref refid="classvigra_1_1ConstValueIterator_1a6a3817c5fff4971a88053cce7de63ee2" kindref="member">operator()</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1448"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1452"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Read<sp/>pixel<sp/>at<sp/>a<sp/>distance<sp/>(return<sp/>specified<sp/>constant).</highlight></codeline>
<codeline lineno="1453"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1454" refid="classvigra_1_1ConstValueIterator_1a68944554d4fb26f09d1421c78664f719" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstValueIterator_1a3137295ff5928340d98ae934a935e941" kindref="member">index_reference</ref><sp/><ref refid="classvigra_1_1ConstValueIterator_1a68944554d4fb26f09d1421c78664f719" kindref="member">operator[]</ref>(<ref refid="classvigra_1_1Diff2D" kindref="compound" tooltip="Two dimensional difference vector.">Diff2D</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1455"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1459"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Get<sp/>row<sp/>iterator<sp/>at<sp/>current<sp/>position<sp/>(which<sp/>will<sp/>also<sp/>hold<sp/>the<sp/>constant).</highlight></codeline>
<codeline lineno="1460"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1461" refid="classvigra_1_1ConstValueIterator_1aa2bdf3366707a82f91662aa6be95c089" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1IteratorAdaptor" kindref="compound" tooltip="Quickly create 1-dimensional iterator adapters.">row_iterator</ref><sp/><ref refid="classvigra_1_1ConstValueIterator_1aa2bdf3366707a82f91662aa6be95c089" kindref="member">rowIterator</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1462"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ConstValueIterator_1a91b545427f869c79d74f4bc6d2115c4f" kindref="member">row_iterator</ref>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>row_iterator::BaseType(value_,<sp/><ref refid="classvigra_1_1ConstValueIterator_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member" tooltip="refer to x coordinate">x</ref>));<sp/>}</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1464"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Get<sp/>column<sp/>iterator<sp/>at<sp/>current<sp/>position<sp/>(which<sp/>will<sp/>also<sp/>hold<sp/>the<sp/>constant).</highlight></codeline>
<codeline lineno="1465"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1466" refid="classvigra_1_1ConstValueIterator_1a54e53eb066a57f8b02249326e9529957" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1IteratorAdaptor" kindref="compound" tooltip="Quickly create 1-dimensional iterator adapters.">column_iterator</ref><sp/><ref refid="classvigra_1_1ConstValueIterator_1a54e53eb066a57f8b02249326e9529957" kindref="member">columnIterator</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1467"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ConstValueIterator_1a8fb801ae08a56f7dee03b631562baa21" kindref="member">column_iterator</ref>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>column_iterator::BaseType(value_,<sp/><ref refid="classvigra_1_1ConstValueIterator_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member" tooltip="refer to y coordinate">y</ref>));<sp/>}</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1469"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>@name<sp/>Specify<sp/>coordinate<sp/>direction<sp/>for<sp/>navigation<sp/>commands<sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1470"><highlight class="comment"><sp/><sp/><sp/><sp/>//@{</highlight></codeline>
<codeline lineno="1471"><highlight class="comment"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>refer<sp/>to<sp/>x<sp/>coordinate</highlight></codeline>
<codeline lineno="1472" refid="classvigra_1_1ConstValueIterator_1a6150e0515f7202e2fb518f7206ed97dc" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ConstValueIterator_1a6150e0515f7202e2fb518f7206ed97dc" kindref="member" tooltip="refer to x coordinate">x</ref>;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1473"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///<sp/>refer<sp/>to<sp/>y<sp/>coordinate</highlight></codeline>
<codeline lineno="1474" refid="classvigra_1_1ConstValueIterator_1a0a2f84ed7838f07779ae24c5a9086d33" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ConstValueIterator_1a0a2f84ed7838f07779ae24c5a9086d33" kindref="member" tooltip="refer to y coordinate">y</ref>;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1475"><highlight class="comment"><sp/><sp/><sp/><sp/>//@}</highlight></codeline>
<codeline lineno="1476"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ConstValueIterator_1ac8456b73e94855de7203e3e337f2b872" kindref="member">PixelType</ref><sp/>value_;</highlight></codeline>
<codeline lineno="1480"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NO_PARTIAL_TEMPLATE_SPECIALIZATION</highlight></codeline>
<codeline lineno="1483"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structvigra_1_1IteratorTraits" kindref="compound" tooltip="Export associated information for each image iterator.">IteratorTraits</ref>&lt;<ref refid="classvigra_1_1ConstValueIterator" kindref="compound" tooltip="Iterator that always returns the constant specified in the constructor.">ConstValueIterator</ref>&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ConstValueIterator" kindref="compound" tooltip="Iterator that always returns the constant specified in the constructor.">ConstValueIterator&lt;T&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Iterator;</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Iterator<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator;</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>iterator::iterator_category<sp/><sp/><sp/>iterator_category;</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>iterator::value_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_type;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>iterator::reference<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reference;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>iterator::index_reference<sp/><sp/><sp/><sp/><sp/>index_reference;</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>iterator::pointer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>iterator::difference_type<sp/><sp/><sp/><sp/><sp/>difference_type;</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>iterator::row_iterator<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row_iterator;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>iterator::column_iterator<sp/><sp/><sp/><sp/><sp/>column_iterator;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StandardConstAccessor" kindref="compound" tooltip="Encapsulate read access to the values an iterator points to.">StandardConstAccessor&lt;T&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DefaultAccessor;</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StandardConstAccessor" kindref="compound" tooltip="Encapsulate read access to the values an iterator points to.">StandardConstAccessor&lt;T&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_accessor;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasConstantStrides;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1503"><highlight class="preprocessor"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1504"><highlight class="comment">/**<sp/>\brief<sp/>Simulate<sp/>an<sp/>image<sp/>where<sp/>each<sp/>pixel<sp/>contains<sp/>its<sp/>coordinate.</highlight></codeline>
<codeline lineno="1505"><highlight class="comment"></highlight></codeline>
<codeline lineno="1506"><highlight class="comment"><sp/><sp/><sp/><sp/>CoordinateIterator<sp/>used<sp/>to<sp/>be<sp/>a<sp/>separate<sp/>class,</highlight></codeline>
<codeline lineno="1507"><highlight class="comment"><sp/><sp/><sp/><sp/>but<sp/>has<sp/>now<sp/>become<sp/>an<sp/>alias<sp/>for<sp/>\ref<sp/>vigra::Diff2D.<sp/>This<sp/>is<sp/>possible<sp/>because</highlight></codeline>
<codeline lineno="1508"><highlight class="comment"><sp/><sp/><sp/><sp/>Diff2D<sp/>now<sp/>provides<sp/>all<sp/>the<sp/>necessary<sp/>functionality.</highlight></codeline>
<codeline lineno="1509"><highlight class="comment"></highlight></codeline>
<codeline lineno="1510"><highlight class="comment"><sp/><sp/><sp/><sp/>CoordinateIterator<sp/>behaves<sp/>like<sp/>a<sp/>read-only<sp/>\ref<sp/>vigra::ImageIterator<sp/>for</highlight></codeline>
<codeline lineno="1511"><highlight class="comment"><sp/><sp/><sp/><sp/>an<sp/>image<sp/>in<sp/>which<sp/>each<sp/>pixel<sp/>contains<sp/>its<sp/>coordinate.<sp/>This<sp/>is<sp/>useful<sp/>for</highlight></codeline>
<codeline lineno="1512"><highlight class="comment"><sp/><sp/><sp/><sp/>algorithms<sp/>that<sp/>need<sp/>access<sp/>to<sp/>the<sp/>current<sp/>pixel&apos;s<sp/>location.</highlight></codeline>
<codeline lineno="1513"><highlight class="comment"><sp/><sp/><sp/><sp/>For<sp/>example,<sp/>you<sp/>can<sp/>use<sp/>CoordinateIterator/Diff2D<sp/>to</highlight></codeline>
<codeline lineno="1514"><highlight class="comment"><sp/><sp/><sp/><sp/>find<sp/>the<sp/>center<sp/>of<sp/>mass<sp/>of<sp/>an<sp/>image<sp/>region.<sp/>To<sp/>implement<sp/>this,</highlight></codeline>
<codeline lineno="1515"><highlight class="comment"><sp/><sp/><sp/><sp/>we<sp/>first<sp/>need<sp/>a<sp/>functor<sp/>for<sp/>center-of-mass<sp/>calculations:</highlight></codeline>
<codeline lineno="1516"><highlight class="comment"></highlight></codeline>
<codeline lineno="1517"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1518"><highlight class="comment"></highlight></codeline>
<codeline lineno="1519"><highlight class="comment"><sp/><sp/><sp/><sp/>struct<sp/>CenterOfMassFunctor</highlight></codeline>
<codeline lineno="1520"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1521"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CenterOfMassFunctor()</highlight></codeline>
<codeline lineno="1522"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>x(0.0),<sp/>y(0.0),<sp/>size(0)</highlight></codeline>
<codeline lineno="1523"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1524"><highlight class="comment"></highlight></codeline>
<codeline lineno="1525"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>operator()(Diff2d<sp/>const&amp;<sp/>diff)</highlight></codeline>
<codeline lineno="1526"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1527"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++size;</highlight></codeline>
<codeline lineno="1528"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>diff.x;</highlight></codeline>
<codeline lineno="1529"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>diff.y;</highlight></codeline>
<codeline lineno="1530"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1531"><highlight class="comment"></highlight></codeline>
<codeline lineno="1532"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>xCenter()<sp/>const</highlight></codeline>
<codeline lineno="1533"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>return<sp/>x<sp/>/<sp/>size;<sp/>}</highlight></codeline>
<codeline lineno="1534"><highlight class="comment"></highlight></codeline>
<codeline lineno="1535"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>yCenter()<sp/>const</highlight></codeline>
<codeline lineno="1536"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>return<sp/>y<sp/>/<sp/>size;<sp/>}</highlight></codeline>
<codeline lineno="1537"><highlight class="comment"></highlight></codeline>
<codeline lineno="1538"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>x;</highlight></codeline>
<codeline lineno="1539"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>y;</highlight></codeline>
<codeline lineno="1540"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>size;</highlight></codeline>
<codeline lineno="1541"><highlight class="comment"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1542"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1543"><highlight class="comment"></highlight></codeline>
<codeline lineno="1544"><highlight class="comment"><sp/><sp/><sp/><sp/>Using<sp/>this<sp/>functor,<sp/>we<sp/>find<sp/>the<sp/>center<sp/>of<sp/>mass<sp/>like<sp/>so:</highlight></codeline>
<codeline lineno="1545"><highlight class="comment"></highlight></codeline>
<codeline lineno="1546"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1547"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BImage<sp/>img(w,h);</highlight></codeline>
<codeline lineno="1548"><highlight class="comment"><sp/><sp/><sp/><sp/>...<sp/>//<sp/>mark<sp/>a<sp/>region<sp/>in<sp/>the<sp/>image<sp/>with<sp/>&apos;1&apos;,<sp/>background<sp/>with<sp/>&apos;0&apos;</highlight></codeline>
<codeline lineno="1549"><highlight class="comment"></highlight></codeline>
<codeline lineno="1550"><highlight class="comment"><sp/><sp/><sp/><sp/>CenterOfMassFunctor<sp/>center;</highlight></codeline>
<codeline lineno="1551"><highlight class="comment"></highlight></codeline>
<codeline lineno="1552"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::inspectImageIf(</highlight></codeline>
<codeline lineno="1553"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcIterRange(Diff2D(),<sp/>Diff2D()<sp/>+<sp/>img.size()),</highlight></codeline>
<codeline lineno="1554"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcImage(img),</highlight></codeline>
<codeline lineno="1555"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>center);</highlight></codeline>
<codeline lineno="1556"><highlight class="comment"></highlight></codeline>
<codeline lineno="1557"><highlight class="comment"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;Center<sp/>of<sp/>mass:<sp/>&quot;<sp/>&lt;&lt;<sp/>center.xCenter()<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="1558"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;,<sp/>&quot;<sp/>&lt;&lt;<sp/>center.yCenter()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1559"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1560"><highlight class="comment"></highlight></codeline>
<codeline lineno="1561"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/imageiterator.hxx\&gt;</highlight></codeline>
<codeline lineno="1562"><highlight class="comment"></highlight></codeline>
<codeline lineno="1563"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="1564"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1565" refid="group__ImageIterators_1ga110ba64ad5460bac151be32b748da74b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1Diff2D" kindref="compound" tooltip="Two dimensional difference vector.">Diff2D</ref><sp/><ref refid="group__ImageIterators_1ga110ba64ad5460bac151be32b748da74b" kindref="member" tooltip="Simulate an image where each pixel contains its coordinate.">CoordinateIterator</ref>;</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1567"><highlight class="comment">//@}</highlight></codeline>
<codeline lineno="1568"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>vigra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>VIGRA_IMAGEITERATOR_HXX</highlight></codeline>
    </programlisting>
    <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/imageiterator.hxx"/>
  </compounddef>
</doxygen>
