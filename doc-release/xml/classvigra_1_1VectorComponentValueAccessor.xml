<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="classvigra_1_1VectorComponentValueAccessor" kind="class" prot="public">
    <compoundname>vigra::VectorComponentValueAccessor</compoundname>
    <includes refid="accessor_8hxx" local="no">vigra/accessor.hxx</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>VECTORTYPE</declname>
        <defname>VECTORTYPE</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classvigra_1_1VectorComponentValueAccessor_1adbf17926ea681d4e56c96d16c7d6b73f" prot="public" static="no">
        <type>VECTORTYPE::value_type</type>
        <definition>typedef VECTORTYPE::value_type value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the value_type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" line="454" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" bodystart="454" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvigra_1_1VectorComponentValueAccessor_1aaaf1ac02dfa554a3cdffc647d512a77b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int index_</definition>
        <argsstring></argsstring>
        <name>index_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" line="450" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" bodystart="450" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvigra_1_1VectorComponentValueAccessor_1ae9de5fbb33af2eb53b4253158f26f501" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ITERATOR</type>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1VectorComponentValueAccessor_1adbf17926ea681d4e56c96d16c7d6b73f" kindref="member">value_type</ref></type>
        <definition>value_type operator()</definition>
        <argsstring>(ITERATOR const &amp;i) const </argsstring>
        <name>operator()</name>
        <param>
          <type>ITERATOR const &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read the current data item. The type <computeroutput>ITERATOR::index_reference::value_type</computeroutput> is automatically converted to <computeroutput>value_type</computeroutput>. In case of a conversion floating point -&gt; integral this includes rounding and clipping. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" line="469" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" bodystart="468" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1VectorComponentValueAccessor_1a8dd87b019eb9ddb6c1ce2aff88ec67d0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ITERATOR</type>
          </param>
          <param>
            <type>class DIFFERENCE</type>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1VectorComponentValueAccessor_1adbf17926ea681d4e56c96d16c7d6b73f" kindref="member">value_type</ref></type>
        <definition>value_type operator()</definition>
        <argsstring>(ITERATOR const &amp;i, DIFFERENCE const &amp;diff) const </argsstring>
        <name>operator()</name>
        <param>
          <type>ITERATOR const &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>DIFFERENCE const &amp;</type>
          <declname>diff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read the data item at an offset (can be 1D or 2D or higher order difference). The type <computeroutput>ITERATOR::index_reference::value_type</computeroutput> is automatically converted to <computeroutput>value_type</computeroutput>. In case of a conversion floating point -&gt; integral this includes rounding and clipping. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" line="478" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" bodystart="477" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1VectorComponentValueAccessor_1ab8a7388dced872227daaa1d0f563c54e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class ITERATOR</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void set</definition>
        <argsstring>(V value, ITERATOR const &amp;i) const </argsstring>
        <name>set</name>
        <param>
          <type>V</type>
          <declname>value</declname>
        </param>
        <param>
          <type>ITERATOR const &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write the current data item. The type <computeroutput>V</computeroutput> of the passed in <computeroutput>value</computeroutput> is automatically converted to <computeroutput>value_type</computeroutput>. In case of a conversion floating point -&gt; integral this includes rounding and clipping. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" line="488" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" bodystart="487" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1VectorComponentValueAccessor_1ad5d06809bf9f223ea38a9061f123b3b7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
          <param>
            <type>class ITERATOR</type>
          </param>
          <param>
            <type>class DIFFERENCE</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void set</definition>
        <argsstring>(V value, ITERATOR const &amp;i, DIFFERENCE const &amp;diff) const </argsstring>
        <name>set</name>
        <param>
          <type>V</type>
          <declname>value</declname>
        </param>
        <param>
          <type>ITERATOR const &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>DIFFERENCE const &amp;</type>
          <declname>diff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write the data item at an offset (can be 1D or 2D or higher order difference).. The type <computeroutput>V</computeroutput> of the passed in <computeroutput>value</computeroutput> is automatically converted to <computeroutput>value_type</computeroutput>. In case of a conversion floating point -&gt; integral this includes rounding and clipping. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" line="499" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" bodystart="498" bodyend="501"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1VectorComponentValueAccessor_1a5f6dddb34141ffe1bb4373bbc12f2412" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void setIndex</definition>
        <argsstring>(int i)</argsstring>
        <name>setIndex</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset the index to the given number. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" line="506" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" bodystart="505" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1VectorComponentValueAccessor_1a8f815f4fca71ae71636aafecac7772e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>VectorComponentValueAccessor</definition>
        <argsstring>(int index)</argsstring>
        <name>VectorComponentValueAccessor</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>determine the component to be accessed </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" line="460" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" bodystart="458" bodyend="460"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Accessor for one component of a vector. </para>    </briefdescription>
    <detaileddescription>
<para>This accessor allows to select a single component (a single &apos;band&apos;) of a vector valued pixel type. The pixel type must support <computeroutput>operator[]</computeroutput>. The index of the component to be selected is passed in the constructor. The accessor returns its items <emphasis>by value</emphasis>. If you want to pass/return items by reference, use <ref refid="classvigra_1_1VectorComponentAccessor" kindref="compound">VectorComponentAccessor</ref>. If a floating point number is assigned by means of an accessor with integral value_type, the value is rounded and clipped as appropriate.</para><para><bold>Usage:</bold></para><para><programlisting><codeline><highlight class="normal"><ref refid="classvigra_1_1BasicImage" kindref="compound" tooltip="Fundamental class template for images.">vigra::BRGBImage</ref><sp/>image(w,h);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>init<sp/>red<sp/>channel<sp/>with<sp/>255</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="group__InitAlgo_1gaf6b3011611521bbc1c3e4dc619d1481e" kindref="member" tooltip="Write a value to every pixel in an image or rectangular ROI.">initImage</ref>(destImageRange(image,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VectorComponentValueAccessor&lt;vigra::BRGBImage::value_type&gt;(0)),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>255);</highlight></codeline>
</programlisting></para><para><bold>#include</bold> &lt;<ref refid="accessor_8hxx_source" kindref="compound">vigra/accessor.hxx</ref>&gt;<linebreak/>
 Namespace: vigra </para>    </detaileddescription>
    <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" line="449" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" bodystart="448" bodyend="509"/>
    <listofallmembers>
      <member refid="classvigra_1_1VectorComponentValueAccessor_1aaaf1ac02dfa554a3cdffc647d512a77b" prot="private" virt="non-virtual"><scope>vigra::VectorComponentValueAccessor</scope><name>index_</name></member>
      <member refid="classvigra_1_1VectorComponentValueAccessor_1ae9de5fbb33af2eb53b4253158f26f501" prot="public" virt="non-virtual"><scope>vigra::VectorComponentValueAccessor</scope><name>operator()</name></member>
      <member refid="classvigra_1_1VectorComponentValueAccessor_1a8dd87b019eb9ddb6c1ce2aff88ec67d0" prot="public" virt="non-virtual"><scope>vigra::VectorComponentValueAccessor</scope><name>operator()</name></member>
      <member refid="classvigra_1_1VectorComponentValueAccessor_1ab8a7388dced872227daaa1d0f563c54e" prot="public" virt="non-virtual"><scope>vigra::VectorComponentValueAccessor</scope><name>set</name></member>
      <member refid="classvigra_1_1VectorComponentValueAccessor_1ad5d06809bf9f223ea38a9061f123b3b7" prot="public" virt="non-virtual"><scope>vigra::VectorComponentValueAccessor</scope><name>set</name></member>
      <member refid="classvigra_1_1VectorComponentValueAccessor_1a5f6dddb34141ffe1bb4373bbc12f2412" prot="public" virt="non-virtual"><scope>vigra::VectorComponentValueAccessor</scope><name>setIndex</name></member>
      <member refid="classvigra_1_1VectorComponentValueAccessor_1adbf17926ea681d4e56c96d16c7d6b73f" prot="public" virt="non-virtual"><scope>vigra::VectorComponentValueAccessor</scope><name>value_type</name></member>
      <member refid="classvigra_1_1VectorComponentValueAccessor_1a8f815f4fca71ae71636aafecac7772e2" prot="public" virt="non-virtual"><scope>vigra::VectorComponentValueAccessor</scope><name>VectorComponentValueAccessor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
