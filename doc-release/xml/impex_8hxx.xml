<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="impex_8hxx" kind="file">
    <compoundname>impex.hxx</compoundname>
    <includes refid="sized__int_8hxx" local="yes">sized_int.hxx</includes>
    <includes refid="stdimage_8hxx" local="yes">stdimage.hxx</includes>
    <includes refid="tinyvector_8hxx" local="yes">tinyvector.hxx</includes>
    <includes refid="imageinfo_8hxx" local="yes">imageinfo.hxx</includes>
    <includes refid="numerictraits_8hxx" local="yes">numerictraits.hxx</includes>
    <includes refid="codec_8hxx" local="yes">codec.hxx</includes>
    <includes refid="accessor_8hxx" local="yes">accessor.hxx</includes>
    <includes refid="inspectimage_8hxx" local="yes">inspectimage.hxx</includes>
    <includes refid="transformimage_8hxx" local="yes">transformimage.hxx</includes>
    <includes refid="copyimage_8hxx" local="yes">copyimage.hxx</includes>
    <includes refid="multi__array_8hxx" local="yes">multi_array.hxx</includes>
    <includes local="no">typeinfo</includes>
    <includes local="no">iostream</includes>
    <includedby refid="hdf5impex_8hxx" local="yes">vigra/hdf5impex.hxx</includedby>
    <includedby refid="multi__impex_8hxx" local="yes">vigra/multi_impex.hxx</includedby>
    <includedby refid="tv__filter_8hxx" local="yes">vigra/tv_filter.hxx</includedby>
    <incdepgraph>
      <node id="3035">
        <label>functional</label>
      </node>
      <node id="3007">
        <label>limits</label>
      </node>
      <node id="3012">
        <label>basicimage.hxx</label>
        <link refid="basicimage_8hxx_source"/>
        <childnode refid="3013" relation="include">
        </childnode>
        <childnode refid="3008" relation="include">
        </childnode>
        <childnode refid="3014" relation="include">
        </childnode>
        <childnode refid="3023" relation="include">
        </childnode>
        <childnode refid="3024" relation="include">
        </childnode>
        <childnode refid="3036" relation="include">
        </childnode>
      </node>
      <node id="3001">
        <label>sized_int.hxx</label>
        <link refid="sized__int_8hxx_source"/>
        <childnode refid="3002" relation="include">
        </childnode>
        <childnode refid="3007" relation="include">
        </childnode>
      </node>
      <node id="3022">
        <label>iterator</label>
      </node>
      <node id="3050">
        <label>multi_array.hxx</label>
        <link refid="multi__array_8hxx_source"/>
        <childnode refid="3013" relation="include">
        </childnode>
        <childnode refid="3008" relation="include">
        </childnode>
        <childnode refid="3024" relation="include">
        </childnode>
        <childnode refid="3038" relation="include">
        </childnode>
        <childnode refid="3037" relation="include">
        </childnode>
        <childnode refid="3051" relation="include">
        </childnode>
        <childnode refid="3052" relation="include">
        </childnode>
        <childnode refid="3025" relation="include">
        </childnode>
        <childnode refid="3044" relation="include">
        </childnode>
        <childnode refid="3002" relation="include">
        </childnode>
        <childnode refid="3031" relation="include">
        </childnode>
      </node>
      <node id="3034">
        <label>inspector_passes.hxx</label>
        <link refid="inspector__passes_8hxx_source"/>
        <childnode refid="3002" relation="include">
        </childnode>
      </node>
      <node id="3028">
        <label>promote_traits.hxx</label>
        <link refid="promote__traits_8hxx_source"/>
      </node>
      <node id="3053">
        <label>initimage.hxx</label>
        <link refid="initimage_8hxx_source"/>
        <childnode refid="3014" relation="include">
        </childnode>
        <childnode refid="3023" relation="include">
        </childnode>
        <childnode refid="3047" relation="include">
        </childnode>
      </node>
      <node id="3033">
        <label>algorithm.hxx</label>
        <link refid="algorithm_8hxx_source"/>
        <childnode refid="3001" relation="include">
        </childnode>
        <childnode refid="3025" relation="include">
        </childnode>
        <childnode refid="3034" relation="include">
        </childnode>
        <childnode refid="3008" relation="include">
        </childnode>
        <childnode refid="3035" relation="include">
        </childnode>
        <childnode refid="3022" relation="include">
        </childnode>
      </node>
      <node id="3019">
        <label>cmath</label>
      </node>
      <node id="3005">
        <label>stdexcept</label>
      </node>
      <node id="3047">
        <label>functortraits.hxx</label>
        <link refid="functortraits_8hxx_source"/>
        <childnode refid="3035" relation="include">
        </childnode>
        <childnode refid="3002" relation="include">
        </childnode>
      </node>
      <node id="3021">
        <label>iteratortags.hxx</label>
        <link refid="iteratortags_8hxx_source"/>
        <childnode refid="3022" relation="include">
        </childnode>
      </node>
      <node id="3017">
        <label>string</label>
      </node>
      <node id="3049">
        <label>copyimage.hxx</label>
        <link refid="copyimage_8hxx_source"/>
        <childnode refid="3014" relation="include">
        </childnode>
      </node>
      <node id="3051">
        <label>basicimageview.hxx</label>
        <link refid="basicimageview_8hxx_source"/>
        <childnode refid="3052" relation="include">
        </childnode>
        <childnode refid="3053" relation="include">
        </childnode>
      </node>
      <node id="3023">
        <label>iteratortraits.hxx</label>
        <link refid="iteratortraits_8hxx_source"/>
        <childnode refid="3024" relation="include">
        </childnode>
        <childnode refid="3029" relation="include">
        </childnode>
      </node>
      <node id="3026">
        <label>cfloat</label>
      </node>
      <node id="3014">
        <label>utilities.hxx</label>
        <link refid="utilities_8hxx_source"/>
        <childnode refid="3003" relation="include">
        </childnode>
        <childnode refid="3015" relation="include">
        </childnode>
        <childnode refid="3002" relation="include">
        </childnode>
        <childnode refid="3010" relation="include">
        </childnode>
        <childnode refid="3018" relation="include">
        </childnode>
        <childnode refid="3031" relation="include">
        </childnode>
        <childnode refid="3017" relation="include">
        </childnode>
        <childnode refid="3016" relation="include">
        </childnode>
      </node>
      <node id="3004">
        <label>vigra/configVersion.hxx</label>
        <link refid="configVersion_8hxx_source"/>
      </node>
      <node id="3048">
        <label>transformimage.hxx</label>
        <link refid="transformimage_8hxx_source"/>
        <childnode refid="3014" relation="include">
        </childnode>
        <childnode refid="3025" relation="include">
        </childnode>
        <childnode refid="3023" relation="include">
        </childnode>
        <childnode refid="3037" relation="include">
        </childnode>
        <childnode refid="3047" relation="include">
        </childnode>
        <childnode refid="3046" relation="include">
        </childnode>
      </node>
      <node id="3010">
        <label>tuple.hxx</label>
        <link refid="tuple_8hxx_source"/>
        <childnode refid="3011" relation="include">
        </childnode>
      </node>
      <node id="3041">
        <label>codec.hxx</label>
        <link refid="codec_8hxx_source"/>
        <childnode refid="3013" relation="include">
        </childnode>
        <childnode refid="3017" relation="include">
        </childnode>
        <childnode refid="3042" relation="include">
        </childnode>
        <childnode refid="3043" relation="include">
        </childnode>
        <childnode refid="3003" relation="include">
        </childnode>
        <childnode refid="3018" relation="include">
        </childnode>
        <childnode refid="3001" relation="include">
        </childnode>
      </node>
      <node id="3038">
        <label>tinyvector.hxx</label>
        <link refid="tinyvector_8hxx_source"/>
        <childnode refid="3019" relation="include">
        </childnode>
        <childnode refid="3032" relation="include">
        </childnode>
        <childnode refid="3020" relation="include">
        </childnode>
        <childnode refid="3008" relation="include">
        </childnode>
        <childnode refid="3003" relation="include">
        </childnode>
        <childnode refid="3015" relation="include">
        </childnode>
        <childnode refid="3002" relation="include">
        </childnode>
        <childnode refid="3025" relation="include">
        </childnode>
        <childnode refid="3036" relation="include">
        </childnode>
        <childnode refid="3031" relation="include">
        </childnode>
        <childnode refid="3018" relation="include">
        </childnode>
      </node>
      <node id="3045">
        <label>sys/types.h</label>
      </node>
      <node id="3009">
        <label>stdimage.hxx</label>
        <link refid="stdimage_8hxx_source"/>
        <childnode refid="3001" relation="include">
        </childnode>
        <childnode refid="3010" relation="include">
        </childnode>
        <childnode refid="3012" relation="include">
        </childnode>
        <childnode refid="3023" relation="include">
        </childnode>
        <childnode refid="3024" relation="include">
        </childnode>
        <childnode refid="3037" relation="include">
        </childnode>
      </node>
      <node id="3054">
        <label>typeinfo</label>
      </node>
      <node id="3046">
        <label>inspectimage.hxx</label>
        <link refid="inspectimage_8hxx_source"/>
        <childnode refid="3042" relation="include">
        </childnode>
        <childnode refid="3008" relation="include">
        </childnode>
        <childnode refid="3014" relation="include">
        </childnode>
        <childnode refid="3025" relation="include">
        </childnode>
        <childnode refid="3023" relation="include">
        </childnode>
        <childnode refid="3047" relation="include">
        </childnode>
        <childnode refid="3037" relation="include">
        </childnode>
        <childnode refid="3034" relation="include">
        </childnode>
      </node>
      <node id="3031">
        <label>mathutil.hxx</label>
        <link refid="mathutil_8hxx_source"/>
        <childnode refid="3019" relation="include">
        </childnode>
        <childnode refid="3032" relation="include">
        </childnode>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3003" relation="include">
        </childnode>
        <childnode refid="3015" relation="include">
        </childnode>
        <childnode refid="3010" relation="include">
        </childnode>
        <childnode refid="3001" relation="include">
        </childnode>
        <childnode refid="3025" relation="include">
        </childnode>
        <childnode refid="3033" relation="include">
        </childnode>
      </node>
      <node id="3003">
        <label>config.hxx</label>
        <link refid="config_8hxx_source"/>
        <childnode refid="3004" relation="include">
        </childnode>
        <childnode refid="3005" relation="include">
        </childnode>
      </node>
      <node id="3025">
        <label>numerictraits.hxx</label>
        <link refid="numerictraits_8hxx_source"/>
        <childnode refid="3006" relation="include">
        </childnode>
        <childnode refid="3007" relation="include">
        </childnode>
        <childnode refid="3026" relation="include">
        </childnode>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3002" relation="include">
        </childnode>
        <childnode refid="3001" relation="include">
        </childnode>
        <childnode refid="3028" relation="include">
        </childnode>
      </node>
      <node id="3042">
        <label>vector</label>
      </node>
      <node id="3052">
        <label>imageiterator.hxx</label>
        <link refid="imageiterator_8hxx_source"/>
        <childnode refid="3014" relation="include">
        </childnode>
        <childnode refid="3024" relation="include">
        </childnode>
        <childnode refid="3023" relation="include">
        </childnode>
        <childnode refid="3002" relation="include">
        </childnode>
      </node>
      <node id="3030">
        <label>iteratoradapter.hxx</label>
        <link refid="iteratoradapter_8hxx_source"/>
      </node>
      <node id="3040">
        <label>imageinfo.hxx</label>
        <link refid="imageinfo_8hxx_source"/>
        <childnode refid="3013" relation="include">
        </childnode>
        <childnode refid="3017" relation="include">
        </childnode>
        <childnode refid="3003" relation="include">
        </childnode>
        <childnode refid="3015" relation="include">
        </childnode>
        <childnode refid="3018" relation="include">
        </childnode>
        <childnode refid="3041" relation="include">
        </childnode>
        <childnode refid="3043" relation="include">
        </childnode>
        <childnode refid="3044" relation="include">
        </childnode>
      </node>
      <node id="3029">
        <label>imageiteratoradapter.hxx</label>
        <link refid="imageiteratoradapter_8hxx_source"/>
        <childnode refid="3022" relation="include">
        </childnode>
      </node>
      <node id="3011">
        <label>utility</label>
      </node>
      <node id="3016">
        <label>sstream</label>
      </node>
      <node id="3037">
        <label>rgbvalue.hxx</label>
        <link refid="rgbvalue_8hxx_source"/>
        <childnode refid="3019" relation="include">
        </childnode>
        <childnode refid="3032" relation="include">
        </childnode>
        <childnode refid="3003" relation="include">
        </childnode>
        <childnode refid="3025" relation="include">
        </childnode>
        <childnode refid="3024" relation="include">
        </childnode>
        <childnode refid="3038" relation="include">
        </childnode>
        <childnode refid="3039" relation="include">
        </childnode>
      </node>
      <node id="3018">
        <label>diff2d.hxx</label>
        <link refid="diff2d_8hxx_source"/>
        <childnode refid="3019" relation="include">
        </childnode>
        <childnode refid="3020" relation="include">
        </childnode>
        <childnode refid="3003" relation="include">
        </childnode>
        <childnode refid="3021" relation="include">
        </childnode>
        <childnode refid="3023" relation="include">
        </childnode>
        <childnode refid="3030" relation="include">
        </childnode>
        <childnode refid="3010" relation="include">
        </childnode>
      </node>
      <node id="3015">
        <label>error.hxx</label>
        <link refid="error_8hxx_source"/>
        <childnode refid="3005" relation="include">
        </childnode>
        <childnode refid="3016" relation="include">
        </childnode>
        <childnode refid="3017" relation="include">
        </childnode>
        <childnode refid="3003" relation="include">
        </childnode>
      </node>
      <node id="3039">
        <label>static_assert.hxx</label>
        <link refid="static__assert_8hxx_source"/>
      </node>
      <node id="3043">
        <label>array_vector.hxx</label>
        <link refid="array__vector_8hxx_source"/>
        <childnode refid="3015" relation="include">
        </childnode>
        <childnode refid="3036" relation="include">
        </childnode>
        <childnode refid="3025" relation="include">
        </childnode>
        <childnode refid="3013" relation="include">
        </childnode>
        <childnode refid="3008" relation="include">
        </childnode>
        <childnode refid="3020" relation="include">
        </childnode>
      </node>
      <node id="3020">
        <label>iosfwd</label>
      </node>
      <node id="3032">
        <label>cstdlib</label>
      </node>
      <node id="3055">
        <label>iostream</label>
      </node>
      <node id="3044">
        <label>multi_iterator.hxx</label>
        <link refid="multi__iterator_8hxx_source"/>
        <childnode refid="3045" relation="include">
        </childnode>
        <childnode refid="3038" relation="include">
        </childnode>
        <childnode refid="3021" relation="include">
        </childnode>
      </node>
      <node id="3000">
        <label>vigra/impex.hxx</label>
        <link refid="impex.hxx"/>
        <childnode refid="3001" relation="include">
        </childnode>
        <childnode refid="3009" relation="include">
        </childnode>
        <childnode refid="3038" relation="include">
        </childnode>
        <childnode refid="3040" relation="include">
        </childnode>
        <childnode refid="3025" relation="include">
        </childnode>
        <childnode refid="3041" relation="include">
        </childnode>
        <childnode refid="3024" relation="include">
        </childnode>
        <childnode refid="3046" relation="include">
        </childnode>
        <childnode refid="3048" relation="include">
        </childnode>
        <childnode refid="3049" relation="include">
        </childnode>
        <childnode refid="3050" relation="include">
        </childnode>
        <childnode refid="3054" relation="include">
        </childnode>
        <childnode refid="3055" relation="include">
        </childnode>
      </node>
      <node id="3006">
        <label>climits</label>
      </node>
      <node id="3002">
        <label>metaprogramming.hxx</label>
        <link refid="metaprogramming_8hxx_source"/>
        <childnode refid="3003" relation="include">
        </childnode>
        <childnode refid="3006" relation="include">
        </childnode>
        <childnode refid="3007" relation="include">
        </childnode>
        <childnode refid="3008" relation="include">
        </childnode>
      </node>
      <node id="3027">
        <label>complex</label>
      </node>
      <node id="3008">
        <label>algorithm</label>
      </node>
      <node id="3036">
        <label>memory.hxx</label>
        <link refid="memory_8hxx_source"/>
        <childnode refid="3002" relation="include">
        </childnode>
      </node>
      <node id="3024">
        <label>accessor.hxx</label>
        <link refid="accessor_8hxx_source"/>
        <childnode refid="3002" relation="include">
        </childnode>
        <childnode refid="3025" relation="include">
        </childnode>
        <childnode refid="3010" relation="include">
        </childnode>
      </node>
      <node id="3013">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3058">
        <label>vigra/random_forest_hdf5_impex.hxx</label>
        <link refid="random__forest__hdf5__impex_8hxx_source"/>
      </node>
      <node id="3060">
        <label>vigra/tv_filter.hxx</label>
        <link refid="tv__filter_8hxx_source"/>
      </node>
      <node id="3056">
        <label>vigra/impex.hxx</label>
        <link refid="impex.hxx"/>
        <childnode refid="3057" relation="include">
        </childnode>
        <childnode refid="3059" relation="include">
        </childnode>
        <childnode refid="3060" relation="include">
        </childnode>
      </node>
      <node id="3057">
        <label>vigra/hdf5impex.hxx</label>
        <link refid="hdf5impex_8hxx_source"/>
        <childnode refid="3058" relation="include">
        </childnode>
      </node>
      <node id="3059">
        <label>vigra/multi_impex.hxx</label>
        <link refid="multi__impex_8hxx_source"/>
        <childnode refid="3057" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacevigra">vigra</innernamespace>
    <briefdescription>
<para>image import and export functions </para>    </briefdescription>
    <detaileddescription>
<para>this file provides the declarations and implementations of <ref refid="group__VigraImpex_1ga01aca6d5278dab14e11aef62e746e63e" kindref="member">importImage()</ref> and <ref refid="group__VigraImpex_1gabd7976d498abce467cd17989176133e3" kindref="member">exportImage()</ref>. the matching implementation for the given datatype is selected by template metacode. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>2001-2002<sp/>by<sp/>Gunnar<sp/>Kedenburg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>VIGRA<sp/>computer<sp/>vision<sp/>library.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>The<sp/>VIGRA<sp/>Website<sp/>is<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://hci.iwr.uni-heidelberg.de/vigra/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Please<sp/>direct<sp/>questions,<sp/>bug<sp/>reports,<sp/>and<sp/>contributions<sp/>to<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ullrich.koethe@iwr.uni-heidelberg.de<sp/><sp/><sp/><sp/>or<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra@informatik.uni-hamburg.de<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>conditions:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Software.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Modifications<sp/>by<sp/>Pablo<sp/>d&apos;Angelo</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>updated<sp/>to<sp/>vigra<sp/>1.4<sp/>by<sp/>Douglas<sp/>Wilkins</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>as<sp/>of<sp/>18<sp/>February<sp/>2006:</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>Added<sp/>import/export<sp/>of<sp/>UINT16<sp/>and<sp/>UINT32<sp/>image<sp/>types.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>Modifications<sp/>by<sp/>Andrew<sp/>Mihal</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>updated<sp/>to<sp/>vigra<sp/>1.4<sp/>by<sp/>Douglas<sp/>Wilkins</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>as<sp/>of<sp/>18<sp/>February<sp/>2006:</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>Moved<sp/>some<sp/>RowIterator<sp/>declarations<sp/>around<sp/>to<sp/>avoid<sp/>using<sp/>default<sp/>ctors</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>(cachedfileimages<sp/>do<sp/>not<sp/>have<sp/>default<sp/>ctors<sp/>for<sp/>row<sp/>iterators).</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>Added<sp/>some<sp/>case-specific<sp/>optimizations</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="47"><highlight class="comment">/*!</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/>\file<sp/><sp/>impex.hxx</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/>\brief<sp/>image<sp/>import<sp/>and<sp/>export<sp/>functions</highlight></codeline>
<codeline lineno="50"><highlight class="comment"></highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/>this<sp/>file<sp/>provides<sp/>the<sp/>declarations<sp/>and<sp/>implementations<sp/>of<sp/>importImage()</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/>and<sp/>exportImage().<sp/>the<sp/>matching<sp/>implementation<sp/>for<sp/>the<sp/>given<sp/>datatype<sp/>is</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/>selected<sp/>by<sp/>template<sp/>metacode.</highlight></codeline>
<codeline lineno="54"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VIGRA_IMPEX_HXX</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_IMPEX_HXX</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sized_int.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdimage.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tinyvector.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;imageinfo.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;numerictraits.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;codec.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;accessor.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;inspectimage.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;transformimage.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;copyimage.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;multi_array.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeinfo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>next<sp/>refactoring:<sp/>pluggable<sp/>conversion<sp/>algorithms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vigra</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="78"><highlight class="comment">/**<sp/>\addtogroup<sp/>VigraImpex</highlight></codeline>
<codeline lineno="79"><highlight class="comment">**/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="80"><highlight class="comment">//@{</highlight></codeline>
<codeline lineno="81"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/>/*!</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>\brief<sp/>used<sp/>for<sp/>reading<sp/>bands<sp/>after<sp/>the<sp/>source<sp/>data<sp/>type<sp/>has<sp/>been<sp/>figured<sp/>out.</highlight></codeline>
<codeline lineno="84"><highlight class="comment"></highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/impex.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="87"><highlight class="comment"></highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declaration:&lt;/b&gt;</highlight></codeline>
<codeline lineno="89"><highlight class="comment"></highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template&lt;<sp/>class<sp/>ImageIterator,<sp/>class<sp/>Accessor,<sp/>class<sp/>SrcValueType<sp/>&gt;</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>read_bands(<sp/>Decoder<sp/>*<sp/>dec,<sp/>ImageIterator<sp/>ys,<sp/>Accessor<sp/>a,<sp/>SrcValueType<sp/>)</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="96"><highlight class="comment"></highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>dec<sp/>decoder<sp/>object<sp/>through<sp/>which<sp/>the<sp/>source<sp/>data<sp/>will<sp/>be<sp/>accessed</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>ys<sp/><sp/>image<sp/>iterator<sp/>referencing<sp/>the<sp/>upper<sp/>left<sp/>pixel<sp/>of<sp/>the<sp/>destination<sp/>image</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>a<sp/><sp/><sp/>image<sp/>accessor<sp/>for<sp/>the<sp/>destination<sp/>image</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ImageIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Accessor,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcValueType<sp/>&gt;</highlight></codeline>
<codeline lineno="102" refid="group__VigraImpex_1ga3dd74723fb65e5e46435219350399c5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__VigraImpex_1ga3dd74723fb65e5e46435219350399c5c" kindref="member" tooltip="used for reading bands after the source data type has been figured out.">read_bands</ref>(<sp/>Decoder<sp/>*<sp/>dec,<sp/><ref refid="classvigra_1_1ImageIterator" kindref="compound" tooltip="Standard 2D random access iterator for images that store the data in a linear array.">ImageIterator</ref><sp/>ys,<sp/>Accessor<sp/>a,<sp/>SrcValueType<sp/>)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size_type;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ImageIteratorBase_1a68b7f1ca083eb038b4810c8926a83fce" kindref="member">ImageIterator::row_iterator</ref><sp/>DstRowIterator;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Accessor::value_type<sp/><sp/>AccessorValueType;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorValueType::value_type<sp/>DstValueType;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>width<sp/>=<sp/>dec-&gt;getWidth();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>height<sp/>=<sp/>dec-&gt;getHeight();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>num_bands<sp/>=<sp/>dec-&gt;getNumBands();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra_precondition(num_bands<sp/>==<sp/>(size_type)a.size(ys),</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;importImage():<sp/>number<sp/>of<sp/>bands<sp/>(color<sp/>channels)<sp/>in<sp/>file<sp/>and<sp/>destination<sp/>image<sp/>differ.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>scanline;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MIHAL<sp/>no<sp/>default<sp/>constructor<sp/>available<sp/>for<sp/>cachedfileimages.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DstRowIterator<sp/>xs<sp/>=<sp/>ys.rowIterator();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>iterate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_bands<sp/>==<sp/>4)<sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Speedup<sp/>for<sp/>this<sp/>particular<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>dec-&gt;getOffset();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>scanline0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>scanline1;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>scanline2;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>scanline3;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>size_type<sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>height;<sp/>++y,<sp/>++ys.<ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref><sp/>)<sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dec-&gt;nextScanline();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs<sp/>=<sp/>ys.rowIterator();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline0<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dec-&gt;currentScanlineOfBand(0));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dec-&gt;currentScanlineOfBand(1));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dec-&gt;currentScanlineOfBand(2));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline3<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dec-&gt;currentScanlineOfBand(3));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>size_type<sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>width;<sp/>++x,<sp/>++xs<sp/>)<sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.setComponent(<sp/>*scanline0,<sp/>xs,<sp/>0);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.setComponent(<sp/>*scanline1,<sp/>xs,<sp/>1);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.setComponent(<sp/>*scanline2,<sp/>xs,<sp/>2);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.setComponent(<sp/>*scanline3,<sp/>xs,<sp/>3);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline0<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline1<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline2<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline3<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>General<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>size_type<sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>height;<sp/>++y,<sp/>++ys.<ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref><sp/>)<sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dec-&gt;nextScanline();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>size_type<sp/>b<sp/>=<sp/>0;<sp/>b<sp/>&lt;<sp/>num_bands;<sp/>++b<sp/>)<sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs<sp/>=<sp/>ys.rowIterator();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dec-&gt;currentScanlineOfBand(b));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>size_type<sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>width;<sp/>++x,<sp/>++xs<sp/>)<sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.setComponent(<sp/>*scanline,<sp/>xs,<sp/>b<sp/>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline<sp/>+=<sp/>dec-&gt;getOffset();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>read_bands()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>specialization<sp/>for<sp/>speed-up<sp/>(the<sp/>standard<sp/>version<sp/>would<sp/>also<sp/>work,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>causes<sp/>a<sp/>stupid<sp/>gcc<sp/>waring)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RGBType,<sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcValueType<sp/>&gt;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__VigraImpex_1ga3dd74723fb65e5e46435219350399c5c" kindref="member" tooltip="used for reading bands after the source data type has been figured out.">read_bands</ref>(<sp/>Decoder<sp/>*<sp/>dec,<sp/>ImageIterator<sp/>ys,<sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RGBAccessor&lt;RGBType&gt;<sp/>a,<sp/>SrcValueType<sp/>)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size_type;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ImageIteratorBase_1a68b7f1ca083eb038b4810c8926a83fce" kindref="member">ImageIterator::row_iterator</ref><sp/>DstRowIterator;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>RGBType<sp/><sp/>AccessorValueType;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorValueType::value_type<sp/>DstValueType;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>width<sp/>=<sp/>dec-&gt;getWidth();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>height<sp/>=<sp/>dec-&gt;getHeight();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>num_bands<sp/>=<sp/>dec-&gt;getNumBands();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra_precondition(num_bands<sp/>==<sp/>(size_type)a.size(ys),</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;importImage():<sp/>number<sp/>of<sp/>bands<sp/>(color<sp/>channels)<sp/>in<sp/>file<sp/>and<sp/>destination<sp/>image<sp/>differ.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MIHAL<sp/>no<sp/>default<sp/>constructor<sp/>available<sp/>for<sp/>cachedfileimages.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DstRowIterator<sp/>xs<sp/>=<sp/>ys.rowIterator();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Speedup<sp/>for<sp/>this<sp/>particular<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>dec-&gt;getOffset();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>scanline0;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>scanline1;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>scanline2;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>size_type<sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>height;<sp/>++y,<sp/>++ys.y<sp/>)<sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dec-&gt;nextScanline();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs<sp/>=<sp/>ys.rowIterator();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline0<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dec-&gt;currentScanlineOfBand(0));</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dec-&gt;currentScanlineOfBand(1));</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dec-&gt;currentScanlineOfBand(2));</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>size_type<sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>width;<sp/>++x,<sp/>++xs<sp/>)<sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.setComponent(<sp/>*scanline0,<sp/>xs,<sp/>0);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.setComponent(<sp/>*scanline1,<sp/>xs,<sp/>1);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.setComponent(<sp/>*scanline2,<sp/>xs,<sp/>2);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline0<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline1<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline2<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>read_bands()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>specialization<sp/>for<sp/>speed-up<sp/>(the<sp/>standard<sp/>version<sp/>would<sp/>also<sp/>work,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>causes<sp/>a<sp/>stupid<sp/>gcc<sp/>waring)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ImageIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ComponentType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcValueType<sp/>&gt;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__VigraImpex_1ga3dd74723fb65e5e46435219350399c5c" kindref="member" tooltip="used for reading bands after the source data type has been figured out.">read_bands</ref>(<sp/>Decoder<sp/>*<sp/>dec,<sp/>ImageIterator<sp/>ys,<sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VectorAccessor&lt;TinyVector&lt;ComponentType,<sp/>3&gt;<sp/>&gt;<sp/>a,<sp/>SrcValueType<sp/>)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size_type;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ImageIteratorBase_1a68b7f1ca083eb038b4810c8926a83fce" kindref="member">ImageIterator::row_iterator</ref><sp/>DstRowIterator;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;ComponentType,<sp/>3&gt;<sp/><sp/>AccessorValueType;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorValueType::value_type<sp/>DstValueType;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>width<sp/>=<sp/>dec-&gt;getWidth();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>height<sp/>=<sp/>dec-&gt;getHeight();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>num_bands<sp/>=<sp/>dec-&gt;getNumBands();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra_precondition(num_bands<sp/>==<sp/>(size_type)a.size(ys),</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;importImage():<sp/>number<sp/>of<sp/>bands<sp/>(color<sp/>channels)<sp/>in<sp/>file<sp/>and<sp/>destination<sp/>image<sp/>differ.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MIHAL<sp/>no<sp/>default<sp/>constructor<sp/>available<sp/>for<sp/>cachedfileimages.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DstRowIterator<sp/>xs<sp/>=<sp/>ys.rowIterator();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Speedup<sp/>for<sp/>this<sp/>particular<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>dec-&gt;getOffset();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>scanline0;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>scanline1;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>scanline2;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>size_type<sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>height;<sp/>++y,<sp/>++ys.y<sp/>)<sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dec-&gt;nextScanline();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs<sp/>=<sp/>ys.rowIterator();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline0<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dec-&gt;currentScanlineOfBand(0));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dec-&gt;currentScanlineOfBand(1));</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dec-&gt;currentScanlineOfBand(2));</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>size_type<sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>width;<sp/>++x,<sp/>++xs<sp/>)<sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.setComponent(<sp/>*scanline0,<sp/>xs,<sp/>0);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.setComponent(<sp/>*scanline1,<sp/>xs,<sp/>1);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.setComponent(<sp/>*scanline2,<sp/>xs,<sp/>2);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline0<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline1<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline2<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>read_bands()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>specialization<sp/>for<sp/>speed-up<sp/>(the<sp/>standard<sp/>version<sp/>would<sp/>also<sp/>work,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>causes<sp/>a<sp/>stupid<sp/>gcc<sp/>waring)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ImageIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ComponentType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcValueType<sp/>&gt;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__VigraImpex_1ga3dd74723fb65e5e46435219350399c5c" kindref="member" tooltip="used for reading bands after the source data type has been figured out.">read_bands</ref>(<sp/>Decoder<sp/>*<sp/>dec,<sp/>ImageIterator<sp/>ys,<sp/></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VectorAccessor&lt;TinyVector&lt;ComponentType,<sp/>4&gt;<sp/>&gt;<sp/>a,<sp/>SrcValueType<sp/>)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size_type;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ImageIteratorBase_1a68b7f1ca083eb038b4810c8926a83fce" kindref="member">ImageIterator::row_iterator</ref><sp/>DstRowIterator;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;ComponentType,<sp/>4&gt;<sp/><sp/>AccessorValueType;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorValueType::value_type<sp/>DstValueType;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>width<sp/>=<sp/>dec-&gt;getWidth();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>height<sp/>=<sp/>dec-&gt;getHeight();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>num_bands<sp/>=<sp/>dec-&gt;getNumBands();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra_precondition(num_bands<sp/>==<sp/>(size_type)a.size(ys),</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;importImage():<sp/>number<sp/>of<sp/>bands<sp/>(color<sp/>channels)<sp/>in<sp/>file<sp/>and<sp/>destination<sp/>image<sp/>differ.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MIHAL<sp/>no<sp/>default<sp/>constructor<sp/>available<sp/>for<sp/>cachedfileimages.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DstRowIterator<sp/>xs<sp/>=<sp/>ys.rowIterator();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Speedup<sp/>for<sp/>this<sp/>particular<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>dec-&gt;getOffset();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>scanline0;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>scanline1;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>scanline2;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>scanline3;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>size_type<sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>height;<sp/>++y,<sp/>++ys.y<sp/>)<sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dec-&gt;nextScanline();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs<sp/>=<sp/>ys.rowIterator();</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline0<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dec-&gt;currentScanlineOfBand(0));</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dec-&gt;currentScanlineOfBand(1));</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dec-&gt;currentScanlineOfBand(2));</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline3<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dec-&gt;currentScanlineOfBand(3));</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>size_type<sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>width;<sp/>++x,<sp/>++xs<sp/>)<sp/></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.setComponent(<sp/>*scanline0,<sp/>xs,<sp/>0);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.setComponent(<sp/>*scanline1,<sp/>xs,<sp/>1);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.setComponent(<sp/>*scanline2,<sp/>xs,<sp/>2);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.setComponent(<sp/>*scanline3,<sp/>xs,<sp/>3);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline0<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline1<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline2<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline3<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>read_bands()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/><sp/><sp/><sp/>/*!</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>\brief<sp/>used<sp/>for<sp/>reading<sp/>bands<sp/>after<sp/>the<sp/>source<sp/>data<sp/>type<sp/>has<sp/>been<sp/>figured<sp/>out.</highlight></codeline>
<codeline lineno="330"><highlight class="comment"></highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/impex.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="333"><highlight class="comment"></highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declaration:&lt;/b&gt;</highlight></codeline>
<codeline lineno="335"><highlight class="comment"></highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template&lt;<sp/>class<sp/>ImageIterator,<sp/>class<sp/>Accessor,<sp/>class<sp/>SrcValueType<sp/>&gt;</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>read_band(<sp/>Decoder<sp/>*<sp/>dec,<sp/>ImageIterator<sp/>ys,<sp/>Accessor<sp/>a,<sp/>SrcValueType<sp/>)</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="342"><highlight class="comment"></highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>dec<sp/>decoder<sp/>object<sp/>through<sp/>which<sp/>the<sp/>source<sp/>data<sp/>will<sp/>be<sp/>accessed</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>ys<sp/><sp/>image<sp/>iterator<sp/>referencing<sp/>the<sp/>upper<sp/>left<sp/>pixel<sp/>of<sp/>the<sp/>destination<sp/>image</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>a<sp/><sp/><sp/>image<sp/>accessor<sp/>for<sp/>the<sp/>destination<sp/>image</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ImageIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Accessor,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcValueType<sp/>&gt;</highlight></codeline>
<codeline lineno="348" refid="group__VigraImpex_1gaabad5bde546d751442e4808e4131a914" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__VigraImpex_1gaabad5bde546d751442e4808e4131a914" kindref="member" tooltip="used for reading bands after the source data type has been figured out.">read_band</ref>(<sp/>Decoder<sp/>*<sp/>dec,<sp/><ref refid="classvigra_1_1ImageIterator" kindref="compound" tooltip="Standard 2D random access iterator for images that store the data in a linear array.">ImageIterator</ref><sp/>ys,<sp/>Accessor<sp/>a,<sp/>SrcValueType<sp/>)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size_type;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ImageIteratorBase_1a68b7f1ca083eb038b4810c8926a83fce" kindref="member">ImageIterator::row_iterator</ref><sp/>DstRowIterator;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Accessor::value_type<sp/>DstValueType;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>width<sp/>=<sp/>dec-&gt;getWidth();</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>height<sp/>=<sp/>dec-&gt;getHeight();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>scanline;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MIHAL<sp/>no<sp/>default<sp/>constructor<sp/>available<sp/>for<sp/>cachedfileimages.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DstRowIterator<sp/>xs<sp/>=<sp/>ys.rowIterator();</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>size_type<sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>height;<sp/>++y,<sp/>++ys.<ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dec-&gt;nextScanline();</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs<sp/>=<sp/>ys.rowIterator();</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>SrcValueType<sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(dec-&gt;currentScanlineOfBand(0));</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>size_type<sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>width;<sp/>++x,<sp/>++xs<sp/>)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.set(<sp/>scanline[x],<sp/>xs<sp/>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>read_band()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/><sp/><sp/><sp/>/*!</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>\brief<sp/>used<sp/>for<sp/>reading<sp/>images<sp/>of<sp/>vector<sp/>type,<sp/>such<sp/>as<sp/>integer<sp/>of<sp/>float<sp/>rgb.</highlight></codeline>
<codeline lineno="371"><highlight class="comment"></highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/impex.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="374"><highlight class="comment"></highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declaration:&lt;/b&gt;</highlight></codeline>
<codeline lineno="376"><highlight class="comment"></highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template&lt;<sp/>class<sp/>ImageIterator,<sp/>class<sp/>Accessor<sp/>&gt;</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>importVectorImage(<sp/>const<sp/>ImageImportInfo<sp/>&amp;<sp/>info,<sp/>ImageIterator<sp/>iter,<sp/>Accessor<sp/>a<sp/>)</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="383"><highlight class="comment"></highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Parameters:&lt;/b&gt;</highlight></codeline>
<codeline lineno="385"><highlight class="comment"></highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;DL&gt;</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;DT&gt;ImageIterator&lt;DD&gt;<sp/>the<sp/>image<sp/>iterator<sp/>type<sp/>for<sp/>the<sp/>destination<sp/>image</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;DT&gt;Accessor&lt;DD&gt;<sp/>the<sp/>image<sp/>accessor<sp/>type<sp/>for<sp/>the<sp/>destination<sp/>image</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;DT&gt;info&lt;DD&gt;<sp/>user<sp/>supplied<sp/>image<sp/>import<sp/>information</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;DT&gt;iter&lt;DD&gt;<sp/>image<sp/>iterator<sp/>referencing<sp/>the<sp/>upper<sp/>left<sp/>pixel<sp/>of<sp/>the<sp/>destination<sp/>image</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;DT&gt;a&lt;DD&gt;<sp/>image<sp/>accessor<sp/>for<sp/>the<sp/>destination<sp/>image</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/DL&gt;</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal">doxygen_overloaded_function(template<sp/>&lt;...&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__VigraImpex_1ga5af46483ee518d397da0f1a5c7e9bcb4" kindref="member" tooltip="used for reading images of vector type, such as integer of float rgb.">importVectorImage</ref>)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ImageIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Accessor<sp/>&gt;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__VigraImpex_1ga5af46483ee518d397da0f1a5c7e9bcb4" kindref="member" tooltip="used for reading images of vector type, such as integer of float rgb.">importVectorImage</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImageImportInfo<sp/>&amp;<sp/>info,<sp/>ImageIterator<sp/>iter,<sp/>Accessor<sp/>a<sp/>)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::auto_ptr&lt;Decoder&gt;<sp/>dec<sp/>=<sp/>decoder(info);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>pixeltype<sp/>=<sp/>dec-&gt;getPixelType();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;UINT8&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraImpex_1ga3dd74723fb65e5e46435219350399c5c" kindref="member" tooltip="used for reading bands after the source data type has been figured out.">read_bands</ref>(<sp/>dec.get(),<sp/>iter,<sp/>a,<sp/>(<ref refid="group__FixedSizeInt_1ga7332da5f8bfdbeecdfd09d4ed602288d" kindref="member" tooltip="8-bit unsigned int">UInt8</ref>)0<sp/>);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;INT16&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraImpex_1ga3dd74723fb65e5e46435219350399c5c" kindref="member" tooltip="used for reading bands after the source data type has been figured out.">read_bands</ref>(<sp/>dec.get(),<sp/>iter,<sp/>a,<sp/><ref refid="group__FixedSizeInt_1ga37ecc0a8cab40177174b3a7cf6e07aa3" kindref="member" tooltip="16-bit signed int">Int16</ref>()<sp/>);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;UINT16&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraImpex_1ga3dd74723fb65e5e46435219350399c5c" kindref="member" tooltip="used for reading bands after the source data type has been figured out.">read_bands</ref>(<sp/>dec.get(),<sp/>iter,<sp/>a,<sp/>(<ref refid="group__FixedSizeInt_1ga7480021744e4059993dccb113a029d51" kindref="member" tooltip="16-bit unsigned int">UInt16</ref>)0<sp/>);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;INT32&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraImpex_1ga3dd74723fb65e5e46435219350399c5c" kindref="member" tooltip="used for reading bands after the source data type has been figured out.">read_bands</ref>(<sp/>dec.get(),<sp/>iter,<sp/>a,<sp/><ref refid="group__FixedSizeInt_1ga92f05c4b6944ec5926841e34f03a9060" kindref="member" tooltip="32-bit signed int">Int32</ref>()<sp/>);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;UINT32&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraImpex_1ga3dd74723fb65e5e46435219350399c5c" kindref="member" tooltip="used for reading bands after the source data type has been figured out.">read_bands</ref>(<sp/>dec.get(),<sp/>iter,<sp/>a,<sp/>(<ref refid="group__FixedSizeInt_1gad055e2244a667a1a5a5c1ee4397c07f9" kindref="member" tooltip="32-bit unsigned int">UInt32</ref>)0<sp/>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;FLOAT&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraImpex_1ga3dd74723fb65e5e46435219350399c5c" kindref="member" tooltip="used for reading bands after the source data type has been figured out.">read_bands</ref>(<sp/>dec.get(),<sp/>iter,<sp/>a,<sp/>float()<sp/>);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;DOUBLE&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraImpex_1ga3dd74723fb65e5e46435219350399c5c" kindref="member" tooltip="used for reading bands after the source data type has been figured out.">read_bands</ref>(<sp/>dec.get(),<sp/>iter,<sp/>a,<sp/>double()<sp/>);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra_precondition(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>pixeltype&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>close<sp/>the<sp/>decoder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dec-&gt;close();</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/><sp/><sp/><sp/>/*!</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>\brief<sp/>used<sp/>for<sp/>reading<sp/>images<sp/>of<sp/><sp/>scalar<sp/>type,<sp/>such<sp/>as<sp/>integer<sp/>and<sp/>float<sp/>grayscale.</highlight></codeline>
<codeline lineno="425"><highlight class="comment"></highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/impex.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="428"><highlight class="comment"></highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declaration:&lt;/b&gt;</highlight></codeline>
<codeline lineno="430"><highlight class="comment"></highlight></codeline>
<codeline lineno="431"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;<sp/>class<sp/>ImageIterator,<sp/>class<sp/>Accessor<sp/>&gt;</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>importScalarImage(<sp/>const<sp/>ImageImportInfo<sp/>&amp;<sp/>info,<sp/>ImageIterator<sp/>iter,<sp/>Accessor<sp/>a<sp/>)</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="437"><highlight class="comment"></highlight></codeline>
<codeline lineno="438"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Parameters:&lt;/b&gt;</highlight></codeline>
<codeline lineno="439"><highlight class="comment"></highlight></codeline>
<codeline lineno="440"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;DL&gt;</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;DT&gt;ImageIterator&lt;DD&gt;<sp/>the<sp/>image<sp/>iterator<sp/>type<sp/>for<sp/>the<sp/>destination<sp/>image</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;DT&gt;Accessor&lt;DD&gt;<sp/>the<sp/>image<sp/>accessor<sp/>type<sp/>for<sp/>the<sp/>destination<sp/>image</highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;DT&gt;info&lt;DD&gt;<sp/>user<sp/>supplied<sp/>image<sp/>import<sp/>information</highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;DT&gt;iter&lt;DD&gt;<sp/>image<sp/>iterator<sp/>referencing<sp/>the<sp/>upper<sp/>left<sp/>pixel<sp/>of<sp/>the<sp/>destination<sp/>image</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;DT&gt;a&lt;DD&gt;<sp/>image<sp/>accessor<sp/>for<sp/>the<sp/>destination<sp/>image</highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/DL&gt;</highlight></codeline>
<codeline lineno="447"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal">doxygen_overloaded_function(template<sp/>&lt;...&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__VigraImpex_1ga7b54c94e4545dba40c2e97e5f827fbab" kindref="member" tooltip="used for reading images of scalar type, such as integer and float grayscale.">importScalarImage</ref>)</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ImageIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Accessor<sp/>&gt;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__VigraImpex_1ga7b54c94e4545dba40c2e97e5f827fbab" kindref="member" tooltip="used for reading images of scalar type, such as integer and float grayscale.">importScalarImage</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImageImportInfo<sp/>&amp;<sp/>info,<sp/>ImageIterator<sp/>iter,<sp/>Accessor<sp/>a<sp/>)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::auto_ptr&lt;Decoder&gt;<sp/>dec<sp/>=<sp/>decoder(info);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>pixeltype<sp/>=<sp/>dec-&gt;getPixelType();</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;UINT8&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraImpex_1gaabad5bde546d751442e4808e4131a914" kindref="member" tooltip="used for reading bands after the source data type has been figured out.">read_band</ref>(<sp/>dec.get(),<sp/>iter,<sp/>a,<sp/>(<ref refid="group__FixedSizeInt_1ga7332da5f8bfdbeecdfd09d4ed602288d" kindref="member" tooltip="8-bit unsigned int">UInt8</ref>)0<sp/>);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;INT16&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraImpex_1gaabad5bde546d751442e4808e4131a914" kindref="member" tooltip="used for reading bands after the source data type has been figured out.">read_band</ref>(<sp/>dec.get(),<sp/>iter,<sp/>a,<sp/><ref refid="group__FixedSizeInt_1ga37ecc0a8cab40177174b3a7cf6e07aa3" kindref="member" tooltip="16-bit signed int">Int16</ref>()<sp/>);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;UINT16&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraImpex_1gaabad5bde546d751442e4808e4131a914" kindref="member" tooltip="used for reading bands after the source data type has been figured out.">read_band</ref>(<sp/>dec.get(),<sp/>iter,<sp/>a,<sp/>(<ref refid="group__FixedSizeInt_1ga7480021744e4059993dccb113a029d51" kindref="member" tooltip="16-bit unsigned int">UInt16</ref>)0<sp/>);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;INT32&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraImpex_1gaabad5bde546d751442e4808e4131a914" kindref="member" tooltip="used for reading bands after the source data type has been figured out.">read_band</ref>(<sp/>dec.get(),<sp/>iter,<sp/>a,<sp/><ref refid="group__FixedSizeInt_1ga92f05c4b6944ec5926841e34f03a9060" kindref="member" tooltip="32-bit signed int">Int32</ref>()<sp/>);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;UINT32&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraImpex_1gaabad5bde546d751442e4808e4131a914" kindref="member" tooltip="used for reading bands after the source data type has been figured out.">read_band</ref>(<sp/>dec.get(),<sp/>iter,<sp/>a,<sp/>(<ref refid="group__FixedSizeInt_1gad055e2244a667a1a5a5c1ee4397c07f9" kindref="member" tooltip="32-bit unsigned int">UInt32</ref>)0<sp/>);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;FLOAT&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraImpex_1gaabad5bde546d751442e4808e4131a914" kindref="member" tooltip="used for reading bands after the source data type has been figured out.">read_band</ref>(<sp/>dec.get(),<sp/>iter,<sp/>a,<sp/>float()<sp/>);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;DOUBLE&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraImpex_1gaabad5bde546d751442e4808e4131a914" kindref="member" tooltip="used for reading bands after the source data type has been figured out.">read_band</ref>(<sp/>dec.get(),<sp/>iter,<sp/>a,<sp/>double()<sp/>);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra_precondition(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>pixeltype&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>close<sp/>the<sp/>decoder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dec-&gt;close();</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>importImage<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>\brief<sp/>Read<sp/>the<sp/>image<sp/>specified<sp/>by<sp/>the<sp/>given<sp/>\ref<sp/>vigra::ImageImportInfo<sp/>object.</highlight></codeline>
<codeline lineno="484"><highlight class="comment"></highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declarations:&lt;/b&gt;</highlight></codeline>
<codeline lineno="486"><highlight class="comment"></highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pass<sp/>arguments<sp/>explicitly:</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>ImageIterator,<sp/>class<sp/>Accessor&gt;</highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void</highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>importImage(ImageImportInfo<sp/>const<sp/>&amp;<sp/>image,<sp/>ImageIterator<sp/>iter,<sp/>Accessor<sp/>a)</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="495"><highlight class="comment"></highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use<sp/>argument<sp/>objects<sp/>in<sp/>conjunction<sp/>with<sp/>\ref<sp/>ArgumentObjectFactories<sp/>:</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>ImageIterator,<sp/>class<sp/>Accessor&gt;</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inline<sp/>void</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>importImage(ImageImportInfo<sp/>const<sp/>&amp;<sp/>image,<sp/>pair&lt;ImageIterator,<sp/>Accessor&gt;<sp/>dest)</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="504"><highlight class="comment"></highlight></codeline>
<codeline lineno="505"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="506"><highlight class="comment"></highlight></codeline>
<codeline lineno="507"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/impex.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="508"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="509"><highlight class="comment"></highlight></codeline>
<codeline lineno="510"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="511"><highlight class="comment"></highlight></codeline>
<codeline lineno="512"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra::ImageImportInfo<sp/>info(&quot;myimage.gif&quot;);</highlight></codeline>
<codeline lineno="513"><highlight class="comment"></highlight></codeline>
<codeline lineno="514"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(info.isGrayscale())</highlight></codeline>
<codeline lineno="515"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>create<sp/>byte<sp/>image<sp/>of<sp/>appropriate<sp/>size</highlight></codeline>
<codeline lineno="517"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra::BImage<sp/>in(info.width(),<sp/>info.height());</highlight></codeline>
<codeline lineno="518"><highlight class="comment"></highlight></codeline>
<codeline lineno="519"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra::importImage(info,<sp/>destImage(in));<sp/>//<sp/>read<sp/>the<sp/>image</highlight></codeline>
<codeline lineno="520"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="521"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="523"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>create<sp/>byte<sp/>RGB<sp/>image<sp/>of<sp/>appropriate<sp/>size</highlight></codeline>
<codeline lineno="525"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra::BRGBImage<sp/>in(info.width(),<sp/>info.height());</highlight></codeline>
<codeline lineno="526"><highlight class="comment"></highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra::importImage(info,<sp/>destImage(in));<sp/>//<sp/>read<sp/>the<sp/>image</highlight></codeline>
<codeline lineno="528"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="529"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="comment"></highlight></codeline>
<codeline lineno="531"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="532"><highlight class="comment"></highlight></codeline>
<codeline lineno="533"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Preconditions:&lt;/b&gt;</highlight></codeline>
<codeline lineno="534"><highlight class="comment"></highlight></codeline>
<codeline lineno="535"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;UL&gt;</highlight></codeline>
<codeline lineno="536"><highlight class="comment"></highlight></codeline>
<codeline lineno="537"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>the<sp/>image<sp/>file<sp/>must<sp/>be<sp/>readable</highlight></codeline>
<codeline lineno="538"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>the<sp/>file<sp/>type<sp/>must<sp/>be<sp/>one<sp/>of</highlight></codeline>
<codeline lineno="539"><highlight class="comment"></highlight></codeline>
<codeline lineno="540"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;DL&gt;</highlight></codeline>
<codeline lineno="541"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;DT&gt;&quot;BMP&quot;&lt;DD&gt;<sp/>Microsoft<sp/>Windows<sp/>bitmap<sp/>image<sp/>file.</highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;DT&gt;&quot;EXR&quot;&lt;DD&gt;<sp/>OpenEXR<sp/>high<sp/>dynamic<sp/>range<sp/>image<sp/>format.<sp/></highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(only<sp/>available<sp/>if<sp/>libopenexr<sp/>is<sp/>installed)</highlight></codeline>
<codeline lineno="544"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;DT&gt;&quot;GIF&quot;&lt;DD&gt;<sp/>CompuServe<sp/>graphics<sp/>interchange<sp/>format;<sp/>8-bit<sp/>color.</highlight></codeline>
<codeline lineno="545"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;DT&gt;&quot;HDR&quot;&lt;DD&gt;<sp/>Radiance<sp/>RGBE<sp/>high<sp/>dynamic<sp/>range<sp/>image<sp/>format.</highlight></codeline>
<codeline lineno="546"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;DT&gt;&quot;JPEG&quot;&lt;DD&gt;<sp/>Joint<sp/>Photographic<sp/>Experts<sp/>Group<sp/>JFIF<sp/>format;</highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compressed<sp/>24-bit<sp/>color<sp/>(only<sp/>available<sp/>if<sp/>libjpeg<sp/>is<sp/>installed).</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;DT&gt;&quot;PNG&quot;&lt;DD&gt;<sp/>Portable<sp/>Network<sp/>Graphic</highlight></codeline>
<codeline lineno="549"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(only<sp/>available<sp/>if<sp/>libpng<sp/>is<sp/>installed).</highlight></codeline>
<codeline lineno="550"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;DT&gt;&quot;PBM&quot;&lt;DD&gt;<sp/>Portable<sp/>bitmap<sp/>format<sp/>(black<sp/>and<sp/>white).</highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;DT&gt;&quot;PGM&quot;&lt;DD&gt;<sp/>Portable<sp/>graymap<sp/>format<sp/>(gray<sp/>scale).</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;DT&gt;&quot;PNM&quot;&lt;DD&gt;<sp/>Portable<sp/>anymap.</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;DT&gt;&quot;PPM&quot;&lt;DD&gt;<sp/>Portable<sp/>pixmap<sp/>format<sp/>(color).</highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;DT&gt;&quot;SUN&quot;&lt;DD&gt;<sp/>SUN<sp/>Rasterfile.</highlight></codeline>
<codeline lineno="555"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;DT&gt;&quot;TIFF&quot;&lt;DD&gt;<sp/>Tagged<sp/>Image<sp/>File<sp/>Format.</highlight></codeline>
<codeline lineno="556"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(only<sp/>available<sp/>if<sp/>libtiff<sp/>is<sp/>installed.)</highlight></codeline>
<codeline lineno="557"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;DT&gt;&quot;VIFF&quot;&lt;DD&gt;<sp/>Khoros<sp/>Visualization<sp/>image<sp/>file.</highlight></codeline>
<codeline lineno="558"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/DL&gt;</highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/UL&gt;</highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/><sp/><sp/><sp/>**/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal">doxygen_overloaded_function(template<sp/>&lt;...&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__VigraImpex_1ga01aca6d5278dab14e11aef62e746e63e" kindref="member" tooltip="Read the image specified by the given vigra::ImageImportInfo object.">importImage</ref>)</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ImageIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Accessor<sp/>&gt;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__VigraImpex_1ga01aca6d5278dab14e11aef62e746e63e" kindref="member" tooltip="Read the image specified by the given vigra::ImageImportInfo object.">importImage</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImageImportInfo<sp/>&amp;<sp/>info,<sp/>ImageIterator<sp/>iter,<sp/>Accessor<sp/>a<sp/>)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;typename<sp/>Accessor::value_type&gt;::isScalar<sp/>is_scalar;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraImpex_1ga01aca6d5278dab14e11aef62e746e63e" kindref="member" tooltip="Read the image specified by the given vigra::ImageImportInfo object.">importImage</ref>(<sp/>info,<sp/>iter,<sp/>a,<sp/>is_scalar()<sp/>);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ImageIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Accessor<sp/>&gt;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__VigraImpex_1ga01aca6d5278dab14e11aef62e746e63e" kindref="member" tooltip="Read the image specified by the given vigra::ImageImportInfo object.">importImage</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImageImportInfo<sp/>&amp;<sp/>info,<sp/>pair&lt;<sp/>ImageIterator,<sp/>Accessor<sp/>&gt;<sp/>dest<sp/>)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraImpex_1ga01aca6d5278dab14e11aef62e746e63e" kindref="member" tooltip="Read the image specified by the given vigra::ImageImportInfo object.">importImage</ref>(<sp/>info,<sp/>dest.first,<sp/>dest.second<sp/>);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ImageIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Accessor<sp/>&gt;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__VigraImpex_1ga01aca6d5278dab14e11aef62e746e63e" kindref="member" tooltip="Read the image specified by the given vigra::ImageImportInfo object.">importImage</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImageImportInfo<sp/>&amp;<sp/>info,<sp/>ImageIterator<sp/>iter,<sp/>Accessor<sp/>a,<sp/>VigraFalseType<sp/>)</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraImpex_1ga5af46483ee518d397da0f1a5c7e9bcb4" kindref="member" tooltip="used for reading images of vector type, such as integer of float rgb.">importVectorImage</ref>(<sp/>info,<sp/>iter,<sp/>a<sp/>);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ImageIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Accessor<sp/>&gt;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__VigraImpex_1ga01aca6d5278dab14e11aef62e746e63e" kindref="member" tooltip="Read the image specified by the given vigra::ImageImportInfo object.">importImage</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImageImportInfo<sp/>&amp;<sp/>info,<sp/>ImageIterator<sp/>iter,<sp/>Accessor<sp/>a,<sp/>VigraTrueType<sp/>)</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraImpex_1ga7b54c94e4545dba40c2e97e5f827fbab" kindref="member" tooltip="used for reading images of scalar type, such as integer and float grayscale.">importScalarImage</ref>(<sp/>info,<sp/>iter,<sp/>a<sp/>);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="588"><highlight class="comment"><sp/><sp/><sp/><sp/>/*!</highlight></codeline>
<codeline lineno="589"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>\brief<sp/>used<sp/>for<sp/>writing<sp/>bands<sp/>after<sp/>the<sp/>source<sp/>data<sp/>type<sp/>has<sp/>been<sp/>figured<sp/>out.</highlight></codeline>
<codeline lineno="590"><highlight class="comment"></highlight></codeline>
<codeline lineno="591"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/impex.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="592"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="593"><highlight class="comment"></highlight></codeline>
<codeline lineno="594"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declaration:&lt;/b&gt;</highlight></codeline>
<codeline lineno="595"><highlight class="comment"></highlight></codeline>
<codeline lineno="596"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template&lt;<sp/>class<sp/>ImageIterator,<sp/>class<sp/>Accessor,<sp/>class<sp/>DstValueType<sp/>&gt;</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>write_bands(<sp/>Encoder<sp/>*<sp/>enc,<sp/>ImageIterator<sp/>ul,<sp/>ImageIterator<sp/>lr,<sp/>Accessor<sp/>a,<sp/>DstValueType<sp/>)</highlight></codeline>
<codeline lineno="600"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="602"><highlight class="comment"></highlight></codeline>
<codeline lineno="603"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>enc<sp/>encoder<sp/>object<sp/>through<sp/>which<sp/>the<sp/>destination<sp/>data<sp/>will<sp/>be<sp/>accessed</highlight></codeline>
<codeline lineno="604"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>ul<sp/><sp/>image<sp/>iterator<sp/>referencing<sp/>the<sp/>upper<sp/>left<sp/>pixel<sp/>of<sp/>the<sp/>source<sp/>image</highlight></codeline>
<codeline lineno="605"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>lr<sp/><sp/>image<sp/>iterator<sp/>referencing<sp/>the<sp/>lower<sp/>right<sp/>pixel<sp/>of<sp/>the<sp/>source<sp/>image</highlight></codeline>
<codeline lineno="606"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>a<sp/><sp/><sp/>image<sp/>accessor<sp/>for<sp/>the<sp/>source<sp/>image</highlight></codeline>
<codeline lineno="607"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ImageIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Accessor,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DstValueType<sp/>&gt;</highlight></codeline>
<codeline lineno="609" refid="group__VigraImpex_1ga6eaa57c0aaf50722fd89b8a7a924442a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__VigraImpex_1ga6eaa57c0aaf50722fd89b8a7a924442a" kindref="member" tooltip="used for writing bands after the source data type has been figured out.">write_bands</ref>(<sp/>Encoder<sp/>*<sp/>enc,<sp/><ref refid="classvigra_1_1ImageIterator" kindref="compound" tooltip="Standard 2D random access iterator for images that store the data in a linear array.">ImageIterator</ref><sp/>ul,<sp/><ref refid="classvigra_1_1ImageIterator" kindref="compound" tooltip="Standard 2D random access iterator for images that store the data in a linear array.">ImageIterator</ref><sp/>lr,<sp/>Accessor<sp/>a,<sp/>DstValueType)</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size_type;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ImageIteratorBase_1a68b7f1ca083eb038b4810c8926a83fce" kindref="member">ImageIterator::row_iterator</ref><sp/>SrcRowIterator;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Accessor::value_type<sp/><sp/>AccessorValueType;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorValueType::value_type<sp/>SrcValueType;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>complete<sp/>decoder<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>width<sp/>=<sp/>lr.<ref refid="classvigra_1_1ImageIteratorBase_1a8d3fabc500cf613a26b37d7aea7fb0ac" kindref="member">x</ref><sp/>-<sp/>ul.<ref refid="classvigra_1_1ImageIteratorBase_1a8d3fabc500cf613a26b37d7aea7fb0ac" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>height<sp/>=<sp/>lr.<ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref><sp/>-<sp/>ul.<ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enc-&gt;setWidth(width);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enc-&gt;setHeight(height);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>num_bands<sp/>=<sp/>a.size(ul);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enc-&gt;setNumBands(num_bands);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enc-&gt;finalizeSettings();</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DstValueType<sp/>*<sp/>scanline;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>iterate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIterator" kindref="compound" tooltip="Standard 2D random access iterator for images that store the data in a linear array.">ImageIterator</ref><sp/>ys(ul);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MIHAL<sp/>no<sp/>default<sp/>constructor<sp/>available<sp/>for<sp/>cachedfileimages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcRowIterator<sp/>xs<sp/>=<sp/>ys.rowIterator();</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Speedup<sp/>for<sp/>the<sp/>common<sp/>cases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(num_bands)<sp/></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>enc-&gt;getOffset();</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DstValueType<sp/>*<sp/>scanline0;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DstValueType<sp/>*<sp/>scanline1;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>size_type<sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>height;<sp/>++y,<sp/>++ys.<ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs<sp/>=<sp/>ys.rowIterator();</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline0<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>DstValueType<sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enc-&gt;currentScanlineOfBand(0));</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>DstValueType<sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enc-&gt;currentScanlineOfBand(1));</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>size_type<sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>width;<sp/>++x,<sp/>++xs)<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*scanline0<sp/>=<sp/>detail::RequiresExplicitCast&lt;DstValueType&gt;::cast(a.getComponent(<sp/>xs,<sp/>0));</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*scanline1<sp/>=<sp/>detail::RequiresExplicitCast&lt;DstValueType&gt;::cast(a.getComponent(<sp/>xs,<sp/>1));</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline0<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline1<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enc-&gt;nextScanline();</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>enc-&gt;getOffset();</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DstValueType<sp/>*<sp/>scanline0;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DstValueType<sp/>*<sp/>scanline1;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DstValueType<sp/>*<sp/>scanline2;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>size_type<sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>height;<sp/>++y,<sp/>++ys.<ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs<sp/>=<sp/>ys.rowIterator();</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline0<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>DstValueType<sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enc-&gt;currentScanlineOfBand(0));</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>DstValueType<sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enc-&gt;currentScanlineOfBand(1));</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>DstValueType<sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enc-&gt;currentScanlineOfBand(2));</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>size_type<sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>width;<sp/>++x,<sp/>++xs)<sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*scanline0<sp/>=<sp/>detail::RequiresExplicitCast&lt;DstValueType&gt;::cast(a.getComponent(<sp/>xs,<sp/>0));</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*scanline1<sp/>=<sp/>detail::RequiresExplicitCast&lt;DstValueType&gt;::cast(a.getComponent(<sp/>xs,<sp/>1));</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*scanline2<sp/>=<sp/>detail::RequiresExplicitCast&lt;DstValueType&gt;::cast(a.getComponent(<sp/>xs,<sp/>2));</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline0<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline1<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline2<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enc-&gt;nextScanline();</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>enc-&gt;getOffset();</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DstValueType<sp/>*<sp/>scanline0;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DstValueType<sp/>*<sp/>scanline1;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DstValueType<sp/>*<sp/>scanline2;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DstValueType<sp/>*<sp/>scanline3;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>size_type<sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>height;<sp/>++y,<sp/>++ys.<ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs<sp/>=<sp/>ys.rowIterator();</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline0<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>DstValueType<sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enc-&gt;currentScanlineOfBand(0));</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline1<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>DstValueType<sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enc-&gt;currentScanlineOfBand(1));</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline2<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>DstValueType<sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enc-&gt;currentScanlineOfBand(2));</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline3<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>DstValueType<sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enc-&gt;currentScanlineOfBand(3));</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>size_type<sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>width;<sp/>++x,<sp/>++xs)<sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*scanline0<sp/>=<sp/>detail::RequiresExplicitCast&lt;DstValueType&gt;::cast(a.getComponent(<sp/>xs,<sp/>0));</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*scanline1<sp/>=<sp/>detail::RequiresExplicitCast&lt;DstValueType&gt;::cast(a.getComponent(<sp/>xs,<sp/>1));</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*scanline2<sp/>=<sp/>detail::RequiresExplicitCast&lt;DstValueType&gt;::cast(a.getComponent(<sp/>xs,<sp/>2));</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*scanline3<sp/>=<sp/>detail::RequiresExplicitCast&lt;DstValueType&gt;::cast(a.getComponent(<sp/>xs,<sp/>3));</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline0<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline1<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline2<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline3<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enc-&gt;nextScanline();</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>General<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>size_type<sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>height;<sp/>++y,<sp/>++ys.<ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>size_type<sp/>b<sp/>=<sp/>0;<sp/>b<sp/>&lt;<sp/>num_bands;<sp/>++b<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs<sp/>=<sp/>ys.rowIterator();</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>DstValueType<sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enc-&gt;currentScanlineOfBand(b));</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>size_type<sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>width;<sp/>++x,<sp/>++xs<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*scanline<sp/>=<sp/>detail::RequiresExplicitCast&lt;DstValueType&gt;::cast(a.getComponent(<sp/>xs,<sp/>b<sp/>));</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline<sp/>+=<sp/>enc-&gt;getOffset();</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enc-&gt;nextScanline();</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>write_bands()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MArray,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DstValueType<sp/>&gt;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__VigraImpex_1ga6eaa57c0aaf50722fd89b8a7a924442a" kindref="member" tooltip="used for writing bands after the source data type has been figured out.">write_bands</ref>(<sp/>Encoder<sp/>*<sp/>enc,<sp/>MArray<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>array,<sp/>DstValueType)</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size_type;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>complete<sp/>decoder<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>width<sp/>=<sp/>array.shape(0);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>height<sp/>=<sp/>array.shape(1);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enc-&gt;setWidth(width);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enc-&gt;setHeight(height);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>num_bands<sp/>=<sp/>array.shape(2);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enc-&gt;setNumBands(num_bands);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enc-&gt;finalizeSettings();</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DstValueType<sp/>*<sp/>scanline;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>iterate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>size_type<sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>height;<sp/>++y<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>size_type<sp/>b<sp/>=<sp/>0;<sp/>b<sp/>&lt;<sp/>num_bands;<sp/>++b<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>DstValueType<sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(enc-&gt;currentScanlineOfBand(b));</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>size_type<sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>width;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*scanline<sp/>=<sp/>array(x,<sp/>y,<sp/>b);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline<sp/>+=<sp/>enc-&gt;getOffset();</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enc-&gt;nextScanline();</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>write_bands()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="763"><highlight class="comment"><sp/><sp/><sp/><sp/>/*!</highlight></codeline>
<codeline lineno="764"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>\brief<sp/>used<sp/>for<sp/>writing<sp/>bands<sp/>after<sp/>the<sp/>source<sp/>data<sp/>type<sp/>has<sp/>been<sp/>figured<sp/>out.</highlight></codeline>
<codeline lineno="765"><highlight class="comment"></highlight></codeline>
<codeline lineno="766"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/impex.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="767"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="768"><highlight class="comment"></highlight></codeline>
<codeline lineno="769"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declaration:&lt;/b&gt;</highlight></codeline>
<codeline lineno="770"><highlight class="comment"></highlight></codeline>
<codeline lineno="771"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="772"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="773"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template&lt;<sp/>class<sp/>ImageIterator,<sp/>class<sp/>Accessor,<sp/>class<sp/>DstValueType<sp/>&gt;</highlight></codeline>
<codeline lineno="774"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>write_band(<sp/>Encoder<sp/>*<sp/>enc,<sp/>ImageIterator<sp/>ul,<sp/>ImageIterator<sp/>lr,<sp/>Accessor<sp/>a,<sp/>DstValueType<sp/>)</highlight></codeline>
<codeline lineno="775"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="777"><highlight class="comment"></highlight></codeline>
<codeline lineno="778"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>enc<sp/>encoder<sp/>object<sp/>through<sp/>which<sp/>the<sp/>destination<sp/>data<sp/>will<sp/>be<sp/>accessed</highlight></codeline>
<codeline lineno="779"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>ul<sp/><sp/>image<sp/>iterator<sp/>referencing<sp/>the<sp/>upper<sp/>left<sp/>pixel<sp/>of<sp/>the<sp/>source<sp/>image</highlight></codeline>
<codeline lineno="780"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>lr<sp/><sp/>image<sp/>iterator<sp/>referencing<sp/>the<sp/>lower<sp/>right<sp/>pixel<sp/>of<sp/>the<sp/>source<sp/>image</highlight></codeline>
<codeline lineno="781"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>a<sp/><sp/><sp/>image<sp/>accessor<sp/>for<sp/>the<sp/>source<sp/>image</highlight></codeline>
<codeline lineno="782"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ImageIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Accessor,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DstValueType<sp/>&gt;</highlight></codeline>
<codeline lineno="784" refid="group__VigraImpex_1gadd972a56822e1d9f28be35e66f12fef5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__VigraImpex_1gadd972a56822e1d9f28be35e66f12fef5" kindref="member" tooltip="used for writing bands after the source data type has been figured out.">write_band</ref>(<sp/>Encoder<sp/>*<sp/>enc,<sp/><ref refid="classvigra_1_1ImageIterator" kindref="compound" tooltip="Standard 2D random access iterator for images that store the data in a linear array.">ImageIterator</ref><sp/>ul,<sp/><ref refid="classvigra_1_1ImageIterator" kindref="compound" tooltip="Standard 2D random access iterator for images that store the data in a linear array.">ImageIterator</ref><sp/>lr,<sp/>Accessor<sp/>a,<sp/>DstValueType)</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size_type;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1ImageIteratorBase_1a68b7f1ca083eb038b4810c8926a83fce" kindref="member">ImageIterator::row_iterator</ref><sp/>SrcRowIterator;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Accessor::value_type<sp/>SrcValueType;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>complete<sp/>decoder<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>width<sp/>=<sp/>size_type(lr.<ref refid="classvigra_1_1ImageIteratorBase_1a8d3fabc500cf613a26b37d7aea7fb0ac" kindref="member">x</ref><sp/>-<sp/>ul.<ref refid="classvigra_1_1ImageIteratorBase_1a8d3fabc500cf613a26b37d7aea7fb0ac" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>height<sp/>=<sp/>size_type(lr.<ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref><sp/>-<sp/>ul.<ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enc-&gt;setWidth(width);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enc-&gt;setHeight(height);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enc-&gt;setNumBands(1);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enc-&gt;finalizeSettings();</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DstValueType<sp/>*<sp/>scanline;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>iterate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1ImageIterator" kindref="compound" tooltip="Standard 2D random access iterator for images that store the data in a linear array.">ImageIterator</ref><sp/>ys(ul);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MIHAL<sp/>no<sp/>default<sp/>constructor<sp/>available<sp/>for<sp/>cachedfileimages.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcRowIterator<sp/>xs<sp/>=<sp/>ys.rowIterator();</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_type<sp/>y;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>height;<sp/>++y,<sp/>++ys.<ref refid="classvigra_1_1ImageIteratorBase_1ab395c5487a74470d43492389e14ebd21" kindref="member">y</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xs<sp/>=<sp/>ys.rowIterator();</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanline<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><sp/>DstValueType<sp/>*<sp/></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(enc-&gt;currentScanlineOfBand(0));</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>size_type<sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>width;<sp/>++x,<sp/>++xs,<sp/>++scanline<sp/>)</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*scanline<sp/>=<sp/>detail::RequiresExplicitCast&lt;DstValueType&gt;::cast(a(xs));</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enc-&gt;nextScanline();</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>write_band()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>export<sp/>scalar<sp/>images<sp/>without<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcAccessor,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T<sp/>&gt;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>exportScalarImage(SrcIterator<sp/>sul,<sp/>SrcIterator<sp/>slr,<sp/>SrcAccessor<sp/>sget,</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Encoder<sp/>*<sp/>enc,<sp/>T<sp/>zero)</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraImpex_1gadd972a56822e1d9f28be35e66f12fef5" kindref="member" tooltip="used for writing bands after the source data type has been figured out.">write_band</ref>(<sp/>enc,<sp/>sul,<sp/>slr,<sp/>sget,<sp/>zero<sp/>);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>export<sp/>scalar<sp/>images<sp/>with<sp/>conversion<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcAccessor,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T<sp/>&gt;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>exportScalarImage(SrcIterator<sp/>sul,<sp/>SrcIterator<sp/>slr,<sp/>SrcAccessor<sp/>sget,</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Encoder<sp/>*<sp/>enc,<sp/></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImageExportInfo<sp/>&amp;<sp/>info,<sp/></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>zero)</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fromMin,<sp/>fromMax,<sp/>toMin,<sp/>toMax;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(info.getFromMin()<sp/>&lt;<sp/>info.getFromMax())</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fromMin<sp/>=<sp/>info.getFromMin();</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fromMax<sp/>=<sp/>info.getFromMax();</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SrcAccessor::value_type<sp/>SrcValue;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FindMinMax&lt;SrcValue&gt;<sp/>minmax;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__InspectAlgo_1gaa055bcaf71c209fdeb006fe3e44b0452" kindref="member" tooltip="Apply read-only functor to every pixel in the image.">inspectImage</ref>(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>minmax<sp/>);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fromMin<sp/>=<sp/>(double)minmax.min;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fromMax<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)minmax.max;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fromMax<sp/>&lt;=<sp/>fromMin)</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fromMax<sp/>=<sp/>fromMin<sp/>+<sp/>1.0;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(info.getToMin()<sp/>&lt;<sp/>info.getToMax())</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toMin<sp/>=<sp/>info.getToMin();</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toMax<sp/>=<sp/>info.getToMax();</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toMin<sp/>=<sp/>(double)<ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">NumericTraits&lt;T&gt;::min</ref>();</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toMax<sp/>=<sp/>(double)<ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">NumericTraits&lt;T&gt;::max</ref>();</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>(toMax<sp/>-<sp/>toMin)<sp/>/<sp/>(fromMax<sp/>-<sp/>fromMin);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>(toMin<sp/>/<sp/>scale)<sp/>-<sp/>fromMin;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BasicImage&lt;T&gt;<sp/>image(slr-sul);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__TransformAlgo_1gababa545b60bb7db13076648f83c6b314" kindref="member" tooltip="Apply unary point transformation to each pixel.">transformImage</ref>(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>image.upperLeft(),<sp/>image.accessor(),<sp/></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__TransformFunctor_1gaf4b4d2cc02b2dd950838a452847dee0e" kindref="member" tooltip="Apply a linear transform to the source pixel values.">linearIntensityTransform</ref>(scale,<sp/>offset));</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraImpex_1gadd972a56822e1d9f28be35e66f12fef5" kindref="member" tooltip="used for writing bands after the source data type has been figured out.">write_band</ref>(<sp/>enc,<sp/>image.upperLeft(),</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image.lowerRight(),<sp/>image.accessor(),<sp/>zero<sp/>);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>export<sp/>vector<sp/>images<sp/>without<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcAccessor,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T<sp/>&gt;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>exportVectorImage(SrcIterator<sp/>sul,<sp/>SrcIterator<sp/>slr,<sp/>SrcAccessor<sp/>sget,</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Encoder<sp/>*<sp/>enc,<sp/>T<sp/>zero)</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bands<sp/>=<sp/>sget.size(sul);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra_precondition(isBandNumberSupported(enc-&gt;getFileType(),<sp/>bands),</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;exportImage():<sp/>file<sp/>format<sp/>does<sp/>not<sp/>support<sp/>requested<sp/>number<sp/>of<sp/>bands<sp/>(color<sp/>channels)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraImpex_1ga6eaa57c0aaf50722fd89b8a7a924442a" kindref="member" tooltip="used for writing bands after the source data type has been figured out.">write_bands</ref>(<sp/>enc,<sp/>sul,<sp/>slr,<sp/>sget,<sp/>zero<sp/>);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>export<sp/>vector<sp/>images<sp/>with<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcAccessor,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T<sp/>&gt;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>exportVectorImage(SrcIterator<sp/>sul,<sp/>SrcIterator<sp/>slr,<sp/>SrcAccessor<sp/>sget,</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Encoder<sp/>*<sp/>enc,<sp/></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImageExportInfo<sp/>&amp;<sp/>info,<sp/></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>zero)</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bands<sp/>=<sp/>sget.size(sul);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra_precondition(isBandNumberSupported(enc-&gt;getFileType(),<sp/>bands),</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;exportImage():<sp/>file<sp/>format<sp/>does<sp/>not<sp/>support<sp/>requested<sp/>number<sp/>of<sp/>bands<sp/>(color<sp/>channels)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SrcAccessor::ElementAccessor<sp/>SrcElementAccessor;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SrcElementAccessor::value_type<sp/>SrcComponent;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fromMin,<sp/>fromMax,<sp/>toMin,<sp/>toMax;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(info.getFromMin()<sp/>&lt;<sp/>info.getFromMax())</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fromMin<sp/>=<sp/>info.getFromMin();</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fromMax<sp/>=<sp/>info.getFromMax();</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FindMinMax&lt;SrcComponent&gt;<sp/>minmax;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;bands;<sp/>++i)</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcElementAccessor<sp/>band(i,<sp/>sget);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__InspectAlgo_1gaa055bcaf71c209fdeb006fe3e44b0452" kindref="member" tooltip="Apply read-only functor to every pixel in the image.">inspectImage</ref>(<sp/>sul,<sp/>slr,<sp/>band,<sp/>minmax<sp/>);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fromMin<sp/>=<sp/>(double)minmax.min;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fromMax<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)minmax.max;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fromMax<sp/>&lt;=<sp/>fromMin)</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fromMax<sp/>=<sp/>fromMin<sp/>+<sp/>1.0;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(info.getToMin()<sp/>&lt;<sp/>info.getToMax())</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toMin<sp/>=<sp/>info.getToMin();</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toMax<sp/>=<sp/>info.getToMax();</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toMin<sp/>=<sp/>(double)<ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">NumericTraits&lt;T&gt;::min</ref>();</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toMax<sp/>=<sp/>(double)<ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">NumericTraits&lt;T&gt;::max</ref>();</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>(toMax<sp/>-<sp/>toMin)<sp/>/<sp/>(fromMax<sp/>-<sp/>fromMin);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>(toMin<sp/>/<sp/>scale)<sp/>-<sp/>fromMin;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>slr.x<sp/>-<sp/>sul.x;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>slr.y<sp/>-<sp/>sul.y;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">vigra::MultiArray&lt;3, T&gt;</ref><sp/>MArray;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MArray<sp/>array(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MArray::difference_type(w,<sp/>h,<sp/>bands));</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;bands;<sp/>++i)</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BasicImageView&lt;T&gt;<sp/>subImage<sp/>=<sp/><ref refid="group__MultiArrayToImage_1gadaa8ba40a8a1974073a4f3e3e151b06d" kindref="member">makeBasicImageView</ref>(array.bindOuter(i));</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcElementAccessor<sp/>band(i,<sp/>sget);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__TransformAlgo_1gababa545b60bb7db13076648f83c6b314" kindref="member" tooltip="Apply unary point transformation to each pixel.">transformImage</ref>(<sp/>sul,<sp/>slr,<sp/>band,<sp/>subImage.upperLeft(),<sp/>subImage.accessor(),</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__TransformFunctor_1gaf4b4d2cc02b2dd950838a452847dee0e" kindref="member" tooltip="Apply a linear transform to the source pixel values.">linearIntensityTransform</ref>(<sp/>scale,<sp/>offset<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraImpex_1ga6eaa57c0aaf50722fd89b8a7a924442a" kindref="member" tooltip="used for writing bands after the source data type has been figured out.">write_bands</ref>(<sp/>enc,<sp/>array,<sp/>zero<sp/>);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="946"><highlight class="comment"><sp/><sp/><sp/><sp/>/*!</highlight></codeline>
<codeline lineno="947"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>\brief<sp/>Deprecated.</highlight></codeline>
<codeline lineno="948"><highlight class="comment"></highlight></codeline>
<codeline lineno="949"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>\ref<sp/>exportImage()<sp/>instead.</highlight></codeline>
<codeline lineno="950"><highlight class="comment"></highlight></codeline>
<codeline lineno="951"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declaration:&lt;/b&gt;</highlight></codeline>
<codeline lineno="952"><highlight class="comment"></highlight></codeline>
<codeline lineno="953"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="954"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="955"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;<sp/>class<sp/>SrcIterator,<sp/>class<sp/>SrcAccessor<sp/>&gt;</highlight></codeline>
<codeline lineno="956"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>exportFloatingVectorImage(<sp/>SrcIterator<sp/>sul,<sp/>SrcIterator<sp/>slr,<sp/>SrcAccessor<sp/>sget,</highlight></codeline>
<codeline lineno="957"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>ImageExportInfo<sp/>&amp;<sp/>info<sp/>)</highlight></codeline>
<codeline lineno="958"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="959"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="960"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal">doxygen_overloaded_function(template<sp/>&lt;...&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__VigraImpex_1ga5166c9bed97f5bc7532f4eafcea0d006" kindref="member" tooltip="Deprecated.">exportFloatingVectorImage</ref>)</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcAccessor<sp/>&gt;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__VigraImpex_1ga5166c9bed97f5bc7532f4eafcea0d006" kindref="member" tooltip="Deprecated.">exportFloatingVectorImage</ref>(<sp/>SrcIterator<sp/>sul,<sp/>SrcIterator<sp/>slr,<sp/>SrcAccessor<sp/>sget,</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImageExportInfo<sp/>&amp;<sp/>info<sp/>)</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraImpex_1gabd7976d498abce467cd17989176133e3" kindref="member" tooltip="Write an image, given an vigra::ImageExportInfo object.">exportImage</ref>(sul,<sp/>slr,<sp/>sget,<sp/>info);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="970"><highlight class="comment"><sp/><sp/><sp/><sp/>/*!</highlight></codeline>
<codeline lineno="971"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>\brief<sp/>Deprecated.</highlight></codeline>
<codeline lineno="972"><highlight class="comment"></highlight></codeline>
<codeline lineno="973"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>\ref<sp/>exportImage()<sp/>instead.</highlight></codeline>
<codeline lineno="974"><highlight class="comment"></highlight></codeline>
<codeline lineno="975"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declaration:&lt;/b&gt;</highlight></codeline>
<codeline lineno="976"><highlight class="comment"></highlight></codeline>
<codeline lineno="977"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="978"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="979"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;<sp/>class<sp/>SrcIterator,<sp/>class<sp/>SrcAccessor<sp/>&gt;</highlight></codeline>
<codeline lineno="980"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>exportIntegralVectorImage(<sp/>SrcIterator<sp/>sul,<sp/>SrcIterator<sp/>slr,<sp/>SrcAccessor<sp/>sget,</highlight></codeline>
<codeline lineno="981"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>ImageExportInfo<sp/>&amp;<sp/>info<sp/>)</highlight></codeline>
<codeline lineno="982"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="983"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="984"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal">doxygen_overloaded_function(template<sp/>&lt;...&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__VigraImpex_1ga07094f086177c224ea03ae6b93f52c8e" kindref="member" tooltip="Deprecated.">exportIntegralVectorImage</ref>)</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcAccessor<sp/>&gt;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__VigraImpex_1ga07094f086177c224ea03ae6b93f52c8e" kindref="member" tooltip="Deprecated.">exportIntegralVectorImage</ref>(<sp/>SrcIterator<sp/>sul,<sp/>SrcIterator<sp/>slr,<sp/>SrcAccessor<sp/>sget,</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImageExportInfo<sp/>&amp;<sp/>info<sp/>)</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraImpex_1gabd7976d498abce467cd17989176133e3" kindref="member" tooltip="Write an image, given an vigra::ImageExportInfo object.">exportImage</ref>(sul,<sp/>slr,<sp/>sget,<sp/>info);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="994"><highlight class="comment"><sp/><sp/><sp/><sp/>/*!</highlight></codeline>
<codeline lineno="995"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>\brief<sp/>Deprecated.</highlight></codeline>
<codeline lineno="996"><highlight class="comment"></highlight></codeline>
<codeline lineno="997"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>\ref<sp/>exportImage()<sp/>instead.</highlight></codeline>
<codeline lineno="998"><highlight class="comment"></highlight></codeline>
<codeline lineno="999"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declaration:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1000"><highlight class="comment"></highlight></codeline>
<codeline lineno="1001"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1002"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="1003"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;<sp/>class<sp/>SrcIterator,<sp/>class<sp/>SrcAccessor<sp/>&gt;</highlight></codeline>
<codeline lineno="1004"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>exportFloatingScalarImage(<sp/>SrcIterator<sp/>sul,<sp/>SrcIterator<sp/>slr,<sp/>SrcAccessor<sp/>sget,</highlight></codeline>
<codeline lineno="1005"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>ImageExportInfo<sp/>&amp;<sp/>info<sp/>)</highlight></codeline>
<codeline lineno="1006"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1007"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1008"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal">doxygen_overloaded_function(template<sp/>&lt;...&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__VigraImpex_1gaaf0cae512da12f1d26b97c7a714273fa" kindref="member" tooltip="Deprecated.">exportFloatingScalarImage</ref>)</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcAccessor<sp/>&gt;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__VigraImpex_1gaaf0cae512da12f1d26b97c7a714273fa" kindref="member" tooltip="Deprecated.">exportFloatingScalarImage</ref>(<sp/>SrcIterator<sp/>sul,<sp/>SrcIterator<sp/>slr,<sp/>SrcAccessor<sp/>sget,</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImageExportInfo<sp/>&amp;<sp/>info<sp/>)</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraImpex_1gabd7976d498abce467cd17989176133e3" kindref="member" tooltip="Write an image, given an vigra::ImageExportInfo object.">exportImage</ref>(sul,<sp/>slr,<sp/>sget,<sp/>info);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1018"><highlight class="comment"><sp/><sp/><sp/><sp/>/*!</highlight></codeline>
<codeline lineno="1019"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>\brief<sp/>Deprecated.</highlight></codeline>
<codeline lineno="1020"><highlight class="comment"></highlight></codeline>
<codeline lineno="1021"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>\ref<sp/>exportImage()<sp/>instead.</highlight></codeline>
<codeline lineno="1022"><highlight class="comment"></highlight></codeline>
<codeline lineno="1023"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declaration:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1024"><highlight class="comment"></highlight></codeline>
<codeline lineno="1025"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1026"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="1027"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;<sp/>class<sp/>SrcIterator,<sp/>class<sp/>SrcAccessor<sp/>&gt;</highlight></codeline>
<codeline lineno="1028"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>exportIntegralScalarImage(<sp/>SrcIterator<sp/>sul,<sp/>SrcIterator<sp/>slr,<sp/>SrcAccessor<sp/>sget,</highlight></codeline>
<codeline lineno="1029"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>ImageExportInfo<sp/>&amp;<sp/>info<sp/>)</highlight></codeline>
<codeline lineno="1030"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1031"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1032"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal">doxygen_overloaded_function(template<sp/>&lt;...&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__VigraImpex_1gad0c50ae2e4b38faddbc8e9fed0008fd1" kindref="member" tooltip="Deprecated.">exportIntegralScalarImage</ref>)</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcAccessor<sp/>&gt;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__VigraImpex_1gad0c50ae2e4b38faddbc8e9fed0008fd1" kindref="member" tooltip="Deprecated.">exportIntegralScalarImage</ref>(<sp/>SrcIterator<sp/>sul,<sp/>SrcIterator<sp/>slr,<sp/>SrcAccessor<sp/>sget,</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImageExportInfo<sp/>&amp;<sp/>info<sp/>)</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraImpex_1gabd7976d498abce467cd17989176133e3" kindref="member" tooltip="Write an image, given an vigra::ImageExportInfo object.">exportImage</ref>(sul,<sp/>slr,<sp/>sget,<sp/>info);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exportImage<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1048"><highlight class="comment">/**<sp/>\brief<sp/>Write<sp/>an<sp/>image,<sp/>given<sp/>an<sp/>\ref<sp/>vigra::ImageExportInfo<sp/>object.</highlight></codeline>
<codeline lineno="1049"><highlight class="comment"></highlight></codeline>
<codeline lineno="1050"><highlight class="comment"><sp/><sp/><sp/><sp/>If<sp/>the<sp/>file<sp/>format<sp/>to<sp/>be<sp/>exported<sp/>to<sp/>supports<sp/>the<sp/>pixel<sp/>type<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="1051"><highlight class="comment"><sp/><sp/><sp/><sp/>source<sp/>image,<sp/>the<sp/>pixel<sp/>type<sp/>will<sp/>be<sp/>kept<sp/>(e.g.<sp/>&lt;tt&gt;float&lt;/tt&gt;</highlight></codeline>
<codeline lineno="1052"><highlight class="comment"><sp/><sp/><sp/><sp/>can<sp/>be<sp/>stored<sp/>as<sp/>TIFF<sp/>without<sp/>conversion,<sp/>in<sp/>contrast<sp/>to<sp/>most<sp/>other</highlight></codeline>
<codeline lineno="1053"><highlight class="comment"><sp/><sp/><sp/><sp/>image<sp/>export<sp/>toolkits).<sp/>Otherwise,<sp/>the<sp/>pixel<sp/>values<sp/>are<sp/>transformed</highlight></codeline>
<codeline lineno="1054"><highlight class="comment"><sp/><sp/><sp/><sp/>to<sp/>the<sp/>range<sp/>0.255<sp/>and<sp/>converted<sp/>to<sp/>&lt;tt&gt;unsigned<sp/>char&lt;/tt&gt;.<sp/>Currently,</highlight></codeline>
<codeline lineno="1055"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>following<sp/>file<sp/>formats<sp/>are<sp/>supported.<sp/>The<sp/>pixel<sp/>types<sp/>given<sp/>in</highlight></codeline>
<codeline lineno="1056"><highlight class="comment"><sp/><sp/><sp/><sp/>brackets<sp/>are<sp/>those<sp/>that<sp/>are<sp/>written<sp/>without<sp/>conversion:</highlight></codeline>
<codeline lineno="1057"><highlight class="comment"></highlight></codeline>
<codeline lineno="1058"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;DL&gt;</highlight></codeline>
<codeline lineno="1059"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;DT&gt;&quot;BMP&quot;&lt;DD&gt;<sp/>Microsoft<sp/>Windows<sp/>bitmap<sp/>image<sp/>file<sp/>(pixel<sp/>types:<sp/>UINT8<sp/>as<sp/>gray<sp/>and<sp/>RGB).</highlight></codeline>
<codeline lineno="1060"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;DT&gt;&quot;GIF&quot;&lt;DD&gt;<sp/>CompuServe<sp/>graphics<sp/>interchange<sp/>format;<sp/>8-bit<sp/>color<sp/>(pixel<sp/>types:<sp/>UINT8<sp/>as<sp/>gray<sp/>and<sp/>RGB).</highlight></codeline>
<codeline lineno="1061"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;DT&gt;&quot;JPEG&quot;&lt;DD&gt;<sp/>Joint<sp/>Photographic<sp/>Experts<sp/>Group<sp/>JFIF<sp/>format;<sp/>compressed<sp/>24-bit<sp/>color</highlight></codeline>
<codeline lineno="1062"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pixel<sp/>types:<sp/>UINT8<sp/>as<sp/>gray<sp/>and<sp/>RGB).<sp/>(only<sp/>available<sp/>if<sp/>libjpeg<sp/>is<sp/>installed)</highlight></codeline>
<codeline lineno="1063"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;DT&gt;&quot;PNG&quot;&lt;DD&gt;<sp/>Portable<sp/>Network<sp/>Graphic<sp/>(pixel<sp/>types:<sp/>UINT8<sp/>and<sp/>UINT16<sp/>with<sp/>up<sp/>to<sp/>4<sp/>channels).</highlight></codeline>
<codeline lineno="1064"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(only<sp/>available<sp/>if<sp/>libpng<sp/>is<sp/>installed)</highlight></codeline>
<codeline lineno="1065"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;DT&gt;&quot;PBM&quot;&lt;DD&gt;<sp/>Portable<sp/>bitmap<sp/>format<sp/>(black<sp/>and<sp/>white).</highlight></codeline>
<codeline lineno="1066"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;DT&gt;&quot;PGM&quot;&lt;DD&gt;<sp/>Portable<sp/>graymap<sp/>format<sp/>(pixel<sp/>types:<sp/>UINT8,<sp/>INT16,<sp/>INT32<sp/>as<sp/>gray<sp/>scale)).</highlight></codeline>
<codeline lineno="1067"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;DT&gt;&quot;PNM&quot;&lt;DD&gt;<sp/>Portable<sp/>anymap<sp/>(pixel<sp/>types:<sp/>UINT8,<sp/>INT16,<sp/>INT32<sp/>as<sp/>gray<sp/>and<sp/>RGB).</highlight></codeline>
<codeline lineno="1068"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;DT&gt;&quot;PPM&quot;&lt;DD&gt;<sp/>Portable<sp/>pixmap<sp/>format<sp/>(pixel<sp/>types:<sp/>UINT8,<sp/>INT16,<sp/>INT32<sp/>as<sp/>RGB).</highlight></codeline>
<codeline lineno="1069"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;DT&gt;&quot;SUN&quot;&lt;DD&gt;<sp/>SUN<sp/>Rasterfile<sp/>(pixel<sp/>types:<sp/>UINT8<sp/>as<sp/>gray<sp/>and<sp/>RGB).</highlight></codeline>
<codeline lineno="1070"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;DT&gt;&quot;TIFF&quot;&lt;DD&gt;<sp/>Tagged<sp/>Image<sp/>File<sp/>Format</highlight></codeline>
<codeline lineno="1071"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pixel<sp/>types:<sp/>UINT8,<sp/>INT16,<sp/>INT32,<sp/>FLOAT,<sp/>DOUBLE<sp/>with<sp/>up<sp/>to<sp/>4<sp/>channels).</highlight></codeline>
<codeline lineno="1072"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(only<sp/>available<sp/>if<sp/>libtiff<sp/>is<sp/>installed.)</highlight></codeline>
<codeline lineno="1073"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;DT&gt;&quot;VIFF&quot;&lt;DD&gt;<sp/>Khoros<sp/>Visualization<sp/>image<sp/>file</highlight></codeline>
<codeline lineno="1074"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pixel<sp/>types:<sp/>UINT8,<sp/>INT16,<sp/>INT32,<sp/>FLOAT,<sp/>DOUBLE<sp/>with<sp/>arbitrary<sp/>many<sp/>channels).</highlight></codeline>
<codeline lineno="1075"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/DL&gt;</highlight></codeline>
<codeline lineno="1076"><highlight class="comment"></highlight></codeline>
<codeline lineno="1077"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declarations:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1078"><highlight class="comment"></highlight></codeline>
<codeline lineno="1079"><highlight class="comment"><sp/><sp/><sp/><sp/>pass<sp/>arguments<sp/>explicitly:</highlight></codeline>
<codeline lineno="1080"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1081"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="1082"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>SrcIterator,<sp/>class<sp/>SrcAccessor&gt;</highlight></codeline>
<codeline lineno="1083"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>exportImage(SrcIterator<sp/>sul,<sp/>SrcIterator<sp/>slr,<sp/>SrcAccessor<sp/>sget,</highlight></codeline>
<codeline lineno="1084"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageExportInfo<sp/>const<sp/>&amp;<sp/>info)</highlight></codeline>
<codeline lineno="1085"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1086"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1087"><highlight class="comment"></highlight></codeline>
<codeline lineno="1088"><highlight class="comment"></highlight></codeline>
<codeline lineno="1089"><highlight class="comment"><sp/><sp/><sp/><sp/>use<sp/>argument<sp/>objects<sp/>in<sp/>conjunction<sp/>with<sp/>\ref<sp/>ArgumentObjectFactories<sp/>:</highlight></codeline>
<codeline lineno="1090"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1091"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="1092"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>SrcIterator,<sp/>class<sp/>SrcAccessor&gt;</highlight></codeline>
<codeline lineno="1093"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>exportImage(SrcIterator<sp/>sul,<sp/>SrcIterator<sp/>slr,<sp/>SrcAccessor<sp/>sget,</highlight></codeline>
<codeline lineno="1094"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageExportInfo<sp/>const<sp/>&amp;<sp/>info)</highlight></codeline>
<codeline lineno="1095"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1096"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1097"><highlight class="comment"></highlight></codeline>
<codeline lineno="1098"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1099"><highlight class="comment"></highlight></codeline>
<codeline lineno="1100"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/impex.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="1101"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="1102"><highlight class="comment"></highlight></codeline>
<codeline lineno="1103"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1104"><highlight class="comment"></highlight></codeline>
<codeline lineno="1105"><highlight class="comment"></highlight></codeline>
<codeline lineno="1106"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BRGBImage<sp/>out(w,<sp/>h);</highlight></codeline>
<codeline lineno="1107"><highlight class="comment"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="1108"><highlight class="comment"></highlight></codeline>
<codeline lineno="1109"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>write<sp/>as<sp/>JPEG<sp/>image,<sp/>using<sp/>compression<sp/>quality<sp/>80</highlight></codeline>
<codeline lineno="1110"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::exportImage(srcImageRange(out),</highlight></codeline>
<codeline lineno="1111"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra::ImageExportInfo(&quot;myimage.jpg&quot;).setCompression(&quot;80&quot;));</highlight></codeline>
<codeline lineno="1112"><highlight class="comment"></highlight></codeline>
<codeline lineno="1113"><highlight class="comment"></highlight></codeline>
<codeline lineno="1114"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>force<sp/>it<sp/>to<sp/>a<sp/>particular<sp/>pixel<sp/>type<sp/>(the<sp/>pixel<sp/>type<sp/>must<sp/>be<sp/>supported<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="1115"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>desired<sp/>image<sp/>file<sp/>format,<sp/>otherwise<sp/>an<sp/>\ref<sp/>vigra::PreconditionViolation<sp/>exception<sp/>will<sp/>be<sp/>thrown)</highlight></codeline>
<codeline lineno="1116"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::exportImage(srcImageRange(out),</highlight></codeline>
<codeline lineno="1117"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra::ImageExportInfo(&quot;myINT16image.tif&quot;).setPixelType(&quot;INT16&quot;));</highlight></codeline>
<codeline lineno="1118"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1119"><highlight class="comment"></highlight></codeline>
<codeline lineno="1120"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Preconditions:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1121"><highlight class="comment"></highlight></codeline>
<codeline lineno="1122"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;UL&gt;</highlight></codeline>
<codeline lineno="1123"><highlight class="comment"></highlight></codeline>
<codeline lineno="1124"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>the<sp/>image<sp/>file<sp/>must<sp/>be<sp/>writable.</highlight></codeline>
<codeline lineno="1125"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;LI&gt;<sp/>the<sp/>file<sp/>type<sp/>must<sp/>be<sp/>one<sp/>of<sp/>the<sp/>supported<sp/>file<sp/>types.</highlight></codeline>
<codeline lineno="1126"><highlight class="comment"></highlight></codeline>
<codeline lineno="1127"><highlight class="comment"></highlight></codeline>
<codeline lineno="1128"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/UL&gt;</highlight></codeline>
<codeline lineno="1129"><highlight class="comment">**/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal">doxygen_overloaded_function(template<sp/>&lt;...&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__VigraImpex_1gabd7976d498abce467cd17989176133e3" kindref="member" tooltip="Write an image, given an vigra::ImageExportInfo object.">exportImage</ref>)</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcAccessor<sp/>&gt;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__VigraImpex_1gabd7976d498abce467cd17989176133e3" kindref="member" tooltip="Write an image, given an vigra::ImageExportInfo object.">exportImage</ref>(<sp/>SrcIterator<sp/>sul,<sp/>SrcIterator<sp/>slr,<sp/>SrcAccessor<sp/>sget,</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImageExportInfo<sp/>&amp;<sp/>info<sp/>)</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;typename<sp/>SrcAccessor::value_type&gt;::isScalar<sp/>is_scalar;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraImpex_1gabd7976d498abce467cd17989176133e3" kindref="member" tooltip="Write an image, given an vigra::ImageExportInfo object.">exportImage</ref>(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>info,<sp/>is_scalar()<sp/>);</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(Encoder::TIFFCompressionException<sp/>&amp;)</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">ImageExportInfo<sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(info).setCompression(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraImpex_1gabd7976d498abce467cd17989176133e3" kindref="member" tooltip="Write an image, given an vigra::ImageExportInfo object.">exportImage</ref>(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>info,<sp/>is_scalar()<sp/>);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcAccessor<sp/>&gt;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__VigraImpex_1gabd7976d498abce467cd17989176133e3" kindref="member" tooltip="Write an image, given an vigra::ImageExportInfo object.">exportImage</ref>(<sp/>triple&lt;SrcIterator,<sp/>SrcIterator,<sp/>SrcAccessor&gt;<sp/>src,</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImageExportInfo<sp/>&amp;<sp/>info<sp/>)</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__VigraImpex_1gabd7976d498abce467cd17989176133e3" kindref="member" tooltip="Write an image, given an vigra::ImageExportInfo object.">exportImage</ref>(<sp/>src.first,<sp/>src.second,<sp/>src.third,<sp/>info<sp/>);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcAccessor<sp/>&gt;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__VigraImpex_1gabd7976d498abce467cd17989176133e3" kindref="member" tooltip="Write an image, given an vigra::ImageExportInfo object.">exportImage</ref>(<sp/>SrcIterator<sp/>sul,<sp/>SrcIterator<sp/>slr,<sp/>SrcAccessor<sp/>sget,</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImageExportInfo<sp/>&amp;<sp/>info,<sp/>VigraFalseType<sp/></highlight><highlight class="comment">/*not<sp/>scalar<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SrcAccessor::value_type<sp/>AccessorValueType;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorValueType::value_type<sp/>SrcValueType;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>pixeltype<sp/>=<sp/>info.getPixelType();</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::auto_ptr&lt;Encoder&gt;<sp/>enc<sp/>=<sp/>encoder(info);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>downcast<sp/>=<sp/>negotiatePixelType(enc-&gt;getFileType(),</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TypeAsString&lt;SrcValueType&gt;::result(),<sp/>pixeltype);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enc-&gt;setPixelType(pixeltype);</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(downcast<sp/>||<sp/>info.hasForcedRangeMapping())</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;UINT8&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::exportVectorImage(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>enc.get(),<sp/>info,<sp/>(<ref refid="group__FixedSizeInt_1ga7332da5f8bfdbeecdfd09d4ed602288d" kindref="member" tooltip="8-bit unsigned int">UInt8</ref>)0);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;INT16&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::exportVectorImage(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>enc.get(),<sp/>info,<sp/><ref refid="group__FixedSizeInt_1ga37ecc0a8cab40177174b3a7cf6e07aa3" kindref="member" tooltip="16-bit signed int">Int16</ref>());</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;UINT16&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::exportVectorImage(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>enc.get(),<sp/>info,<sp/>(<ref refid="group__FixedSizeInt_1ga7480021744e4059993dccb113a029d51" kindref="member" tooltip="16-bit unsigned int">UInt16</ref>)0);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;INT32&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::exportVectorImage(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>enc.get(),<sp/>info,<sp/><ref refid="group__FixedSizeInt_1ga92f05c4b6944ec5926841e34f03a9060" kindref="member" tooltip="32-bit signed int">Int32</ref>());</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;UINT32&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::exportVectorImage(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>enc.get(),<sp/>info,<sp/>(<ref refid="group__FixedSizeInt_1gad055e2244a667a1a5a5c1ee4397c07f9" kindref="member" tooltip="32-bit unsigned int">UInt32</ref>)0);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;FLOAT&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::exportVectorImage(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>enc.get(),<sp/>info,<sp/>float());</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;DOUBLE&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::exportVectorImage(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>enc.get(),<sp/>info,<sp/>double());</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;UINT8&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::exportVectorImage(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>enc.get(),<sp/>(<ref refid="group__FixedSizeInt_1ga7332da5f8bfdbeecdfd09d4ed602288d" kindref="member" tooltip="8-bit unsigned int">UInt8</ref>)0);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;INT16&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::exportVectorImage(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>enc.get(),<sp/><ref refid="group__FixedSizeInt_1ga37ecc0a8cab40177174b3a7cf6e07aa3" kindref="member" tooltip="16-bit signed int">Int16</ref>());</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;UINT16&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::exportVectorImage(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>enc.get(),<sp/>(<ref refid="group__FixedSizeInt_1ga7480021744e4059993dccb113a029d51" kindref="member" tooltip="16-bit unsigned int">UInt16</ref>)0);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;INT32&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::exportVectorImage(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>enc.get(),<sp/><ref refid="group__FixedSizeInt_1ga92f05c4b6944ec5926841e34f03a9060" kindref="member" tooltip="32-bit signed int">Int32</ref>());</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;UINT32&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::exportVectorImage(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>enc.get(),<sp/>(<ref refid="group__FixedSizeInt_1gad055e2244a667a1a5a5c1ee4397c07f9" kindref="member" tooltip="32-bit unsigned int">UInt32</ref>)0);</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;FLOAT&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::exportVectorImage(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>enc.get(),<sp/>float());</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;DOUBLE&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::exportVectorImage(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>enc.get(),<sp/>double());</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enc-&gt;close();</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcAccessor<sp/>&gt;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__VigraImpex_1gabd7976d498abce467cd17989176133e3" kindref="member" tooltip="Write an image, given an vigra::ImageExportInfo object.">exportImage</ref>(<sp/>SrcIterator<sp/>sul,<sp/>SrcIterator<sp/>slr,<sp/>SrcAccessor<sp/>sget,</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImageExportInfo<sp/>&amp;<sp/>info,<sp/>VigraTrueType<sp/></highlight><highlight class="comment">/*scalar*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SrcAccessor::value_type<sp/>SrcValueType;</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>pixeltype<sp/>=<sp/>info.getPixelType();</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::auto_ptr&lt;Encoder&gt;<sp/>enc<sp/>=<sp/>encoder(info);</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>downcast<sp/>=<sp/>negotiatePixelType(enc-&gt;getFileType(),</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TypeAsString&lt;SrcValueType&gt;::result(),<sp/>pixeltype);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enc-&gt;setPixelType(pixeltype);</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(downcast<sp/>||<sp/>info.hasForcedRangeMapping())</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;UINT8&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::exportScalarImage(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>enc.get(),<sp/>info,<sp/>(<ref refid="group__FixedSizeInt_1ga7332da5f8bfdbeecdfd09d4ed602288d" kindref="member" tooltip="8-bit unsigned int">UInt8</ref>)0);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;INT16&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::exportScalarImage(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>enc.get(),<sp/>info,<sp/><ref refid="group__FixedSizeInt_1ga37ecc0a8cab40177174b3a7cf6e07aa3" kindref="member" tooltip="16-bit signed int">Int16</ref>());</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;UINT16&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::exportScalarImage(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>enc.get(),<sp/>info,<sp/>(<ref refid="group__FixedSizeInt_1ga7480021744e4059993dccb113a029d51" kindref="member" tooltip="16-bit unsigned int">UInt16</ref>)0);</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;INT32&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::exportScalarImage(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>enc.get(),<sp/>info,<sp/><ref refid="group__FixedSizeInt_1ga92f05c4b6944ec5926841e34f03a9060" kindref="member" tooltip="32-bit signed int">Int32</ref>());</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;UINT32&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::exportScalarImage(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>enc.get(),<sp/>info,<sp/>(<ref refid="group__FixedSizeInt_1gad055e2244a667a1a5a5c1ee4397c07f9" kindref="member" tooltip="32-bit unsigned int">UInt32</ref>)0);</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;FLOAT&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::exportScalarImage(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>enc.get(),<sp/>info,<sp/>float());</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;DOUBLE&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::exportScalarImage(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>enc.get(),<sp/>info,<sp/>double());</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;UINT8&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::exportScalarImage(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>enc.get(),<sp/>(<ref refid="group__FixedSizeInt_1ga7332da5f8bfdbeecdfd09d4ed602288d" kindref="member" tooltip="8-bit unsigned int">UInt8</ref>)0);</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;INT16&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::exportScalarImage(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>enc.get(),<sp/><ref refid="group__FixedSizeInt_1ga37ecc0a8cab40177174b3a7cf6e07aa3" kindref="member" tooltip="16-bit signed int">Int16</ref>());</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;UINT16&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::exportScalarImage(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>enc.get(),<sp/>(<ref refid="group__FixedSizeInt_1ga7480021744e4059993dccb113a029d51" kindref="member" tooltip="16-bit unsigned int">UInt16</ref>)0);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;INT32&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::exportScalarImage(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>enc.get(),<sp/><ref refid="group__FixedSizeInt_1ga92f05c4b6944ec5926841e34f03a9060" kindref="member" tooltip="32-bit signed int">Int32</ref>());</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;UINT32&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::exportScalarImage(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>enc.get(),<sp/>(<ref refid="group__FixedSizeInt_1gad055e2244a667a1a5a5c1ee4397c07f9" kindref="member" tooltip="32-bit unsigned int">UInt32</ref>)0);</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;FLOAT&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::exportScalarImage(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>enc.get(),<sp/>float());</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pixeltype<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;DOUBLE&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::exportScalarImage(<sp/>sul,<sp/>slr,<sp/>sget,<sp/>enc.get(),<sp/>double());</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enc-&gt;close();</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1252"><highlight class="comment">//@}</highlight></codeline>
<codeline lineno="1253"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>vigra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>VIGRA_IMPEX_HXX<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/impex.hxx"/>
  </compounddef>
</doxygen>
