<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="classvigra_1_1Kernel1D" kind="class" prot="public">
    <compoundname>vigra::Kernel1D</compoundname>
    <includes refid="separableconvolution_8hxx" local="no">vigra/separableconvolution.hxx</includes>
    <innerclass refid="structvigra_1_1Kernel1D_1_1InitProxy" prot="public">vigra::Kernel1D::InitProxy</innerclass>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>ARITHTYPE</declname>
        <defname>ARITHTYPE</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classvigra_1_1Kernel1D_1a6c53fe234330a9d1604e0948fa47174b" prot="public" static="no">
        <type><ref refid="classvigra_1_1StandardAccessor" kindref="compound">StandardAccessor</ref>&lt; ARITHTYPE &gt;</type>
        <definition>typedef StandardAccessor&lt;ARITHTYPE&gt; Accessor</definition>
        <argsstring></argsstring>
        <name>Accessor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the kernel&apos;s accessor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1298" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1Kernel1D_1ab5a64d70f2934a8cb54eb8d81f059773" prot="public" static="no">
        <type>InternalVector::const_iterator</type>
        <definition>typedef InternalVector::const_iterator const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>const 1D random access iterator over the kernel&apos;s values </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1294" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1Kernel1D_1ab6c87d7921339cc42075571aaf0c6534" prot="public" static="no">
        <type>InternalVector::const_reference</type>
        <definition>typedef InternalVector::const_reference const_reference</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the kernel&apos;s const reference type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1282" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1Kernel1D_1aa78445962f8673a1e2c1393dab7c7ad8" prot="public" static="no">
        <type><ref refid="classvigra_1_1StandardConstAccessor" kindref="compound">StandardConstAccessor</ref>&lt; ARITHTYPE &gt;</type>
        <definition>typedef StandardConstAccessor&lt;ARITHTYPE&gt; ConstAccessor</definition>
        <argsstring></argsstring>
        <name>ConstAccessor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the kernel&apos;s const accessor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1302" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1Kernel1D_1aae90b86fb9ad1bf34dd9c8f684fc3986" prot="public" static="no">
        <type><ref refid="classvigra_1_1ArrayVector" kindref="compound">ArrayVector</ref>&lt; ARITHTYPE &gt;</type>
        <definition>typedef ArrayVector&lt;ARITHTYPE&gt; InternalVector</definition>
        <argsstring></argsstring>
        <name>InternalVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1270" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1Kernel1D_1adef84b9c9d4f014effcfecbca87629d2" prot="public" static="no">
        <type>InternalVector::iterator</type>
        <definition>typedef InternalVector::iterator Iterator</definition>
        <argsstring></argsstring>
        <name>Iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>deprecated <ndash/> use <ref refid="classvigra_1_1Kernel1D_1a8c0b17e9965a56ba56cb5fedc7119a92" kindref="member">Kernel1D::iterator</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1286" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1Kernel1D_1a8c0b17e9965a56ba56cb5fedc7119a92" prot="public" static="no">
        <type>InternalVector::iterator</type>
        <definition>typedef InternalVector::iterator iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>1D random access iterator over the kernel&apos;s values </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1290" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1Kernel1D_1a130b31490ce7ba9051094274b190940d" prot="public" static="no">
        <type>InternalVector::reference</type>
        <definition>typedef InternalVector::reference reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the kernel&apos;s reference type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1278" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1Kernel1D_1a821b18fa86c2bc45ccf17716429d438b" prot="public" static="no">
        <type>InternalVector::value_type</type>
        <definition>typedef InternalVector::value_type value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the kernel&apos;s value type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1274" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1274" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classvigra_1_1Kernel1D_1adf6f18ab23ed47ea40ef2b744eee8df8" prot="private" static="no" mutable="no">
        <type>BorderTreatmentMode</type>
        <definition>BorderTreatmentMode border_treatment_</definition>
        <argsstring></argsstring>
        <name>border_treatment_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="2102" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="2102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvigra_1_1Kernel1D_1a5be2086014a52475b2391f11039e9b44" prot="private" static="no" mutable="no">
        <type><ref refid="classvigra_1_1ArrayVector" kindref="compound">InternalVector</ref></type>
        <definition>InternalVector kernel_</definition>
        <argsstring></argsstring>
        <name>kernel_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="2100" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="2100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvigra_1_1Kernel1D_1ae29e07050a904f108dc5ff7d26c5fecf" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int left_</definition>
        <argsstring></argsstring>
        <name>left_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="2101" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="2101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvigra_1_1Kernel1D_1ae941ce86d718854a47ff51d9663d8861" prot="private" static="no" mutable="no">
        <type><ref refid="classvigra_1_1Kernel1D_1a821b18fa86c2bc45ccf17716429d438b" kindref="member">value_type</ref></type>
        <definition>value_type norm_</definition>
        <argsstring></argsstring>
        <name>norm_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="2103" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="2103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvigra_1_1Kernel1D_1a5aba70d8cde19895261c5b6dacb7e46e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int right_</definition>
        <argsstring></argsstring>
        <name>right_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="2101" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="2101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1a66018859461121f0957fc48b6e228c67" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1Kernel1D_1a821b18fa86c2bc45ccf17716429d438b" kindref="member">value_type</ref></type>
        <definition>static value_type one</definition>
        <argsstring>()</argsstring>
        <name>one</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1342" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1342" bodyend="1342"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1a40e8567a7e13dacc22cadde2f9d1dcd0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1Kernel1D_1aa78445962f8673a1e2c1393dab7c7ad8" kindref="member">ConstAccessor</ref></type>
        <definition>ConstAccessor accessor</definition>
        <argsstring>() const </argsstring>
        <name>accessor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get a const accessor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="2093" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="2093" bodyend="2093"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1ac1e543db9ce291e86b9023cdb9202b5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1Kernel1D_1a6c53fe234330a9d1604e0948fa47174b" kindref="member">Accessor</ref></type>
        <definition>Accessor accessor</definition>
        <argsstring>()</argsstring>
        <name>accessor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get an accessor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="2097" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="2097" bodyend="2097"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1a69dbff83a4127cc415a7eb796d95051e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>BorderTreatmentMode</type>
        <definition>BorderTreatmentMode borderTreatment</definition>
        <argsstring>() const </argsstring>
        <name>borderTreatment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>current border treatment mode </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="2066" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="2065" bodyend="2066"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1afa906590f3f139cdfeb292a15add8e1f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1Kernel1D_1a8c0b17e9965a56ba56cb5fedc7119a92" kindref="member">iterator</ref></type>
        <definition>iterator center</definition>
        <argsstring>()</argsstring>
        <name>center</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get iterator to center of kernel</para><para>Postconditions: <programlisting><codeline><highlight class="normal"><ref refid="classvigra_1_1Kernel1D_1afa906590f3f139cdfeb292a15add8e1f" kindref="member">center</ref>()[<ref refid="classvigra_1_1Kernel1D_1a265321ef4c7ad76f60e512fc09eef7c2" kindref="member">left</ref>()]<sp/>...<sp/><ref refid="classvigra_1_1Kernel1D_1afa906590f3f139cdfeb292a15add8e1f" kindref="member">center</ref>()[<ref refid="classvigra_1_1Kernel1D_1ad04ec796f4e7db479575644d114974ef" kindref="member">right</ref>()]<sp/>are<sp/>valid<sp/>kernel<sp/>positions</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="2024" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="2023" bodyend="2026"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1addb7f7fedd8c00f97d49af3447d05a2f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1Kernel1D_1ab5a64d70f2934a8cb54eb8d81f059773" kindref="member">const_iterator</ref></type>
        <definition>const_iterator center</definition>
        <argsstring>() const </argsstring>
        <name>center</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="2029" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="2028" bodyend="2031"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1ab7fe279fbc6c3e2ce60ec778109b9923" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initAveraging</definition>
        <argsstring>(int radius, value_type norm)</argsstring>
        <name>initAveraging</name>
        <param>
          <type>int</type>
          <declname>radius</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1Kernel1D_1a821b18fa86c2bc45ccf17716429d438b" kindref="member">value_type</ref></type>
          <declname>norm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init as an Averaging filter. &apos;norm&apos; denotes the sum of all bins of the kernel. The window size is (2*radius+1) * (2*radius+1)</para><para>Precondition: <programlisting><codeline><highlight class="normal">radius<sp/><sp/><sp/>&gt;=<sp/>0</highlight></codeline>
</programlisting></para><para>Postconditions: <programlisting><codeline><highlight class="normal">1.<sp/><ref refid="classvigra_1_1Kernel1D_1a265321ef4c7ad76f60e512fc09eef7c2" kindref="member">left</ref>()<sp/><sp/>==<sp/>-radius</highlight></codeline>
<codeline><highlight class="normal">2.<sp/><ref refid="classvigra_1_1Kernel1D_1ad04ec796f4e7db479575644d114974ef" kindref="member">right</ref>()<sp/>==<sp/><sp/>radius</highlight></codeline>
<codeline><highlight class="normal">3.<sp/><ref refid="classvigra_1_1Kernel1D_1a69dbff83a4127cc415a7eb796d95051e" kindref="member">borderTreatment</ref>()<sp/>==<sp/>BORDER_TREATMENT_CLIP</highlight></codeline>
<codeline><highlight class="normal">4.<sp/><ref refid="classvigra_1_1Kernel1D_1aac41cd63a48de00144dbd94e4c38ead6" kindref="member">norm</ref>()<sp/>==<sp/><ref refid="classvigra_1_1Kernel1D_1aac41cd63a48de00144dbd94e4c38ead6" kindref="member">norm</ref></highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1772" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="2381" bodyend="2405"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1a97c19fd629e175e9b97af74733b2bbd4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void initAveraging</definition>
        <argsstring>(int radius)</argsstring>
        <name>initAveraging</name>
        <param>
          <type>int</type>
          <declname>radius</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init as an Averaging filter with norm 1. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1777" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1776" bodyend="1779"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1a192eec53d760d825b0eedab01a6a2ed2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void initBackwardDifference</definition>
        <argsstring>()</argsstring>
        <name>initBackwardDifference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init as the 2-tap backward difference filter. The filter values are</para><para><programlisting><codeline><highlight class="normal">[1.0,<sp/>-1.0]</highlight></codeline>
</programlisting></para><para>(note that filters are reflected by the convolution algorithm, and we get a forward difference after reflection).</para><para>Postconditions: <programlisting><codeline><highlight class="normal">1.<sp/><ref refid="classvigra_1_1Kernel1D_1a265321ef4c7ad76f60e512fc09eef7c2" kindref="member">left</ref>()<sp/><sp/>==<sp/>0</highlight></codeline>
<codeline><highlight class="normal">2.<sp/><ref refid="classvigra_1_1Kernel1D_1ad04ec796f4e7db479575644d114974ef" kindref="member">right</ref>()<sp/>==<sp/><sp/>1</highlight></codeline>
<codeline><highlight class="normal">3.<sp/><ref refid="classvigra_1_1Kernel1D_1a69dbff83a4127cc415a7eb796d95051e" kindref="member">borderTreatment</ref>()<sp/>==<sp/>BORDER_TREATMENT_REFLECT</highlight></codeline>
<codeline><highlight class="normal">4.<sp/><ref refid="classvigra_1_1Kernel1D_1aac41cd63a48de00144dbd94e4c38ead6" kindref="member">norm</ref>()<sp/>==<sp/>1.0</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1854" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1853" bodyend="1857"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1ac919a292dea182575c698495de0430b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initBinomial</definition>
        <argsstring>(int radius, value_type norm)</argsstring>
        <name>initBinomial</name>
        <param>
          <type>int</type>
          <declname>radius</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1Kernel1D_1a821b18fa86c2bc45ccf17716429d438b" kindref="member">value_type</ref></type>
          <declname>norm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init as a Binomial filter. &apos;norm&apos; denotes the sum of all bins of the kernel.</para><para>Precondition: <programlisting><codeline><highlight class="normal">radius<sp/><sp/><sp/>&gt;=<sp/>0</highlight></codeline>
</programlisting></para><para>Postconditions: <programlisting><codeline><highlight class="normal">1.<sp/><ref refid="classvigra_1_1Kernel1D_1a265321ef4c7ad76f60e512fc09eef7c2" kindref="member">left</ref>()<sp/><sp/>==<sp/>-radius</highlight></codeline>
<codeline><highlight class="normal">2.<sp/><ref refid="classvigra_1_1Kernel1D_1ad04ec796f4e7db479575644d114974ef" kindref="member">right</ref>()<sp/>==<sp/><sp/>radius</highlight></codeline>
<codeline><highlight class="normal">3.<sp/><ref refid="classvigra_1_1Kernel1D_1a69dbff83a4127cc415a7eb796d95051e" kindref="member">borderTreatment</ref>()<sp/>==<sp/>BORDER_TREATMENT_REFLECT</highlight></codeline>
<codeline><highlight class="normal">4.<sp/><ref refid="classvigra_1_1Kernel1D_1aac41cd63a48de00144dbd94e4c38ead6" kindref="member">norm</ref>()<sp/>==<sp/><ref refid="classvigra_1_1Kernel1D_1aac41cd63a48de00144dbd94e4c38ead6" kindref="member">norm</ref></highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1746" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="2348" bodyend="2376"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1a01c5f04a39f4a11736e787f7d27f6666" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void initBinomial</definition>
        <argsstring>(int radius)</argsstring>
        <name>initBinomial</name>
        <param>
          <type>int</type>
          <declname>radius</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init as a Binomial filter with norm 1. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1751" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1750" bodyend="1753"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1a1406a301a1cc659b3098bbcc0a827228" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void initBurtFilter</definition>
        <argsstring>(double a=0.04785)</argsstring>
        <name>initBurtFilter</name>
        <param>
          <type>double</type>
          <declname>a</declname>
          <defval>0.04785</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init a 5-tap filter as defined by Peter Burt in the context of pyramid creation. The filter values are</para><para><programlisting><codeline><highlight class="normal">[a,<sp/>0.25,<sp/>0.5-2*a,<sp/>0.25,<sp/>a]</highlight></codeline>
</programlisting></para><para>The default <computeroutput>a = 0.04785</computeroutput> is optimal in the sense that it minimizes the difference to a true <ref refid="classvigra_1_1Gaussian" kindref="compound">Gaussian</ref> filter (which would have sigma = 0.975). For other values of <computeroutput>a</computeroutput>, the scale of the most similar <ref refid="classvigra_1_1Gaussian" kindref="compound">Gaussian</ref> can be approximated by</para><para><programlisting><codeline><highlight class="normal">sigma<sp/>=<sp/>5.1<sp/>*<sp/>a<sp/>+<sp/>0.731</highlight></codeline>
</programlisting></para><para>Preconditions: <programlisting><codeline><highlight class="normal">0<sp/>&lt;=<sp/>a<sp/>&lt;=<sp/>0.125</highlight></codeline>
</programlisting></para><para>Postconditions: <programlisting><codeline><highlight class="normal">1.<sp/><ref refid="classvigra_1_1Kernel1D_1a265321ef4c7ad76f60e512fc09eef7c2" kindref="member">left</ref>()<sp/><sp/>==<sp/>-2</highlight></codeline>
<codeline><highlight class="normal">2.<sp/><ref refid="classvigra_1_1Kernel1D_1ad04ec796f4e7db479575644d114974ef" kindref="member">right</ref>()<sp/>==<sp/><sp/>2</highlight></codeline>
<codeline><highlight class="normal">3.<sp/><ref refid="classvigra_1_1Kernel1D_1a69dbff83a4127cc415a7eb796d95051e" kindref="member">borderTreatment</ref>()<sp/>==<sp/>BORDER_TREATMENT_REFLECT</highlight></codeline>
<codeline><highlight class="normal">4.<sp/><ref refid="classvigra_1_1Kernel1D_1aac41cd63a48de00144dbd94e4c38ead6" kindref="member">norm</ref>()<sp/>==<sp/>1.0</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1722" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1721" bodyend="1727"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1a80922d43665cec4f4378e8378997feb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initDiscreteGaussian</definition>
        <argsstring>(double std_dev, value_type norm)</argsstring>
        <name>initDiscreteGaussian</name>
        <param>
          <type>double</type>
          <declname>std_dev</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1Kernel1D_1a821b18fa86c2bc45ccf17716429d438b" kindref="member">value_type</ref></type>
          <declname>norm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init as Lindeberg&apos;s discrete analog of the <ref refid="classvigra_1_1Gaussian" kindref="compound">Gaussian</ref> function. The radius of the kernel is always 3*std_dev. &apos;norm&apos; denotes the sum of all bins of the kernel.</para><para>Precondition: <programlisting><codeline><highlight class="normal">std_dev<sp/>&gt;=<sp/>0.0</highlight></codeline>
</programlisting></para><para>Postconditions: <programlisting><codeline><highlight class="normal">1.<sp/><ref refid="classvigra_1_1Kernel1D_1a265321ef4c7ad76f60e512fc09eef7c2" kindref="member">left</ref>()<sp/><sp/>==<sp/>-(int)(3.0*std_dev<sp/>+<sp/>0.5)</highlight></codeline>
<codeline><highlight class="normal">2.<sp/><ref refid="classvigra_1_1Kernel1D_1ad04ec796f4e7db479575644d114974ef" kindref="member">right</ref>()<sp/>==<sp/><sp/>(int)(3.0*std_dev<sp/>+<sp/>0.5)</highlight></codeline>
<codeline><highlight class="normal">3.<sp/><ref refid="classvigra_1_1Kernel1D_1a69dbff83a4127cc415a7eb796d95051e" kindref="member">borderTreatment</ref>()<sp/>==<sp/>BORDER_TREATMENT_REFLECT</highlight></codeline>
<codeline><highlight class="normal">4.<sp/><ref refid="classvigra_1_1Kernel1D_1aac41cd63a48de00144dbd94e4c38ead6" kindref="member">norm</ref>()<sp/>==<sp/><ref refid="classvigra_1_1Kernel1D_1aac41cd63a48de00144dbd94e4c38ead6" kindref="member">norm</ref></highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1476" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="2205" bodyend="2270"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1a15901db2903a004e09e86ae5fbd66ca2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void initDiscreteGaussian</definition>
        <argsstring>(double std_dev)</argsstring>
        <name>initDiscreteGaussian</name>
        <param>
          <type>double</type>
          <declname>std_dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init as a Lindeberg&apos;s discrete analog of the <ref refid="classvigra_1_1Gaussian" kindref="compound">Gaussian</ref> function with norm 1. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1482" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1481" bodyend="1484"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1a1164e5b808619971ebc0e9783f972dc9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1Kernel1D" kindref="compound">Kernel1D</ref> &amp;</type>
        <definition>Kernel1D&amp; initExplicitly</definition>
        <argsstring>(int left, int right)</argsstring>
        <name>initExplicitly</name>
        <param>
          <type>int</type>
          <declname>left</declname>
        </param>
        <param>
          <type>int</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init the kernel by an explicit initializer list. The left and right boundaries of the kernel must be passed. A comma-separated initializer list is given after the assignment operator. This function is used like this:</para><para><programlisting><codeline><highlight class="comment">//<sp/>define<sp/>horizontal<sp/>Roberts<sp/>filter</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="classvigra_1_1Kernel1D" kindref="compound" tooltip="Generic 1 dimensional convolution kernel.">vigra::Kernel1D&lt;float&gt;</ref><sp/>roberts_gradient_x;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">roberts_gradient_x.<ref refid="classvigra_1_1Kernel1D_1a1164e5b808619971ebc0e9783f972dc9" kindref="member">initExplicitly</ref>(0,<sp/>1)<sp/>=<sp/>1.0,<sp/>-1.0;</highlight></codeline>
</programlisting></para><para>The norm is set to the sum of the initializer values. If the wrong number of values is given, a run-time error results. It is, however, possible to give just one initializer. This creates an averaging filter with the given constant:</para><para><programlisting><codeline><highlight class="normal"><ref refid="classvigra_1_1Kernel1D" kindref="compound" tooltip="Generic 1 dimensional convolution kernel.">vigra::Kernel1D&lt;float&gt;</ref><sp/>average5x1;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">average5x1.<ref refid="classvigra_1_1Kernel1D_1a1164e5b808619971ebc0e9783f972dc9" kindref="member">initExplicitly</ref>(-2,<sp/>2)<sp/>=<sp/>1.0/5.0;</highlight></codeline>
</programlisting></para><para>Here, the norm is set to value*size().</para><para><bold> Preconditions:</bold></para><para><programlisting><codeline><highlight class="normal">1.<sp/><ref refid="classvigra_1_1Kernel1D_1a265321ef4c7ad76f60e512fc09eef7c2" kindref="member">left</ref><sp/>&lt;=<sp/>0</highlight></codeline>
<codeline><highlight class="normal">2.<sp/><ref refid="classvigra_1_1Kernel1D_1ad04ec796f4e7db479575644d114974ef" kindref="member">right</ref><sp/>&gt;=<sp/>0</highlight></codeline>
<codeline><highlight class="normal">3.<sp/>the<sp/>number<sp/>of<sp/>values<sp/>in<sp/>the<sp/>initializer<sp/>list</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>is<sp/>1<sp/>or<sp/>equals<sp/>the<sp/><ref refid="classvigra_1_1Kernel1D_1ab8e4e3e2a7bf18888b71bdf9dda0770b" kindref="member">size</ref><sp/>of<sp/>the<sp/>kernel.</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="2001" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="2000" bodyend="2013"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1acf8d30d2b69f8f6771d6804d15df5072" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void initForwardDifference</definition>
        <argsstring>()</argsstring>
        <name>initForwardDifference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init as the 2-tap forward difference filter. The filter values are</para><para><programlisting><codeline><highlight class="normal">[1.0,<sp/>-1.0]</highlight></codeline>
</programlisting></para><para>(note that filters are reflected by the convolution algorithm, and we get a forward difference after reflection).</para><para>Postconditions: <programlisting><codeline><highlight class="normal">1.<sp/><ref refid="classvigra_1_1Kernel1D_1a265321ef4c7ad76f60e512fc09eef7c2" kindref="member">left</ref>()<sp/><sp/>==<sp/>-1</highlight></codeline>
<codeline><highlight class="normal">2.<sp/><ref refid="classvigra_1_1Kernel1D_1ad04ec796f4e7db479575644d114974ef" kindref="member">right</ref>()<sp/>==<sp/><sp/>0</highlight></codeline>
<codeline><highlight class="normal">3.<sp/><ref refid="classvigra_1_1Kernel1D_1a69dbff83a4127cc415a7eb796d95051e" kindref="member">borderTreatment</ref>()<sp/>==<sp/>BORDER_TREATMENT_REFLECT</highlight></codeline>
<codeline><highlight class="normal">4.<sp/><ref refid="classvigra_1_1Kernel1D_1aac41cd63a48de00144dbd94e4c38ead6" kindref="member">norm</ref>()<sp/>==<sp/>1.0</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1830" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1829" bodyend="1833"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1a48c46ac7770600ec38f55c1dc498244a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initGaussian</definition>
        <argsstring>(double std_dev, value_type norm, double windowRatio=0.0)</argsstring>
        <name>initGaussian</name>
        <param>
          <type>double</type>
          <declname>std_dev</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1Kernel1D_1a821b18fa86c2bc45ccf17716429d438b" kindref="member">value_type</ref></type>
          <declname>norm</declname>
        </param>
        <param>
          <type>double</type>
          <declname>windowRatio</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init as a sampled <ref refid="classvigra_1_1Gaussian" kindref="compound">Gaussian</ref> function. The radius of the kernel is always 3*std_dev. &apos;<computeroutput>norm</computeroutput>&apos; denotes the sum of all bins of the kernel (i.e. the kernel is corrected for the normalization error introduced by windowing the <ref refid="classvigra_1_1Gaussian" kindref="compound">Gaussian</ref> to a finite interval). However, if <computeroutput>norm</computeroutput> is 0.0, the kernel is normalized to 1 by the analytic expression for the <ref refid="classvigra_1_1Gaussian" kindref="compound">Gaussian</ref>, and <bold>no</bold> correction for the windowing error is performed. If <computeroutput>windowRatio = 0.0</computeroutput>, the radius of the filter window is <computeroutput>radius = round(3.0 * std_dev)</computeroutput>, otherwise it is <computeroutput>radius = round(windowRatio * std_dev)</computeroutput> (where <computeroutput>windowRatio &gt; 0.0</computeroutput> is required).</para><para>Precondition: <programlisting><codeline><highlight class="normal">std_dev<sp/>&gt;=<sp/>0.0</highlight></codeline>
</programlisting></para><para>Postconditions: <programlisting><codeline><highlight class="normal">1.<sp/><ref refid="classvigra_1_1Kernel1D_1a265321ef4c7ad76f60e512fc09eef7c2" kindref="member">left</ref>()<sp/><sp/>==<sp/>-(int)(3.0*std_dev<sp/>+<sp/>0.5)</highlight></codeline>
<codeline><highlight class="normal">2.<sp/><ref refid="classvigra_1_1Kernel1D_1ad04ec796f4e7db479575644d114974ef" kindref="member">right</ref>()<sp/>==<sp/><sp/>(int)(3.0*std_dev<sp/>+<sp/>0.5)</highlight></codeline>
<codeline><highlight class="normal">3.<sp/><ref refid="classvigra_1_1Kernel1D_1a69dbff83a4127cc415a7eb796d95051e" kindref="member">borderTreatment</ref>()<sp/>==<sp/>BORDER_TREATMENT_REFLECT</highlight></codeline>
<codeline><highlight class="normal">4.<sp/><ref refid="classvigra_1_1Kernel1D_1aac41cd63a48de00144dbd94e4c38ead6" kindref="member">norm</ref>()<sp/>==<sp/><ref refid="classvigra_1_1Kernel1D_1aac41cd63a48de00144dbd94e4c38ead6" kindref="member">norm</ref></highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1449" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="2152" bodyend="2200"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1abba907ac90270c3dd8aac14af93f7b58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void initGaussian</definition>
        <argsstring>(double std_dev)</argsstring>
        <name>initGaussian</name>
        <param>
          <type>double</type>
          <declname>std_dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init as a <ref refid="classvigra_1_1Gaussian" kindref="compound">Gaussian</ref> function with norm 1. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1454" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1453" bodyend="1456"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1a825b69c78f7b71bc33dea8d461849161" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initGaussianDerivative</definition>
        <argsstring>(double std_dev, int order, value_type norm, double windowRatio=0.0)</argsstring>
        <name>initGaussianDerivative</name>
        <param>
          <type>double</type>
          <declname>std_dev</declname>
        </param>
        <param>
          <type>int</type>
          <declname>order</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1Kernel1D_1a821b18fa86c2bc45ccf17716429d438b" kindref="member">value_type</ref></type>
          <declname>norm</declname>
        </param>
        <param>
          <type>double</type>
          <declname>windowRatio</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init as a <ref refid="classvigra_1_1Gaussian" kindref="compound">Gaussian</ref> derivative of order &apos;<computeroutput>order</computeroutput>&apos;. The radius of the kernel is always <computeroutput>3*std_dev + 0.5*order</computeroutput>. &apos;<computeroutput>norm</computeroutput>&apos; denotes the norm of the kernel so that the following condition is fulfilled:</para><para><formula id="83">\[ \sum_{i=left()}^{right()} \frac{(-i)^{order}kernel[i]}{order!} = norm \]</formula></para><para>Thus, the kernel will be corrected for the error introduced by windowing the <ref refid="classvigra_1_1Gaussian" kindref="compound">Gaussian</ref> to a finite interval. However, if <computeroutput>norm</computeroutput> is 0.0, the kernel is normalized to 1 by the analytic expression for the <ref refid="classvigra_1_1Gaussian" kindref="compound">Gaussian</ref> derivative, and <bold>no</bold> correction for the windowing error is performed. If <computeroutput>windowRatio = 0.0</computeroutput>, the radius of the filter window is <computeroutput>radius = round(3.0 * std_dev + 0.5 * order)</computeroutput>, otherwise it is <computeroutput>radius = round(windowRatio * std_dev)</computeroutput> (where <computeroutput>windowRatio &gt; 0.0</computeroutput> is required).</para><para>Preconditions: <programlisting><codeline><highlight class="normal">1.<sp/>std_dev<sp/>&gt;=<sp/>0.0</highlight></codeline>
<codeline><highlight class="normal">2.<sp/>order<sp/><sp/><sp/>&gt;=<sp/>1</highlight></codeline>
</programlisting></para><para>Postconditions: <programlisting><codeline><highlight class="normal">1.<sp/><ref refid="classvigra_1_1Kernel1D_1a265321ef4c7ad76f60e512fc09eef7c2" kindref="member">left</ref>()<sp/><sp/>==<sp/>-(int)(3.0*std_dev<sp/>+<sp/>0.5*order<sp/>+<sp/>0.5)</highlight></codeline>
<codeline><highlight class="normal">2.<sp/><ref refid="classvigra_1_1Kernel1D_1ad04ec796f4e7db479575644d114974ef" kindref="member">right</ref>()<sp/>==<sp/><sp/>(int)(3.0*std_dev<sp/>+<sp/>0.5*order<sp/>+<sp/>0.5)</highlight></codeline>
<codeline><highlight class="normal">3.<sp/><ref refid="classvigra_1_1Kernel1D_1a69dbff83a4127cc415a7eb796d95051e" kindref="member">borderTreatment</ref>()<sp/>==<sp/>BORDER_TREATMENT_REFLECT</highlight></codeline>
<codeline><highlight class="normal">4.<sp/><ref refid="classvigra_1_1Kernel1D_1aac41cd63a48de00144dbd94e4c38ead6" kindref="member">norm</ref>()<sp/>==<sp/><ref refid="classvigra_1_1Kernel1D_1aac41cd63a48de00144dbd94e4c38ead6" kindref="member">norm</ref></highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1519" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="2276" bodyend="2342"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1a7eec7322d05865b857efb1449888d918" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void initGaussianDerivative</definition>
        <argsstring>(double std_dev, int order)</argsstring>
        <name>initGaussianDerivative</name>
        <param>
          <type>double</type>
          <declname>std_dev</declname>
        </param>
        <param>
          <type>int</type>
          <declname>order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init as a <ref refid="classvigra_1_1Gaussian" kindref="compound">Gaussian</ref> derivative with norm 1. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1524" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1523" bodyend="1526"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1a1eeff31c2ffd35f352631fbe27d1dcdc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void initOptimalFirstDerivative5</definition>
        <argsstring>()</argsstring>
        <name>initOptimalFirstDerivative5</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init an optimal 5-tap first derivative filter. This filter must be used in conjunction with the corresponding 5-tap smoothing filter (see <ref refid="classvigra_1_1Kernel1D_1a068e7beed066f292a4ba8e777897526f" kindref="member">initOptimalFirstDerivativeSmoothing5()</ref>), such that the derivative filter is applied along one dimension, and the smoothing filter along the other. The filter values are</para><para><programlisting><codeline><highlight class="normal">[0.1,<sp/>0.3,<sp/>0.0,<sp/>-0.3,<sp/>-0.1]</highlight></codeline>
</programlisting></para><para>These values are optimal in the sense that the 5x5 filter obtained by combining this filter with the corresponding 5-tap smoothing filter is the best possible 5x5 approximation to a <ref refid="classvigra_1_1Gaussian" kindref="compound">Gaussian</ref> first derivative filter. The equivalent <ref refid="classvigra_1_1Gaussian" kindref="compound">Gaussian</ref> has sigma = 0.906.</para><para>If the filter is instead separably combined with itself, an almost optimal approximation of the mixed second <ref refid="classvigra_1_1Gaussian" kindref="compound">Gaussian</ref> derivative at scale sigma = 0.899 results.</para><para>Postconditions: <programlisting><codeline><highlight class="normal">1.<sp/><ref refid="classvigra_1_1Kernel1D_1a265321ef4c7ad76f60e512fc09eef7c2" kindref="member">left</ref>()<sp/><sp/>==<sp/>-2</highlight></codeline>
<codeline><highlight class="normal">2.<sp/><ref refid="classvigra_1_1Kernel1D_1ad04ec796f4e7db479575644d114974ef" kindref="member">right</ref>()<sp/>==<sp/><sp/>2</highlight></codeline>
<codeline><highlight class="normal">3.<sp/><ref refid="classvigra_1_1Kernel1D_1a69dbff83a4127cc415a7eb796d95051e" kindref="member">borderTreatment</ref>()<sp/>==<sp/>BORDER_TREATMENT_REFLECT</highlight></codeline>
<codeline><highlight class="normal">4.<sp/><ref refid="classvigra_1_1Kernel1D_1aac41cd63a48de00144dbd94e4c38ead6" kindref="member">norm</ref>()<sp/>==<sp/>1.0</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1932" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1931" bodyend="1935"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1af5677b3c7ffdc1586c4e9e4a5394daac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void initOptimalFirstDerivativeSmoothing3</definition>
        <argsstring>()</argsstring>
        <name>initOptimalFirstDerivativeSmoothing3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init an optimal 3-tap smoothing filter to be used in the context of first derivative computation. This filter must be used in conjunction with the symmetric difference filter (see <ref refid="classvigra_1_1Kernel1D_1a8feea4952f1c61fc8643bbcd23afe103" kindref="member">initSymmetricDifference()</ref>), such that the difference filter is applied along one dimension, and the smoothing filter along the other. The filter values are</para><para><programlisting><codeline><highlight class="normal">[0.224365,<sp/>0.55127,<sp/>0.224365]</highlight></codeline>
</programlisting></para><para>These values are optimal in the sense that the 3x3 filter obtained by combining this filter with the symmetric difference is the best possible 3x3 approximation to a <ref refid="classvigra_1_1Gaussian" kindref="compound">Gaussian</ref> first derivative filter. The equivalent <ref refid="classvigra_1_1Gaussian" kindref="compound">Gaussian</ref> has sigma = 0.675.</para><para>Postconditions: <programlisting><codeline><highlight class="normal">1.<sp/><ref refid="classvigra_1_1Kernel1D_1a265321ef4c7ad76f60e512fc09eef7c2" kindref="member">left</ref>()<sp/><sp/>==<sp/>-1</highlight></codeline>
<codeline><highlight class="normal">2.<sp/><ref refid="classvigra_1_1Kernel1D_1ad04ec796f4e7db479575644d114974ef" kindref="member">right</ref>()<sp/>==<sp/><sp/>1</highlight></codeline>
<codeline><highlight class="normal">3.<sp/><ref refid="classvigra_1_1Kernel1D_1a69dbff83a4127cc415a7eb796d95051e" kindref="member">borderTreatment</ref>()<sp/>==<sp/>BORDER_TREATMENT_REFLECT</highlight></codeline>
<codeline><highlight class="normal">4.<sp/><ref refid="classvigra_1_1Kernel1D_1aac41cd63a48de00144dbd94e4c38ead6" kindref="member">norm</ref>()<sp/>==<sp/>1.0</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1577" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1576" bodyend="1580"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1a068e7beed066f292a4ba8e777897526f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void initOptimalFirstDerivativeSmoothing5</definition>
        <argsstring>()</argsstring>
        <name>initOptimalFirstDerivativeSmoothing5</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init an optimal 5-tap smoothing filter to be used in the context of first derivative computation. This filter must be used in conjunction with the optimal 5-tap first derivative filter (see <ref refid="classvigra_1_1Kernel1D_1a1eeff31c2ffd35f352631fbe27d1dcdc" kindref="member">initOptimalFirstDerivative5()</ref>), such that the derivative filter is applied along one dimension, and the smoothing filter along the other. The filter values are</para><para><programlisting><codeline><highlight class="normal">[0.04255,<sp/>0.241,<sp/>0.4329,<sp/>0.241,<sp/>0.04255]</highlight></codeline>
</programlisting></para><para>These values are optimal in the sense that the 5x5 filter obtained by combining this filter with the optimal 5-tap first derivative is the best possible 5x5 approximation to a <ref refid="classvigra_1_1Gaussian" kindref="compound">Gaussian</ref> first derivative filter. The equivalent <ref refid="classvigra_1_1Gaussian" kindref="compound">Gaussian</ref> has sigma = 0.906.</para><para>Postconditions: <programlisting><codeline><highlight class="normal">1.<sp/><ref refid="classvigra_1_1Kernel1D_1a265321ef4c7ad76f60e512fc09eef7c2" kindref="member">left</ref>()<sp/><sp/>==<sp/>-2</highlight></codeline>
<codeline><highlight class="normal">2.<sp/><ref refid="classvigra_1_1Kernel1D_1ad04ec796f4e7db479575644d114974ef" kindref="member">right</ref>()<sp/>==<sp/><sp/>2</highlight></codeline>
<codeline><highlight class="normal">3.<sp/><ref refid="classvigra_1_1Kernel1D_1a69dbff83a4127cc415a7eb796d95051e" kindref="member">borderTreatment</ref>()<sp/>==<sp/>BORDER_TREATMENT_REFLECT</highlight></codeline>
<codeline><highlight class="normal">4.<sp/><ref refid="classvigra_1_1Kernel1D_1aac41cd63a48de00144dbd94e4c38ead6" kindref="member">norm</ref>()<sp/>==<sp/>1.0</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1659" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1658" bodyend="1662"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1ab50c7edfcedf325996e21eb74a69a4d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void initOptimalSecondDerivative5</definition>
        <argsstring>()</argsstring>
        <name>initOptimalSecondDerivative5</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init an optimal 5-tap second derivative filter. This filter must be used in conjunction with the corresponding 5-tap smoothing filter (see <ref refid="classvigra_1_1Kernel1D_1abbe3a4b86ffdaf0e8e85d5ab7e75ed71" kindref="member">initOptimalSecondDerivativeSmoothing5()</ref>), such that the derivative filter is applied along one dimension, and the smoothing filter along the other. The filter values are</para><para><programlisting><codeline><highlight class="normal">[0.22075,<sp/>0.117,<sp/>-0.6755,<sp/>0.117,<sp/>0.22075]</highlight></codeline>
</programlisting></para><para>These values are optimal in the sense that the 5x5 filter obtained by combining this filter with the corresponding 5-tap smoothing filter is the best possible 5x5 approximation to a <ref refid="classvigra_1_1Gaussian" kindref="compound">Gaussian</ref> second derivative filter. The equivalent <ref refid="classvigra_1_1Gaussian" kindref="compound">Gaussian</ref> has sigma = 0.817.</para><para>Postconditions: <programlisting><codeline><highlight class="normal">1.<sp/><ref refid="classvigra_1_1Kernel1D_1a265321ef4c7ad76f60e512fc09eef7c2" kindref="member">left</ref>()<sp/><sp/>==<sp/>-2</highlight></codeline>
<codeline><highlight class="normal">2.<sp/><ref refid="classvigra_1_1Kernel1D_1ad04ec796f4e7db479575644d114974ef" kindref="member">right</ref>()<sp/>==<sp/><sp/>2</highlight></codeline>
<codeline><highlight class="normal">3.<sp/><ref refid="classvigra_1_1Kernel1D_1a69dbff83a4127cc415a7eb796d95051e" kindref="member">borderTreatment</ref>()<sp/>==<sp/>BORDER_TREATMENT_REFLECT</highlight></codeline>
<codeline><highlight class="normal">4.<sp/><ref refid="classvigra_1_1Kernel1D_1aac41cd63a48de00144dbd94e4c38ead6" kindref="member">norm</ref>()<sp/>==<sp/>1.0</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1961" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1960" bodyend="1964"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1a0fe353a930022de958b75e9e6311189e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void initOptimalSecondDerivativeSmoothing3</definition>
        <argsstring>()</argsstring>
        <name>initOptimalSecondDerivativeSmoothing3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init an optimal 3-tap smoothing filter to be used in the context of second derivative computation. This filter must be used in conjunction with the 3-tap second difference filter (see <ref refid="classvigra_1_1Kernel1D_1a072b8efc06e0bd9c6f1fd395becebf17" kindref="member">initSecondDifference3()</ref>), such that the difference filter is applied along one dimension, and the smoothing filter along the other. The filter values are</para><para><programlisting><codeline><highlight class="normal">[0.13,<sp/>0.74,<sp/>0.13]</highlight></codeline>
</programlisting></para><para>These values are optimal in the sense that the 3x3 filter obtained by combining this filter with the 3-tap second difference is the best possible 3x3 approximation to a <ref refid="classvigra_1_1Gaussian" kindref="compound">Gaussian</ref> second derivative filter. The equivalent <ref refid="classvigra_1_1Gaussian" kindref="compound">Gaussian</ref> has sigma = 0.433.</para><para>Postconditions: <programlisting><codeline><highlight class="normal">1.<sp/><ref refid="classvigra_1_1Kernel1D_1a265321ef4c7ad76f60e512fc09eef7c2" kindref="member">left</ref>()<sp/><sp/>==<sp/>-1</highlight></codeline>
<codeline><highlight class="normal">2.<sp/><ref refid="classvigra_1_1Kernel1D_1ad04ec796f4e7db479575644d114974ef" kindref="member">right</ref>()<sp/>==<sp/><sp/>1</highlight></codeline>
<codeline><highlight class="normal">3.<sp/><ref refid="classvigra_1_1Kernel1D_1a69dbff83a4127cc415a7eb796d95051e" kindref="member">borderTreatment</ref>()<sp/>==<sp/>BORDER_TREATMENT_REFLECT</highlight></codeline>
<codeline><highlight class="normal">4.<sp/><ref refid="classvigra_1_1Kernel1D_1aac41cd63a48de00144dbd94e4c38ead6" kindref="member">norm</ref>()<sp/>==<sp/>1.0</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1605" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1604" bodyend="1608"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1abbe3a4b86ffdaf0e8e85d5ab7e75ed71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void initOptimalSecondDerivativeSmoothing5</definition>
        <argsstring>()</argsstring>
        <name>initOptimalSecondDerivativeSmoothing5</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init an optimal 5-tap smoothing filter to be used in the context of second derivative computation. This filter must be used in conjunction with the optimal 5-tap second derivative filter (see <ref refid="classvigra_1_1Kernel1D_1ab50c7edfcedf325996e21eb74a69a4d0" kindref="member">initOptimalSecondDerivative5()</ref>), such that the derivative filter is applied along one dimension, and the smoothing filter along the other. The filter values are</para><para><programlisting><codeline><highlight class="normal">[0.0243,<sp/>0.23556,<sp/>0.48028,<sp/>0.23556,<sp/>0.0243]</highlight></codeline>
</programlisting></para><para>These values are optimal in the sense that the 5x5 filter obtained by combining this filter with the optimal 5-tap second derivative is the best possible 5x5 approximation to a <ref refid="classvigra_1_1Gaussian" kindref="compound">Gaussian</ref> second derivative filter. The equivalent <ref refid="classvigra_1_1Gaussian" kindref="compound">Gaussian</ref> has sigma = 0.817.</para><para>Postconditions: <programlisting><codeline><highlight class="normal">1.<sp/><ref refid="classvigra_1_1Kernel1D_1a265321ef4c7ad76f60e512fc09eef7c2" kindref="member">left</ref>()<sp/><sp/>==<sp/>-2</highlight></codeline>
<codeline><highlight class="normal">2.<sp/><ref refid="classvigra_1_1Kernel1D_1ad04ec796f4e7db479575644d114974ef" kindref="member">right</ref>()<sp/>==<sp/><sp/>2</highlight></codeline>
<codeline><highlight class="normal">3.<sp/><ref refid="classvigra_1_1Kernel1D_1a69dbff83a4127cc415a7eb796d95051e" kindref="member">borderTreatment</ref>()<sp/>==<sp/>BORDER_TREATMENT_REFLECT</highlight></codeline>
<codeline><highlight class="normal">4.<sp/><ref refid="classvigra_1_1Kernel1D_1aac41cd63a48de00144dbd94e4c38ead6" kindref="member">norm</ref>()<sp/>==<sp/>1.0</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1687" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1686" bodyend="1690"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1af4902fcc6fe66ab6646cbe1fdc5e7121" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void initOptimalSmoothing3</definition>
        <argsstring>()</argsstring>
        <name>initOptimalSmoothing3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init an optimal 3-tap smoothing filter. The filter values are</para><para><programlisting><codeline><highlight class="normal">[0.216,<sp/>0.568,<sp/>0.216]</highlight></codeline>
</programlisting></para><para>These values are optimal in the sense that the 3x3 filter obtained by separable application of this filter is the best possible 3x3 approximation to a <ref refid="classvigra_1_1Gaussian" kindref="compound">Gaussian</ref> filter. The equivalent <ref refid="classvigra_1_1Gaussian" kindref="compound">Gaussian</ref> has sigma = 0.680.</para><para>Postconditions: <programlisting><codeline><highlight class="normal">1.<sp/><ref refid="classvigra_1_1Kernel1D_1a265321ef4c7ad76f60e512fc09eef7c2" kindref="member">left</ref>()<sp/><sp/>==<sp/>-1</highlight></codeline>
<codeline><highlight class="normal">2.<sp/><ref refid="classvigra_1_1Kernel1D_1ad04ec796f4e7db479575644d114974ef" kindref="member">right</ref>()<sp/>==<sp/><sp/>1</highlight></codeline>
<codeline><highlight class="normal">3.<sp/><ref refid="classvigra_1_1Kernel1D_1a69dbff83a4127cc415a7eb796d95051e" kindref="member">borderTreatment</ref>()<sp/>==<sp/>BORDER_TREATMENT_REFLECT</highlight></codeline>
<codeline><highlight class="normal">4.<sp/><ref refid="classvigra_1_1Kernel1D_1aac41cd63a48de00144dbd94e4c38ead6" kindref="member">norm</ref>()<sp/>==<sp/>1.0</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1549" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1548" bodyend="1552"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1a75b3593dd18b43b1d5f81532617d8010" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void initOptimalSmoothing5</definition>
        <argsstring>()</argsstring>
        <name>initOptimalSmoothing5</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init an optimal 5-tap smoothing filter. The filter values are</para><para><programlisting><codeline><highlight class="normal">[0.03134,<sp/>0.24,<sp/>0.45732,<sp/>0.24,<sp/>0.03134]</highlight></codeline>
</programlisting></para><para>These values are optimal in the sense that the 5x5 filter obtained by separable application of this filter is the best possible 5x5 approximation to a <ref refid="classvigra_1_1Gaussian" kindref="compound">Gaussian</ref> filter. The equivalent <ref refid="classvigra_1_1Gaussian" kindref="compound">Gaussian</ref> has sigma = 0.867.</para><para>Postconditions: <programlisting><codeline><highlight class="normal">1.<sp/><ref refid="classvigra_1_1Kernel1D_1a265321ef4c7ad76f60e512fc09eef7c2" kindref="member">left</ref>()<sp/><sp/>==<sp/>-2</highlight></codeline>
<codeline><highlight class="normal">2.<sp/><ref refid="classvigra_1_1Kernel1D_1ad04ec796f4e7db479575644d114974ef" kindref="member">right</ref>()<sp/>==<sp/><sp/>2</highlight></codeline>
<codeline><highlight class="normal">3.<sp/><ref refid="classvigra_1_1Kernel1D_1a69dbff83a4127cc415a7eb796d95051e" kindref="member">borderTreatment</ref>()<sp/>==<sp/>BORDER_TREATMENT_REFLECT</highlight></codeline>
<codeline><highlight class="normal">4.<sp/><ref refid="classvigra_1_1Kernel1D_1aac41cd63a48de00144dbd94e4c38ead6" kindref="member">norm</ref>()<sp/>==<sp/>1.0</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1631" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1630" bodyend="1634"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1a072b8efc06e0bd9c6f1fd395becebf17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void initSecondDifference3</definition>
        <argsstring>()</argsstring>
        <name>initSecondDifference3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init the 3-tap second difference filter. The filter values are</para><para><programlisting><codeline><highlight class="normal">[1,<sp/>-2,<sp/>1]</highlight></codeline>
</programlisting></para><para>Postconditions: <programlisting><codeline><highlight class="normal">1.<sp/><ref refid="classvigra_1_1Kernel1D_1a265321ef4c7ad76f60e512fc09eef7c2" kindref="member">left</ref>()<sp/><sp/>==<sp/>-1</highlight></codeline>
<codeline><highlight class="normal">2.<sp/><ref refid="classvigra_1_1Kernel1D_1ad04ec796f4e7db479575644d114974ef" kindref="member">right</ref>()<sp/>==<sp/><sp/>1</highlight></codeline>
<codeline><highlight class="normal">3.<sp/><ref refid="classvigra_1_1Kernel1D_1a69dbff83a4127cc415a7eb796d95051e" kindref="member">borderTreatment</ref>()<sp/>==<sp/>BORDER_TREATMENT_REFLECT</highlight></codeline>
<codeline><highlight class="normal">4.<sp/><ref refid="classvigra_1_1Kernel1D_1aac41cd63a48de00144dbd94e4c38ead6" kindref="member">norm</ref>()<sp/>==<sp/>1</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1900" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1899" bodyend="1903"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1a7b32d2e9fd5f2fc94751bf3397cbcee5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initSymmetricDifference</definition>
        <argsstring>(value_type norm)</argsstring>
        <name>initSymmetricDifference</name>
        <param>
          <type><ref refid="classvigra_1_1Kernel1D_1a821b18fa86c2bc45ccf17716429d438b" kindref="member">value_type</ref></type>
          <declname>norm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1860" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="2411" bodyend="2427"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1a8feea4952f1c61fc8643bbcd23afe103" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void initSymmetricDifference</definition>
        <argsstring>()</argsstring>
        <name>initSymmetricDifference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init as the 3-tap symmetric difference filter The filter values are</para><para><programlisting><codeline><highlight class="normal">[0.5,<sp/>0,<sp/>-0.5]</highlight></codeline>
</programlisting></para><para>Postconditions: <programlisting><codeline><highlight class="normal">1.<sp/><ref refid="classvigra_1_1Kernel1D_1a265321ef4c7ad76f60e512fc09eef7c2" kindref="member">left</ref>()<sp/><sp/>==<sp/>-1</highlight></codeline>
<codeline><highlight class="normal">2.<sp/><ref refid="classvigra_1_1Kernel1D_1ad04ec796f4e7db479575644d114974ef" kindref="member">right</ref>()<sp/>==<sp/><sp/>1</highlight></codeline>
<codeline><highlight class="normal">3.<sp/><ref refid="classvigra_1_1Kernel1D_1a69dbff83a4127cc415a7eb796d95051e" kindref="member">borderTreatment</ref>()<sp/>==<sp/>BORDER_TREATMENT_REFLECT</highlight></codeline>
<codeline><highlight class="normal">4.<sp/><ref refid="classvigra_1_1Kernel1D_1aac41cd63a48de00144dbd94e4c38ead6" kindref="member">norm</ref>()<sp/>==<sp/>1.0</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1878" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1877" bodyend="1880"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1ab9c9a9ebb3b89ac2c8aff5e985923d18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void initSymmetricGradient</definition>
        <argsstring>(value_type norm)</argsstring>
        <name>initSymmetricGradient</name>
        <param>
          <type><ref refid="classvigra_1_1Kernel1D_1a821b18fa86c2bc45ccf17716429d438b" kindref="member">value_type</ref></type>
          <declname>norm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init as a symmetric gradient filter of the form <computeroutput>[ 0.5 * norm, 0.0 * norm, -0.5 * norm]</computeroutput></para><para><bold>Deprecated</bold>. Use <ref refid="classvigra_1_1Kernel1D_1a8feea4952f1c61fc8643bbcd23afe103" kindref="member">initSymmetricDifference()</ref> instead.</para><para>Postconditions: <programlisting><codeline><highlight class="normal">1.<sp/><ref refid="classvigra_1_1Kernel1D_1a265321ef4c7ad76f60e512fc09eef7c2" kindref="member">left</ref>()<sp/><sp/>==<sp/>-1</highlight></codeline>
<codeline><highlight class="normal">2.<sp/><ref refid="classvigra_1_1Kernel1D_1ad04ec796f4e7db479575644d114974ef" kindref="member">right</ref>()<sp/>==<sp/><sp/>1</highlight></codeline>
<codeline><highlight class="normal">3.<sp/><ref refid="classvigra_1_1Kernel1D_1a69dbff83a4127cc415a7eb796d95051e" kindref="member">borderTreatment</ref>()<sp/>==<sp/>BORDER_TREATMENT_REPEAT</highlight></codeline>
<codeline><highlight class="normal">4.<sp/><ref refid="classvigra_1_1Kernel1D_1aac41cd63a48de00144dbd94e4c38ead6" kindref="member">norm</ref>()<sp/>==<sp/><ref refid="classvigra_1_1Kernel1D_1aac41cd63a48de00144dbd94e4c38ead6" kindref="member">norm</ref></highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1797" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1796" bodyend="1800"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1a50d0fbcbdb93cbbdfa5d497d5afb5b13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void initSymmetricGradient</definition>
        <argsstring>()</argsstring>
        <name>initSymmetricGradient</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init as a symmetric gradient filter with norm 1.</para><para><bold>Deprecated</bold>. Use <ref refid="classvigra_1_1Kernel1D_1a8feea4952f1c61fc8643bbcd23afe103" kindref="member">initSymmetricDifference()</ref> instead. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1807" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1806" bodyend="1809"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1ac4bc39b4e951c1da5c7d14e79774842b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Kernel1D</definition>
        <argsstring>()</argsstring>
        <name>Kernel1D</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default constructor. Creates a kernel of size 1 which would copy the signal unchanged. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1354" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1348" bodyend="1356"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1aafb70f6879284a8f74ae53ab656094e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Kernel1D</definition>
        <argsstring>(Kernel1D const &amp;k)</argsstring>
        <name>Kernel1D</name>
        <param>
          <type><ref refid="classvigra_1_1Kernel1D" kindref="compound">Kernel1D</ref> const &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1366" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1360" bodyend="1366"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1a4302a66e41af59782c71e1103e6ded00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Kernel1D</definition>
        <argsstring>(Kernel1D&lt; U &gt; const &amp;k)</argsstring>
        <name>Kernel1D</name>
        <param>
          <type><ref refid="classvigra_1_1Kernel1D" kindref="compound">Kernel1D</ref>&lt; U &gt; const &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct from kernel with different element type, e.g. double =&gt; <ref refid="classvigra_1_1FixedPoint16" kindref="compound">FixedPoint16</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1377" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1371" bodyend="1377"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1a265321ef4c7ad76f60e512fc09eef7c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int left</definition>
        <argsstring>() const </argsstring>
        <name>left</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>left border of kernel (inclusive), always &lt;= 0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="2053" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="2053" bodyend="2053"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1aac41cd63a48de00144dbd94e4c38ead6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1Kernel1D_1a821b18fa86c2bc45ccf17716429d438b" kindref="member">value_type</ref></type>
        <definition>value_type norm</definition>
        <argsstring>() const </argsstring>
        <name>norm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>norm of kernel </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="2075" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="2075" bodyend="2075"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1a7f10c82d42dacf3b4c9b691fb0840e35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void normalize</definition>
        <argsstring>(value_type norm, unsigned int derivativeOrder=0, double offset=0.0)</argsstring>
        <name>normalize</name>
        <param>
          <type><ref refid="classvigra_1_1Kernel1D_1a821b18fa86c2bc45ccf17716429d438b" kindref="member">value_type</ref></type>
          <declname>norm</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>derivativeOrder</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>offset</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set a new norm and normalize kernel, use the normalization formula for the given <computeroutput>derivativeOrder</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="2081" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="2107" bodyend="2147"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1acd0de676568888d848beb97dcc53ae47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void normalize</definition>
        <argsstring>()</argsstring>
        <name>normalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>normalize kernel to norm 1. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="2087" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="2086" bodyend="2089"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1a4d661136561636b764e9689d41db9349" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1Kernel1D" kindref="compound">Kernel1D</ref> &amp;</type>
        <definition>Kernel1D&amp; operator=</definition>
        <argsstring>(Kernel1D const &amp;k)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classvigra_1_1Kernel1D" kindref="compound">Kernel1D</ref> const &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy assignment. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1382" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1381" bodyend="1392"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1a4fd821bdc684b1cdad02afe53dd043dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>InitProxy</type>
        <definition>InitProxy operator=</definition>
        <argsstring>(value_type const &amp;v)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classvigra_1_1Kernel1D_1a821b18fa86c2bc45ccf17716429d438b" kindref="member">value_type</ref> const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialization. This initializes the kernel with the given constant. The norm becomes v*size().</para><para>Instead of a single value an initializer list of length <ref refid="classvigra_1_1Kernel1D_1ab8e4e3e2a7bf18888b71bdf9dda0770b" kindref="member">size()</ref> can be used like this:</para><para><programlisting><codeline><highlight class="normal"><ref refid="classvigra_1_1Kernel1D" kindref="compound" tooltip="Generic 1 dimensional convolution kernel.">vigra::Kernel1D&lt;float&gt;</ref><sp/>roberts_gradient_x;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">roberts_gradient_x.<ref refid="classvigra_1_1Kernel1D_1a1164e5b808619971ebc0e9783f972dc9" kindref="member">initExplicitly</ref>(0,<sp/>1)<sp/>=<sp/>1.0,<sp/>-1.0;</highlight></codeline>
</programlisting></para><para>In this case, the norm will be set to the sum of the init values. An initializer list of wrong length will result in a run-time error. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1411" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1410" bodyend="1417"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1a42bf8c098fec92f08714fdf0c72a66ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1Kernel1D_1a130b31490ce7ba9051094274b190940d" kindref="member">reference</ref></type>
        <definition>reference operator[]</definition>
        <argsstring>(int location)</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access kernel value at specified location.</para><para>Preconditions: <programlisting><codeline><highlight class="normal"><ref refid="classvigra_1_1Kernel1D_1a265321ef4c7ad76f60e512fc09eef7c2" kindref="member">left</ref>()<sp/>&lt;=<sp/>location<sp/>&lt;=<sp/><ref refid="classvigra_1_1Kernel1D_1ad04ec796f4e7db479575644d114974ef" kindref="member">right</ref>()</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="2042" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="2041" bodyend="2044"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1a4e6bbf6c2e6f3d4c63c5ab3e5c56eebf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1Kernel1D_1ab6c87d7921339cc42075571aaf0c6534" kindref="member">const_reference</ref></type>
        <definition>const_reference operator[]</definition>
        <argsstring>(int location) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="2047" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="2046" bodyend="2049"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1ad04ec796f4e7db479575644d114974ef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int right</definition>
        <argsstring>() const </argsstring>
        <name>right</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>right border of kernel (inclusive), always &gt;= 0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="2057" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="2057" bodyend="2057"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1a647df9e68cc4da54a5c9d2ba13768c9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void setBorderTreatment</definition>
        <argsstring>(BorderTreatmentMode new_mode)</argsstring>
        <name>setBorderTreatment</name>
        <param>
          <type>BorderTreatmentMode</type>
          <declname>new_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set border treatment mode. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="2071" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="2070" bodyend="2071"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1ab8e4e3e2a7bf18888b71bdf9dda0770b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>size of kernel (<ref refid="classvigra_1_1Kernel1D_1ad04ec796f4e7db479575644d114974ef" kindref="member">right()</ref> - <ref refid="classvigra_1_1Kernel1D_1a265321ef4c7ad76f60e512fc09eef7c2" kindref="member">left()</ref> + 1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="2061" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="2061" bodyend="2061"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1Kernel1D_1a8dce5d31376d099a6f6a940dd1b1fa28" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>~Kernel1D</definition>
        <argsstring>()</argsstring>
        <name>~Kernel1D</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1422" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1421" bodyend="1422"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Generic 1 dimensional convolution kernel. </para>    </briefdescription>
    <detaileddescription>
<para>This kernel may be used for convolution of 1 dimensional signals or for separable convolution of multidimensional signals.</para><para>Convolution functions access the kernel via a 1 dimensional random access iterator which they get by calling <ref refid="classvigra_1_1Kernel1D_1afa906590f3f139cdfeb292a15add8e1f" kindref="member">center()</ref>. This iterator points to the center of the kernel. The kernel&apos;s size is given by its <ref refid="classvigra_1_1Kernel1D_1a265321ef4c7ad76f60e512fc09eef7c2" kindref="member">left()</ref> (&lt;=0) and <ref refid="classvigra_1_1Kernel1D_1ad04ec796f4e7db479575644d114974ef" kindref="member">right()</ref> (&gt;= 0) methods. The desired border treatment mode is returned by <ref refid="classvigra_1_1Kernel1D_1a69dbff83a4127cc415a7eb796d95051e" kindref="member">borderTreatment()</ref>.</para><para>The different init functions create a kernel with the specified properties. The kernel&apos;s value_type must be a linear space, i.e. it must define multiplication with doubles and NumericTraits.</para><para>The kernel defines a factory function kernel1d() to create an argument object (see <ref refid="KernelArgumentObjectFactories" kindref="compound">Kernel Argument Object Factories</ref>).</para><para><bold> Usage:</bold></para><para><bold>#include</bold> &lt;<ref refid="stdconvolution_8hxx_source" kindref="compound">vigra/stdconvolution.hxx</ref>&gt;</para><para><programlisting><codeline><highlight class="normal"><ref refid="classvigra_1_1BasicImage" kindref="compound" tooltip="Fundamental class template for images.">vigra::FImage</ref><sp/>src(w,h),<sp/>dest(w,h);</highlight></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>define<sp/>Gaussian<sp/>kernel<sp/>with<sp/>std.<sp/>deviation<sp/>3.0</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">vigra::Kernel1D<sp/>kernel;</highlight></codeline>
<codeline><highlight class="normal">kernel.initGaussian(3.0);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="group__SeparableConvolution_1ga34459275af4134198dfc1a75c9993848" kindref="member" tooltip="Performs a 1 dimensional convolution in x direction.">vigra::separableConvolveX</ref>(srcImageRange(src),<sp/>destImage(dest),<sp/>kernel1d(kernel));</highlight></codeline>
</programlisting></para><para><bold> Required Interface:</bold></para><para><programlisting><codeline><highlight class="normal"><ref refid="classvigra_1_1Kernel1D_1a821b18fa86c2bc45ccf17716429d438b" kindref="member">value_type</ref><sp/>v<sp/>=<sp/>vigra::NumericTraits&lt;value_type&gt;::one();<sp/></highlight><highlight class="comment">//<sp/>if<sp/>norm<sp/>is<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>given<sp/>explicitly</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">v<sp/>=<sp/>d<sp/>*<sp/>v;</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" line="1268" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/separableconvolution.hxx" bodystart="1267" bodyend="2104"/>
    <listofallmembers>
      <member refid="classvigra_1_1Kernel1D_1a6c53fe234330a9d1604e0948fa47174b" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>Accessor</name></member>
      <member refid="classvigra_1_1Kernel1D_1a40e8567a7e13dacc22cadde2f9d1dcd0" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>accessor</name></member>
      <member refid="classvigra_1_1Kernel1D_1ac1e543db9ce291e86b9023cdb9202b5b" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>accessor</name></member>
      <member refid="classvigra_1_1Kernel1D_1adf6f18ab23ed47ea40ef2b744eee8df8" prot="private" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>border_treatment_</name></member>
      <member refid="classvigra_1_1Kernel1D_1a69dbff83a4127cc415a7eb796d95051e" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>borderTreatment</name></member>
      <member refid="classvigra_1_1Kernel1D_1afa906590f3f139cdfeb292a15add8e1f" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>center</name></member>
      <member refid="classvigra_1_1Kernel1D_1addb7f7fedd8c00f97d49af3447d05a2f" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>center</name></member>
      <member refid="classvigra_1_1Kernel1D_1ab5a64d70f2934a8cb54eb8d81f059773" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>const_iterator</name></member>
      <member refid="classvigra_1_1Kernel1D_1ab6c87d7921339cc42075571aaf0c6534" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>const_reference</name></member>
      <member refid="classvigra_1_1Kernel1D_1aa78445962f8673a1e2c1393dab7c7ad8" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>ConstAccessor</name></member>
      <member refid="classvigra_1_1Kernel1D_1ab7fe279fbc6c3e2ce60ec778109b9923" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>initAveraging</name></member>
      <member refid="classvigra_1_1Kernel1D_1a97c19fd629e175e9b97af74733b2bbd4" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>initAveraging</name></member>
      <member refid="classvigra_1_1Kernel1D_1a192eec53d760d825b0eedab01a6a2ed2" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>initBackwardDifference</name></member>
      <member refid="classvigra_1_1Kernel1D_1ac919a292dea182575c698495de0430b2" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>initBinomial</name></member>
      <member refid="classvigra_1_1Kernel1D_1a01c5f04a39f4a11736e787f7d27f6666" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>initBinomial</name></member>
      <member refid="classvigra_1_1Kernel1D_1a1406a301a1cc659b3098bbcc0a827228" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>initBurtFilter</name></member>
      <member refid="classvigra_1_1Kernel1D_1a80922d43665cec4f4378e8378997feb0" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>initDiscreteGaussian</name></member>
      <member refid="classvigra_1_1Kernel1D_1a15901db2903a004e09e86ae5fbd66ca2" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>initDiscreteGaussian</name></member>
      <member refid="classvigra_1_1Kernel1D_1a1164e5b808619971ebc0e9783f972dc9" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>initExplicitly</name></member>
      <member refid="classvigra_1_1Kernel1D_1acf8d30d2b69f8f6771d6804d15df5072" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>initForwardDifference</name></member>
      <member refid="classvigra_1_1Kernel1D_1a48c46ac7770600ec38f55c1dc498244a" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>initGaussian</name></member>
      <member refid="classvigra_1_1Kernel1D_1abba907ac90270c3dd8aac14af93f7b58" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>initGaussian</name></member>
      <member refid="classvigra_1_1Kernel1D_1a825b69c78f7b71bc33dea8d461849161" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>initGaussianDerivative</name></member>
      <member refid="classvigra_1_1Kernel1D_1a7eec7322d05865b857efb1449888d918" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>initGaussianDerivative</name></member>
      <member refid="classvigra_1_1Kernel1D_1a1eeff31c2ffd35f352631fbe27d1dcdc" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>initOptimalFirstDerivative5</name></member>
      <member refid="classvigra_1_1Kernel1D_1af5677b3c7ffdc1586c4e9e4a5394daac" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>initOptimalFirstDerivativeSmoothing3</name></member>
      <member refid="classvigra_1_1Kernel1D_1a068e7beed066f292a4ba8e777897526f" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>initOptimalFirstDerivativeSmoothing5</name></member>
      <member refid="classvigra_1_1Kernel1D_1ab50c7edfcedf325996e21eb74a69a4d0" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>initOptimalSecondDerivative5</name></member>
      <member refid="classvigra_1_1Kernel1D_1a0fe353a930022de958b75e9e6311189e" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>initOptimalSecondDerivativeSmoothing3</name></member>
      <member refid="classvigra_1_1Kernel1D_1abbe3a4b86ffdaf0e8e85d5ab7e75ed71" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>initOptimalSecondDerivativeSmoothing5</name></member>
      <member refid="classvigra_1_1Kernel1D_1af4902fcc6fe66ab6646cbe1fdc5e7121" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>initOptimalSmoothing3</name></member>
      <member refid="classvigra_1_1Kernel1D_1a75b3593dd18b43b1d5f81532617d8010" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>initOptimalSmoothing5</name></member>
      <member refid="classvigra_1_1Kernel1D_1a072b8efc06e0bd9c6f1fd395becebf17" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>initSecondDifference3</name></member>
      <member refid="classvigra_1_1Kernel1D_1a7b32d2e9fd5f2fc94751bf3397cbcee5" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>initSymmetricDifference</name></member>
      <member refid="classvigra_1_1Kernel1D_1a8feea4952f1c61fc8643bbcd23afe103" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>initSymmetricDifference</name></member>
      <member refid="classvigra_1_1Kernel1D_1ab9c9a9ebb3b89ac2c8aff5e985923d18" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>initSymmetricGradient</name></member>
      <member refid="classvigra_1_1Kernel1D_1a50d0fbcbdb93cbbdfa5d497d5afb5b13" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>initSymmetricGradient</name></member>
      <member refid="classvigra_1_1Kernel1D_1aae90b86fb9ad1bf34dd9c8f684fc3986" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>InternalVector</name></member>
      <member refid="classvigra_1_1Kernel1D_1adef84b9c9d4f014effcfecbca87629d2" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>Iterator</name></member>
      <member refid="classvigra_1_1Kernel1D_1a8c0b17e9965a56ba56cb5fedc7119a92" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>iterator</name></member>
      <member refid="classvigra_1_1Kernel1D_1ac4bc39b4e951c1da5c7d14e79774842b" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>Kernel1D</name></member>
      <member refid="classvigra_1_1Kernel1D_1aafb70f6879284a8f74ae53ab656094e6" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>Kernel1D</name></member>
      <member refid="classvigra_1_1Kernel1D_1a4302a66e41af59782c71e1103e6ded00" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>Kernel1D</name></member>
      <member refid="classvigra_1_1Kernel1D_1a5be2086014a52475b2391f11039e9b44" prot="private" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>kernel_</name></member>
      <member refid="classvigra_1_1Kernel1D_1a265321ef4c7ad76f60e512fc09eef7c2" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>left</name></member>
      <member refid="classvigra_1_1Kernel1D_1ae29e07050a904f108dc5ff7d26c5fecf" prot="private" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>left_</name></member>
      <member refid="classvigra_1_1Kernel1D_1aac41cd63a48de00144dbd94e4c38ead6" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>norm</name></member>
      <member refid="classvigra_1_1Kernel1D_1ae941ce86d718854a47ff51d9663d8861" prot="private" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>norm_</name></member>
      <member refid="classvigra_1_1Kernel1D_1a7f10c82d42dacf3b4c9b691fb0840e35" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>normalize</name></member>
      <member refid="classvigra_1_1Kernel1D_1acd0de676568888d848beb97dcc53ae47" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>normalize</name></member>
      <member refid="classvigra_1_1Kernel1D_1a66018859461121f0957fc48b6e228c67" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>one</name></member>
      <member refid="classvigra_1_1Kernel1D_1a4d661136561636b764e9689d41db9349" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>operator=</name></member>
      <member refid="classvigra_1_1Kernel1D_1a4fd821bdc684b1cdad02afe53dd043dc" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>operator=</name></member>
      <member refid="classvigra_1_1Kernel1D_1a42bf8c098fec92f08714fdf0c72a66ff" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>operator[]</name></member>
      <member refid="classvigra_1_1Kernel1D_1a4e6bbf6c2e6f3d4c63c5ab3e5c56eebf" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>operator[]</name></member>
      <member refid="classvigra_1_1Kernel1D_1a130b31490ce7ba9051094274b190940d" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>reference</name></member>
      <member refid="classvigra_1_1Kernel1D_1ad04ec796f4e7db479575644d114974ef" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>right</name></member>
      <member refid="classvigra_1_1Kernel1D_1a5aba70d8cde19895261c5b6dacb7e46e" prot="private" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>right_</name></member>
      <member refid="classvigra_1_1Kernel1D_1a647df9e68cc4da54a5c9d2ba13768c9a" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>setBorderTreatment</name></member>
      <member refid="classvigra_1_1Kernel1D_1ab8e4e3e2a7bf18888b71bdf9dda0770b" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>size</name></member>
      <member refid="classvigra_1_1Kernel1D_1a821b18fa86c2bc45ccf17716429d438b" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>value_type</name></member>
      <member refid="classvigra_1_1Kernel1D_1a8dce5d31376d099a6f6a940dd1b1fa28" prot="public" virt="non-virtual"><scope>vigra::Kernel1D</scope><name>~Kernel1D</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
