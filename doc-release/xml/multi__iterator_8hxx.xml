<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="multi__iterator_8hxx" kind="file">
    <compoundname>multi_iterator.hxx</compoundname>
    <includes local="no">sys/types.h</includes>
    <includes refid="tinyvector_8hxx" local="yes">tinyvector.hxx</includes>
    <includes refid="iteratortags_8hxx" local="yes">iteratortags.hxx</includes>
    <includedby refid="multi__array_8hxx" local="yes">vigra/multi_array.hxx</includedby>
    <includedby refid="coordinate__iterator_8hxx" local="yes">vigra/coordinate_iterator.hxx</includedby>
    <includedby refid="imageinfo_8hxx" local="yes">vigra/imageinfo.hxx</includedby>
    <incdepgraph>
      <node id="5014">
        <label>functional</label>
      </node>
      <node id="5002">
        <label>limits</label>
      </node>
      <node id="5006">
        <label>sized_int.hxx</label>
        <link refid="sized__int_8hxx_source"/>
        <childnode refid="5000" relation="include">
        </childnode>
        <childnode refid="5002" relation="include">
        </childnode>
      </node>
      <node id="5015">
        <label>iterator</label>
      </node>
      <node id="5013">
        <label>inspector_passes.hxx</label>
        <link refid="inspector__passes_8hxx_source"/>
        <childnode refid="5000" relation="include">
        </childnode>
      </node>
      <node id="5007">
        <label>promote_traits.hxx</label>
        <link refid="promote__traits_8hxx_source"/>
      </node>
      <node id="5012">
        <label>algorithm.hxx</label>
        <link refid="algorithm_8hxx_source"/>
        <childnode refid="5006" relation="include">
        </childnode>
        <childnode refid="5003" relation="include">
        </childnode>
        <childnode refid="5013" relation="include">
        </childnode>
        <childnode refid="4993" relation="include">
        </childnode>
        <childnode refid="5014" relation="include">
        </childnode>
        <childnode refid="5015" relation="include">
        </childnode>
      </node>
      <node id="4990">
        <label>cmath</label>
      </node>
      <node id="4996">
        <label>stdexcept</label>
      </node>
      <node id="5017">
        <label>iteratortags.hxx</label>
        <link refid="iteratortags_8hxx_source"/>
        <childnode refid="5015" relation="include">
        </childnode>
      </node>
      <node id="4999">
        <label>string</label>
      </node>
      <node id="5018">
        <label>iteratortraits.hxx</label>
        <link refid="iteratortraits_8hxx_source"/>
        <childnode refid="5019" relation="include">
        </childnode>
        <childnode refid="5020" relation="include">
        </childnode>
      </node>
      <node id="5004">
        <label>cfloat</label>
      </node>
      <node id="4995">
        <label>vigra/configVersion.hxx</label>
        <link refid="configVersion_8hxx_source"/>
      </node>
      <node id="5010">
        <label>tuple.hxx</label>
        <link refid="tuple_8hxx_source"/>
        <childnode refid="5011" relation="include">
        </childnode>
      </node>
      <node id="4989">
        <label>tinyvector.hxx</label>
        <link refid="tinyvector_8hxx_source"/>
        <childnode refid="4990" relation="include">
        </childnode>
        <childnode refid="4991" relation="include">
        </childnode>
        <childnode refid="4992" relation="include">
        </childnode>
        <childnode refid="4993" relation="include">
        </childnode>
        <childnode refid="4994" relation="include">
        </childnode>
        <childnode refid="4997" relation="include">
        </childnode>
        <childnode refid="5000" relation="include">
        </childnode>
        <childnode refid="5003" relation="include">
        </childnode>
        <childnode refid="5008" relation="include">
        </childnode>
        <childnode refid="5009" relation="include">
        </childnode>
        <childnode refid="5016" relation="include">
        </childnode>
      </node>
      <node id="4988">
        <label>sys/types.h</label>
      </node>
      <node id="5009">
        <label>mathutil.hxx</label>
        <link refid="mathutil_8hxx_source"/>
        <childnode refid="4990" relation="include">
        </childnode>
        <childnode refid="4991" relation="include">
        </childnode>
        <childnode refid="5005" relation="include">
        </childnode>
        <childnode refid="4994" relation="include">
        </childnode>
        <childnode refid="4997" relation="include">
        </childnode>
        <childnode refid="5010" relation="include">
        </childnode>
        <childnode refid="5006" relation="include">
        </childnode>
        <childnode refid="5003" relation="include">
        </childnode>
        <childnode refid="5012" relation="include">
        </childnode>
      </node>
      <node id="4994">
        <label>config.hxx</label>
        <link refid="config_8hxx_source"/>
        <childnode refid="4995" relation="include">
        </childnode>
        <childnode refid="4996" relation="include">
        </childnode>
      </node>
      <node id="5003">
        <label>numerictraits.hxx</label>
        <link refid="numerictraits_8hxx_source"/>
        <childnode refid="5001" relation="include">
        </childnode>
        <childnode refid="5002" relation="include">
        </childnode>
        <childnode refid="5004" relation="include">
        </childnode>
        <childnode refid="5005" relation="include">
        </childnode>
        <childnode refid="5000" relation="include">
        </childnode>
        <childnode refid="5006" relation="include">
        </childnode>
        <childnode refid="5007" relation="include">
        </childnode>
      </node>
      <node id="5021">
        <label>iteratoradapter.hxx</label>
        <link refid="iteratoradapter_8hxx_source"/>
      </node>
      <node id="5020">
        <label>imageiteratoradapter.hxx</label>
        <link refid="imageiteratoradapter_8hxx_source"/>
        <childnode refid="5015" relation="include">
        </childnode>
      </node>
      <node id="5011">
        <label>utility</label>
      </node>
      <node id="4998">
        <label>sstream</label>
      </node>
      <node id="5016">
        <label>diff2d.hxx</label>
        <link refid="diff2d_8hxx_source"/>
        <childnode refid="4990" relation="include">
        </childnode>
        <childnode refid="4992" relation="include">
        </childnode>
        <childnode refid="4994" relation="include">
        </childnode>
        <childnode refid="5017" relation="include">
        </childnode>
        <childnode refid="5018" relation="include">
        </childnode>
        <childnode refid="5021" relation="include">
        </childnode>
        <childnode refid="5010" relation="include">
        </childnode>
      </node>
      <node id="4997">
        <label>error.hxx</label>
        <link refid="error_8hxx_source"/>
        <childnode refid="4996" relation="include">
        </childnode>
        <childnode refid="4998" relation="include">
        </childnode>
        <childnode refid="4999" relation="include">
        </childnode>
        <childnode refid="4994" relation="include">
        </childnode>
      </node>
      <node id="4992">
        <label>iosfwd</label>
      </node>
      <node id="4991">
        <label>cstdlib</label>
      </node>
      <node id="4987">
        <label>vigra/multi_iterator.hxx</label>
        <link refid="multi_iterator.hxx"/>
        <childnode refid="4988" relation="include">
        </childnode>
        <childnode refid="4989" relation="include">
        </childnode>
        <childnode refid="5017" relation="include">
        </childnode>
      </node>
      <node id="5001">
        <label>climits</label>
      </node>
      <node id="5000">
        <label>metaprogramming.hxx</label>
        <link refid="metaprogramming_8hxx_source"/>
        <childnode refid="4994" relation="include">
        </childnode>
        <childnode refid="5001" relation="include">
        </childnode>
        <childnode refid="5002" relation="include">
        </childnode>
        <childnode refid="4993" relation="include">
        </childnode>
      </node>
      <node id="5005">
        <label>complex</label>
      </node>
      <node id="4993">
        <label>algorithm</label>
      </node>
      <node id="5008">
        <label>memory.hxx</label>
        <link refid="memory_8hxx_source"/>
        <childnode refid="5000" relation="include">
        </childnode>
      </node>
      <node id="5019">
        <label>accessor.hxx</label>
        <link refid="accessor_8hxx_source"/>
        <childnode refid="5000" relation="include">
        </childnode>
        <childnode refid="5003" relation="include">
        </childnode>
        <childnode refid="5010" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5060">
        <label>vigra/splineimageview.hxx</label>
        <link refid="splineimageview_8hxx_source"/>
        <childnode refid="5025" relation="include">
        </childnode>
        <childnode refid="5038" relation="include">
        </childnode>
      </node>
      <node id="5042">
        <label>vigra/quaternion.hxx</label>
        <link refid="quaternion_8hxx_source"/>
        <childnode refid="5041" relation="include">
        </childnode>
        <childnode refid="5043" relation="include">
        </childnode>
      </node>
      <node id="5025">
        <label>vigra/affine_registration.hxx</label>
        <link refid="affine__registration_8hxx_source"/>
      </node>
      <node id="5050">
        <label>vigra/multi_pointoperators.hxx</label>
        <link refid="multi__pointoperators_8hxx_source"/>
        <childnode refid="5024" relation="include">
        </childnode>
        <childnode refid="5051" relation="include">
        </childnode>
        <childnode refid="5053" relation="include">
        </childnode>
        <childnode refid="5054" relation="include">
        </childnode>
        <childnode refid="5055" relation="include">
        </childnode>
        <childnode refid="5056" relation="include">
        </childnode>
        <childnode refid="5057" relation="include">
        </childnode>
        <childnode refid="5058" relation="include">
        </childnode>
      </node>
      <node id="5023">
        <label>vigra/multi_array.hxx</label>
        <link refid="multi__array_8hxx_source"/>
        <childnode refid="5024" relation="include">
        </childnode>
        <childnode refid="5050" relation="include">
        </childnode>
        <childnode refid="5060" relation="include">
        </childnode>
        <childnode refid="5061" relation="include">
        </childnode>
        <childnode refid="5062" relation="include">
        </childnode>
        <childnode refid="5052" relation="include">
        </childnode>
        <childnode refid="5051" relation="include">
        </childnode>
        <childnode refid="5063" relation="include">
        </childnode>
        <childnode refid="5053" relation="include">
        </childnode>
        <childnode refid="5054" relation="include">
        </childnode>
        <childnode refid="5067" relation="include">
        </childnode>
        <childnode refid="5065" relation="include">
        </childnode>
        <childnode refid="5068" relation="include">
        </childnode>
        <childnode refid="5055" relation="include">
        </childnode>
        <childnode refid="5069" relation="include">
        </childnode>
        <childnode refid="5071" relation="include">
        </childnode>
        <childnode refid="5072" relation="include">
        </childnode>
        <childnode refid="5045" relation="include">
        </childnode>
        <childnode refid="5074" relation="include">
        </childnode>
        <childnode refid="5075" relation="include">
        </childnode>
        <childnode refid="5040" relation="include">
        </childnode>
        <childnode refid="5059" relation="include">
        </childnode>
      </node>
      <node id="5041">
        <label>vigra/invariant_features3D.hxx</label>
        <link refid="invariant__features3D_8hxx_source"/>
      </node>
      <node id="5038">
        <label>vigra/affinegeometry.hxx</label>
        <link refid="affinegeometry_8hxx_source"/>
      </node>
      <node id="5030">
        <label>vigra/noise_normalization.hxx</label>
        <link refid="noise__normalization_8hxx_source"/>
      </node>
      <node id="5031">
        <label>vigra/quadprog.hxx</label>
        <link refid="quadprog_8hxx_source"/>
      </node>
      <node id="5048">
        <label>vigra/random_forest/rf_region.hxx</label>
        <link refid="rf__region_8hxx_source"/>
        <childnode refid="5047" relation="include">
        </childnode>
        <childnode refid="5034" relation="include">
        </childnode>
      </node>
      <node id="5029">
        <label>vigra/linear_algebra.hxx</label>
        <link refid="linear__algebra_8hxx_source"/>
      </node>
      <node id="5064">
        <label>vigra/localminmax.hxx</label>
        <link refid="localminmax_8hxx_source"/>
        <childnode refid="5065" relation="include">
        </childnode>
        <childnode refid="5030" relation="include">
        </childnode>
        <childnode refid="5066" relation="include">
        </childnode>
      </node>
      <node id="5047">
        <label>vigra/random_forest/rf_split.hxx</label>
        <link refid="rf__split_8hxx_source"/>
        <childnode refid="5033" relation="include">
        </childnode>
        <childnode refid="5034" relation="include">
        </childnode>
      </node>
      <node id="5063">
        <label>vigra/labelvolume.hxx</label>
        <link refid="labelvolume_8hxx_source"/>
        <childnode refid="5064" relation="include">
        </childnode>
        <childnode refid="5059" relation="include">
        </childnode>
      </node>
      <node id="5035">
        <label>vigra/random_forest_hdf5_impex.hxx</label>
        <link refid="random__forest__hdf5__impex_8hxx_source"/>
      </node>
      <node id="5026">
        <label>vigra/linear_solve.hxx</label>
        <link refid="linear__solve_8hxx_source"/>
        <childnode refid="5025" relation="include">
        </childnode>
        <childnode refid="5027" relation="include">
        </childnode>
        <childnode refid="5029" relation="include">
        </childnode>
        <childnode refid="5030" relation="include">
        </childnode>
        <childnode refid="5031" relation="include">
        </childnode>
        <childnode refid="5032" relation="include">
        </childnode>
        <childnode refid="5028" relation="include">
        </childnode>
      </node>
      <node id="5074">
        <label>vigra/random_forest/rf_online_prediction_set.hxx</label>
        <link refid="rf__online__prediction__set_8hxx_source"/>
        <childnode refid="5034" relation="include">
        </childnode>
      </node>
      <node id="5059">
        <label>vigra/watersheds3d.hxx</label>
        <link refid="watersheds3d_8hxx_source"/>
      </node>
      <node id="5068">
        <label>vigra/multi_math.hxx</label>
        <link refid="multi__math_8hxx_source"/>
        <childnode refid="5040" relation="include">
        </childnode>
      </node>
      <node id="5036">
        <label>vigra/singular_value_decomposition.hxx</label>
        <link refid="singular__value__decomposition_8hxx_source"/>
        <childnode refid="5026" relation="include">
        </childnode>
        <childnode refid="5032" relation="include">
        </childnode>
        <childnode refid="5037" relation="include">
        </childnode>
      </node>
      <node id="5027">
        <label>vigra/edgedetection.hxx</label>
        <link refid="edgedetection_8hxx_source"/>
        <childnode refid="5028" relation="include">
        </childnode>
      </node>
      <node id="5043">
        <label>vigra/wigner-matrix.hxx</label>
        <link refid="wigner-matrix_8hxx_source"/>
      </node>
      <node id="5067">
        <label>vigra/multi_fft.hxx</label>
        <link refid="multi__fft_8hxx_source"/>
      </node>
      <node id="5070">
        <label>vigra/numpy_array_converters.hxx</label>
        <link refid="numpy__array__converters_8hxx_source"/>
      </node>
      <node id="5028">
        <label>vigra/slanted_edge_mtf.hxx</label>
        <link refid="slanted__edge__mtf_8hxx_source"/>
      </node>
      <node id="5053">
        <label>vigra/multi_convolution.hxx</label>
        <link refid="multi__convolution_8hxx_source"/>
      </node>
      <node id="5049">
        <label>vigra/random_forest_deprec.hxx</label>
        <link refid="random__forest__deprec_8hxx_source"/>
      </node>
      <node id="5075">
        <label>vigra/sifImport.hxx</label>
        <link refid="sifImport_8hxx_source"/>
      </node>
      <node id="5033">
        <label>vigra/random_forest/rf_ridge_split.hxx</label>
        <link refid="rf__ridge__split_8hxx_source"/>
        <childnode refid="5034" relation="include">
        </childnode>
      </node>
      <node id="5046">
        <label>vigra/random_forest/rf_nodeproxy.hxx</label>
        <link refid="rf__nodeproxy_8hxx_source"/>
        <childnode refid="5045" relation="include">
        </childnode>
        <childnode refid="5047" relation="include">
        </childnode>
        <childnode refid="5033" relation="include">
        </childnode>
        <childnode refid="5034" relation="include">
        </childnode>
      </node>
      <node id="5037">
        <label>vigra/unsupervised_decomposition.hxx</label>
        <link refid="unsupervised__decomposition_8hxx_source"/>
      </node>
      <node id="5073">
        <label>vigra/random_forest/rf_algorithm.hxx</label>
        <link refid="rf__algorithm_8hxx_source"/>
        <childnode refid="5034" relation="include">
        </childnode>
      </node>
      <node id="5034">
        <label>vigra/random_forest.hxx</label>
        <link refid="random__forest_8hxx_source"/>
        <childnode refid="5035" relation="include">
        </childnode>
      </node>
      <node id="5076">
        <label>vigra/imageinfo.hxx</label>
        <link refid="imageinfo_8hxx_source"/>
        <childnode refid="5062" relation="include">
        </childnode>
      </node>
      <node id="5032">
        <label>vigra/regression.hxx</label>
        <link refid="regression_8hxx_source"/>
        <childnode refid="5033" relation="include">
        </childnode>
      </node>
      <node id="5044">
        <label>vigra/matlab.hxx</label>
        <link refid="matlab_8hxx_source"/>
      </node>
      <node id="5045">
        <label>vigra/random_forest/rf_decisionTree.hxx</label>
        <link refid="rf__decisionTree_8hxx_source"/>
        <childnode refid="5034" relation="include">
        </childnode>
      </node>
      <node id="5054">
        <label>vigra/multi_distance.hxx</label>
        <link refid="multi__distance_8hxx_source"/>
        <childnode refid="5055" relation="include">
        </childnode>
      </node>
      <node id="5040">
        <label>vigra/tv_filter.hxx</label>
        <link refid="tv__filter_8hxx_source"/>
      </node>
      <node id="5062">
        <label>vigra/impex.hxx</label>
        <link refid="impex_8hxx"/>
        <childnode refid="5052" relation="include">
        </childnode>
        <childnode refid="5051" relation="include">
        </childnode>
        <childnode refid="5040" relation="include">
        </childnode>
      </node>
      <node id="5022">
        <label>vigra/multi_iterator.hxx</label>
        <link refid="multi_iterator.hxx"/>
        <childnode refid="5023" relation="include">
        </childnode>
        <childnode refid="5061" relation="include">
        </childnode>
        <childnode refid="5076" relation="include">
        </childnode>
      </node>
      <node id="5055">
        <label>vigra/multi_morphology.hxx</label>
        <link refid="multi__morphology_8hxx_source"/>
      </node>
      <node id="5072">
        <label>vigra/random_forest/splices.hxx</label>
        <link refid="splices_8hxx_source"/>
        <childnode refid="5073" relation="include">
        </childnode>
      </node>
      <node id="5065">
        <label>vigra/multi_localminmax.hxx</label>
        <link refid="multi__localminmax_8hxx_source"/>
        <childnode refid="5059" relation="include">
        </childnode>
      </node>
      <node id="5058">
        <label>vigra/seededregiongrowing3d.hxx</label>
        <link refid="seededregiongrowing3d_8hxx_source"/>
        <childnode refid="5059" relation="include">
        </childnode>
      </node>
      <node id="5071">
        <label>vigra/numpy_array_traits.hxx</label>
        <link refid="numpy__array__traits_8hxx_source"/>
        <childnode refid="5069" relation="include">
        </childnode>
      </node>
      <node id="5066">
        <label>vigra/watersheds.hxx</label>
        <link refid="watersheds_8hxx_source"/>
        <childnode refid="5059" relation="include">
        </childnode>
      </node>
      <node id="5039">
        <label>vigra/eigensystem.hxx</label>
        <link refid="eigensystem_8hxx_source"/>
        <childnode refid="5029" relation="include">
        </childnode>
        <childnode refid="5040" relation="include">
        </childnode>
      </node>
      <node id="5056">
        <label>vigra/multi_tensorutilities.hxx</label>
        <link refid="multi__tensorutilities_8hxx_source"/>
      </node>
      <node id="5061">
        <label>vigra/coordinate_iterator.hxx</label>
        <link refid="coordinate__iterator_8hxx_source"/>
      </node>
      <node id="5024">
        <label>vigra/matrix.hxx</label>
        <link refid="matrix_8hxx_source"/>
        <childnode refid="5025" relation="include">
        </childnode>
        <childnode refid="5026" relation="include">
        </childnode>
        <childnode refid="5036" relation="include">
        </childnode>
        <childnode refid="5038" relation="include">
        </childnode>
        <childnode refid="5039" relation="include">
        </childnode>
        <childnode refid="5041" relation="include">
        </childnode>
        <childnode refid="5042" relation="include">
        </childnode>
        <childnode refid="5029" relation="include">
        </childnode>
        <childnode refid="5044" relation="include">
        </childnode>
        <childnode refid="5031" relation="include">
        </childnode>
        <childnode refid="5045" relation="include">
        </childnode>
        <childnode refid="5046" relation="include">
        </childnode>
        <childnode refid="5048" relation="include">
        </childnode>
        <childnode refid="5047" relation="include">
        </childnode>
        <childnode refid="5032" relation="include">
        </childnode>
        <childnode refid="5034" relation="include">
        </childnode>
        <childnode refid="5049" relation="include">
        </childnode>
        <childnode refid="5037" relation="include">
        </childnode>
        <childnode refid="5043" relation="include">
        </childnode>
      </node>
      <node id="5057">
        <label>vigra/random_forest/rf_visitors.hxx</label>
        <link refid="rf__visitors_8hxx_source"/>
        <childnode refid="5045" relation="include">
        </childnode>
        <childnode refid="5034" relation="include">
        </childnode>
      </node>
      <node id="5052">
        <label>vigra/hdf5impex.hxx</label>
        <link refid="hdf5impex_8hxx_source"/>
        <childnode refid="5035" relation="include">
        </childnode>
      </node>
      <node id="5051">
        <label>vigra/multi_impex.hxx</label>
        <link refid="multi__impex_8hxx_source"/>
        <childnode refid="5052" relation="include">
        </childnode>
      </node>
      <node id="5069">
        <label>vigra/numpy_array.hxx</label>
        <link refid="numpy__array_8hxx_source"/>
        <childnode refid="5070" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classvigra_1_1MultiArrayShape" prot="public">vigra::MultiArrayShape</innerclass>
    <innerclass refid="classvigra_1_1MultiIterator" prot="public">vigra::MultiIterator</innerclass>
    <innerclass refid="classvigra_1_1MultiIterator_3_011_00_01T_00_01REFERENCE_00_01POINTER_01_4" prot="public">vigra::MultiIterator&lt; 1, T, REFERENCE, POINTER &gt;</innerclass>
    <innerclass refid="classvigra_1_1MultiIterator_3_012_00_01T_00_01REFERENCE_00_01POINTER_01_4" prot="public">vigra::MultiIterator&lt; 2, T, REFERENCE, POINTER &gt;</innerclass>
    <innerclass refid="structvigra_1_1MultiIteratorStrideTraits" prot="public">vigra::MultiIteratorStrideTraits</innerclass>
    <innerclass refid="classvigra_1_1StridedMultiIterator" prot="public">vigra::StridedMultiIterator</innerclass>
    <innerclass refid="classvigra_1_1StridedMultiIterator_3_011_00_01T_00_01REFERENCE_00_01POINTER_01_4" prot="public">vigra::StridedMultiIterator&lt; 1, T, REFERENCE, POINTER &gt;</innerclass>
    <innerclass refid="classvigra_1_1StridedMultiIterator_3_012_00_01T_00_01REFERENCE_00_01POINTER_01_4" prot="public">vigra::StridedMultiIterator&lt; 2, T, REFERENCE, POINTER &gt;</innerclass>
    <innerclass refid="classvigra_1_1StridedScanOrderIterator" prot="public">vigra::StridedScanOrderIterator</innerclass>
    <innerclass refid="classvigra_1_1StridedScanOrderIterator_3_01N_00_01T_00_01REFERENCE_00_01POINTER_00_011_01_4" prot="public">vigra::StridedScanOrderIterator&lt; N, T, REFERENCE, POINTER, 1 &gt;</innerclass>
    <innernamespace refid="namespacevigra">vigra</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/>Copyright<sp/>2003-2008<sp/>by<sp/>Gunnar<sp/>Kedenburg<sp/>and<sp/>Ullrich<sp/>Koethe<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>VIGRA<sp/>computer<sp/>vision<sp/>library.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>(<sp/>Version<sp/>1.3.0,<sp/>Sep<sp/>10<sp/>2004<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>The<sp/>VIGRA<sp/>Website<sp/>is<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://hci.iwr.uni-heidelberg.de/vigra/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Please<sp/>direct<sp/>questions,<sp/>bug<sp/>reports,<sp/>and<sp/>contributions<sp/>to<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ullrich.koethe@iwr.uni-heidelberg.de<sp/><sp/><sp/><sp/>or<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra@informatik.uni-hamburg.de<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>conditions:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Software.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VIGRA_MULTI_ITERATOR_HXX</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_MULTI_ITERATOR_HXX</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tinyvector.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iteratortags.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vigra<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">T,<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">REFERENCE<sp/>=<sp/>T<sp/>&amp;,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">POINTER<sp/>=<sp/>T<sp/>*&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MultiIterator;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">T,<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">REFERENCE<sp/>=<sp/>T<sp/>&amp;,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">POINTER<sp/>=<sp/>T<sp/>*&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StridedMultiIterator;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="53"><highlight class="comment">/**<sp/>\page<sp/>MultiIteratorPage<sp/><sp/>Multi-dimensional<sp/>Array<sp/>Iterators</highlight></codeline>
<codeline lineno="54"><highlight class="comment"></highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/><sp/>General<sp/>iterators<sp/>for<sp/>arrays<sp/>of<sp/>arbitrary<sp/>dimension.</highlight></codeline>
<codeline lineno="56"><highlight class="comment"></highlight></codeline>
<codeline lineno="57"><highlight class="comment"></highlight></codeline>
<codeline lineno="58"><highlight class="comment">&lt;p&gt;</highlight></codeline>
<codeline lineno="59"><highlight class="comment">&lt;UL<sp/>style=&quot;list-style-image:url(documents/bullet.gif)&quot;&gt;</highlight></codeline>
<codeline lineno="60"><highlight class="comment">&lt;LI&gt;<sp/>\ref<sp/>vigra::MultiArrayShape</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;em&gt;Difference<sp/>type<sp/>for<sp/>\ref<sp/>vigra::MultiArrayView<sp/>or<sp/>\ref<sp/>vigra::MultiIterator&lt;/em&gt;</highlight></codeline>
<codeline lineno="62"><highlight class="comment">&lt;LI&gt;<sp/>\ref<sp/>vigra::MultiIterator</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;em&gt;Iterator<sp/>for<sp/>unstrided<sp/>\ref<sp/>vigra::MultiArrayView&lt;/em&gt;</highlight></codeline>
<codeline lineno="64"><highlight class="comment">&lt;LI&gt;<sp/>\ref<sp/>vigra::StridedMultiIterator</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;em&gt;Iterator<sp/>for<sp/>strided<sp/>\ref<sp/>vigra::MultiArrayView&lt;/em&gt;</highlight></codeline>
<codeline lineno="66"><highlight class="comment">&lt;LI&gt;<sp/>\ref<sp/>vigra::StridedScanOrderIterator</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>&lt;BR&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;em&gt;STL-compatible<sp/>random<sp/>access<sp/>iterator<sp/>for<sp/>\ref<sp/>vigra::MultiArrayView&lt;/em&gt;</highlight></codeline>
<codeline lineno="68"><highlight class="comment">&lt;/UL&gt;</highlight></codeline>
<codeline lineno="69"><highlight class="comment">&lt;/p&gt;</highlight></codeline>
<codeline lineno="70"><highlight class="comment"></highlight></codeline>
<codeline lineno="71"><highlight class="comment">&lt;p&gt;</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>Multidimensional<sp/>Iterator<sp/>concept<sp/>allows<sp/>navigation<sp/>on<sp/>arrays</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/>of<sp/>arbitrary<sp/>dimension.<sp/>It<sp/>provides<sp/>two<sp/>modes<sp/>of<sp/>iteration:<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;em&gt;direct<sp/>traversal&lt;/em&gt;,<sp/>and<sp/>&lt;em&gt;hierarchical<sp/>traversal&lt;/em&gt;.</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/>In<sp/>general,<sp/>hierarchical<sp/>traversal<sp/>will<sp/>be<sp/>faster,<sp/>while<sp/>only<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/>direct<sp/>traversal<sp/>allows<sp/>for<sp/>true<sp/>random<sp/>access<sp/>in<sp/>all<sp/>dimensions.</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/>Via<sp/>the<sp/>&lt;tt&gt;dim&lt;K&gt;()&lt;/tt&gt;<sp/>function,<sp/>operations<sp/>applying<sp/>to<sp/>a<sp/>particular</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/><sp/>dimension<sp/>can<sp/>be<sp/>used<sp/>in<sp/>the<sp/>direct<sp/>traversal<sp/>mode.<sp/>In<sp/>contrast,</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/><sp/>direct<sp/>traversal<sp/>functions<sp/>should<sp/>not<sp/>be<sp/>used<sp/>in<sp/>the<sp/>hierarchical<sp/>mode</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/>because<sp/>the<sp/>hierarchical<sp/>functions<sp/>are<sp/>only<sp/>well-defined<sp/>if<sp/>the</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/>iterator<sp/>points<sp/>to<sp/>element<sp/>0<sp/>in<sp/>all<sp/>dimensions<sp/>below<sp/>its<sp/>current<sp/>dimension.</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>current<sp/>dimension<sp/>of<sp/>a<sp/>&lt;tt&gt;MultiIterator&lt;N,<sp/>...&gt;&lt;/tt&gt;<sp/>is<sp/>&lt;tt&gt;N-1&lt;/tt&gt;.</highlight></codeline>
<codeline lineno="83"><highlight class="comment">&lt;/p&gt;</highlight></codeline>
<codeline lineno="84"><highlight class="comment">&lt;h3&gt;General<sp/>Requirements<sp/>for<sp/>MultiIterator&lt;/h3&gt;</highlight></codeline>
<codeline lineno="85"><highlight class="comment">&lt;p&gt;</highlight></codeline>
<codeline lineno="86"><highlight class="comment">&lt;table<sp/>border=2<sp/>cellspacing=0<sp/>cellpadding=2<sp/>width=&quot;100%&quot;&gt;</highlight></codeline>
<codeline lineno="87"><highlight class="comment">&lt;tr&gt;&lt;th<sp/>colspan=2&gt;</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/><sp/>Local<sp/>Types</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/th&gt;&lt;th&gt;</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/>Meaning</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/th&gt;</highlight></codeline>
<codeline lineno="92"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="93"><highlight class="comment">&lt;tr&gt;&lt;td<sp/>colspan=2&gt;</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;MultiIterator::value_type&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;the<sp/>underlying<sp/>arrays&apos;s<sp/>pixel<sp/>type&lt;/td&gt;</highlight></codeline>
<codeline lineno="95"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="96"><highlight class="comment">&lt;tr&gt;&lt;td<sp/>colspan=2&gt;</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;MultiIterator::reference&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;the<sp/>iterator&apos;s<sp/>reference<sp/>type<sp/>(return<sp/>type<sp/>of<sp/>&lt;TT&gt;*iter&lt;/TT&gt;).<sp/>Will<sp/>be</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;value_type<sp/>&amp;&lt;/tt&gt;<sp/>for<sp/>a<sp/>mutable<sp/>iterator,<sp/>and<sp/>convertible<sp/>to</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;value_type<sp/>const<sp/>&amp;&lt;/tt&gt;<sp/>for<sp/>a<sp/>const<sp/>iterator.&lt;/td&gt;</highlight></codeline>
<codeline lineno="101"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="102"><highlight class="comment">&lt;tr&gt;&lt;td<sp/>colspan=2&gt;</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;MultiIterator::pointer&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;the<sp/>iterator&apos;s<sp/>pointer<sp/>type<sp/>(return<sp/>type<sp/>of<sp/>&lt;TT&gt;iter.operator-&gt;()&lt;/TT&gt;).<sp/>Will<sp/>be</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;value_type<sp/>*&lt;/tt&gt;<sp/>for<sp/>a<sp/>mutable<sp/>iterator,<sp/>and<sp/>convertible<sp/>to</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;value_type<sp/>const<sp/>*&lt;/tt&gt;<sp/>for<sp/>a<sp/>const<sp/>iterator.&lt;/td&gt;</highlight></codeline>
<codeline lineno="107"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="108"><highlight class="comment">&lt;tr&gt;&lt;td<sp/>colspan=2&gt;</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;MultiIterator::iterator_category&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;the<sp/>iterator<sp/>tag<sp/>(&lt;tt&gt;vigra::multi_dimensional_traverser_tag&lt;/tt&gt;)&lt;/td&gt;</highlight></codeline>
<codeline lineno="111"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="112"><highlight class="comment">&lt;tr&gt;&lt;th&gt;</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/><sp/>Operation</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/th&gt;&lt;th&gt;</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/><sp/>Result</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/th&gt;&lt;th&gt;</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/>Semantics</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/th&gt;</highlight></codeline>
<codeline lineno="119"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="120"><highlight class="comment">&lt;tr&gt;&lt;td<sp/>colspan=2&gt;</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;MultiIterator<sp/>k;&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;default<sp/>constructor&lt;/td&gt;</highlight></codeline>
<codeline lineno="122"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="123"><highlight class="comment">&lt;tr&gt;&lt;td<sp/>colspan=2&gt;</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;MultiIterator<sp/>k(i);&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;copy<sp/>constructor&lt;/td&gt;</highlight></codeline>
<codeline lineno="125"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="126"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;k<sp/>=<sp/>i&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;MultiIterator<sp/>&amp;&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;assignment&lt;/td&gt;</highlight></codeline>
<codeline lineno="129"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="130"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i<sp/>==<sp/>j&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;bool&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;equality<sp/>(iterators<sp/>point<sp/>to<sp/>the<sp/>same<sp/>element)&lt;/td&gt;</highlight></codeline>
<codeline lineno="133"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="134"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i<sp/>!=<sp/>j&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;bool&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;inequality<sp/>(iterators<sp/>don&apos;t<sp/>point<sp/>to<sp/>the<sp/>same<sp/>element)&lt;/td&gt;</highlight></codeline>
<codeline lineno="137"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="138"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;*i&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;MultiIterator::reference&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;access<sp/>the<sp/>current<sp/>element&lt;/td&gt;</highlight></codeline>
<codeline lineno="141"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="142"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i-&gt;member()&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;depends<sp/>on<sp/>operation&lt;/td&gt;</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;call<sp/>member<sp/>function<sp/>of<sp/>underlying<sp/>pixel<sp/>type<sp/>via<sp/>&lt;tt&gt;operator-&gt;&lt;/tt&gt;<sp/>of<sp/>iterator&lt;/td&gt;</highlight></codeline>
<codeline lineno="145"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="146"><highlight class="comment">&lt;/table&gt;</highlight></codeline>
<codeline lineno="147"><highlight class="comment">&lt;/p&gt;</highlight></codeline>
<codeline lineno="148"><highlight class="comment">&lt;h3&gt;Requirements<sp/>for<sp/>Direct<sp/>Traversal&lt;/h3&gt;</highlight></codeline>
<codeline lineno="149"><highlight class="comment">&lt;p&gt;</highlight></codeline>
<codeline lineno="150"><highlight class="comment">&lt;table<sp/>border=2<sp/>cellspacing=0<sp/>cellpadding=2<sp/>width=&quot;100%&quot;&gt;</highlight></codeline>
<codeline lineno="151"><highlight class="comment">&lt;tr&gt;&lt;th<sp/>colspan=2&gt;</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/><sp/>Local<sp/>Types</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/th&gt;&lt;th&gt;</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/>Meaning</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/th&gt;</highlight></codeline>
<codeline lineno="156"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="157"><highlight class="comment">&lt;tr&gt;&lt;td<sp/>colspan=2&gt;</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;MultiIterator::multi_difference_type&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;the<sp/>iterator&apos;s<sp/>multi-dimensional<sp/>difference<sp/>type<sp/>(&lt;TT&gt;TinyVector&lt;MultiArrayIndex,<sp/>N&gt;&lt;/TT&gt;)&lt;/td&gt;</highlight></codeline>
<codeline lineno="160"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="161"><highlight class="comment">&lt;tr&gt;&lt;th&gt;</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/><sp/>Operation</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/th&gt;&lt;th&gt;</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/><sp/>Result</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/th&gt;&lt;th&gt;</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/>Semantics</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/th&gt;</highlight></codeline>
<codeline lineno="168"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="169"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i<sp/>+=<sp/>diff&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;MultiIterator<sp/>&amp;&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;add<sp/>offset<sp/>to<sp/>current<sp/>position&lt;/td&gt;</highlight></codeline>
<codeline lineno="172"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="173"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i<sp/>-=<sp/>diff&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;MultiIterator<sp/>&amp;&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;subtract<sp/>offset<sp/>from<sp/>current<sp/>position&lt;/td&gt;</highlight></codeline>
<codeline lineno="176"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="177"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i<sp/>+<sp/>diff&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;MultiIterator&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;create<sp/>traverser<sp/>by<sp/>adding<sp/>offset&lt;/td&gt;</highlight></codeline>
<codeline lineno="180"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="181"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i<sp/>-<sp/>diff&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;MultiIterator&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;create<sp/>traverser<sp/>by<sp/>subtracting<sp/>offset&lt;/td&gt;</highlight></codeline>
<codeline lineno="184"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="185"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i[diff]&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;MultiIterator::reference&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;access<sp/>element<sp/>at<sp/>offset<sp/>&lt;tt&gt;diff&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="188"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="189"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i.dim&lt;K&gt;()&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;MultiIterator&lt;K+1,<sp/>T,<sp/>...&gt;&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;Access<sp/>the<sp/>traverser<sp/>with<sp/>the<sp/>current<sp/>dimension<sp/>set<sp/>to<sp/>K.<sp/>Typically<sp/>used<sp/>to<sp/>call</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>navigation<sp/>functions<sp/>referring<sp/>to<sp/>a<sp/>particular<sp/>dimension.&lt;br&gt;</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Example<sp/>(assuming<sp/>&lt;tt&gt;i,<sp/>j&lt;/tt&gt;<sp/>are<sp/>3-dimensional):&lt;br&gt;</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.dim&lt;0&gt;()++;<sp/><sp/><sp/>//<sp/>increment<sp/>dimension<sp/>0<sp/></highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.dim&lt;1&gt;()++;<sp/><sp/><sp/>//<sp/>increment<sp/>dimension<sp/>1<sp/></highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i.dim&lt;2&gt;()++;<sp/><sp/><sp/>//<sp/>increment<sp/>dimension<sp/>2<sp/></highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>MultiIterator::multi_difference_type(1,1,1);<sp/><sp/><sp/><sp/>//<sp/>same<sp/>effect</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/td&gt;</highlight></codeline>
<codeline lineno="202"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="203"><highlight class="comment">&lt;tr&gt;&lt;td<sp/>colspan=3&gt;</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;i,<sp/>j&lt;/tt&gt;<sp/>are<sp/>of<sp/>type<sp/>&lt;tt&gt;MultiIterator&lt;/tt&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;diff&lt;/tt&gt;<sp/>is<sp/>of<sp/>type<sp/>&lt;tt&gt;MultiIterator::multi_difference_type&lt;/tt&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;K&lt;/tt&gt;<sp/>is<sp/>an<sp/>integer<sp/>compile-time<sp/>constant</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/td&gt;</highlight></codeline>
<codeline lineno="208"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="209"><highlight class="comment">&lt;/table&gt;</highlight></codeline>
<codeline lineno="210"><highlight class="comment">&lt;/p&gt;</highlight></codeline>
<codeline lineno="211"><highlight class="comment">&lt;p&gt;</highlight></codeline>
<codeline lineno="212"><highlight class="comment">Note<sp/>that<sp/>it<sp/>is<sp/>impossible<sp/>to<sp/>support<sp/>an<sp/>&lt;tt&gt;operator-&lt;/tt&gt;<sp/>between<sp/>two<sp/>iterators<sp/>which<sp/>returns</highlight></codeline>
<codeline lineno="213"><highlight class="comment">a<sp/>&lt;tt&gt;MultiIterator::multi_difference_type&lt;/tt&gt;<sp/>because<sp/>it<sp/>is<sp/>impossible<sp/>to<sp/>decide<sp/>to<sp/>which</highlight></codeline>
<codeline lineno="214"><highlight class="comment">dimension<sp/>a<sp/>difference<sp/>applies.<sp/>Consider<sp/>for<sp/>example,<sp/>a<sp/>2-dimensional<sp/>iterator<sp/>&lt;tt&gt;i&lt;/tt&gt;,<sp/>and</highlight></codeline>
<codeline lineno="215"><highlight class="comment">let<sp/>&lt;tt&gt;j<sp/>=<sp/>i<sp/>+<sp/>multi_difference_type(width,<sp/>0)&lt;/tt&gt;,<sp/>&lt;tt&gt;k<sp/>=<sp/>i<sp/>+<sp/>multi_difference_type(0,1)&lt;/tt&gt;,<sp/></highlight></codeline>
<codeline lineno="216"><highlight class="comment">where<sp/>&lt;tt&gt;width&lt;/tt&gt;<sp/>is<sp/>the<sp/>array&apos;s<sp/>total<sp/>width.<sp/>In<sp/>general,<sp/>&lt;tt&gt;j&lt;/tt&gt;<sp/>and<sp/>&lt;tt&gt;k&lt;/tt&gt;<sp/>point<sp/>to<sp/></highlight></codeline>
<codeline lineno="217"><highlight class="comment">the<sp/>same<sp/>memory<sp/>location,<sp/>so<sp/>that<sp/>the<sp/>two<sp/>cases<sp/>cannot<sp/>easily<sp/>be<sp/>distinguished<sp/>(it<sp/>is<sp/>possible,</highlight></codeline>
<codeline lineno="218"><highlight class="comment">but<sp/>iterator<sp/>performance<sp/>will<sp/>suffer<sp/>significantly,<sp/>as<sp/>is<sp/>experienced<sp/>with<sp/></highlight></codeline>
<codeline lineno="219"><highlight class="comment">\ref<sp/>vigra::ImageIterator<sp/>where<sp/>differencing<sp/>is<sp/>allowed).</highlight></codeline>
<codeline lineno="220"><highlight class="comment">&lt;/p&gt;</highlight></codeline>
<codeline lineno="221"><highlight class="comment"></highlight></codeline>
<codeline lineno="222"><highlight class="comment">&lt;h3&gt;Requirements<sp/>for<sp/>Hierarchical<sp/>Traversal&lt;/h3&gt;</highlight></codeline>
<codeline lineno="223"><highlight class="comment">&lt;p&gt;</highlight></codeline>
<codeline lineno="224"><highlight class="comment">&lt;table<sp/>border=2<sp/>cellspacing=0<sp/>cellpadding=2<sp/>width=&quot;100%&quot;&gt;</highlight></codeline>
<codeline lineno="225"><highlight class="comment">&lt;tr&gt;&lt;th<sp/>colspan=2&gt;</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/><sp/>Local<sp/>Types</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/th&gt;&lt;th&gt;</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/><sp/>Meaning</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/th&gt;</highlight></codeline>
<codeline lineno="230"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="231"><highlight class="comment">&lt;tr&gt;&lt;td<sp/>colspan=2&gt;</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;MultiIterator::difference_type&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;the<sp/>iterator&apos;s<sp/>difference<sp/>type<sp/>(&lt;TT&gt;MultiArrayIndex&lt;/TT&gt;)&lt;/td&gt;</highlight></codeline>
<codeline lineno="234"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="235"><highlight class="comment">&lt;tr&gt;&lt;td<sp/>colspan=2&gt;</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;MultiIterator::next_type&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;type<sp/>of<sp/>the<sp/>next<sp/>iterator</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(referring<sp/>to<sp/>the<sp/>next<sp/>lower<sp/>dimension)<sp/>in<sp/>the<sp/>hierarchy&lt;/td&gt;</highlight></codeline>
<codeline lineno="238"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="239"><highlight class="comment">&lt;tr&gt;&lt;th&gt;</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/><sp/><sp/>Operation</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/th&gt;&lt;th&gt;</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/><sp/><sp/><sp/>Result</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/th&gt;&lt;th&gt;</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/><sp/><sp/><sp/>Semantics</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/th&gt;</highlight></codeline>
<codeline lineno="246"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="247"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;++i&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;MultiIterator<sp/>&amp;&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;pre-increment<sp/>iterator<sp/>in<sp/>its<sp/>current<sp/>dimension&lt;/td&gt;</highlight></codeline>
<codeline lineno="250"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="251"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i++&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;MultiIterator&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;post-increment<sp/>iterator<sp/>in<sp/>its<sp/>current<sp/>dimension&lt;/td&gt;</highlight></codeline>
<codeline lineno="254"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="255"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;--i&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;MultiIterator<sp/>&amp;&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;pre-decrement<sp/>iterator<sp/>in<sp/>its<sp/>current<sp/>dimension&lt;/td&gt;</highlight></codeline>
<codeline lineno="258"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="259"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i--&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;MultiIterator&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;post-decrement<sp/>iterator<sp/>in<sp/>its<sp/>current<sp/>dimension&lt;/td&gt;</highlight></codeline>
<codeline lineno="262"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="263"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i<sp/>+=<sp/>d&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;MultiIterator<sp/>&amp;&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;add<sp/>&lt;tt&gt;d&lt;/tt&gt;<sp/>in<sp/>current<sp/>dimension&lt;/td&gt;</highlight></codeline>
<codeline lineno="266"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="267"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i<sp/>-=<sp/>d&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;MultiIterator<sp/>&amp;&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;subtract<sp/>&lt;tt&gt;d&lt;/tt&gt;<sp/>in<sp/>from<sp/>dimension&lt;/td&gt;</highlight></codeline>
<codeline lineno="270"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="271"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i<sp/>+<sp/>d&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;MultiIterator&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;create<sp/>new<sp/>iterator<sp/>by<sp/>adding<sp/>&lt;tt&gt;d&lt;/tt&gt;<sp/>in<sp/>current<sp/>dimension&lt;/td&gt;</highlight></codeline>
<codeline lineno="274"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="275"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i<sp/>-<sp/>d&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;MultiIterator&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;create<sp/>new<sp/>iterator<sp/>by<sp/>subtracting<sp/>&lt;tt&gt;d&lt;/tt&gt;<sp/>in<sp/>current<sp/>dimension&lt;/td&gt;</highlight></codeline>
<codeline lineno="278"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="279"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i<sp/>-<sp/>j&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;difference_type&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;difference<sp/>of<sp/>&lt;tt&gt;i&lt;/tt&gt;<sp/>and<sp/>&lt;tt&gt;j&lt;/tt&gt;<sp/>in<sp/>the<sp/>current<sp/>dimension&lt;br&gt;</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;em&gt;Note:&lt;/em&gt;<sp/>The<sp/>result<sp/>of<sp/>this<sp/>operation<sp/>is<sp/>undefined<sp/>if<sp/>the<sp/>iterator</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/><sp/><sp/><sp/>doesn&apos;t<sp/>point<sp/>to<sp/>element<sp/>0<sp/>in<sp/>all<sp/>dimensions<sp/>below<sp/>its<sp/>current<sp/>dimension.&lt;/td&gt;</highlight></codeline>
<codeline lineno="284"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="285"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i<sp/>&lt;<sp/>j&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;bool&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i<sp/>-<sp/>j<sp/>&lt;<sp/>0&lt;/tt&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;em&gt;Note:&lt;/em&gt;<sp/>The<sp/>result<sp/>of<sp/>this<sp/>operation<sp/>is<sp/>undefined<sp/>if<sp/>the<sp/>iterator</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/><sp/><sp/>doesn&apos;t<sp/>point<sp/>to<sp/>element<sp/>0<sp/>in<sp/>all<sp/>dimensions<sp/>below<sp/>its<sp/>current<sp/>dimension.&lt;/td&gt;</highlight></codeline>
<codeline lineno="290"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="291"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i[d]&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;MultiIterator::reference&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;access<sp/>element<sp/>by<sp/>adding<sp/>offset<sp/>&lt;tt&gt;d&lt;/tt&gt;<sp/>in<sp/>current<sp/>dimension&lt;/td&gt;</highlight></codeline>
<codeline lineno="294"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="295"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i.begin()&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;next_type&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;create<sp/>the<sp/>hierarchical<sp/>iterator<sp/>pointing<sp/>to<sp/>the<sp/>first<sp/>element<sp/>in<sp/>the<sp/></highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/><sp/><sp/><sp/>next<sp/>lower<sp/>dimension.&lt;br&gt;</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;em&gt;Note:&lt;/em&gt;<sp/>The<sp/>result<sp/>of<sp/>this<sp/>operation<sp/>is<sp/>undefined<sp/>if<sp/>the<sp/>iterator</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/><sp/><sp/><sp/>doesn&apos;t<sp/>point<sp/>to<sp/>element<sp/>0<sp/>in<sp/>all<sp/>dimensions<sp/>below<sp/>its<sp/>current<sp/>dimension.&lt;br&gt;</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/><sp/><sp/><sp/>Usage:&lt;br&gt;</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/><sp/><sp/><sp/>MultiIterator&lt;3,<sp/>int&gt;<sp/>i3<sp/>=<sp/>...,<sp/>end3<sp/>=<sp/>...;</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/><sp/><sp/><sp/>for(;<sp/>i3<sp/>!=<sp/>end3;<sp/>++i3)</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiIterator&lt;3,<sp/>int&gt;::next_type<sp/>i2<sp/>=<sp/>i3.begin(),<sp/>end2<sp/>=<sp/>i3.end();</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(;<sp/>i2<sp/>!=<sp/>end2;<sp/>++i2)</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiIterator&lt;3,<sp/>int&gt;::next_type::next_type<sp/>i1<sp/>=<sp/>i2.begin(),<sp/>end1<sp/>=<sp/>i2.end();</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(;<sp/>i1<sp/>!=<sp/>end1;<sp/>++i1)</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...<sp/>//<sp/>do<sp/>something<sp/>with<sp/>the<sp/>current<sp/>element</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/td&gt;</highlight></codeline>
<codeline lineno="319"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="320"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;i.end()&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;next_type&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;create<sp/>the<sp/>hierarchical<sp/>iterator<sp/>pointing<sp/>to<sp/>the<sp/>past-the-end<sp/>location<sp/>in<sp/>the<sp/></highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/><sp/><sp/><sp/>next<sp/>lower<sp/>dimension.&lt;br&gt;</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;em&gt;Note:&lt;/em&gt;<sp/>The<sp/>result<sp/>of<sp/>this<sp/>operation<sp/>is<sp/>undefined<sp/>if<sp/>the<sp/>iterator</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/><sp/><sp/><sp/>doesn&apos;t<sp/>point<sp/>to<sp/>element<sp/>0<sp/>in<sp/>all<sp/>dimensions<sp/>below<sp/>its<sp/>current<sp/>dimension.&lt;/td&gt;</highlight></codeline>
<codeline lineno="326"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="327"><highlight class="comment">&lt;tr&gt;&lt;td<sp/>colspan=3&gt;</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;i,<sp/>j&lt;/tt&gt;<sp/>are<sp/>of<sp/>type<sp/>&lt;tt&gt;MultiIterator&lt;/tt&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;d&lt;/tt&gt;<sp/>is<sp/>of<sp/>type<sp/>&lt;tt&gt;MultiIterator::difference_type&lt;/tt&gt;</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/td&gt;</highlight></codeline>
<codeline lineno="331"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="332"><highlight class="comment">&lt;/table&gt;</highlight></codeline>
<codeline lineno="333"><highlight class="comment">&lt;/p&gt;</highlight></codeline>
<codeline lineno="334"><highlight class="comment"></highlight></codeline>
<codeline lineno="335"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="337"><highlight class="comment">/**<sp/>\addtogroup<sp/>MultiIteratorGroup<sp/><sp/>Multi-dimensional<sp/>Array<sp/>Iterators</highlight></codeline>
<codeline lineno="338"><highlight class="comment"></highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/><sp/><sp/><sp/>\brief<sp/>General<sp/>iterators<sp/>for<sp/>arrays<sp/>of<sp/>arbitrary<sp/>dimension.</highlight></codeline>
<codeline lineno="340"><highlight class="comment">*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="341"><highlight class="comment">//@{</highlight></codeline>
<codeline lineno="342"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>Index<sp/>type<sp/>for<sp/>a<sp/>single<sp/>dimension<sp/>of<sp/>a<sp/>MultiArrayView<sp/>or</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArray.</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::ptrdiff_t<sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref>;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>Traits<sp/>class<sp/>for<sp/>the<sp/>difference<sp/>type<sp/>of<sp/>all<sp/>MultiIterator,<sp/>MultiArrayView,<sp/>and</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArray<sp/>variants.</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="352" refid="classvigra_1_1MultiArrayShape" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1MultiArrayShape" kindref="compound">MultiArrayShape</ref></highlight></codeline>
<codeline lineno="353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>The<sp/>difference<sp/>type<sp/>of<sp/>all<sp/>MultiIterator,<sp/>MultiArrayView,<sp/>and</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArray<sp/>variants.</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="classvigra_1_1MultiArrayShape_1a9332e35fe85b77b01fdeeacdea0f3504" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;MultiArrayIndex, N&gt;</ref><sp/><ref refid="classvigra_1_1MultiArrayShape_1a9332e35fe85b77b01fdeeacdea0f3504" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="359"><highlight class="normal">};</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="group__MultiIteratorGroup_1gaf6799170bf47f30c42a3f164f6ccf8ce" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">MultiArrayShape&lt;1&gt;::type</ref><sp/><ref refid="group__MultiIteratorGroup_1gaf6799170bf47f30c42a3f164f6ccf8ce" kindref="member" tooltip="shape type for MultiArray&amp;lt;1, T&amp;gt;">Shape1</ref>;<sp/></highlight><highlight class="comment">///&lt;<sp/>shape<sp/>type<sp/>for<sp/>MultiArray&lt;1,<sp/>T&gt;</highlight></codeline>
<codeline lineno="362" refid="group__MultiIteratorGroup_1ga2e2ffc107bb0e38f9b1288b647c8ec5b" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">MultiArrayShape&lt;2&gt;::type</ref><sp/><ref refid="group__MultiIteratorGroup_1ga2e2ffc107bb0e38f9b1288b647c8ec5b" kindref="member" tooltip="shape type for MultiArray&amp;lt;2, T&amp;gt;">Shape2</ref>;<sp/></highlight><highlight class="comment">///&lt;<sp/>shape<sp/>type<sp/>for<sp/>MultiArray&lt;2,<sp/>T&gt;</highlight></codeline>
<codeline lineno="363" refid="group__MultiIteratorGroup_1gac70cfe6730d928789a2b3ce1f37ae379" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">MultiArrayShape&lt;3&gt;::type</ref><sp/><ref refid="group__MultiIteratorGroup_1gac70cfe6730d928789a2b3ce1f37ae379" kindref="member" tooltip="shape type for MultiArray&amp;lt;3, T&amp;gt;">Shape3</ref>;<sp/></highlight><highlight class="comment">///&lt;<sp/>shape<sp/>type<sp/>for<sp/>MultiArray&lt;3,<sp/>T&gt;</highlight></codeline>
<codeline lineno="364" refid="group__MultiIteratorGroup_1ga32d5611234a997a33e239ff31b773628" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">MultiArrayShape&lt;4&gt;::type</ref><sp/><ref refid="group__MultiIteratorGroup_1ga32d5611234a997a33e239ff31b773628" kindref="member" tooltip="shape type for MultiArray&amp;lt;4, T&amp;gt;">Shape4</ref>;<sp/></highlight><highlight class="comment">///&lt;<sp/>shape<sp/>type<sp/>for<sp/>MultiArray&lt;4,<sp/>T&gt;</highlight></codeline>
<codeline lineno="365" refid="group__MultiIteratorGroup_1ga5eb712151ca3fc644d569dee5723f67c" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">MultiArrayShape&lt;5&gt;::type</ref><sp/><ref refid="group__MultiIteratorGroup_1ga5eb712151ca3fc644d569dee5723f67c" kindref="member" tooltip="shape type for MultiArray&amp;lt;5, T&amp;gt;">Shape5</ref>;<sp/></highlight><highlight class="comment">///&lt;<sp/>shape<sp/>type<sp/>for<sp/>MultiArray&lt;5,<sp/>T&gt;</highlight></codeline>
<codeline lineno="366"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>POINTER&gt;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">MultiIteratorStrideTraits</highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/><sp/><sp/><sp/>stride_type;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>stride_type*<sp/>stride_array_type;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>stride_array_type<sp/><sp/>shape_array_type;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>stride_array_type<sp/>shift(stride_array_type<sp/>s,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>d)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s<sp/>+<sp/>d;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal">};</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiIterator<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>REFERENCE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>POINTER&gt;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MultiIterator;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiIterator&lt;1&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>REFERENCE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>POINTER&gt;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MultiIterator&lt;1,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;</highlight></codeline>
<codeline lineno="398"><highlight class="normal">{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>level<sp/>=<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="classvigra_1_1MultiIterator_1a265a253612b46abed17c61b0a5e5ce30" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>REFERENCE<sp/><ref refid="classvigra_1_1MultiIterator_1aabedc6031d7df619a0c453c558af87a0" kindref="member">reference</ref>;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1a265a253612b46abed17c61b0a5e5ce30" kindref="member">value_type</ref><sp/>&amp;<ref refid="classvigra_1_1MultiIterator_1afdb67657e63a66ed3fae7b0c9fd81b48" kindref="member">const_reference</ref>;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>POINTER<sp/><ref refid="classvigra_1_1MultiIterator_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1a265a253612b46abed17c61b0a5e5ce30" kindref="member">value_type</ref><sp/>*<ref refid="classvigra_1_1MultiIterator_1a13c57dab17e2c903cadfa5e35ba84064" kindref="member">const_pointer</ref>;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MultiArrayShape&lt;1&gt;::type<sp/><ref refid="classvigra_1_1MultiIterator_1ad6aeac37a55e24551245f9c9f6ab6985" kindref="member">multi_difference_type</ref>;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>MultiIteratorStrideTraits&lt;POINTER&gt;<sp/>stride_traits;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>stride_traits::stride_type<sp/><ref refid="classvigra_1_1MultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref>;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>stride_traits::stride_array_type<sp/>difference_array_type;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>stride_traits::shape_array_type<sp/>shape_array_type;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>StridedMultiIterator&lt;1,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;<sp/><ref refid="classvigra_1_1MultiIterator_1a2fabb8a210750506234825958ca91556" kindref="member">iterator</ref>;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::random_access_iterator_tag<sp/><ref refid="classvigra_1_1MultiIterator_1a13ca083757a5c2d9c3f8e94efb78fe2a" kindref="member">iterator_category</ref>;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">pointer</ref><sp/>m_ptr;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/>()</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_ptr<sp/>(0)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/>(<ref refid="classvigra_1_1MultiIterator_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">pointer</ref><sp/>ptr,</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>difference_array_type<sp/>&amp;,</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>shape_array_type<sp/>&amp;)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_ptr<sp/>(ptr)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1a00f008b80917746917b874d00abd02a9" kindref="member">operator++ </ref>()</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++m_ptr;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1a59f5b5b0d341cf7bd8d23f8f9f96edce" kindref="member">operator-- </ref>()</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--m_ptr;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a00f008b80917746917b874d00abd02a9" kindref="member">operator++ </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++(*this);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a59f5b5b0d341cf7bd8d23f8f9f96edce" kindref="member">operator-- </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--(*this);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/>&amp;<ref refid="classvigra_1_1MultiIterator_1a67fac8d8779088c8ef9bdd5dcfd53290" kindref="member">operator+= </ref>(<ref refid="classvigra_1_1MultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>n)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ptr<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiIterator_1a67fac8d8779088c8ef9bdd5dcfd53290" kindref="member">operator+= </ref>(<ref refid="classvigra_1_1MultiIterator_1ad6aeac37a55e24551245f9c9f6ab6985" kindref="member">multi_difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ptr<sp/>+=<sp/>d[level];</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/>&amp;<ref refid="classvigra_1_1MultiIterator_1abbe6e695ba4d79db1e16ac096611f61b" kindref="member">operator-= </ref>(<ref refid="classvigra_1_1MultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>n)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ptr<sp/>-=<sp/>n;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiIterator_1abbe6e695ba4d79db1e16ac096611f61b" kindref="member">operator-= </ref>(<ref refid="classvigra_1_1MultiIterator_1ad6aeac37a55e24551245f9c9f6ab6985" kindref="member">multi_difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ptr<sp/>-=<sp/>d[level];</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a9974c53571a55d43fb18439569a2fece" kindref="member">operator+ </ref>(<ref refid="classvigra_1_1MultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="477"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a9974c53571a55d43fb18439569a2fece" kindref="member">operator+ </ref>(<ref refid="classvigra_1_1MultiIterator_1ad6aeac37a55e24551245f9c9f6ab6985" kindref="member">multi_difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="484"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/>d;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a129b9335f0ded766e11e669fd90de39c" kindref="member">operator- </ref>(<ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="491"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m_ptr<sp/>-<sp/>d.m_ptr);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a129b9335f0ded766e11e669fd90de39c" kindref="member">operator- </ref>(<ref refid="classvigra_1_1MultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="496"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>-=<sp/>n;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a129b9335f0ded766e11e669fd90de39c" kindref="member">operator- </ref>(<ref refid="classvigra_1_1MultiIterator_1ad6aeac37a55e24551245f9c9f6ab6985" kindref="member">multi_difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="503"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>-=<sp/>d;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aabedc6031d7df619a0c453c558af87a0" kindref="member">reference</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a12062603d65db28a259b3e5fb67dae01" kindref="member">operator[] </ref>(<ref refid="classvigra_1_1MultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="510"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr<sp/>[n];</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aabedc6031d7df619a0c453c558af87a0" kindref="member">reference</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a12062603d65db28a259b3e5fb67dae01" kindref="member">operator[] </ref>(<ref refid="classvigra_1_1MultiIterator_1ad6aeac37a55e24551245f9c9f6ab6985" kindref="member">multi_difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="515"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr<sp/>[d[level]];</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aabedc6031d7df619a0c453c558af87a0" kindref="member">reference</ref><sp/><ref refid="classvigra_1_1MultiIterator_1aa149c2249879e7727f33688b76bf2c99" kindref="member">operator* </ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="520"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*m_ptr;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">pointer</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">pointer</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a33ce448509e9cc0d73861e4c1919c7a7" kindref="member">operator-&gt;</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="530"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;(<ref refid="classvigra_1_1MultiIterator_1aa149c2249879e7727f33688b76bf2c99" kindref="member">operator*</ref>());</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1aad4c16f7f304f3e2bce6dbc855891c39" kindref="member">operator!= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="535"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr<sp/>!=<sp/>rhs.m_ptr;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1a0edcbe8044b7ad08a25f9fcaafcf2f35" kindref="member">operator== </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="540"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr<sp/>==<sp/>rhs.m_ptr;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1ad13e7ca723d988d266cd83addee616cc" kindref="member">operator&lt; </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="545"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr<sp/>&lt;<sp/>rhs.m_ptr;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1af87455a3f1df07201b9000be9fa2f733" kindref="member">operator&lt;= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="550"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr<sp/>&lt;=<sp/>rhs.m_ptr;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1aabed43e12ab210019f929655e30e4a2d" kindref="member">operator&gt; </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="555"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr<sp/>&gt;<sp/>rhs.m_ptr;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1a4856c618a2daca3bfac77ad1e8f4f35c" kindref="member">operator&gt;= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="560"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr<sp/>&gt;=<sp/>rhs.m_ptr;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1a2fabb8a210750506234825958ca91556" kindref="member">iterator</ref><sp/><ref refid="classvigra_1_1MultiIterator_1af30f8bf10df99b714dc60640997c4c92" kindref="member">iteratorForDimension</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="565"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra_precondition(d<sp/>==<sp/>0,</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MultiIterator&lt;1&gt;::iteratorForDimension(d):<sp/>d<sp/>==<sp/>0<sp/>required&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>stride<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1a2fabb8a210750506234825958ca91556" kindref="member">iterator</ref>(m_ptr,<sp/>&amp;stride,<sp/>0);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>K&gt;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiIterator&lt;K+1,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;<sp/>&amp;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1a16bc7b15c53f6de2ea93d1244cd8f57e" kindref="member">dim</ref>()</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiIterator&lt;1,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;<sp/>&amp;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>dim0()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>total_stride(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>multi_difference_type::const_iterator<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="586"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d[level];</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal">};</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiIterator&lt;2&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>REFERENCE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>POINTER&gt;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MultiIterator&lt;2,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;</highlight></codeline>
<codeline lineno="600"><highlight class="normal">#ifndef<sp/>DOXYGEN<sp/><sp/></highlight><highlight class="comment">//<sp/>doxygen<sp/>doesn&apos;t<sp/>understand<sp/>this<sp/>inheritance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>MultiIterator&lt;1,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="603"><highlight class="preprocessor"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>MultiIterator&lt;1,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;<sp/><ref refid="classvigra_1_1MultiIterator_1a41efec649956eb667cd56c80481a2792" kindref="member">base_type</ref>;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>level<sp/>=<sp/>1<sp/>};</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="classvigra_1_1MultiIterator_1a265a253612b46abed17c61b0a5e5ce30" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>REFERENCE<sp/><ref refid="classvigra_1_1MultiIterator_1aabedc6031d7df619a0c453c558af87a0" kindref="member">reference</ref>;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1a265a253612b46abed17c61b0a5e5ce30" kindref="member">value_type</ref><sp/>&amp;<ref refid="classvigra_1_1MultiIterator_1afdb67657e63a66ed3fae7b0c9fd81b48" kindref="member">const_reference</ref>;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>POINTER<sp/><ref refid="classvigra_1_1MultiIterator_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1a265a253612b46abed17c61b0a5e5ce30" kindref="member">value_type</ref><sp/>*<ref refid="classvigra_1_1MultiIterator_1a13c57dab17e2c903cadfa5e35ba84064" kindref="member">const_pointer</ref>;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MultiArrayShape&lt;2&gt;::type<sp/><ref refid="classvigra_1_1MultiIterator_1ad6aeac37a55e24551245f9c9f6ab6985" kindref="member">multi_difference_type</ref>;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>MultiIteratorStrideTraits&lt;POINTER&gt;<sp/>stride_traits;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>stride_traits::stride_type<sp/><ref refid="classvigra_1_1MultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref>;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>stride_traits::stride_array_type<sp/>difference_array_type;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>stride_traits::shape_array_type<sp/>shape_array_type;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1a41efec649956eb667cd56c80481a2792" kindref="member">base_type</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a53ac148a952872ab0ade71a10c62f36c" kindref="member">next_type</ref>;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>StridedMultiIterator&lt;1,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;<sp/><ref refid="classvigra_1_1MultiIterator_1a2fabb8a210750506234825958ca91556" kindref="member">iterator</ref>;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>multi_dimensional_traverser_tag<sp/><ref refid="classvigra_1_1MultiIterator_1a13ca083757a5c2d9c3f8e94efb78fe2a" kindref="member">iterator_category</ref>;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>difference_array_type<sp/>m_stride;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>shape_array_type<sp/><sp/><sp/><sp/><sp/><sp/>m_shape;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>use<sp/>default<sp/>copy<sp/>constructor<sp/>and<sp/>assignment<sp/>operator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/>()</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1MultiIterator_1a41efec649956eb667cd56c80481a2792" kindref="member">base_type</ref><sp/>(),</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_stride<sp/>(0),<sp/>m_shape<sp/>(0)</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/>(<ref refid="classvigra_1_1MultiIterator_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">pointer</ref><sp/>ptr,</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>difference_array_type<sp/>&amp;<sp/>stride,</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>shape_array_type<sp/>&amp;<sp/>shape)</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1MultiIterator_1a41efec649956eb667cd56c80481a2792" kindref="member">base_type</ref><sp/>(ptr,<sp/>stride,<sp/>shape),</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_stride<sp/>(stride),<sp/>m_shape<sp/>(shape)</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1a00f008b80917746917b874d00abd02a9" kindref="member">operator++ </ref>()</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_ptr<sp/>+=<sp/>m_stride<sp/>[level];</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1a59f5b5b0d341cf7bd8d23f8f9f96edce" kindref="member">operator-- </ref>()</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_ptr<sp/>-=<sp/>m_stride<sp/>[level];</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a00f008b80917746917b874d00abd02a9" kindref="member">operator++ </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++(*this);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a59f5b5b0d341cf7bd8d23f8f9f96edce" kindref="member">operator-- </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--(*this);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiIterator_1a67fac8d8779088c8ef9bdd5dcfd53290" kindref="member">operator+= </ref>(<ref refid="classvigra_1_1MultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>n)</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_ptr<sp/>+=<sp/>n<sp/>*<sp/>m_stride<sp/>[level];</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiIterator_1a67fac8d8779088c8ef9bdd5dcfd53290" kindref="member">operator+= </ref>(<ref refid="classvigra_1_1MultiIterator_1ad6aeac37a55e24551245f9c9f6ab6985" kindref="member">multi_difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_ptr<sp/>+=<sp/>total_stride(d.begin());</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/><sp/>&amp;<ref refid="classvigra_1_1MultiIterator_1abbe6e695ba4d79db1e16ac096611f61b" kindref="member">operator-= </ref>(<ref refid="classvigra_1_1MultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>n)</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_ptr<sp/>-=<sp/>n<sp/>*<sp/>m_stride<sp/>[level];</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiIterator_1abbe6e695ba4d79db1e16ac096611f61b" kindref="member">operator-= </ref>(<ref refid="classvigra_1_1MultiIterator_1ad6aeac37a55e24551245f9c9f6ab6985" kindref="member">multi_difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_ptr<sp/>-=<sp/>total_stride(d.begin());</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a9974c53571a55d43fb18439569a2fece" kindref="member">operator+ </ref>(<ref refid="classvigra_1_1MultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="690"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a9974c53571a55d43fb18439569a2fece" kindref="member">operator+ </ref>(<ref refid="classvigra_1_1MultiIterator_1ad6aeac37a55e24551245f9c9f6ab6985" kindref="member">multi_difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="697"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/>d;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a129b9335f0ded766e11e669fd90de39c" kindref="member">operator- </ref>(<ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="704"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(this-&gt;m_ptr<sp/>-<sp/>d.m_ptr)<sp/>/<sp/>this-&gt;m_stride[level];</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a129b9335f0ded766e11e669fd90de39c" kindref="member">operator- </ref>(<ref refid="classvigra_1_1MultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="709"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>-=<sp/>n;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a129b9335f0ded766e11e669fd90de39c" kindref="member">operator- </ref>(<ref refid="classvigra_1_1MultiIterator_1ad6aeac37a55e24551245f9c9f6ab6985" kindref="member">multi_difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="716"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>-=<sp/>d;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aabedc6031d7df619a0c453c558af87a0" kindref="member">reference</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a12062603d65db28a259b3e5fb67dae01" kindref="member">operator[] </ref>(<ref refid="classvigra_1_1MultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="723"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;m_ptr<sp/>[n*m_stride<sp/>[level]];</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aabedc6031d7df619a0c453c558af87a0" kindref="member">reference</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a12062603d65db28a259b3e5fb67dae01" kindref="member">operator[] </ref>(<ref refid="classvigra_1_1MultiIterator_1ad6aeac37a55e24551245f9c9f6ab6985" kindref="member">multi_difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="728"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;m_ptr<sp/>[total_stride(d.begin())];</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1a53ac148a952872ab0ade71a10c62f36c" kindref="member">next_type</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a75e403e20d59da5b177a169be9f5b64f" kindref="member">begin</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="733"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1a53ac148a952872ab0ade71a10c62f36c" kindref="member">next_type</ref><sp/><ref refid="classvigra_1_1MultiIterator_1aad1c499882f522377548bbbb838070b2" kindref="member">end</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="738"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1a53ac148a952872ab0ade71a10c62f36c" kindref="member">next_type</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/>m_shape<sp/>[level-1];</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1a2fabb8a210750506234825958ca91556" kindref="member">iterator</ref><sp/><ref refid="classvigra_1_1MultiIterator_1af30f8bf10df99b714dc60640997c4c92" kindref="member">iteratorForDimension</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="745"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra_precondition(d<sp/>&lt;=<sp/>level,</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MultiIterator&lt;N&gt;::iteratorForDimension(d):<sp/>d<sp/>&lt;<sp/>N<sp/>required&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1a2fabb8a210750506234825958ca91556" kindref="member">iterator</ref>(this-&gt;m_ptr,<sp/>stride_traits::shift(m_stride,<sp/>d),<sp/>0);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>K&gt;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiIterator&lt;K+1,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;<sp/>&amp;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1a16bc7b15c53f6de2ea93d1244cd8f57e" kindref="member">dim</ref>()</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiIterator&lt;1,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;<sp/>&amp;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>dim0()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiIterator&lt;2,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;<sp/>&amp;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>dim1()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>total_stride(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>multi_difference_type::const_iterator<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="767"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d[level]*m_stride[level]<sp/>+<sp/>base_type::total_stride(d);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal">};</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiIterator&lt;N&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="778"><highlight class="comment">/**<sp/>\brief<sp/>A<sp/>multi-dimensional<sp/>hierarchical<sp/>iterator<sp/>to<sp/>be<sp/>used<sp/>with<sp/></highlight></codeline>
<codeline lineno="779"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\ref<sp/>vigra::MultiArrayView<sp/>if<sp/>it<sp/>is<sp/>not<sp/>strided.</highlight></codeline>
<codeline lineno="780"><highlight class="comment"></highlight></codeline>
<codeline lineno="781"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>See<sp/>\ref<sp/>MultiIteratorPage<sp/>for<sp/>further<sp/>documentation.</highlight></codeline>
<codeline lineno="782"><highlight class="comment"></highlight></codeline>
<codeline lineno="783"><highlight class="comment">&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/multi_iterator.hxx\&gt;</highlight></codeline>
<codeline lineno="784"><highlight class="comment"></highlight></codeline>
<codeline lineno="785"><highlight class="comment">Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="786"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>REFERENCE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>POINTER&gt;</highlight></codeline>
<codeline lineno="788" refid="classvigra_1_1MultiIterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">MultiIterator</ref><sp/></highlight></codeline>
<codeline lineno="789"><highlight class="normal">#ifndef<sp/>DOXYGEN<sp/><sp/></highlight><highlight class="comment">//<sp/>doxygen<sp/>doesn&apos;t<sp/>understand<sp/>this<sp/>inheritance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">MultiIterator</ref>&lt;N-1,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="792"><highlight class="preprocessor"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="795"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>type<sp/>of<sp/>the<sp/>parent<sp/>in<sp/>the<sp/>inheritance<sp/>hierarchy.</highlight></codeline>
<codeline lineno="796"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797" refid="classvigra_1_1MultiIterator_1a41efec649956eb667cd56c80481a2792" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">MultiIterator</ref>&lt;N-1,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;<sp/><ref refid="classvigra_1_1MultiIterator_1a41efec649956eb667cd56c80481a2792" kindref="member">base_type</ref>;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="799"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>iterator&apos;s<sp/>level<sp/>in<sp/>the<sp/>dimension<sp/>hierarchy</highlight></codeline>
<codeline lineno="800"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>level<sp/>=<sp/>N-1<sp/>};</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="803"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>iterator&apos;s<sp/>value<sp/>type</highlight></codeline>
<codeline lineno="804"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805" refid="classvigra_1_1MultiIterator_1a265a253612b46abed17c61b0a5e5ce30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="classvigra_1_1MultiIterator_1a265a253612b46abed17c61b0a5e5ce30" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="807"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>reference<sp/>type<sp/>(result<sp/>of<sp/>operator[])</highlight></codeline>
<codeline lineno="808"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809" refid="classvigra_1_1MultiIterator_1aabedc6031d7df619a0c453c558af87a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>REFERENCE<sp/><ref refid="classvigra_1_1MultiIterator_1aabedc6031d7df619a0c453c558af87a0" kindref="member">reference</ref>;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="811"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>const<sp/>reference<sp/>type<sp/>(result<sp/>of<sp/>operator[]<sp/>const)</highlight></codeline>
<codeline lineno="812"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813" refid="classvigra_1_1MultiIterator_1afdb67657e63a66ed3fae7b0c9fd81b48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1a265a253612b46abed17c61b0a5e5ce30" kindref="member">value_type</ref><sp/>&amp;<ref refid="classvigra_1_1MultiIterator_1afdb67657e63a66ed3fae7b0c9fd81b48" kindref="member">const_reference</ref>;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="815"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>pointer<sp/>type</highlight></codeline>
<codeline lineno="816"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817" refid="classvigra_1_1MultiIterator_1afe70b629b395bd93fb14c8300eabcb43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>POINTER<sp/><ref refid="classvigra_1_1MultiIterator_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="819"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>const<sp/>pointer<sp/>type</highlight></codeline>
<codeline lineno="820"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821" refid="classvigra_1_1MultiIterator_1a13c57dab17e2c903cadfa5e35ba84064" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1a265a253612b46abed17c61b0a5e5ce30" kindref="member">value_type</ref><sp/>*<ref refid="classvigra_1_1MultiIterator_1a13c57dab17e2c903cadfa5e35ba84064" kindref="member">const_pointer</ref>;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="823"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>multi<sp/>difference<sp/>type<sp/></highlight></codeline>
<codeline lineno="824"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(used<sp/>for<sp/>offsetting<sp/>along<sp/>all<sp/>axes<sp/>simultaneously)</highlight></codeline>
<codeline lineno="825"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826" refid="classvigra_1_1MultiIterator_1ad6aeac37a55e24551245f9c9f6ab6985" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">MultiArrayShape&lt;N&gt;::type</ref><sp/><ref refid="classvigra_1_1MultiIterator_1ad6aeac37a55e24551245f9c9f6ab6985" kindref="member">multi_difference_type</ref>;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="828"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>difference<sp/>type<sp/>(used<sp/>for<sp/>offsetting)</highlight></codeline>
<codeline lineno="829"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOXYGEN</highlight></codeline>
<codeline lineno="831"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>MultiIteratorStrideTraits&lt;POINTER&gt;<sp/>stride_traits;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>stride_traits::stride_type<sp/><ref refid="classvigra_1_1MultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref>;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>stride_traits::stride_array_type<sp/>difference_array_type;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>stride_traits::shape_array_type<sp/>shape_array_type;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="836" refid="classvigra_1_1MultiIterator_1ad58401545d290ac6f3be9e2683e782c7" refkind="member"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/><ref refid="classvigra_1_1MultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref>;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="838"><highlight class="preprocessor"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="839"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>MultiIterator<sp/>for<sp/>the<sp/>next<sp/>lower<sp/>dimension.</highlight></codeline>
<codeline lineno="840"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841" refid="classvigra_1_1MultiIterator_1a53ac148a952872ab0ade71a10c62f36c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">base_type</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a53ac148a952872ab0ade71a10c62f36c" kindref="member">next_type</ref>;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="843"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>1-dimensional<sp/>iterator<sp/>for<sp/>this<sp/>iterator<sp/>hierarchy</highlight></codeline>
<codeline lineno="844"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(result<sp/>of<sp/>iteratorForDimension()).</highlight></codeline>
<codeline lineno="845"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846" refid="classvigra_1_1MultiIterator_1a2fabb8a210750506234825958ca91556" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">StridedMultiIterator&lt;1, T, REFERENCE, POINTER&gt;</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a2fabb8a210750506234825958ca91556" kindref="member">iterator</ref>;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="848"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>iterator<sp/>tag<sp/>(image<sp/>traverser)</highlight></codeline>
<codeline lineno="849"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850" refid="classvigra_1_1MultiIterator_1a13ca083757a5c2d9c3f8e94efb78fe2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>multi_dimensional_traverser_tag<sp/><ref refid="classvigra_1_1MultiIterator_1a13ca083757a5c2d9c3f8e94efb78fe2a" kindref="member">iterator_category</ref>;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>use<sp/>default<sp/>copy<sp/>constructor<sp/>and<sp/>assignment<sp/>operator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="854"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>default<sp/>constructor.</highlight></codeline>
<codeline lineno="855"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856" refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/>()</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="859"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>construct<sp/>from<sp/>pointer,<sp/>strides<sp/>(offset<sp/>of<sp/>a<sp/>sample<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="860"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next)<sp/>for<sp/>every<sp/>dimension,<sp/>and<sp/>the<sp/>shape.</highlight></codeline>
<codeline lineno="861"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862" refid="classvigra_1_1MultiIterator_1a5df926e75247f930b19c653eb7fbf0a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aa4e3816a2898e884b792b5317a422e2f" kindref="member">MultiIterator</ref><sp/>(<ref refid="classvigra_1_1MultiIterator_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">pointer</ref><sp/>ptr,</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>difference_array_type<sp/>&amp;<sp/>stride,</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>shape_array_type<sp/>&amp;<sp/>shape)</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">base_type</ref><sp/>(ptr,<sp/>stride,<sp/>shape)</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="869"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>prefix-increment<sp/>the<sp/>iterator<sp/>in<sp/>its<sp/>current<sp/>dimension</highlight></codeline>
<codeline lineno="870"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871" refid="classvigra_1_1MultiIterator_1a00f008b80917746917b874d00abd02a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1a00f008b80917746917b874d00abd02a9" kindref="member">operator++ </ref>()</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_ptr<sp/>+=<sp/>this-&gt;m_stride<sp/>[level];</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="876"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>prefix-decrement<sp/>the<sp/>iterator<sp/>in<sp/>its<sp/>current<sp/>dimension</highlight></codeline>
<codeline lineno="877"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878" refid="classvigra_1_1MultiIterator_1a59f5b5b0d341cf7bd8d23f8f9f96edce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1a59f5b5b0d341cf7bd8d23f8f9f96edce" kindref="member">operator-- </ref>()</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_ptr<sp/>-=<sp/>this-&gt;m_stride<sp/>[level];</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="883"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>postfix-increment<sp/>the<sp/>iterator<sp/>in<sp/>its<sp/>current<sp/>dimension</highlight></codeline>
<codeline lineno="884"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885" refid="classvigra_1_1MultiIterator_1ae1b0a2e0b8b91522405d9bbb4adf6ce0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">MultiIterator</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a00f008b80917746917b874d00abd02a9" kindref="member">operator++ </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">MultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++(*this);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="892"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>postfix-decrement<sp/>the<sp/>iterator<sp/>in<sp/>its<sp/>current<sp/>dimension</highlight></codeline>
<codeline lineno="893"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894" refid="classvigra_1_1MultiIterator_1af9d637af55148ae44ec92b6fa62ecf72" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">MultiIterator</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a59f5b5b0d341cf7bd8d23f8f9f96edce" kindref="member">operator-- </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">MultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--(*this);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="901"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>increment<sp/>the<sp/>iterator<sp/>in<sp/>its<sp/>current<sp/>dimension</highlight></codeline>
<codeline lineno="902"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>by<sp/>the<sp/>given<sp/>value.</highlight></codeline>
<codeline lineno="903"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904" refid="classvigra_1_1MultiIterator_1a67fac8d8779088c8ef9bdd5dcfd53290" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">MultiIterator</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiIterator_1a67fac8d8779088c8ef9bdd5dcfd53290" kindref="member">operator+= </ref>(<ref refid="classvigra_1_1MultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>n)</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_ptr<sp/>+=<sp/>n<sp/>*<sp/>this-&gt;m_stride<sp/>[level];</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="910"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>increment<sp/>the<sp/>iterator<sp/>in<sp/>all<sp/>dimensions</highlight></codeline>
<codeline lineno="911"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>by<sp/>the<sp/>given<sp/>offset.</highlight></codeline>
<codeline lineno="912"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913" refid="classvigra_1_1MultiIterator_1ad015750725120a299e2976174e5f4c93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">MultiIterator</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiIterator_1a67fac8d8779088c8ef9bdd5dcfd53290" kindref="member">operator+= </ref>(<ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">multi_difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_ptr<sp/>+=<sp/>total_stride(d.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>());</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="919"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>decrement<sp/>the<sp/>iterator<sp/>in<sp/>its<sp/>current<sp/>dimension</highlight></codeline>
<codeline lineno="920"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>by<sp/>the<sp/>given<sp/>value.</highlight></codeline>
<codeline lineno="921"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922" refid="classvigra_1_1MultiIterator_1abbe6e695ba4d79db1e16ac096611f61b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">MultiIterator</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiIterator_1abbe6e695ba4d79db1e16ac096611f61b" kindref="member">operator-= </ref>(<ref refid="classvigra_1_1MultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>n)</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_ptr<sp/>-=<sp/>n<sp/>*<sp/>this-&gt;m_stride<sp/>[level];</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="928"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>decrement<sp/>the<sp/>iterator<sp/>in<sp/>all<sp/>dimensions</highlight></codeline>
<codeline lineno="929"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>by<sp/>the<sp/>given<sp/>offset.</highlight></codeline>
<codeline lineno="930"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931" refid="classvigra_1_1MultiIterator_1a64c9696fd6a5ef644986d0e494203973" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">MultiIterator</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiIterator_1abbe6e695ba4d79db1e16ac096611f61b" kindref="member">operator-= </ref>(<ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">multi_difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_ptr<sp/>-=<sp/>total_stride(d.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>());</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="937"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>addition<sp/>within<sp/>current<sp/>dimension</highlight></codeline>
<codeline lineno="938"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939" refid="classvigra_1_1MultiIterator_1a9974c53571a55d43fb18439569a2fece" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">MultiIterator</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a9974c53571a55d43fb18439569a2fece" kindref="member">operator+ </ref>(<ref refid="classvigra_1_1MultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="940"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">MultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="946"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>addition<sp/>along<sp/>all<sp/>dimensions</highlight></codeline>
<codeline lineno="947"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948" refid="classvigra_1_1MultiIterator_1ab674083526e75839d0429bb91d68c4a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">MultiIterator</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a9974c53571a55d43fb18439569a2fece" kindref="member">operator+ </ref>(<ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">multi_difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="949"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">MultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/>d;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="955"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>difference<sp/>of<sp/>two<sp/>iterators<sp/>in<sp/>the<sp/>current<sp/>dimension.</highlight></codeline>
<codeline lineno="956"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>result<sp/>of<sp/>this<sp/>operation<sp/>is<sp/>undefined<sp/>if<sp/>the<sp/>iterator</highlight></codeline>
<codeline lineno="957"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doesn&apos;t<sp/>point<sp/>to<sp/>element<sp/>0<sp/>in<sp/>all<sp/>dimensions<sp/>below<sp/>its<sp/>current<sp/>dimension.</highlight></codeline>
<codeline lineno="958"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959" refid="classvigra_1_1MultiIterator_1a129b9335f0ded766e11e669fd90de39c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a129b9335f0ded766e11e669fd90de39c" kindref="member">operator- </ref>(<ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">MultiIterator</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="960"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(this-&gt;m_ptr<sp/>-<sp/>d.m_ptr)<sp/>/<sp/>this-&gt;m_stride[level];</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="964"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>subtraction<sp/>within<sp/>current<sp/>dimension</highlight></codeline>
<codeline lineno="965"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966" refid="classvigra_1_1MultiIterator_1aee05e31dee3e966017c46c7d228d74a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">MultiIterator</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a129b9335f0ded766e11e669fd90de39c" kindref="member">operator- </ref>(<ref refid="classvigra_1_1MultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="967"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">MultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>-=<sp/>n;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="973"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>subtraction<sp/>along<sp/>all<sp/>dimensions</highlight></codeline>
<codeline lineno="974"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975" refid="classvigra_1_1MultiIterator_1a1cdcc5dec1c9d23142556a71436dd070" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">MultiIterator</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a129b9335f0ded766e11e669fd90de39c" kindref="member">operator- </ref>(<ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">multi_difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="976"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">MultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>-=<sp/>d;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DOXYGEN<sp/></highlight><highlight class="comment">/*<sp/>documentation<sp/>only:<sp/>operators<sp/>*,<sp/>-&gt;,<sp/>==,<sp/>!=,<sp/>&lt;,<sp/>&lt;=,<sp/>&gt;,<sp/>&gt;=<sp/>are<sp/>inherited<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="983"><highlight class="preprocessor"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>derefenrence<sp/>item</highlight></codeline>
<codeline lineno="984"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aabedc6031d7df619a0c453c558af87a0" kindref="member">reference</ref><sp/><ref refid="classvigra_1_1MultiIterator_1aa149c2249879e7727f33688b76bf2c99" kindref="member">operator* </ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="987"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>get<sp/>address<sp/>of<sp/>current<sp/>item</highlight></codeline>
<codeline lineno="988"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">pointer</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="991"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>call<sp/>method<sp/>of<sp/>current<sp/>item</highlight></codeline>
<codeline lineno="992"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">pointer</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a33ce448509e9cc0d73861e4c1919c7a7" kindref="member">operator-&gt;</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="995"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>inequality.<sp/>True<sp/>if<sp/>iterators<sp/>reference<sp/>different<sp/>items.</highlight></codeline>
<codeline lineno="996"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1aad4c16f7f304f3e2bce6dbc855891c39" kindref="member">operator!= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">MultiIterator</ref><sp/>&amp;rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="999"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>equality.<sp/>True<sp/>if<sp/>iterators<sp/>reference<sp/>the<sp/>same<sp/>items.</highlight></codeline>
<codeline lineno="1000"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1a0edcbe8044b7ad08a25f9fcaafcf2f35" kindref="member">operator== </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">MultiIterator</ref><sp/>&amp;rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1003"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>less<sp/>than.</highlight></codeline>
<codeline lineno="1004"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1ad13e7ca723d988d266cd83addee616cc" kindref="member">operator&lt; </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">MultiIterator</ref><sp/>&amp;rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1007"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>less<sp/>or<sp/>equal.</highlight></codeline>
<codeline lineno="1008"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1af87455a3f1df07201b9000be9fa2f733" kindref="member">operator&lt;= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">MultiIterator</ref><sp/>&amp;rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1011"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>greater<sp/>than.</highlight></codeline>
<codeline lineno="1012"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1aabed43e12ab210019f929655e30e4a2d" kindref="member">operator&gt; </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">MultiIterator</ref><sp/>&amp;rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1015"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>greater<sp/>or<sp/>equal.</highlight></codeline>
<codeline lineno="1016"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1a4856c618a2daca3bfac77ad1e8f4f35c" kindref="member">operator&gt;= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">MultiIterator</ref><sp/>&amp;rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1019"><highlight class="preprocessor"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1020"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>access<sp/>the<sp/>array<sp/>element<sp/>at<sp/>the<sp/>given<sp/>offset<sp/>in<sp/></highlight></codeline>
<codeline lineno="1021"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>current<sp/>dimension.</highlight></codeline>
<codeline lineno="1022"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023" refid="classvigra_1_1MultiIterator_1a12062603d65db28a259b3e5fb67dae01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aabedc6031d7df619a0c453c558af87a0" kindref="member">reference</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a12062603d65db28a259b3e5fb67dae01" kindref="member">operator[] </ref>(<ref refid="classvigra_1_1MultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1024"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;m_ptr<sp/>[n*<sp/>this-&gt;m_stride<sp/>[level]];</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1028"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>access<sp/>the<sp/>array<sp/>element<sp/>at<sp/>the<sp/>given<sp/>offset.</highlight></codeline>
<codeline lineno="1029"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030" refid="classvigra_1_1MultiIterator_1a1d202403bc765e6c831ddd325a73f182" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1aabedc6031d7df619a0c453c558af87a0" kindref="member">reference</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a12062603d65db28a259b3e5fb67dae01" kindref="member">operator[] </ref>(<ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">multi_difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1031"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;m_ptr<sp/>[total_stride(d.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>())];</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1035"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Return<sp/>the<sp/>(N-1)-dimensional<sp/>multi-iterator<sp/>that<sp/>points<sp/>to<sp/></highlight></codeline>
<codeline lineno="1036"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>first<sp/>(N-1)-dimensional<sp/>subarray<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="1037"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N-dimensional<sp/>array<sp/>this<sp/>iterator<sp/>is<sp/>referring<sp/>to.</highlight></codeline>
<codeline lineno="1038"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>result<sp/>is<sp/>only<sp/>valid<sp/>if<sp/>this<sp/>iterator<sp/>refers<sp/>to<sp/>location</highlight></codeline>
<codeline lineno="1039"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>in<sp/>&lt;em&gt;all&lt;/em&gt;<sp/>dimensions<sp/>below<sp/>its<sp/>current<sp/>dimension<sp/>N,</highlight></codeline>
<codeline lineno="1040"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherwise<sp/>it<sp/>is<sp/>undefined.<sp/>Usage:</highlight></codeline>
<codeline lineno="1041"><highlight class="comment"></highlight></codeline>
<codeline lineno="1042"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1043"><highlight class="comment"></highlight></codeline>
<codeline lineno="1044"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiIterator&lt;2,<sp/>int&gt;<sp/>outer<sp/>=<sp/>...;<sp/><sp/>//<sp/>this<sp/>iterator</highlight></codeline>
<codeline lineno="1045"><highlight class="comment"></highlight></codeline>
<codeline lineno="1046"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiIterator&lt;2,<sp/>int&gt;::next_type<sp/>inner<sp/>=<sp/>outer.begin();</highlight></codeline>
<codeline lineno="1047"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(;<sp/>inner<sp/>!=<sp/>outer.end();<sp/>++inner)</highlight></codeline>
<codeline lineno="1048"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1049"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>manipulate<sp/>current<sp/>1D<sp/>subimage</highlight></codeline>
<codeline lineno="1050"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1051"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1052"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1053" refid="classvigra_1_1MultiIterator_1a75e403e20d59da5b177a169be9f5b64f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">next_type</ref><sp/><ref refid="classvigra_1_1MultiIterator_1a75e403e20d59da5b177a169be9f5b64f" kindref="member">begin</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1054"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1058"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Return<sp/>the<sp/>(N-1)-dimensional<sp/>multi-iterator<sp/>that<sp/>points<sp/>beyond<sp/></highlight></codeline>
<codeline lineno="1059"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>last<sp/>(N-1)-dimensional<sp/>subarray<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="1060"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N-dimensional<sp/>array<sp/>this<sp/>iterator<sp/>is<sp/>referring<sp/>to.</highlight></codeline>
<codeline lineno="1061"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>result<sp/>is<sp/>only<sp/>valid<sp/>if<sp/>this<sp/>iterator<sp/>refers<sp/>to<sp/>location</highlight></codeline>
<codeline lineno="1062"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>in<sp/>&lt;em&gt;all&lt;/em&gt;<sp/>dimensions<sp/>below<sp/>its<sp/>current<sp/>dimension<sp/>N,</highlight></codeline>
<codeline lineno="1063"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherwise<sp/>it<sp/>is<sp/>undefined.</highlight></codeline>
<codeline lineno="1064"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065" refid="classvigra_1_1MultiIterator_1aad1c499882f522377548bbbb838070b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">next_type</ref><sp/><ref refid="classvigra_1_1MultiIterator_1aad1c499882f522377548bbbb838070b2" kindref="member">end</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1066"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">next_type</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/>this-&gt;m_shape<sp/>[level-1];</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1072"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Get<sp/>a<sp/>1-dimensional,<sp/>STL-compatible<sp/>iterator<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="1073"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>given<sp/>dimension,<sp/>pointing<sp/>to<sp/>the<sp/>current<sp/>element<sp/>of<sp/>&lt;TT&gt;this&lt;/TT&gt;.</highlight></codeline>
<codeline lineno="1074"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Usage:</highlight></codeline>
<codeline lineno="1075"><highlight class="comment"></highlight></codeline>
<codeline lineno="1076"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1077"><highlight class="comment"></highlight></codeline>
<codeline lineno="1078"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiIterator&lt;3,<sp/>int&gt;<sp/>outer<sp/>=<sp/>...;<sp/><sp/>//<sp/>this<sp/>iterator</highlight></codeline>
<codeline lineno="1079"><highlight class="comment"></highlight></codeline>
<codeline lineno="1080"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiIterator&lt;3,<sp/>int&gt;::iterator<sp/>i<sp/>=<sp/>outer.iteratorForDimension(1);</highlight></codeline>
<codeline lineno="1081"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiIterator&lt;3,<sp/>int&gt;::iterator<sp/>end<sp/>=<sp/>i<sp/>+<sp/>height;</highlight></codeline>
<codeline lineno="1082"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(;<sp/>i<sp/>!=<sp/>end;<sp/>++i)</highlight></codeline>
<codeline lineno="1083"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1084"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>go<sp/>down<sp/>the<sp/>current<sp/>column<sp/>starting<sp/>at<sp/>the<sp/>location<sp/>of<sp/>&apos;outer&apos;</highlight></codeline>
<codeline lineno="1085"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1086"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1087"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088" refid="classvigra_1_1MultiIterator_1af30f8bf10df99b714dc60640997c4c92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1a2fabb8a210750506234825958ca91556" kindref="member">iterator</ref><sp/><ref refid="classvigra_1_1MultiIterator_1af30f8bf10df99b714dc60640997c4c92" kindref="member">iteratorForDimension</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1089"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra_precondition(d<sp/>&lt;=<sp/>level,</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MultiIterator&lt;N&gt;::iteratorForDimension(d):<sp/>d<sp/>&lt;<sp/>N<sp/>required&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiIterator_1a2fabb8a210750506234825958ca91556" kindref="member">iterator</ref>(this-&gt;m_ptr,<sp/>stride_traits::shift(this-&gt;m_stride,<sp/>d),0);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1094"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Return<sp/>the<sp/>multi-iterator<sp/>that<sp/>operates<sp/>on<sp/>dimension<sp/>K<sp/>in<sp/>order</highlight></codeline>
<codeline lineno="1095"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>manipulate<sp/>this<sp/>dimension<sp/>directly.<sp/>Usage:</highlight></codeline>
<codeline lineno="1096"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1097"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1098"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1099"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiIterator&lt;3,<sp/>int&gt;<sp/>i3<sp/>=<sp/>...;</highlight></codeline>
<codeline lineno="1100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i3.template<sp/>dim&lt;2&gt;()++;<sp/><sp/>//<sp/>increment<sp/>outer<sp/>dimension</highlight></codeline>
<codeline lineno="1102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i3.template<sp/>dim&lt;0&gt;()++;<sp/><sp/>//<sp/>increment<sp/>inner<sp/>dimension</highlight></codeline>
<codeline lineno="1103"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1105"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>convenience,<sp/>the<sp/>same<sp/>functionality<sp/>is<sp/>also<sp/>available</highlight></codeline>
<codeline lineno="1106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>as<sp/>&lt;tt&gt;dim0()&lt;/tt&gt;,<sp/>&lt;tt&gt;dim1()&lt;/tt&gt;<sp/>etc.<sp/>up<sp/>to<sp/>&lt;tt&gt;dim4()&lt;/tt&gt;:</highlight></codeline>
<codeline lineno="1107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1109"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1110"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiIterator&lt;3,<sp/>int&gt;<sp/>i3<sp/>=<sp/>...;</highlight></codeline>
<codeline lineno="1111"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1112"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i3.dim2()++;<sp/><sp/>//<sp/>increment<sp/>outer<sp/>dimension</highlight></codeline>
<codeline lineno="1113"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i3.dim0()++;<sp/><sp/>//<sp/>increment<sp/>inner<sp/>dimension</highlight></codeline>
<codeline lineno="1114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1115"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>K&gt;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">MultiIterator&lt;K+1, T, REFERENCE, POINTER&gt;</ref><sp/>&amp;</highlight></codeline>
<codeline lineno="1118" refid="classvigra_1_1MultiIterator_1a16bc7b15c53f6de2ea93d1244cd8f57e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1a16bc7b15c53f6de2ea93d1244cd8f57e" kindref="member">dim</ref>()</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">MultiIterator&lt;1, T, REFERENCE, POINTER&gt;</ref><sp/>&amp;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/>dim0()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiIterator&lt;2,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;<sp/>&amp;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>dim1()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiIterator&lt;3,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;<sp/>&amp;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/>dim2()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiIterator&lt;4,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;<sp/>&amp;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/>dim3()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiIterator&lt;5,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;<sp/>&amp;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>dim4()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/>total_stride(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>multi_difference_type::const_iterator<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1138"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d[level]*this-&gt;m_stride[level]<sp/>+<sp/>base_type::total_stride(d);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StridedMultiIterator<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>REFERENCE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>POINTER&gt;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StridedMultiIterator;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StridedMultiIterator&lt;1&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>REFERENCE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>POINTER&gt;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StridedMultiIterator&lt;1,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>level<sp/>=<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="classvigra_1_1StridedMultiIterator_1a265a253612b46abed17c61b0a5e5ce30" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>REFERENCE<sp/><ref refid="classvigra_1_1StridedMultiIterator_1aabedc6031d7df619a0c453c558af87a0" kindref="member">reference</ref>;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a265a253612b46abed17c61b0a5e5ce30" kindref="member">value_type</ref><sp/>&amp;<ref refid="classvigra_1_1StridedMultiIterator_1afdb67657e63a66ed3fae7b0c9fd81b48" kindref="member">const_reference</ref>;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>POINTER<sp/><ref refid="classvigra_1_1StridedMultiIterator_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a265a253612b46abed17c61b0a5e5ce30" kindref="member">value_type</ref><sp/>*<ref refid="classvigra_1_1StridedMultiIterator_1a13c57dab17e2c903cadfa5e35ba84064" kindref="member">const_pointer</ref>;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MultiArrayShape&lt;1&gt;::type<sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad6aeac37a55e24551245f9c9f6ab6985" kindref="member">multi_difference_type</ref>;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>MultiIteratorStrideTraits&lt;POINTER&gt;<sp/>stride_traits;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>stride_traits::stride_type<sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref>;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>stride_traits::stride_array_type<sp/>difference_array_type;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>stride_traits::shape_array_type<sp/>shape_array_type;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>StridedMultiIterator&lt;1,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;<sp/><ref refid="classvigra_1_1StridedMultiIterator_1a2fabb8a210750506234825958ca91556" kindref="member">iterator</ref>;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::random_access_iterator_tag<sp/><ref refid="classvigra_1_1StridedMultiIterator_1a13ca083757a5c2d9c3f8e94efb78fe2a" kindref="member">iterator_category</ref>;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">pointer</ref><sp/>m_ptr;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>m_stride;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>use<sp/>default<sp/>copy<sp/>constructor<sp/>and<sp/>assignment<sp/>operator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/>()</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_ptr<sp/>(0),<sp/>m_stride<sp/>(0)</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/>(<ref refid="classvigra_1_1StridedMultiIterator_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">pointer</ref><sp/>ptr,</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>difference_array_type<sp/>&amp;<sp/>stride,</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>shape_array_type<sp/>&amp;)</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_ptr<sp/>(ptr),<sp/>m_stride<sp/>(stride<sp/>[level])</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a00f008b80917746917b874d00abd02a9" kindref="member">operator++ </ref>()</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ptr<sp/>+=<sp/>m_stride;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a59f5b5b0d341cf7bd8d23f8f9f96edce" kindref="member">operator-- </ref>()</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ptr<sp/>-=<sp/>m_stride;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a00f008b80917746917b874d00abd02a9" kindref="member">operator++ </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++(*this);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a59f5b5b0d341cf7bd8d23f8f9f96edce" kindref="member">operator-- </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--(*this);</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/>&amp;<ref refid="classvigra_1_1StridedMultiIterator_1aec652171348418217997e941ae89134a" kindref="member">operator+= </ref>(<ref refid="classvigra_1_1StridedMultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>n)</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ptr<sp/>+=<sp/>n<sp/>*<sp/>m_stride;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1StridedMultiIterator_1aec652171348418217997e941ae89134a" kindref="member">operator+= </ref>(<ref refid="classvigra_1_1StridedMultiIterator_1ad6aeac37a55e24551245f9c9f6ab6985" kindref="member">multi_difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ptr<sp/>+=<sp/>d[level]<sp/>*<sp/>m_stride;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/>&amp;<ref refid="classvigra_1_1StridedMultiIterator_1a101eaed037c48ad8fa44b56a69166fef" kindref="member">operator-= </ref>(<ref refid="classvigra_1_1StridedMultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>n)</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ptr<sp/>-=<sp/>n<sp/>*<sp/>m_stride;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1StridedMultiIterator_1a101eaed037c48ad8fa44b56a69166fef" kindref="member">operator-= </ref>(<ref refid="classvigra_1_1StridedMultiIterator_1ad6aeac37a55e24551245f9c9f6ab6985" kindref="member">multi_difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_ptr<sp/>-=<sp/>d[level]<sp/>*<sp/>m_stride;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ac89d9939cfb7d2fd0e4123577af08be8" kindref="member">operator+ </ref>(<ref refid="classvigra_1_1StridedMultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1244"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ac89d9939cfb7d2fd0e4123577af08be8" kindref="member">operator+ </ref>(<ref refid="classvigra_1_1StridedMultiIterator_1ad6aeac37a55e24551245f9c9f6ab6985" kindref="member">multi_difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1251"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/>d;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1aa1a6f0e54f88a5ff26aea9817fe31e44" kindref="member">operator- </ref>(<ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1258"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m_ptr<sp/>-<sp/>d.m_ptr)<sp/>/<sp/>m_stride;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1aa1a6f0e54f88a5ff26aea9817fe31e44" kindref="member">operator- </ref>(<ref refid="classvigra_1_1StridedMultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1263"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>-=<sp/>n;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1aa1a6f0e54f88a5ff26aea9817fe31e44" kindref="member">operator- </ref>(<ref refid="classvigra_1_1StridedMultiIterator_1ad6aeac37a55e24551245f9c9f6ab6985" kindref="member">multi_difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1270"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>-=<sp/>d;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1aabedc6031d7df619a0c453c558af87a0" kindref="member">reference</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a12062603d65db28a259b3e5fb67dae01" kindref="member">operator[] </ref>(<ref refid="classvigra_1_1StridedMultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1277"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr<sp/>[n*m_stride];</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1aabedc6031d7df619a0c453c558af87a0" kindref="member">reference</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a12062603d65db28a259b3e5fb67dae01" kindref="member">operator[] </ref>(<ref refid="classvigra_1_1StridedMultiIterator_1ad6aeac37a55e24551245f9c9f6ab6985" kindref="member">multi_difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1282"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr<sp/>[d[level]*m_stride];</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1aabedc6031d7df619a0c453c558af87a0" kindref="member">reference</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1aa149c2249879e7727f33688b76bf2c99" kindref="member">operator* </ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1287"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*m_ptr;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">pointer</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">pointer</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a33ce448509e9cc0d73861e4c1919c7a7" kindref="member">operator-&gt;</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1297"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;(<ref refid="classvigra_1_1StridedMultiIterator_1aa149c2249879e7727f33688b76bf2c99" kindref="member">operator*</ref>());</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a6400b310a252360974600168cf9513f4" kindref="member">operator!= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1302"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr<sp/>!=<sp/>rhs.m_ptr;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1af78d1574e8cd2658337f33eecfa46726" kindref="member">operator== </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1307"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr<sp/>==<sp/>rhs.m_ptr;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a00c84a1d3758dc18ebcbe526d45ac905" kindref="member">operator&lt; </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1312"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr<sp/>&lt;<sp/>rhs.m_ptr;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1aab6344183c6b4eb596c3b113d7ea0934" kindref="member">operator&lt;= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1317"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr<sp/>&lt;=<sp/>rhs.m_ptr;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad7fe75263cf91716f7b19bf388ae865e" kindref="member">operator&gt; </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1322"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr<sp/>&gt;<sp/>rhs.m_ptr;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a6686d20a5b4bd307a68deb520910c114" kindref="member">operator&gt;= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1327"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr<sp/>&gt;=<sp/>rhs.m_ptr;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a2fabb8a210750506234825958ca91556" kindref="member">iterator</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1af30f8bf10df99b714dc60640997c4c92" kindref="member">iteratorForDimension</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1332"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra_precondition(d<sp/>==<sp/>0,</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;StridedMultiIterator&lt;1&gt;::iteratorForDimension(d):<sp/>d<sp/>==<sp/>0<sp/>required&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>stride<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a2fabb8a210750506234825958ca91556" kindref="member">iterator</ref>(m_ptr,<sp/>&amp;stride,<sp/>0);</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>K&gt;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedMultiIterator&lt;K+1,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;<sp/>&amp;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1abb290bbcb495161dbbb8fcc6f5f4dd04" kindref="member">dim</ref>()</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedMultiIterator&lt;1,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;<sp/>&amp;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>dim0()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/>total_stride(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>multi_difference_type::const_iterator<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1353"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d[level]<sp/>*<sp/>m_stride;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1356"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StridedMultiIterator&lt;2&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>REFERENCE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>POINTER&gt;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StridedMultiIterator&lt;2,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal">#ifndef<sp/>DOXYGEN<sp/><sp/></highlight><highlight class="comment">//<sp/>doxygen<sp/>doesn&apos;t<sp/>understand<sp/>this<sp/>inheritance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>StridedMultiIterator&lt;1,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1370"><highlight class="preprocessor"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>StridedMultiIterator&lt;1,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;<sp/><ref refid="classvigra_1_1StridedMultiIterator_1a7e7511f73beac3b9af5916c5aca42716" kindref="member">base_type</ref>;</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>level<sp/>=<sp/>1<sp/>};</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="classvigra_1_1StridedMultiIterator_1a265a253612b46abed17c61b0a5e5ce30" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>REFERENCE<sp/><ref refid="classvigra_1_1StridedMultiIterator_1aabedc6031d7df619a0c453c558af87a0" kindref="member">reference</ref>;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a265a253612b46abed17c61b0a5e5ce30" kindref="member">value_type</ref><sp/>&amp;<ref refid="classvigra_1_1StridedMultiIterator_1afdb67657e63a66ed3fae7b0c9fd81b48" kindref="member">const_reference</ref>;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>POINTER<sp/><ref refid="classvigra_1_1StridedMultiIterator_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a265a253612b46abed17c61b0a5e5ce30" kindref="member">value_type</ref><sp/>*<ref refid="classvigra_1_1StridedMultiIterator_1a13c57dab17e2c903cadfa5e35ba84064" kindref="member">const_pointer</ref>;</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MultiArrayShape&lt;2&gt;::type<sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad6aeac37a55e24551245f9c9f6ab6985" kindref="member">multi_difference_type</ref>;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>MultiIteratorStrideTraits&lt;POINTER&gt;<sp/>stride_traits;</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>stride_traits::stride_type<sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref>;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>stride_traits::stride_array_type<sp/>difference_array_type;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>stride_traits::shape_array_type<sp/>shape_array_type;</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a7e7511f73beac3b9af5916c5aca42716" kindref="member">base_type</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a53ac148a952872ab0ade71a10c62f36c" kindref="member">next_type</ref>;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>StridedMultiIterator&lt;1,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;<sp/><ref refid="classvigra_1_1StridedMultiIterator_1a2fabb8a210750506234825958ca91556" kindref="member">iterator</ref>;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>multi_dimensional_traverser_tag<sp/><ref refid="classvigra_1_1StridedMultiIterator_1a13ca083757a5c2d9c3f8e94efb78fe2a" kindref="member">iterator_category</ref>;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/>difference_array_type<sp/>m_stride;</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/>shape_array_type<sp/>m_shape;</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>use<sp/>default<sp/>copy<sp/>constructor<sp/>and<sp/>assignment<sp/>operator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/>()</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1StridedMultiIterator_1a7e7511f73beac3b9af5916c5aca42716" kindref="member">base_type</ref><sp/>(),</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_stride<sp/>(0),<sp/>m_shape<sp/>(0)</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/>(<ref refid="classvigra_1_1StridedMultiIterator_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">pointer</ref><sp/>ptr,</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>difference_array_type<sp/>&amp;<sp/>stride,</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>shape_array_type<sp/>&amp;<sp/>shape)</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1StridedMultiIterator_1a7e7511f73beac3b9af5916c5aca42716" kindref="member">base_type</ref><sp/>(ptr,<sp/>stride,<sp/>shape),</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_stride<sp/>(stride),<sp/>m_shape<sp/>(shape)</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a00f008b80917746917b874d00abd02a9" kindref="member">operator++ </ref>()</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_ptr<sp/>+=<sp/>m_stride<sp/>[level];</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a59f5b5b0d341cf7bd8d23f8f9f96edce" kindref="member">operator-- </ref>()</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_ptr<sp/>-=<sp/>m_stride<sp/>[level];</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a00f008b80917746917b874d00abd02a9" kindref="member">operator++ </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++(*this);</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a59f5b5b0d341cf7bd8d23f8f9f96edce" kindref="member">operator-- </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--(*this);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1StridedMultiIterator_1aec652171348418217997e941ae89134a" kindref="member">operator+= </ref>(<ref refid="classvigra_1_1StridedMultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>n)</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_ptr<sp/>+=<sp/>n<sp/>*<sp/>m_stride<sp/>[level];</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1StridedMultiIterator_1aec652171348418217997e941ae89134a" kindref="member">operator+= </ref>(<ref refid="classvigra_1_1StridedMultiIterator_1ad6aeac37a55e24551245f9c9f6ab6985" kindref="member">multi_difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_ptr<sp/>+=<sp/>total_stride(d.begin());</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/><sp/>&amp;<ref refid="classvigra_1_1StridedMultiIterator_1a101eaed037c48ad8fa44b56a69166fef" kindref="member">operator-= </ref>(<ref refid="classvigra_1_1StridedMultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>n)</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_ptr<sp/>-=<sp/>n<sp/>*<sp/>m_stride<sp/>[level];</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1StridedMultiIterator_1a101eaed037c48ad8fa44b56a69166fef" kindref="member">operator-= </ref>(<ref refid="classvigra_1_1StridedMultiIterator_1ad6aeac37a55e24551245f9c9f6ab6985" kindref="member">multi_difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_ptr<sp/>-=<sp/>total_stride(d.begin());</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ac89d9939cfb7d2fd0e4123577af08be8" kindref="member">operator+ </ref>(<ref refid="classvigra_1_1StridedMultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1457"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ac89d9939cfb7d2fd0e4123577af08be8" kindref="member">operator+ </ref>(<ref refid="classvigra_1_1StridedMultiIterator_1ad6aeac37a55e24551245f9c9f6ab6985" kindref="member">multi_difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1464"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/>d;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1aa1a6f0e54f88a5ff26aea9817fe31e44" kindref="member">operator- </ref>(<ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1471"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(this-&gt;m_ptr<sp/>-<sp/>d.m_ptr)<sp/>/<sp/>this-&gt;m_stride[level];</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1aa1a6f0e54f88a5ff26aea9817fe31e44" kindref="member">operator- </ref>(<ref refid="classvigra_1_1StridedMultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1476"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>-=<sp/>n;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1aa1a6f0e54f88a5ff26aea9817fe31e44" kindref="member">operator- </ref>(<ref refid="classvigra_1_1StridedMultiIterator_1ad6aeac37a55e24551245f9c9f6ab6985" kindref="member">multi_difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1483"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>-=<sp/>d;</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1aabedc6031d7df619a0c453c558af87a0" kindref="member">reference</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a12062603d65db28a259b3e5fb67dae01" kindref="member">operator[] </ref>(<ref refid="classvigra_1_1StridedMultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1490"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;m_ptr<sp/>[n*m_stride<sp/>[level]];</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1aabedc6031d7df619a0c453c558af87a0" kindref="member">reference</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a12062603d65db28a259b3e5fb67dae01" kindref="member">operator[] </ref>(<ref refid="classvigra_1_1StridedMultiIterator_1ad6aeac37a55e24551245f9c9f6ab6985" kindref="member">multi_difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1495"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;m_ptr<sp/>[total_stride(d.begin())];</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a53ac148a952872ab0ade71a10c62f36c" kindref="member">next_type</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a75e403e20d59da5b177a169be9f5b64f" kindref="member">begin</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1500"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a53ac148a952872ab0ade71a10c62f36c" kindref="member">next_type</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1aad1c499882f522377548bbbb838070b2" kindref="member">end</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1505"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a53ac148a952872ab0ade71a10c62f36c" kindref="member">next_type</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/>m_shape<sp/>[level-1];</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a2fabb8a210750506234825958ca91556" kindref="member">iterator</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1af30f8bf10df99b714dc60640997c4c92" kindref="member">iteratorForDimension</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1512"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra_precondition(d<sp/>&lt;=<sp/>level,</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;StridedMultiIterator&lt;N&gt;::iteratorForDimension(d):<sp/>d<sp/>&lt;<sp/>N<sp/>required&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a2fabb8a210750506234825958ca91556" kindref="member">iterator</ref>(this-&gt;m_ptr,<sp/>stride_traits::shift(m_stride,<sp/>d),<sp/>0);</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>K&gt;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedMultiIterator&lt;K+1,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;<sp/>&amp;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1abb290bbcb495161dbbb8fcc6f5f4dd04" kindref="member">dim</ref>()</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedMultiIterator&lt;1,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;<sp/>&amp;</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/>dim0()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedMultiIterator&lt;2,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;<sp/>&amp;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/>dim1()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/>total_stride(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>multi_difference_type::const_iterator<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1534"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d[level]*m_stride[level]<sp/>+<sp/>base_type::total_stride(d);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1537"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StridedMultiIterator&lt;N&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1545"><highlight class="comment">/**<sp/>\brief<sp/>A<sp/>multi-dimensional<sp/>hierarchical<sp/>iterator<sp/>to<sp/>be<sp/>used<sp/>with<sp/></highlight></codeline>
<codeline lineno="1546"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\ref<sp/>vigra::MultiArrayView<sp/>if<sp/>it<sp/>is<sp/>not<sp/>strided.</highlight></codeline>
<codeline lineno="1547"><highlight class="comment"></highlight></codeline>
<codeline lineno="1548"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>See<sp/>\ref<sp/>MultiIteratorPage<sp/>for<sp/>further<sp/>documentation.</highlight></codeline>
<codeline lineno="1549"><highlight class="comment"></highlight></codeline>
<codeline lineno="1550"><highlight class="comment">&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/multi_iterator.hxx\&gt;</highlight></codeline>
<codeline lineno="1551"><highlight class="comment"></highlight></codeline>
<codeline lineno="1552"><highlight class="comment">Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="1553"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>REFERENCE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>POINTER&gt;</highlight></codeline>
<codeline lineno="1555" refid="classvigra_1_1StridedMultiIterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">StridedMultiIterator</ref><sp/></highlight></codeline>
<codeline lineno="1556"><highlight class="normal">#ifndef<sp/>DOXYGEN<sp/><sp/></highlight><highlight class="comment">//<sp/>doxygen<sp/>doesn&apos;t<sp/>understand<sp/>this<sp/>inheritance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">StridedMultiIterator</ref>&lt;N-1,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1559"><highlight class="preprocessor"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1562"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>type<sp/>of<sp/>the<sp/>parent<sp/>in<sp/>the<sp/>inheritance<sp/>hierarchy.</highlight></codeline>
<codeline lineno="1563"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1564" refid="classvigra_1_1StridedMultiIterator_1a7e7511f73beac3b9af5916c5aca42716" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">StridedMultiIterator</ref>&lt;N-1,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;<sp/><ref refid="classvigra_1_1StridedMultiIterator_1a7e7511f73beac3b9af5916c5aca42716" kindref="member">base_type</ref>;</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1566"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>iterator&apos;s<sp/>level<sp/>in<sp/>the<sp/>dimension<sp/>hierarchy</highlight></codeline>
<codeline lineno="1567"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>level<sp/>=<sp/>N-1<sp/>};</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1570"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>iterator&apos;s<sp/>value<sp/>type</highlight></codeline>
<codeline lineno="1571"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1572" refid="classvigra_1_1StridedMultiIterator_1a265a253612b46abed17c61b0a5e5ce30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="classvigra_1_1StridedMultiIterator_1a265a253612b46abed17c61b0a5e5ce30" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1574"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>reference<sp/>type<sp/>(result<sp/>of<sp/>operator[])</highlight></codeline>
<codeline lineno="1575"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576" refid="classvigra_1_1StridedMultiIterator_1aabedc6031d7df619a0c453c558af87a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>REFERENCE<sp/><ref refid="classvigra_1_1StridedMultiIterator_1aabedc6031d7df619a0c453c558af87a0" kindref="member">reference</ref>;</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1578"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>const<sp/>reference<sp/>type<sp/>(result<sp/>of<sp/>operator[]<sp/>const)</highlight></codeline>
<codeline lineno="1579"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1580" refid="classvigra_1_1StridedMultiIterator_1afdb67657e63a66ed3fae7b0c9fd81b48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a265a253612b46abed17c61b0a5e5ce30" kindref="member">value_type</ref><sp/>&amp;<ref refid="classvigra_1_1StridedMultiIterator_1afdb67657e63a66ed3fae7b0c9fd81b48" kindref="member">const_reference</ref>;</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1582"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>pointer<sp/>type</highlight></codeline>
<codeline lineno="1583"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1584" refid="classvigra_1_1StridedMultiIterator_1afe70b629b395bd93fb14c8300eabcb43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>POINTER<sp/><ref refid="classvigra_1_1StridedMultiIterator_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1586"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>const<sp/>pointer<sp/>type</highlight></codeline>
<codeline lineno="1587"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1588" refid="classvigra_1_1StridedMultiIterator_1a13c57dab17e2c903cadfa5e35ba84064" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a265a253612b46abed17c61b0a5e5ce30" kindref="member">value_type</ref><sp/>*<ref refid="classvigra_1_1StridedMultiIterator_1a13c57dab17e2c903cadfa5e35ba84064" kindref="member">const_pointer</ref>;</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1590"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>multi<sp/>difference<sp/>type<sp/></highlight></codeline>
<codeline lineno="1591"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(used<sp/>for<sp/>offsetting<sp/>along<sp/>all<sp/>axes<sp/>simultaneously)</highlight></codeline>
<codeline lineno="1592"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1593" refid="classvigra_1_1StridedMultiIterator_1ad6aeac37a55e24551245f9c9f6ab6985" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">MultiArrayShape&lt;N&gt;::type</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad6aeac37a55e24551245f9c9f6ab6985" kindref="member">multi_difference_type</ref>;</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1595"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>difference<sp/>type<sp/>(used<sp/>for<sp/>offsetting)</highlight></codeline>
<codeline lineno="1596"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOXYGEN</highlight></codeline>
<codeline lineno="1598"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>MultiIteratorStrideTraits&lt;POINTER&gt;<sp/>stride_traits;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>stride_traits::stride_type<sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref>;</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>stride_traits::stride_array_type<sp/>difference_array_type;</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1602" refid="classvigra_1_1StridedMultiIterator_1ad58401545d290ac6f3be9e2683e782c7" refkind="member"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref>;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1604"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1605"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>StridedMultiIterator<sp/>for<sp/>the<sp/>next<sp/>lower<sp/>dimension.</highlight></codeline>
<codeline lineno="1606"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1607" refid="classvigra_1_1StridedMultiIterator_1a53ac148a952872ab0ade71a10c62f36c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">base_type</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a53ac148a952872ab0ade71a10c62f36c" kindref="member">next_type</ref>;</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1609"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>1-dimensional<sp/>iterator<sp/>for<sp/>this<sp/>iterator<sp/>hierarchy</highlight></codeline>
<codeline lineno="1610"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(result<sp/>of<sp/>iteratorForDimension()).</highlight></codeline>
<codeline lineno="1611"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1612" refid="classvigra_1_1StridedMultiIterator_1a2fabb8a210750506234825958ca91556" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">StridedMultiIterator&lt;1, T, REFERENCE, POINTER&gt;</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a2fabb8a210750506234825958ca91556" kindref="member">iterator</ref>;</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1614"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>iterator<sp/>tag<sp/>(image<sp/>traverser)</highlight></codeline>
<codeline lineno="1615"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1616" refid="classvigra_1_1StridedMultiIterator_1a13ca083757a5c2d9c3f8e94efb78fe2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>multi_dimensional_traverser_tag<sp/><ref refid="classvigra_1_1StridedMultiIterator_1a13ca083757a5c2d9c3f8e94efb78fe2a" kindref="member">iterator_category</ref>;</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>use<sp/>default<sp/>copy<sp/>constructor<sp/>and<sp/>assignment<sp/>operator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1620"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>default<sp/>constructor.</highlight></codeline>
<codeline lineno="1621"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1622" refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/>()</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1625"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>construct<sp/>from<sp/>pointer,<sp/>strides<sp/>(offset<sp/>of<sp/>a<sp/>sample<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="1626"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next)<sp/>for<sp/>every<sp/>dimension,<sp/>and<sp/>the<sp/>shape.</highlight></codeline>
<codeline lineno="1627"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1628" refid="classvigra_1_1StridedMultiIterator_1a7b152d57ae4c266db0de7645cc53c006" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad2c0d0c3d63f3b50515ab11fba94cdf7" kindref="member">StridedMultiIterator</ref><sp/>(<ref refid="classvigra_1_1StridedMultiIterator_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">pointer</ref><sp/>ptr,</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>difference_array_type<sp/>&amp;<sp/>stride,</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>difference_array_type<sp/>&amp;<sp/>shape)</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">base_type</ref><sp/>(ptr,<sp/>stride,<sp/>shape)</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1635"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>prefix-increment<sp/>the<sp/>iterator<sp/>in<sp/>its<sp/>current<sp/>dimension</highlight></codeline>
<codeline lineno="1636"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1637" refid="classvigra_1_1StridedMultiIterator_1a00f008b80917746917b874d00abd02a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a00f008b80917746917b874d00abd02a9" kindref="member">operator++ </ref>()</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_ptr<sp/>+=<sp/>this-&gt;m_stride<sp/>[level];</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1642"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>prefix-decrement<sp/>the<sp/>iterator<sp/>in<sp/>its<sp/>current<sp/>dimension</highlight></codeline>
<codeline lineno="1643"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1644" refid="classvigra_1_1StridedMultiIterator_1a59f5b5b0d341cf7bd8d23f8f9f96edce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a59f5b5b0d341cf7bd8d23f8f9f96edce" kindref="member">operator-- </ref>()</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_ptr<sp/>-=<sp/>this-&gt;m_stride<sp/>[level];</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1649"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>postfix-increment<sp/>the<sp/>iterator<sp/>in<sp/>its<sp/>current<sp/>dimension</highlight></codeline>
<codeline lineno="1650"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1651" refid="classvigra_1_1StridedMultiIterator_1a2849b4ef47cdd589aab56836e8eb40c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">StridedMultiIterator</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a00f008b80917746917b874d00abd02a9" kindref="member">operator++ </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">StridedMultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++(*this);</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1658"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>postfix-decrement<sp/>the<sp/>iterator<sp/>in<sp/>its<sp/>current<sp/>dimension</highlight></codeline>
<codeline lineno="1659"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1660" refid="classvigra_1_1StridedMultiIterator_1ab0ecf5eebd8473f2e64c0da89c94aaf5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">StridedMultiIterator</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a59f5b5b0d341cf7bd8d23f8f9f96edce" kindref="member">operator-- </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">StridedMultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--(*this);</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1667"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>increment<sp/>the<sp/>iterator<sp/>in<sp/>its<sp/>current<sp/>dimension</highlight></codeline>
<codeline lineno="1668"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>by<sp/>the<sp/>given<sp/>value.</highlight></codeline>
<codeline lineno="1669"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1670" refid="classvigra_1_1StridedMultiIterator_1aec652171348418217997e941ae89134a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">StridedMultiIterator</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1StridedMultiIterator_1aec652171348418217997e941ae89134a" kindref="member">operator+= </ref>(<ref refid="classvigra_1_1StridedMultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>n)</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_ptr<sp/>+=<sp/>n<sp/>*<sp/>this-&gt;m_stride<sp/>[level];</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1676"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>increment<sp/>the<sp/>iterator<sp/>in<sp/>all<sp/>dimensions</highlight></codeline>
<codeline lineno="1677"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>by<sp/>the<sp/>given<sp/>offset.</highlight></codeline>
<codeline lineno="1678"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1679" refid="classvigra_1_1StridedMultiIterator_1a9e6555c1d0505dbc4c2e31caf710a794" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">StridedMultiIterator</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1StridedMultiIterator_1aec652171348418217997e941ae89134a" kindref="member">operator+= </ref>(<ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">multi_difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_ptr<sp/>+=<sp/>total_stride(d.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>());</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1685"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>decrement<sp/>the<sp/>iterator<sp/>in<sp/>its<sp/>current<sp/>dimension</highlight></codeline>
<codeline lineno="1686"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>by<sp/>the<sp/>given<sp/>value.</highlight></codeline>
<codeline lineno="1687"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1688" refid="classvigra_1_1StridedMultiIterator_1a101eaed037c48ad8fa44b56a69166fef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">StridedMultiIterator</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1StridedMultiIterator_1a101eaed037c48ad8fa44b56a69166fef" kindref="member">operator-= </ref>(<ref refid="classvigra_1_1StridedMultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>n)</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_ptr<sp/>-=<sp/>n<sp/>*<sp/>this-&gt;m_stride<sp/>[level];</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1694"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>decrement<sp/>the<sp/>iterator<sp/>in<sp/>all<sp/>dimensions</highlight></codeline>
<codeline lineno="1695"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>by<sp/>the<sp/>given<sp/>offset.</highlight></codeline>
<codeline lineno="1696"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1697" refid="classvigra_1_1StridedMultiIterator_1ab2c4953c193db7560681c5f0f8036da4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">StridedMultiIterator</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1StridedMultiIterator_1a101eaed037c48ad8fa44b56a69166fef" kindref="member">operator-= </ref>(<ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">multi_difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;m_ptr<sp/>-=<sp/>total_stride(d.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>());</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1703"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>addition<sp/>within<sp/>current<sp/>dimension</highlight></codeline>
<codeline lineno="1704"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1705" refid="classvigra_1_1StridedMultiIterator_1ac89d9939cfb7d2fd0e4123577af08be8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">StridedMultiIterator</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ac89d9939cfb7d2fd0e4123577af08be8" kindref="member">operator+ </ref>(<ref refid="classvigra_1_1StridedMultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1706"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">StridedMultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1712"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>addition<sp/>along<sp/>all<sp/>dimensions</highlight></codeline>
<codeline lineno="1713"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1714" refid="classvigra_1_1StridedMultiIterator_1ac83452f58df9b2825c1e26b67a2a1bc1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">StridedMultiIterator</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ac89d9939cfb7d2fd0e4123577af08be8" kindref="member">operator+ </ref>(<ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">multi_difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1715"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">StridedMultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/>d;</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1721"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>difference<sp/>of<sp/>two<sp/>iterators<sp/>in<sp/>the<sp/>current<sp/>dimension.</highlight></codeline>
<codeline lineno="1722"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>result<sp/>of<sp/>this<sp/>operation<sp/>is<sp/>undefined<sp/>if<sp/>the<sp/>iterator</highlight></codeline>
<codeline lineno="1723"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doesn&apos;t<sp/>point<sp/>to<sp/>element<sp/>0<sp/>in<sp/>all<sp/>dimensions<sp/>below<sp/>its<sp/>current<sp/>dimension.</highlight></codeline>
<codeline lineno="1724"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1725" refid="classvigra_1_1StridedMultiIterator_1aa1a6f0e54f88a5ff26aea9817fe31e44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1aa1a6f0e54f88a5ff26aea9817fe31e44" kindref="member">operator- </ref>(<ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">StridedMultiIterator</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1726"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(this-&gt;m_ptr<sp/>-<sp/>d.m_ptr)<sp/>/<sp/>this-&gt;m_stride[level];</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1730"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>subtraction<sp/>within<sp/>current<sp/>dimension</highlight></codeline>
<codeline lineno="1731"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1732" refid="classvigra_1_1StridedMultiIterator_1aac6b24b73fd409381978e8020ff8e6cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">StridedMultiIterator</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1aa1a6f0e54f88a5ff26aea9817fe31e44" kindref="member">operator- </ref>(<ref refid="classvigra_1_1StridedMultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1733"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">StridedMultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>-=<sp/>n;</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1739"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>subtraction<sp/>along<sp/>all<sp/>dimensions</highlight></codeline>
<codeline lineno="1740"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1741" refid="classvigra_1_1StridedMultiIterator_1a4747dd0396d32474d5cab383a37721f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">StridedMultiIterator</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1aa1a6f0e54f88a5ff26aea9817fe31e44" kindref="member">operator- </ref>(<ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">multi_difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1742"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">StridedMultiIterator</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>-=<sp/>d;</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DOXYGEN<sp/></highlight><highlight class="comment">/*<sp/>documentation<sp/>only:<sp/>operators<sp/>*,<sp/>-&gt;,<sp/>==,<sp/>!=,<sp/>&lt;,<sp/>&lt;=,<sp/>&gt;,<sp/>&gt;=<sp/>are<sp/>inherited<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="1749"><highlight class="preprocessor"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>derefenrence<sp/>item</highlight></codeline>
<codeline lineno="1750"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1aabedc6031d7df619a0c453c558af87a0" kindref="member">reference</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1aa149c2249879e7727f33688b76bf2c99" kindref="member">operator* </ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1753"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>get<sp/>address<sp/>of<sp/>current<sp/>item</highlight></codeline>
<codeline lineno="1754"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">pointer</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1757"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>call<sp/>method<sp/>of<sp/>current<sp/>item</highlight></codeline>
<codeline lineno="1758"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1afe70b629b395bd93fb14c8300eabcb43" kindref="member">pointer</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a33ce448509e9cc0d73861e4c1919c7a7" kindref="member">operator-&gt;</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1761"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>inequality.<sp/>True<sp/>if<sp/>iterators<sp/>reference<sp/>different<sp/>items.</highlight></codeline>
<codeline lineno="1762"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a6400b310a252360974600168cf9513f4" kindref="member">operator!= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">StridedMultiIterator</ref><sp/>&amp;rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1765"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>equality.<sp/>True<sp/>if<sp/>iterators<sp/>reference<sp/>the<sp/>same<sp/>items.</highlight></codeline>
<codeline lineno="1766"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1af78d1574e8cd2658337f33eecfa46726" kindref="member">operator== </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">StridedMultiIterator</ref><sp/>&amp;rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1769"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>less<sp/>than.</highlight></codeline>
<codeline lineno="1770"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a00c84a1d3758dc18ebcbe526d45ac905" kindref="member">operator&lt; </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">StridedMultiIterator</ref><sp/>&amp;rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1773"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>less<sp/>or<sp/>equal.</highlight></codeline>
<codeline lineno="1774"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1aab6344183c6b4eb596c3b113d7ea0934" kindref="member">operator&lt;= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">StridedMultiIterator</ref><sp/>&amp;rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1777"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>greater<sp/>than.</highlight></codeline>
<codeline lineno="1778"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad7fe75263cf91716f7b19bf388ae865e" kindref="member">operator&gt; </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">StridedMultiIterator</ref><sp/>&amp;rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1781"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>greater<sp/>or<sp/>equal.</highlight></codeline>
<codeline lineno="1782"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a6686d20a5b4bd307a68deb520910c114" kindref="member">operator&gt;= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">StridedMultiIterator</ref><sp/>&amp;rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1785"><highlight class="preprocessor"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1786"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>access<sp/>the<sp/>array<sp/>element<sp/>at<sp/>the<sp/>given<sp/>offset<sp/>in<sp/></highlight></codeline>
<codeline lineno="1787"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>current<sp/>dimension.</highlight></codeline>
<codeline lineno="1788"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1789" refid="classvigra_1_1StridedMultiIterator_1a12062603d65db28a259b3e5fb67dae01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1aabedc6031d7df619a0c453c558af87a0" kindref="member">reference</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a12062603d65db28a259b3e5fb67dae01" kindref="member">operator[] </ref>(<ref refid="classvigra_1_1StridedMultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1790"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;m_ptr<sp/>[n*<sp/>this-&gt;m_stride<sp/>[level]];</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1794"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>access<sp/>the<sp/>array<sp/>element<sp/>at<sp/>the<sp/>given<sp/>offset.</highlight></codeline>
<codeline lineno="1795"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1796" refid="classvigra_1_1StridedMultiIterator_1a1d202403bc765e6c831ddd325a73f182" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1aabedc6031d7df619a0c453c558af87a0" kindref="member">reference</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a12062603d65db28a259b3e5fb67dae01" kindref="member">operator[] </ref>(<ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">multi_difference_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1797"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;m_ptr<sp/>[total_stride(d.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>())];</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1801"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Return<sp/>the<sp/>(N-1)-dimensional<sp/>multi-iterator<sp/>that<sp/>points<sp/>to<sp/></highlight></codeline>
<codeline lineno="1802"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>first<sp/>(N-1)-dimensional<sp/>subarray<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="1803"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N-dimensional<sp/>array<sp/>this<sp/>iterator<sp/>is<sp/>referring<sp/>to.</highlight></codeline>
<codeline lineno="1804"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>result<sp/>is<sp/>only<sp/>valid<sp/>if<sp/>this<sp/>iterator<sp/>refers<sp/>to<sp/>location</highlight></codeline>
<codeline lineno="1805"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>in<sp/>&lt;em&gt;all&lt;/em&gt;<sp/>dimensions<sp/>below<sp/>its<sp/>current<sp/>dimension<sp/>N,</highlight></codeline>
<codeline lineno="1806"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherwise<sp/>it<sp/>is<sp/>undefined.<sp/>Usage:</highlight></codeline>
<codeline lineno="1807"><highlight class="comment"></highlight></codeline>
<codeline lineno="1808"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1809"><highlight class="comment"></highlight></codeline>
<codeline lineno="1810"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StridedMultiIterator&lt;2,<sp/>int&gt;<sp/>outer<sp/>=<sp/>...;<sp/><sp/>//<sp/>this<sp/>iterator</highlight></codeline>
<codeline lineno="1811"><highlight class="comment"></highlight></codeline>
<codeline lineno="1812"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StridedMultiIterator&lt;2,<sp/>int&gt;::next_type<sp/>inner<sp/>=<sp/>outer.begin();</highlight></codeline>
<codeline lineno="1813"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(;<sp/>inner<sp/>!=<sp/>outer.end();<sp/>++inner)</highlight></codeline>
<codeline lineno="1814"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1815"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>manipulate<sp/>current<sp/>1D<sp/>subimage</highlight></codeline>
<codeline lineno="1816"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1817"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1818"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1819" refid="classvigra_1_1StridedMultiIterator_1a75e403e20d59da5b177a169be9f5b64f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">next_type</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a75e403e20d59da5b177a169be9f5b64f" kindref="member">begin</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1820"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1824"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Return<sp/>the<sp/>(N-1)-dimensional<sp/>multi-iterator<sp/>that<sp/>points<sp/>beyond<sp/></highlight></codeline>
<codeline lineno="1825"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>last<sp/>(N-1)-dimensional<sp/>subarray<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="1826"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N-dimensional<sp/>array<sp/>this<sp/>iterator<sp/>is<sp/>referring<sp/>to.</highlight></codeline>
<codeline lineno="1827"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>result<sp/>is<sp/>only<sp/>valid<sp/>if<sp/>this<sp/>iterator<sp/>refers<sp/>to<sp/>location</highlight></codeline>
<codeline lineno="1828"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>in<sp/>&lt;em&gt;all&lt;/em&gt;<sp/>dimensions<sp/>below<sp/>its<sp/>current<sp/>dimension<sp/>N,</highlight></codeline>
<codeline lineno="1829"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherwise<sp/>it<sp/>is<sp/>undefined.</highlight></codeline>
<codeline lineno="1830"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1831" refid="classvigra_1_1StridedMultiIterator_1aad1c499882f522377548bbbb838070b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">next_type</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1aad1c499882f522377548bbbb838070b2" kindref="member">end</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1832"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">next_type</ref><sp/>ret<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/>this-&gt;m_shape<sp/>[level-1];</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1838"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Get<sp/>a<sp/>1-dimensional,<sp/>STL-compatible<sp/>iterator<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="1839"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>given<sp/>dimension,<sp/>pointing<sp/>to<sp/>the<sp/>current<sp/>element<sp/>of<sp/>&lt;TT&gt;this&lt;/TT&gt;.</highlight></codeline>
<codeline lineno="1840"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Usage:</highlight></codeline>
<codeline lineno="1841"><highlight class="comment"></highlight></codeline>
<codeline lineno="1842"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1843"><highlight class="comment"></highlight></codeline>
<codeline lineno="1844"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StridedMultiIterator&lt;3,<sp/>int&gt;<sp/>outer<sp/>=<sp/>...;<sp/><sp/>//<sp/>this<sp/>iterator</highlight></codeline>
<codeline lineno="1845"><highlight class="comment"></highlight></codeline>
<codeline lineno="1846"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StridedMultiIterator&lt;3,<sp/>int&gt;::iterator<sp/>i<sp/>=<sp/>outer.iteratorForDimension(1);</highlight></codeline>
<codeline lineno="1847"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StridedMultiIterator&lt;3,<sp/>int&gt;::iterator<sp/>end<sp/>=<sp/>i<sp/>+<sp/>height;</highlight></codeline>
<codeline lineno="1848"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(;<sp/>i<sp/>!=<sp/>end;<sp/>++i)</highlight></codeline>
<codeline lineno="1849"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1850"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>go<sp/>down<sp/>the<sp/>current<sp/>column<sp/>starting<sp/>at<sp/>the<sp/>location<sp/>of<sp/>&apos;outer&apos;</highlight></codeline>
<codeline lineno="1851"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1852"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1853"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1854" refid="classvigra_1_1StridedMultiIterator_1af30f8bf10df99b714dc60640997c4c92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a2fabb8a210750506234825958ca91556" kindref="member">iterator</ref><sp/><ref refid="classvigra_1_1StridedMultiIterator_1af30f8bf10df99b714dc60640997c4c92" kindref="member">iteratorForDimension</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1855"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra_precondition(d<sp/>&lt;=<sp/>level,</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;StridedMultiIterator&lt;N&gt;::iteratorForDimension(d):<sp/>d<sp/>&lt;<sp/>N<sp/>required&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedMultiIterator_1a2fabb8a210750506234825958ca91556" kindref="member">iterator</ref>(this-&gt;m_ptr,<sp/>stride_traits::shift(this-&gt;m_stride,<sp/>d),0);</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1860"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Return<sp/>the<sp/>multi-iterator<sp/>that<sp/>operates<sp/>on<sp/>dimension<sp/>K<sp/>in<sp/>order</highlight></codeline>
<codeline lineno="1861"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>manipulate<sp/>this<sp/>dimension<sp/>directly.<sp/>Usage:</highlight></codeline>
<codeline lineno="1862"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1863"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1864"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1865"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StridedMultiIterator&lt;3,<sp/>int&gt;<sp/>i3<sp/>=<sp/>...;</highlight></codeline>
<codeline lineno="1866"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1867"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i3.template<sp/>dim&lt;2&gt;()++;<sp/><sp/>//<sp/>increment<sp/>outer<sp/>dimension</highlight></codeline>
<codeline lineno="1868"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i3.template<sp/>dim&lt;0&gt;()++;<sp/><sp/>//<sp/>increment<sp/>inner<sp/>dimension</highlight></codeline>
<codeline lineno="1869"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1870"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1871"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>convenience,<sp/>the<sp/>same<sp/>functionality<sp/>is<sp/>also<sp/>available</highlight></codeline>
<codeline lineno="1872"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>as<sp/>&lt;tt&gt;dim0()&lt;/tt&gt;,<sp/>&lt;tt&gt;dim1()&lt;/tt&gt;<sp/>etc.<sp/>up<sp/>to<sp/>&lt;tt&gt;dim4()&lt;/tt&gt;:</highlight></codeline>
<codeline lineno="1873"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1874"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1875"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1876"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StridedMultiIterator&lt;3,<sp/>int&gt;<sp/>i3<sp/>=<sp/>...;</highlight></codeline>
<codeline lineno="1877"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1878"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i3.dim2()++;<sp/><sp/>//<sp/>increment<sp/>outer<sp/>dimension</highlight></codeline>
<codeline lineno="1879"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i3.dim0()++;<sp/><sp/>//<sp/>increment<sp/>inner<sp/>dimension</highlight></codeline>
<codeline lineno="1880"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1881"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>K&gt;</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">StridedMultiIterator&lt;K+1, T, REFERENCE, POINTER&gt;</ref><sp/>&amp;</highlight></codeline>
<codeline lineno="1884" refid="classvigra_1_1StridedMultiIterator_1abb290bbcb495161dbbb8fcc6f5f4dd04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1abb290bbcb495161dbbb8fcc6f5f4dd04" kindref="member">dim</ref>()</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator" kindref="compound" tooltip="A multi-dimensional hierarchical iterator to be used with vigra::MultiArrayView if it is not strided...">StridedMultiIterator&lt;1, T, REFERENCE, POINTER&gt;</ref><sp/>&amp;</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/>dim0()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedMultiIterator&lt;2,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;<sp/>&amp;</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/>dim1()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedMultiIterator&lt;3,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;<sp/>&amp;</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/>dim2()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedMultiIterator&lt;4,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;<sp/>&amp;</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/>dim3()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedMultiIterator&lt;5,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;<sp/>&amp;</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/>dim4()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"></highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedMultiIterator_1ad58401545d290ac6f3be9e2683e782c7" kindref="member">difference_type</ref><sp/></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/>total_stride(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>multi_difference_type::const_iterator<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1904"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d[level]*this-&gt;m_stride[level]<sp/>+<sp/>base_type::total_stride(d);</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"></highlight></codeline>
<codeline lineno="1908"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="normal"></highlight></codeline>
<codeline lineno="1913"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>K&gt;</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CoordinateToScanOrder</highlight></codeline>
<codeline lineno="1915"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/>exec(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TinyVector<sp/>&lt;MultiArrayIndex,<sp/>N&gt;<sp/>&amp;shape,</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TinyVector<sp/>&lt;MultiArrayIndex,<sp/>N&gt;<sp/>&amp;<sp/>coordinate)</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>coordinate[N-K]<sp/>+<sp/>shape[N-K]<sp/>*<sp/>CoordinateToScanOrder&lt;K-1&gt;::exec(shape,<sp/>coordinate);</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1923"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CoordinateToScanOrder&lt;1&gt;</highlight></codeline>
<codeline lineno="1927"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/>exec(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TinyVector<sp/>&lt;MultiArrayIndex,<sp/>N&gt;<sp/>&amp;<sp/></highlight><highlight class="comment">/*shape*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TinyVector<sp/>&lt;MultiArrayIndex,<sp/>N&gt;<sp/>&amp;<sp/>coordinate)</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>coordinate[N-1];</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1935"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"></highlight></codeline>
<codeline lineno="1937"><highlight class="normal"></highlight></codeline>
<codeline lineno="1938"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M&gt;</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">MoveToScanOrderIndex</highlight></codeline>
<codeline lineno="1940"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Shape,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Ptr&gt;</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/>exec(<ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>newIndex,<sp/>Shape<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>shape,</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Shape<sp/>&amp;<sp/>point,<sp/>Ptr<sp/>&amp;<sp/>p,<sp/>Shape<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>strides)</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>N<sp/>=<sp/>Shape::static_size<sp/>};</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>newPos<sp/>=<sp/>newIndex<sp/>%<sp/>shape[N-1-M];</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>(newPos<sp/>-<sp/>point[N-1-M])<sp/>*<sp/>strides[N-1-M];</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point[N-1-M]<sp/>=<sp/>newPos;</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MoveToScanOrderIndex&lt;M-1&gt;::exec(newIndex<sp/>/<sp/>shape[N-1-M],<sp/>shape,<sp/>point,<sp/>p,<sp/>strides);</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Shape,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Ptr1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Ptr2&gt;</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/>exec(<ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>newIndex,<sp/>Shape<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>shape,<sp/>Shape<sp/>&amp;<sp/>point,<sp/></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ptr1<sp/>&amp;<sp/>p1,<sp/>Shape<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>strides1,<sp/>Ptr2<sp/>&amp;<sp/>p2,<sp/>Shape<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>strides2)</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>N<sp/>=<sp/>Shape::static_size<sp/>};</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>newPos<sp/>=<sp/>newIndex<sp/>%<sp/>shape[N-1-M];</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1<sp/>+=<sp/>(newPos<sp/>-<sp/>point[N-1-M])<sp/>*<sp/>strides1[N-1-M];</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2<sp/>+=<sp/>(newPos<sp/>-<sp/>point[N-1-M])<sp/>*<sp/>strides2[N-1-M];</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point[N-1-M]<sp/>=<sp/>newPos;</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MoveToScanOrderIndex&lt;M-1&gt;::exec(newIndex<sp/>/<sp/>shape[N-1-M],<sp/>shape,<sp/>point,<sp/></highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1,<sp/>strides1,<sp/>p2,<sp/>strides2);</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1966"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"></highlight></codeline>
<codeline lineno="1968"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">MoveToScanOrderIndex&lt;0&gt;</highlight></codeline>
<codeline lineno="1970"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Shape,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Ptr&gt;</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/>exec(<ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>newIndex,<sp/>Shape<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>shape,</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Shape<sp/>&amp;<sp/>point,<sp/>Ptr<sp/>&amp;<sp/>p,<sp/>Shape<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>strides)</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>N<sp/>=<sp/>Shape::static_size<sp/>};<sp/></highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>newPos<sp/>=<sp/><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">std::min</ref>(newIndex,<sp/>shape[N-1]);</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>(newPos<sp/>-<sp/>point[N-1])<sp/>*<sp/>strides[N-1];</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point[N-1]<sp/>=<sp/>newPos;</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Shape,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Ptr1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Ptr2&gt;</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/>exec(<ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>newIndex,<sp/>Shape<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>shape,<sp/>Shape<sp/>&amp;<sp/>point,<sp/></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ptr1<sp/>&amp;<sp/>p1,<sp/>Shape<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>strides1,<sp/>Ptr2<sp/>&amp;<sp/>p2,<sp/>Shape<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>strides2)</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>N<sp/>=<sp/>Shape::static_size<sp/>};<sp/></highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>newPos<sp/>=<sp/><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">std::min</ref>(newIndex,<sp/>shape[N-1]);</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1<sp/>+=<sp/>(newPos<sp/>-<sp/>point[N-1])<sp/>*<sp/>strides1[N-1];</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2<sp/>+=<sp/>(newPos<sp/>-<sp/>point[N-1])<sp/>*<sp/>strides2[N-1];</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point[N-1]<sp/>=<sp/>newPos;</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1993"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"></highlight></codeline>
<codeline lineno="1995"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0<sp/>//<sp/>alternative<sp/>implementation,<sp/>may<sp/>be<sp/>faster<sp/>on<sp/>some<sp/>machines</highlight></codeline>
<codeline lineno="1996"><highlight class="preprocessor"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M&gt;</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">MoveToScanOrderIndex</highlight></codeline>
<codeline lineno="1998"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Shape,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Ptr&gt;</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/>exec(<ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>&amp;<sp/>newIndex,<sp/>Shape<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>shape,</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Shape<sp/>&amp;<sp/>point,<sp/>Ptr<sp/>&amp;<sp/>p,<sp/>Shape<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>strides,<sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>shapeStride<sp/>=<sp/>1)</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>N<sp/>=<sp/>Shape::static_size<sp/>};</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MoveToScanOrderIndex&lt;M-1&gt;::exec(newIndex,<sp/>shape,<sp/>point,<sp/>p,<sp/>strides,<sp/>shapeStride*shape[N-1-M]);</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>newPos<sp/>=<sp/>newIndex<sp/>/<sp/>shapeStride;</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>(newPos<sp/>-<sp/>point[N-1-M])<sp/>*<sp/>strides[N-1-M];</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point[N-1-M]<sp/>=<sp/>newPos;</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newIndex<sp/>%=<sp/>shapeStride;</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Shape,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Ptr1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Ptr2&gt;</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/>exec(<ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>&amp;<sp/>newIndex,<sp/>Shape<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>shape,<sp/>Shape<sp/>&amp;<sp/>point,<sp/></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ptr1<sp/>&amp;<sp/>p1,<sp/>Shape<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>strides1,<sp/>Ptr2<sp/>&amp;<sp/>p2,<sp/>Shape<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>strides2,<sp/></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>shapeStride<sp/>=<sp/>1)</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>N<sp/>=<sp/>Shape::static_size<sp/>};</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MoveToScanOrderIndex&lt;M-1&gt;::exec(newIndex,<sp/>shape,<sp/>point,<sp/></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1,<sp/>strides1,<sp/>p2,<sp/>strides2,<sp/>shapeStride*shape[N-1-M]);</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>newPos<sp/>=<sp/>newIndex<sp/>/<sp/>shapeStride;</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1<sp/>+=<sp/>(newPos<sp/>-<sp/>point[N-1-M])<sp/>*<sp/>strides1[N-1-M];</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2<sp/>+=<sp/>(newPos<sp/>-<sp/>point[N-1-M])<sp/>*<sp/>strides2[N-1-M];</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point[N-1-M]<sp/>=<sp/>newPos;</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newIndex<sp/>%=<sp/>shapeStride;</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2027"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"></highlight></codeline>
<codeline lineno="2029"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">MoveToScanOrderIndex&lt;0&gt;</highlight></codeline>
<codeline lineno="2031"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Shape,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Ptr&gt;</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/>exec(<ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>&amp;<sp/>newIndex,<sp/>Shape<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>shape,</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Shape<sp/>&amp;<sp/>point,<sp/>Ptr<sp/>&amp;<sp/>p,<sp/>Shape<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>strides,<sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>shapeStride)</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>N<sp/>=<sp/>Shape::static_size<sp/>};<sp/></highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>newPos<sp/>=<sp/>newIndex<sp/>/<sp/>shapeStride;</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>(newPos<sp/>-<sp/>point[N-1])<sp/>*<sp/>strides[N-1];</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point[N-1]<sp/>=<sp/>newPos;</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newIndex<sp/>%=<sp/>shapeStride;</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Shape,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Ptr1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Ptr2&gt;</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/>exec(<ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>&amp;<sp/>newIndex,<sp/>Shape<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>shape,<sp/>Shape<sp/>&amp;<sp/>point,<sp/></highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ptr1<sp/>&amp;<sp/>p1,<sp/>Shape<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>strides1,<sp/>Ptr2<sp/>&amp;<sp/>p2,<sp/>Shape<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>strides2,<sp/></highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>shapeStride)</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>N<sp/>=<sp/>Shape::static_size<sp/>};<sp/></highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>newPos<sp/>=<sp/>newIndex<sp/>/<sp/>shapeStride;</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1<sp/>+=<sp/>(newPos<sp/>-<sp/>point[N-1])<sp/>*<sp/>strides1[N-1];</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2<sp/>+=<sp/>(newPos<sp/>-<sp/>point[N-1])<sp/>*<sp/>strides2[N-1];</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point[N-1]<sp/>=<sp/>newPos;</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newIndex<sp/>%=<sp/>shapeStride;</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2057"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2059"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2060"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2062"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>\brief<sp/>Sequential<sp/>iterator<sp/>for<sp/>MultiArrayView.</highlight></codeline>
<codeline lineno="2063"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2064"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>iterator<sp/>provides<sp/>STL-compatible<sp/>random<sp/>access<sp/>iterator<sp/>functionality<sp/>for<sp/>arbitrary<sp/></highlight></codeline>
<codeline lineno="2065"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\ref<sp/>MultiArrayView<sp/>instances,<sp/>regardless<sp/>of<sp/>their<sp/>shapes<sp/>and<sp/>strides.<sp/>The</highlight></codeline>
<codeline lineno="2066"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>uses<sp/>an<sp/>implementation<sp/>that<sp/>minimizes<sp/>speed<sp/>penalties<sp/>that<sp/>could<sp/>result<sp/>from<sp/></highlight></codeline>
<codeline lineno="2067"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>non-trivial<sp/>strides.<sp/>The<sp/>&lt;i&gt;scan-order&lt;/i&gt;<sp/>is<sp/>defined<sp/>such<sp/>that<sp/>dimensions<sp/>are<sp/>iterated<sp/></highlight></codeline>
<codeline lineno="2068"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>front<sp/>to<sp/>back<sp/>(first<sp/>to<sp/>last).</highlight></codeline>
<codeline lineno="2069"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2070"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>You<sp/>normally<sp/>construct<sp/>instances<sp/>of<sp/>this<sp/>class<sp/>by<sp/>calling<sp/>\ref<sp/>MultiArrayView::begin()<sp/></highlight></codeline>
<codeline lineno="2071"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>\ref<sp/>MultiArrayView::end().<sp/></highlight></codeline>
<codeline lineno="2072"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2073"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>iterator<sp/>supports<sp/>all<sp/>functions<sp/>listed<sp/>in<sp/>the<sp/>STL<sp/>documentation<sp/>for<sp/></highlight></codeline>
<codeline lineno="2074"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;a<sp/>href=&quot;http://www.sgi.com/tech/stl/RandomAccessIterator.html&quot;&gt;Random<sp/>Access<sp/>Iterators&lt;/a&gt;.</highlight></codeline>
<codeline lineno="2075"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2076"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>REFERENCE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>POINTER,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M<sp/>=<sp/>N&gt;</highlight></codeline>
<codeline lineno="2077" refid="classvigra_1_1StridedScanOrderIterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1StridedScanOrderIterator" kindref="compound" tooltip="Sequential iterator for MultiArrayView.">StridedScanOrderIterator</ref></highlight></codeline>
<codeline lineno="2078"><highlight class="normal">#ifndef<sp/>DOXYGEN<sp/><sp/></highlight><highlight class="comment">//<sp/>doxygen<sp/>doesn&apos;t<sp/>understand<sp/>this<sp/>inheritance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2079"><highlight class="normal">:<sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedScanOrderIterator" kindref="compound" tooltip="Sequential iterator for MultiArrayView.">StridedScanOrderIterator</ref>&lt;N,<sp/>T,<sp/>REFERENCE,<sp/>POINTER,<sp/>M-1&gt;</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="2081"><highlight class="preprocessor"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedScanOrderIterator" kindref="compound" tooltip="Sequential iterator for MultiArrayView.">StridedScanOrderIterator</ref>&lt;N,<sp/>T,<sp/>REFERENCE,<sp/>POINTER,<sp/>M-1&gt;<sp/><ref refid="classvigra_1_1StridedScanOrderIterator" kindref="compound" tooltip="Sequential iterator for MultiArrayView.">base_type</ref>;</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>level<sp/>=<sp/>M-1<sp/>};</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"></highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>base_type::value_type<sp/>value_type;</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>base_type::pointer<sp/>pointer;</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>base_type::reference<sp/>reference;</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>base_type::const_reference<sp/>const_reference;</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>base_type::shape_type<sp/>shape_type;</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>MultiIteratorStrideTraits&lt;POINTER&gt;<sp/>stride_traits;</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>stride_traits::stride_type<sp/>difference_type;</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>stride_traits::stride_array_type<sp/>difference_array_type;</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedScanOrderIterator" kindref="compound" tooltip="Sequential iterator for MultiArrayView.">StridedScanOrderIterator</ref><sp/><ref refid="classvigra_1_1StridedScanOrderIterator" kindref="compound" tooltip="Sequential iterator for MultiArrayView.">iterator</ref>;</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::random_access_iterator_tag<sp/>iterator_category;</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedScanOrderIterator" kindref="compound" tooltip="Sequential iterator for MultiArrayView.">StridedScanOrderIterator</ref>()</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedScanOrderIterator" kindref="compound" tooltip="Sequential iterator for MultiArrayView.">StridedScanOrderIterator</ref>(pointer<sp/>i,<sp/></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>shape,<sp/>shape_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>strides)</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1StridedScanOrderIterator" kindref="compound" tooltip="Sequential iterator for MultiArrayView.">base_type</ref>(i,<sp/>shape,<sp/>strides)</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"></highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedScanOrderIterator" kindref="compound" tooltip="Sequential iterator for MultiArrayView.">StridedScanOrderIterator</ref><sp/>&amp;<sp/>operator++()</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_type::operator++();</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;point_[level-1]<sp/>==<sp/>this-&gt;shape_[level-1])<sp/></highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_type::reset();</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;i_<sp/>+=<sp/>this-&gt;strides_[level];</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++this-&gt;point_[level];</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"></highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedScanOrderIterator" kindref="compound" tooltip="Sequential iterator for MultiArrayView.">StridedScanOrderIterator</ref><sp/>operator++(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedScanOrderIterator" kindref="compound" tooltip="Sequential iterator for MultiArrayView.">StridedScanOrderIterator</ref><sp/>res(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"></highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedScanOrderIterator" kindref="compound" tooltip="Sequential iterator for MultiArrayView.">StridedScanOrderIterator</ref><sp/>&amp;<sp/>operator+=(<ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>i)</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;moveToScanOrderIndex(this-&gt;index_+i);</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2131"><highlight class="comment"><sp/><sp/><sp/><sp/>//!<sp/>overload<sp/>to<sp/>add<sp/>a<sp/>coord-tuple:</highlight></codeline>
<codeline lineno="2132"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>should<sp/>be<sp/>cheaper<sp/>because<sp/>the<sp/>modulo-divisions<sp/>are<sp/>avoided</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2133" refid="classvigra_1_1StridedScanOrderIterator_1a78e189fbc36cab2d60aff960064f3e4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedScanOrderIterator" kindref="compound" tooltip="Sequential iterator for MultiArrayView.">StridedScanOrderIterator</ref><sp/>&amp;<sp/>operator+=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>shape_type<sp/>&amp;coordOffset)</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;moveRelative(<ref refid="group__RGBValueOperators_1gaabe9d910ba7a54cbf606254a81e409e6" kindref="member" tooltip="dot product">dot</ref>(coordOffset,this-&gt;strides_),</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::CoordinateToScanOrder&lt;N&gt;::exec(this-&gt;shape_,<sp/>coordOffset),</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coordOffset);</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedScanOrderIterator" kindref="compound" tooltip="Sequential iterator for MultiArrayView.">StridedScanOrderIterator</ref><sp/>&amp;<sp/>operator-=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>shape_type<sp/>&amp;coordOffset)</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>operator+=(-coordOffset);</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"></highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedScanOrderIterator<sp/>&amp;<sp/>operator--()</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_type::operator--();</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;point_[level-1]<sp/>==<sp/>-1)<sp/></highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_type::inverseReset();</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;i_<sp/>-=<sp/>this-&gt;strides_[level];</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--this-&gt;point_[level];</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"></highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedScanOrderIterator<sp/>operator--(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StridedScanOrderIterator<sp/>res(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"></highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedScanOrderIterator<sp/>&amp;<sp/>operator-=(<ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>i)</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>operator+=(-i);</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedScanOrderIterator<sp/>getEndIterator()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2170"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StridedScanOrderIterator<sp/>res(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.moveToScanOrderIndex(<ref refid="group__TinyVectorOperators_1gaa49e08e69b54385f9434ffe32a32f299" kindref="member" tooltip="product of the vector&amp;#39;s elements">prod</ref>(this-&gt;shape_));</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"></highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>atBorder()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2177"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base_type::atBorder()<sp/>||<sp/></highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;point_[level]<sp/>==<sp/>0<sp/>||<sp/></highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;point_[level]<sp/>==<sp/>this-&gt;shape_[level]<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>neighborhoodType()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2184"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>base_type::neighborhoodType();</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;point_[level]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>2*level);</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;point_[level]<sp/>==<sp/>this-&gt;shape_[level]-1)</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>|=<sp/>(2<sp/>&lt;&lt;<sp/>2*level);</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedScanOrderIterator<sp/>operator+(<ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2194"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StridedScanOrderIterator(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>+=<sp/>d;</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"></highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedScanOrderIterator<sp/>operator-(<ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2199"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StridedScanOrderIterator(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>-=<sp/>d;</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"></highlight></codeline>
<codeline lineno="2203"><highlight class="normal"></highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedScanOrderIterator<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>shape_type<sp/>&amp;coordOffset)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2205"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StridedScanOrderIterator(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>+=<sp/>coordOffset;</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"></highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedScanOrderIterator<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>shape_type<sp/>&amp;coordOffset)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2210"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StridedScanOrderIterator(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>-=<sp/>coordOffset;</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"></highlight></codeline>
<codeline lineno="2214"><highlight class="normal"></highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>operator-(StridedScanOrderIterator<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2217"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base_type::operator-(r);</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"></highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(StridedScanOrderIterator<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base_type::operator==(r);</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(StridedScanOrderIterator<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2227"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base_type::operator!=(r);</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"></highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;(StridedScanOrderIterator<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2232"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base_type::operator&lt;(r);</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"></highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;=(StridedScanOrderIterator<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2237"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base_type::operator&lt;=(r);</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"></highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&gt;(StridedScanOrderIterator<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2242"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base_type::operator&gt;(r);</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"></highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&gt;=(StridedScanOrderIterator<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2247"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base_type::operator&gt;=(r);</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"></highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>base_type::point;</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>base_type::shape;</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>base_type::strides;</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>base_type::ptr;</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>base_type::index;</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>base_type::operator*;</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>base_type::operator-&gt;;</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>base_type::operator[];</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"></highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset()</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;i_<sp/>-=<sp/>this-&gt;shape_[level]*this-&gt;strides_[level];</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;point_[level]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"></highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>inverseReset()</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;i_<sp/>+=<sp/>this-&gt;shape_[level]*this-&gt;strides_[level];</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;point_[level]<sp/>=<sp/>this-&gt;shape_[level]-1;</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Ptr&gt;</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>increment(Ptr<sp/>&amp;<sp/>p2,<sp/>shape_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>strides2)</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_type::increment(p2,<sp/>strides2);</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;point_[level-1]<sp/>==<sp/>this-&gt;shape_[level-1])<sp/></highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_type::reset();</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;i_<sp/>+=<sp/>this-&gt;strides_[level];</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2<sp/>+=<sp/>strides2[level]<sp/>-<sp/>this-&gt;shape_[level-1]*strides2[level-1];</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++this-&gt;point_[level];</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Ptr&gt;</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decrement(Ptr<sp/>&amp;<sp/>p2,<sp/>shape_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>strides2)</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_type::decrement(p2,<sp/>strides2);</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;point_[level-1]<sp/>==<sp/>-1)<sp/></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_type::inverseReset();</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;i_<sp/>-=<sp/>this-&gt;strides_[level];</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2<sp/>-=<sp/>strides2[level]<sp/>-<sp/>this-&gt;shape_[level-1]*strides2[level-1];</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--this-&gt;point_[level];</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedScanOrderIterator<sp/>&amp;<sp/>moveRelative(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>&amp;pointerOffset,</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>&amp;indexOffset,</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>shape_type<sp/>&amp;coordOffset)</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_type::moveRelative(pointerOffset,<sp/>indexOffset,<sp/>coordOffset);</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;point_[level]<sp/>+=<sp/>coordOffset[level];</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2306"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"></highlight></codeline>
<codeline lineno="2308"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>REFERENCE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>POINTER&gt;</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StridedScanOrderIterator&lt;N,<sp/>T,<sp/>REFERENCE,<sp/>POINTER,<sp/>1&gt;</highlight></codeline>
<codeline lineno="2310"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>level<sp/>=<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"></highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"></highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/>value_type;</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>POINTER<sp/>pointer;</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>const_pointer;</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>REFERENCE<sp/>reference;</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>const_reference;</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MultiArrayShape&lt;N&gt;::type<sp/>shape_type;</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>MultiIteratorStrideTraits&lt;POINTER&gt;<sp/>stride_traits;</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>stride_traits::stride_type<sp/>difference_type;</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>stride_traits::stride_array_type<sp/>difference_array_type;</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>StridedScanOrderIterator<sp/>iterator;</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::random_access_iterator_tag<sp/>iterator_category;</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"></highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedScanOrderIterator()</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>i_((pointer)0),</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index_(0)</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedScanOrderIterator(pointer<sp/>i,<sp/></highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>shape,<sp/>shape_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>strides)</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>i_(i),</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shape_(shape),</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strides_(strides),</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index_(0)</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"></highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedScanOrderIterator<sp/>&amp;<sp/>operator++()</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i_<sp/>+=<sp/>strides_[level];</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++point_[level];</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++index_;</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"></highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedScanOrderIterator<sp/>operator++(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StridedScanOrderIterator<sp/>res(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"></highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedScanOrderIterator<sp/>&amp;<sp/>operator+=(<ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>i)</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;moveToScanOrderIndex(index_+i);</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2361"><highlight class="comment"><sp/><sp/><sp/><sp/>//!<sp/>overload<sp/>to<sp/>add<sp/>a<sp/>coord-tuple:</highlight></codeline>
<codeline lineno="2362"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>StridedScanOrderIterator<sp/>&amp;<sp/>operator+=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>shape_type<sp/>&amp;coordOffset)</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;moveRelative(<ref refid="group__RGBValueOperators_1gaabe9d910ba7a54cbf606254a81e409e6" kindref="member" tooltip="dot product">dot</ref>(coordOffset,strides_),<sp/></highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::CoordinateToScanOrder&lt;N&gt;::exec(shape_,<sp/>coordOffset),</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coordOffset);</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"></highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedScanOrderIterator<sp/>&amp;<sp/>operator-=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>shape_type<sp/>&amp;coordOffset)</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>operator+=(-coordOffset);</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"></highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedScanOrderIterator<sp/>&amp;<sp/>operator--()</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i_<sp/>-=<sp/>strides_[level];</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--point_[level];</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--index_;</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"></highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedScanOrderIterator<sp/>operator--(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StridedScanOrderIterator<sp/>res(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"></highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedScanOrderIterator<sp/>&amp;<sp/>operator-=(<ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>i)</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>operator+=(-i);</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/>reference<sp/>operator*()</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*i_;</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"></highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/>const_reference<sp/>operator*()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2401"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*i_;</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/>pointer<sp/>operator-&gt;()</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i_;</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"></highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/>const_pointer<sp/>operator-&gt;()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2411"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i_;</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"></highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/>pointer<sp/>ptr()</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i_;</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"></highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/>const_pointer<sp/>ptr()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2421"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i_;</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"></highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/>reference<sp/>operator[](<ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>i)</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StridedScanOrderIterator<sp/>t(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.moveToScanOrderIndex(index_+i);</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*t;</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"></highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/>const_reference<sp/>operator[](<ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2433"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StridedScanOrderIterator<sp/>t(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.moveToScanOrderIndex(index_+i);</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*t;</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"></highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedScanOrderIterator</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/>operator+(<ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2441"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StridedScanOrderIterator(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>+=<sp/>d;</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"></highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedScanOrderIterator</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/>operator-(<ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2447"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StridedScanOrderIterator(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>-=<sp/>d;</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"></highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedScanOrderIterator<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>shape_type<sp/>&amp;coordOffset)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2452"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StridedScanOrderIterator(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>+=<sp/>coordOffset;</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"></highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedScanOrderIterator<sp/>operator-(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>shape_type<sp/>&amp;coordOffset)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2457"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>StridedScanOrderIterator(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>-=<sp/>coordOffset;</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref></highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/>operator-(StridedScanOrderIterator<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2463"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index()<sp/>-<sp/>r.index();</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"></highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/>operator==(StridedScanOrderIterator<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index()<sp/>==<sp/>r.index();</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"></highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/>operator!=(StridedScanOrderIterator<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2475"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index()<sp/>!=<sp/>r.index();</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"></highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/>operator&lt;(StridedScanOrderIterator<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2481"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index()<sp/>&lt;<sp/>r.index();</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"></highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/>operator&lt;=(StridedScanOrderIterator<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2487"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index()<sp/>&lt;=<sp/>r.index();</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"></highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/>operator&gt;(StridedScanOrderIterator<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2493"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index()<sp/>&gt;<sp/>r.index();</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"></highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/>operator&gt;=(StridedScanOrderIterator<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>r)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2499"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index()<sp/>&gt;=<sp/>r.index();</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"></highlight></codeline>
<codeline lineno="2503"><highlight class="normal"></highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>atBorder()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2505"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>point_[level]<sp/>==<sp/>0<sp/>||<sp/>point_[level]<sp/>==<sp/>shape_[level]<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>index()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2510"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index_;</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/>shape_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>point()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2515"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>point_;</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/>shape_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>shape()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2520"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shape_;</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/>shape_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>strides()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2525"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strides_;</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedScanOrderIterator<sp/>getEndIterator()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2530"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StridedScanOrderIterator<sp/>res(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.moveToScanOrderIndex(<ref refid="group__TinyVectorOperators_1gaa49e08e69b54385f9434ffe32a32f299" kindref="member" tooltip="product of the vector&amp;#39;s elements">prod</ref>(shape_));</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>neighborhoodType()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2537"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;point_[level]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>|=<sp/>1;</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;point_[level]<sp/>==<sp/>this-&gt;shape_[level]-1)</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>|=<sp/>2;</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"></highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset()</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i_<sp/>-=<sp/>shape_[level]*strides_[level];</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point_[level]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>inverseReset()</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i_<sp/>+=<sp/>shape_[level]*strides_[level];</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point_[level]<sp/>=<sp/>shape_[level]<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>moveToScanOrderIndex(<ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>newIndex)</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_<sp/>=<sp/>newIndex;</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::MoveToScanOrderIndex&lt;N-1&gt;::exec(newIndex,<sp/>shape_,<sp/>point_,<sp/>i_,<sp/>strides_);</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Ptr&gt;</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>increment(Ptr<sp/>&amp;<sp/>p2,<sp/>shape_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>strides2)</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator++();</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2<sp/>+=<sp/>strides2[level];</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Ptr&gt;</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decrement(Ptr<sp/>&amp;<sp/>p2,<sp/>shape_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>strides2)</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator--();</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2<sp/>-=<sp/>strides2[level];</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Ptr&gt;</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>moveToScanOrderIndex(<ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>newIndex,<sp/>Ptr<sp/>&amp;<sp/>p2,<sp/>shape_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>strides2)</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_<sp/>=<sp/>newIndex;</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::MoveToScanOrderIndex&lt;N-1&gt;::exec(newIndex,<sp/>shape_,<sp/>point_,<sp/>i_,<sp/>strides_,<sp/>p2,<sp/>strides2);</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"></highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedScanOrderIterator<sp/>&amp;<sp/>moveRelative(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>&amp;pointerOffset,</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>&amp;indexOffset,</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>shape_type<sp/>&amp;coordOffset)</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point_[level]<sp/>+=<sp/>coordOffset[level];</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"></highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_+=<sp/>indexOffset;</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i_<sp/>+=<sp/>pointerOffset;</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"></highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/>pointer<sp/>i_;</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/>shape_type<sp/>point_,<sp/>shape_,<sp/>strides_;</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>index_;</highlight></codeline>
<codeline lineno="2601"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"></highlight></codeline>
<codeline lineno="2603"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2604"><highlight class="comment">//@}</highlight></codeline>
<codeline lineno="2605"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2606"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>vigra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2607"><highlight class="normal"></highlight></codeline>
<codeline lineno="2608"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>VIGRA_MULTI_ITERATOR_HXX</highlight></codeline>
    </programlisting>
    <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_iterator.hxx"/>
  </compounddef>
</doxygen>
