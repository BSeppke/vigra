<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="classvigra_1_1IteratorAdaptor" kind="class" prot="public">
    <compoundname>vigra::IteratorAdaptor</compoundname>
    <includes refid="iteratoradapter_8hxx" local="no">vigra/iteratoradapter.hxx</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>Policy</declname>
        <defname>Policy</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classvigra_1_1IteratorAdaptor_1a93f03be85968052bc51620273f0e57a5" prot="public" static="no">
        <type>Policy::BaseType</type>
        <definition>typedef Policy::BaseType BaseType</definition>
        <argsstring></argsstring>
        <name>BaseType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="152" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1IteratorAdaptor_1a4544cbdd116b81c15c86c7940a74bf1e" prot="public" static="no">
        <type>Policy::difference_type</type>
        <definition>typedef Policy::difference_type difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="154" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1IteratorAdaptor_1a785b582c850c5ce37631a079f4c79f2a" prot="public" static="no">
        <type>Policy::index_reference</type>
        <definition>typedef Policy::index_reference index_reference</definition>
        <argsstring></argsstring>
        <name>index_reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="156" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1IteratorAdaptor_1a74b25df30127e6aaba7ce8c2792a168f" prot="public" static="no">
        <type>Policy::iterator_category</type>
        <definition>typedef Policy::iterator_category iterator_category</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="158" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1IteratorAdaptor_1a06e6574a5e6f5940636394cff80a7f6e" prot="public" static="no">
        <type>Policy::pointer</type>
        <definition>typedef Policy::pointer pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="157" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1IteratorAdaptor_1aa693fca059142b1ae8f956df279a3e68" prot="public" static="no">
        <type>Policy::reference</type>
        <definition>typedef Policy::reference reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="155" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1IteratorAdaptor_1a838e1b7a78be5a86a7412a267356d01a" prot="public" static="no">
        <type>Policy::value_type</type>
        <definition>typedef Policy::value_type value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="153" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="153" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classvigra_1_1IteratorAdaptor_1a5ea3956b97c908e50c98fb5d7dd09ded" prot="protected" static="no" mutable="no">
        <type>BaseType</type>
        <definition>BaseType adaptee_</definition>
        <argsstring></argsstring>
        <name>adaptee_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="296" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="296" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvigra_1_1IteratorAdaptor_1a0c637e38d8ea641286bf567bd0ded5fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>IteratorAdaptor</definition>
        <argsstring>()</argsstring>
        <name>IteratorAdaptor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="162" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="160" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1IteratorAdaptor_1a4508aff81c9d94e0a3c317068f7fd4fc" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>IteratorAdaptor</definition>
        <argsstring>(BaseType const &amp;o)</argsstring>
        <name>IteratorAdaptor</name>
        <param>
          <type>BaseType const &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct from an instance of the policy class&apos; BaseType Note that the functions of the adaptor implement the interface of an random access iterator as defined in the C++ standard, so there is no need for explicit documentation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="171" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="169" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1IteratorAdaptor_1ad59f0d52885adf26ebd61b865c83c652" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>IteratorAdaptor</definition>
        <argsstring>(IteratorAdaptor const &amp;o)</argsstring>
        <name>IteratorAdaptor</name>
        <param>
          <type><ref refid="classvigra_1_1IteratorAdaptor" kindref="compound">IteratorAdaptor</ref> const &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="177" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="175" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1IteratorAdaptor_1a90f87ced8eb5909d1fc421b48bd6a762" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(IteratorAdaptor const &amp;o) const </argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="classvigra_1_1IteratorAdaptor" kindref="compound">IteratorAdaptor</ref> const &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="250" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="249" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1IteratorAdaptor_1aa149c2249879e7727f33688b76bf2c99" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference operator*</definition>
        <argsstring>() const </argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="280" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="279" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1IteratorAdaptor_1a02069e21fcf9b5ac0c1c1e7b4874fad7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1IteratorAdaptor" kindref="compound">IteratorAdaptor</ref></type>
        <definition>IteratorAdaptor operator+</definition>
        <argsstring>(difference_type d) const </argsstring>
        <name>operator+</name>
        <param>
          <type>difference_type</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="203" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="202" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1IteratorAdaptor_1abec89989ac75e498eb812fe4a35ac46d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1IteratorAdaptor" kindref="compound">IteratorAdaptor</ref> &amp;</type>
        <definition>IteratorAdaptor&amp; operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="219" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="218" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1IteratorAdaptor_1a7978ebd178d8545d158e71ac8b11d820" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1IteratorAdaptor" kindref="compound">IteratorAdaptor</ref></type>
        <definition>IteratorAdaptor operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="225" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="224" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1IteratorAdaptor_1a90e86a09362b1a814b7da0f65232bcf7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1IteratorAdaptor" kindref="compound">IteratorAdaptor</ref> &amp;</type>
        <definition>IteratorAdaptor&amp; operator+=</definition>
        <argsstring>(difference_type d)</argsstring>
        <name>operator+=</name>
        <param>
          <type>difference_type</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="197" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="196" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1IteratorAdaptor_1aa4a56b5b466d67f72460537f3c704969" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1IteratorAdaptor" kindref="compound">IteratorAdaptor</ref></type>
        <definition>IteratorAdaptor operator-</definition>
        <argsstring>(difference_type d) const </argsstring>
        <name>operator-</name>
        <param>
          <type>difference_type</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="214" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="213" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1IteratorAdaptor_1a6c7f7031e56480a7a18980001cb93606" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>difference_type</type>
        <definition>difference_type operator-</definition>
        <argsstring>(IteratorAdaptor const &amp;o) const </argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="classvigra_1_1IteratorAdaptor" kindref="compound">IteratorAdaptor</ref> const &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="275" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="274" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1IteratorAdaptor_1a5932325c7e528396aa156132e0b03ad8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1IteratorAdaptor" kindref="compound">IteratorAdaptor</ref> &amp;</type>
        <definition>IteratorAdaptor&amp; operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="232" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="231" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1IteratorAdaptor_1a0616e27770a50fde0932c392864bcd94" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1IteratorAdaptor" kindref="compound">IteratorAdaptor</ref></type>
        <definition>IteratorAdaptor operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="238" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="237" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1IteratorAdaptor_1a12191ffda322cca23feed17c3eb72e9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1IteratorAdaptor" kindref="compound">IteratorAdaptor</ref> &amp;</type>
        <definition>IteratorAdaptor&amp; operator-=</definition>
        <argsstring>(difference_type d)</argsstring>
        <name>operator-=</name>
        <param>
          <type>difference_type</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="208" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="207" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1IteratorAdaptor_1a33ce448509e9cc0d73861e4c1919c7a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>pointer</type>
        <definition>pointer operator-&gt;</definition>
        <argsstring>() const </argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="290" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="289" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1IteratorAdaptor_1acdefaa586e8ab5d628f0dfe8dde96f0b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(IteratorAdaptor const &amp;o) const </argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="classvigra_1_1IteratorAdaptor" kindref="compound">IteratorAdaptor</ref> const &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="255" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="254" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1IteratorAdaptor_1a79ff95a0d7c5011594891e9e79679ca3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(IteratorAdaptor const &amp;o) const </argsstring>
        <name>operator&lt;=</name>
        <param>
          <type><ref refid="classvigra_1_1IteratorAdaptor" kindref="compound">IteratorAdaptor</ref> const &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="260" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="259" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1IteratorAdaptor_1a145c74c20078acf0491ac416b8795dae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1IteratorAdaptor" kindref="compound">IteratorAdaptor</ref> &amp;</type>
        <definition>IteratorAdaptor&amp; operator=</definition>
        <argsstring>(BaseType const &amp;o)</argsstring>
        <name>operator=</name>
        <param>
          <type>BaseType const &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="180" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="179" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1IteratorAdaptor_1a4eb2f9e7080af26c530ebe21a529bf56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1IteratorAdaptor" kindref="compound">IteratorAdaptor</ref> &amp;</type>
        <definition>IteratorAdaptor&amp; operator=</definition>
        <argsstring>(IteratorAdaptor const &amp;o)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classvigra_1_1IteratorAdaptor" kindref="compound">IteratorAdaptor</ref> const &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="190" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="189" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1IteratorAdaptor_1a579c7808f645bdf05e4b22ee2a078667" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(IteratorAdaptor const &amp;o) const </argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="classvigra_1_1IteratorAdaptor" kindref="compound">IteratorAdaptor</ref> const &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="245" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="244" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1IteratorAdaptor_1a423de2b8ccde1b1792d60cdbc85c54bd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(IteratorAdaptor const &amp;o) const </argsstring>
        <name>operator&gt;</name>
        <param>
          <type><ref refid="classvigra_1_1IteratorAdaptor" kindref="compound">IteratorAdaptor</ref> const &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="265" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="264" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1IteratorAdaptor_1a689b2ef36268e878ef05f705d128bfa5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(IteratorAdaptor const &amp;o) const </argsstring>
        <name>operator&gt;=</name>
        <param>
          <type><ref refid="classvigra_1_1IteratorAdaptor" kindref="compound">IteratorAdaptor</ref> const &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="270" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="269" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1IteratorAdaptor_1a2f1b4e51938edae47e2317f7635e6c08" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>index_reference</type>
        <definition>index_reference operator[]</definition>
        <argsstring>(difference_type d) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>difference_type</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="285" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="284" bodyend="287"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Quickly create 1-dimensional iterator adapters. </para>    </briefdescription>
    <detaileddescription>
<para>This class supports the easy creation of 1D iterator adapters out of existing iterators. To use it, you must first implement a policy class that defines the iterator&apos;s behavior. The policy is used to instantiate the IteratorAdapter template, which thus automatically obtains all required functions of an STL-compatible iterator. General information on how this works can be found on the <ulink url="http://www.boost.org/libs/utility/iterator_adaptors.htm">Boost Iterator Adaptor</ulink> page, although there are some differences in the details of the boost and VIGRA implementations. Here is an example policy class that just exports the behaviour of the underlying iterator:</para><para><programlisting><codeline><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Iterator&gt;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TrivialIteratorAdaptorPolicy</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>underlying<sp/>iterator</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Iterator<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BaseType;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>adaptor&apos;s<sp/>value<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Iterator::value_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_type;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>adaptor&apos;s<sp/>difference<sp/>type<sp/>(result<sp/>of<sp/>&apos;iter1<sp/>-<sp/>iter2&apos;,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argument<sp/>of<sp/>&apos;iter[n]&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Iterator::difference_type<sp/><sp/><sp/><sp/><sp/>difference_type;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>adaptor&apos;s<sp/>reference<sp/>type<sp/>(result<sp/>of<sp/>&apos;*iter&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Iterator::reference<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reference;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>adaptor&apos;s<sp/>index_reference<sp/>type<sp/>(result<sp/>of<sp/>&apos;iter[n]&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Iterator::index_reference<sp/><sp/><sp/><sp/><sp/>index_reference;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>adaptor&apos;s<sp/>pointer<sp/>type<sp/>(result<sp/>of<sp/>&apos;iter.operator-&gt;()&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Iterator::pointer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>adaptor&apos;s<sp/>iterator<sp/>category</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Iterator::iterator_category<sp/><sp/><sp/>iterator_category;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>some<sp/>additional<sp/>initialization<sp/>in<sp/>the<sp/>adaptor&apos;s<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initialize(BaseType<sp/>&amp;<sp/>d)<sp/>{}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>called<sp/>by<sp/>&apos;*iter&apos;,<sp/>&apos;iter-&gt;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>reference<sp/>dereference(BaseType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*d;<sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>called<sp/>by<sp/>&apos;iter[n]&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>index_reference<sp/>dereference(BaseType<sp/>d,<sp/>difference_type<sp/>n)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d[n];<sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>called<sp/>by<sp/>&apos;iter1<sp/>==<sp/>iter2&apos;,<sp/>&apos;iter1<sp/>!=<sp/>iter2&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>equal(BaseType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d1,<sp/>BaseType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d2)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d1<sp/>==<sp/>d2;<sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>called<sp/>by<sp/>&apos;iter1<sp/>&lt;<sp/>iter2&apos;,<sp/>&apos;iter1<sp/>&lt;=<sp/>iter2&apos;,<sp/>&apos;iter1<sp/>&gt;<sp/>iter2&apos;,<sp/>&apos;iter1<sp/>&gt;=<sp/>iter2&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>less(BaseType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d1,<sp/>BaseType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d2)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d1<sp/>&lt;<sp/>d2;<sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>called<sp/>by<sp/>&apos;iter1<sp/>-<sp/>iter2&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>difference_type<sp/>difference(BaseType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d1,<sp/>BaseType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d2)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d1<sp/>-<sp/>d2;<sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>called<sp/>by<sp/>&apos;++iter&apos;,<sp/>&apos;iter++&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>increment(BaseType<sp/>&amp;<sp/>d)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>++d;<sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>called<sp/>by<sp/>&apos;--iter&apos;,<sp/>&apos;iter--&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decrement(BaseType<sp/>&amp;<sp/>d)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>--d;<sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>called<sp/>by<sp/>&apos;iter<sp/>+=<sp/>n&apos;,<sp/>&apos;iter<sp/>-=<sp/>n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>advance(BaseType<sp/>&amp;<sp/>d,<sp/>difference_type<sp/>n)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>d<sp/>+=<sp/>n;<sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting></para><para>This policy class is used like this:</para><para><programlisting><codeline><highlight class="normal">SomeIterator<sp/>iter<sp/>=<sp/>...;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="classvigra_1_1IteratorAdaptor" kindref="compound" tooltip="Quickly create 1-dimensional iterator adapters.">vigra::IteratorAdaptor&lt;vigra::TrivialIteratorAdaptorPolicy&lt;SomeIterator&gt;</ref><sp/>&gt;<sp/>iter_adaptor(iter);</highlight></codeline>
</programlisting></para><para>By changing the definition of the policy members, a wide range of adaptor behaviors can be achieved. If the base iterator isn&apos;t a random access iterator, just drop the functions that cannot be implemented. This simply means that some adaptor functions may not be called, as one would expect from an iterator that doesn&apos;t support random access. Note also that the <computeroutput>BaseType</computeroutput> needs not be an iterator - it can be any type that contains the information necessary for the adaptor to do it&apos;s work.</para><para><bold>#include</bold> &lt;<ref refid="iteratoradapter_8hxx_source" kindref="compound">vigra/iteratoradapter.hxx</ref>&gt;<linebreak/>
 Namespace: vigra </para>    </detaileddescription>
    <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" line="149" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/iteratoradapter.hxx" bodystart="148" bodyend="297"/>
    <listofallmembers>
      <member refid="classvigra_1_1IteratorAdaptor_1a5ea3956b97c908e50c98fb5d7dd09ded" prot="protected" virt="non-virtual"><scope>vigra::IteratorAdaptor</scope><name>adaptee_</name></member>
      <member refid="classvigra_1_1IteratorAdaptor_1a93f03be85968052bc51620273f0e57a5" prot="public" virt="non-virtual"><scope>vigra::IteratorAdaptor</scope><name>BaseType</name></member>
      <member refid="classvigra_1_1IteratorAdaptor_1a4544cbdd116b81c15c86c7940a74bf1e" prot="public" virt="non-virtual"><scope>vigra::IteratorAdaptor</scope><name>difference_type</name></member>
      <member refid="classvigra_1_1IteratorAdaptor_1a785b582c850c5ce37631a079f4c79f2a" prot="public" virt="non-virtual"><scope>vigra::IteratorAdaptor</scope><name>index_reference</name></member>
      <member refid="classvigra_1_1IteratorAdaptor_1a74b25df30127e6aaba7ce8c2792a168f" prot="public" virt="non-virtual"><scope>vigra::IteratorAdaptor</scope><name>iterator_category</name></member>
      <member refid="classvigra_1_1IteratorAdaptor_1a0c637e38d8ea641286bf567bd0ded5fd" prot="public" virt="non-virtual"><scope>vigra::IteratorAdaptor</scope><name>IteratorAdaptor</name></member>
      <member refid="classvigra_1_1IteratorAdaptor_1a4508aff81c9d94e0a3c317068f7fd4fc" prot="public" virt="non-virtual"><scope>vigra::IteratorAdaptor</scope><name>IteratorAdaptor</name></member>
      <member refid="classvigra_1_1IteratorAdaptor_1ad59f0d52885adf26ebd61b865c83c652" prot="public" virt="non-virtual"><scope>vigra::IteratorAdaptor</scope><name>IteratorAdaptor</name></member>
      <member refid="classvigra_1_1IteratorAdaptor_1a90f87ced8eb5909d1fc421b48bd6a762" prot="public" virt="non-virtual"><scope>vigra::IteratorAdaptor</scope><name>operator!=</name></member>
      <member refid="classvigra_1_1IteratorAdaptor_1aa149c2249879e7727f33688b76bf2c99" prot="public" virt="non-virtual"><scope>vigra::IteratorAdaptor</scope><name>operator*</name></member>
      <member refid="classvigra_1_1IteratorAdaptor_1a02069e21fcf9b5ac0c1c1e7b4874fad7" prot="public" virt="non-virtual"><scope>vigra::IteratorAdaptor</scope><name>operator+</name></member>
      <member refid="classvigra_1_1IteratorAdaptor_1abec89989ac75e498eb812fe4a35ac46d" prot="public" virt="non-virtual"><scope>vigra::IteratorAdaptor</scope><name>operator++</name></member>
      <member refid="classvigra_1_1IteratorAdaptor_1a7978ebd178d8545d158e71ac8b11d820" prot="public" virt="non-virtual"><scope>vigra::IteratorAdaptor</scope><name>operator++</name></member>
      <member refid="classvigra_1_1IteratorAdaptor_1a90e86a09362b1a814b7da0f65232bcf7" prot="public" virt="non-virtual"><scope>vigra::IteratorAdaptor</scope><name>operator+=</name></member>
      <member refid="classvigra_1_1IteratorAdaptor_1aa4a56b5b466d67f72460537f3c704969" prot="public" virt="non-virtual"><scope>vigra::IteratorAdaptor</scope><name>operator-</name></member>
      <member refid="classvigra_1_1IteratorAdaptor_1a6c7f7031e56480a7a18980001cb93606" prot="public" virt="non-virtual"><scope>vigra::IteratorAdaptor</scope><name>operator-</name></member>
      <member refid="classvigra_1_1IteratorAdaptor_1a5932325c7e528396aa156132e0b03ad8" prot="public" virt="non-virtual"><scope>vigra::IteratorAdaptor</scope><name>operator--</name></member>
      <member refid="classvigra_1_1IteratorAdaptor_1a0616e27770a50fde0932c392864bcd94" prot="public" virt="non-virtual"><scope>vigra::IteratorAdaptor</scope><name>operator--</name></member>
      <member refid="classvigra_1_1IteratorAdaptor_1a12191ffda322cca23feed17c3eb72e9e" prot="public" virt="non-virtual"><scope>vigra::IteratorAdaptor</scope><name>operator-=</name></member>
      <member refid="classvigra_1_1IteratorAdaptor_1a33ce448509e9cc0d73861e4c1919c7a7" prot="public" virt="non-virtual"><scope>vigra::IteratorAdaptor</scope><name>operator-&gt;</name></member>
      <member refid="classvigra_1_1IteratorAdaptor_1acdefaa586e8ab5d628f0dfe8dde96f0b" prot="public" virt="non-virtual"><scope>vigra::IteratorAdaptor</scope><name>operator&lt;</name></member>
      <member refid="classvigra_1_1IteratorAdaptor_1a79ff95a0d7c5011594891e9e79679ca3" prot="public" virt="non-virtual"><scope>vigra::IteratorAdaptor</scope><name>operator&lt;=</name></member>
      <member refid="classvigra_1_1IteratorAdaptor_1a145c74c20078acf0491ac416b8795dae" prot="public" virt="non-virtual"><scope>vigra::IteratorAdaptor</scope><name>operator=</name></member>
      <member refid="classvigra_1_1IteratorAdaptor_1a4eb2f9e7080af26c530ebe21a529bf56" prot="public" virt="non-virtual"><scope>vigra::IteratorAdaptor</scope><name>operator=</name></member>
      <member refid="classvigra_1_1IteratorAdaptor_1a579c7808f645bdf05e4b22ee2a078667" prot="public" virt="non-virtual"><scope>vigra::IteratorAdaptor</scope><name>operator==</name></member>
      <member refid="classvigra_1_1IteratorAdaptor_1a423de2b8ccde1b1792d60cdbc85c54bd" prot="public" virt="non-virtual"><scope>vigra::IteratorAdaptor</scope><name>operator&gt;</name></member>
      <member refid="classvigra_1_1IteratorAdaptor_1a689b2ef36268e878ef05f705d128bfa5" prot="public" virt="non-virtual"><scope>vigra::IteratorAdaptor</scope><name>operator&gt;=</name></member>
      <member refid="classvigra_1_1IteratorAdaptor_1a2f1b4e51938edae47e2317f7635e6c08" prot="public" virt="non-virtual"><scope>vigra::IteratorAdaptor</scope><name>operator[]</name></member>
      <member refid="classvigra_1_1IteratorAdaptor_1a06e6574a5e6f5940636394cff80a7f6e" prot="public" virt="non-virtual"><scope>vigra::IteratorAdaptor</scope><name>pointer</name></member>
      <member refid="classvigra_1_1IteratorAdaptor_1aa693fca059142b1ae8f956df279a3e68" prot="public" virt="non-virtual"><scope>vigra::IteratorAdaptor</scope><name>reference</name></member>
      <member refid="classvigra_1_1IteratorAdaptor_1a838e1b7a78be5a86a7412a267356d01a" prot="public" virt="non-virtual"><scope>vigra::IteratorAdaptor</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
