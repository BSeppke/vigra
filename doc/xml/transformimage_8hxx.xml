<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="transformimage_8hxx" kind="file">
    <compoundname>transformimage.hxx</compoundname>
    <includes refid="utilities_8hxx" local="yes">utilities.hxx</includes>
    <includes refid="numerictraits_8hxx" local="yes">numerictraits.hxx</includes>
    <includes refid="iteratortraits_8hxx" local="yes">iteratortraits.hxx</includes>
    <includes refid="rgbvalue_8hxx" local="yes">rgbvalue.hxx</includes>
    <includes refid="functortraits_8hxx" local="yes">functortraits.hxx</includes>
    <includes refid="inspectimage_8hxx" local="yes">inspectimage.hxx</includes>
    <includedby refid="multi__pointoperators_8hxx" local="yes">vigra/multi_pointoperators.hxx</includedby>
    <includedby refid="stdimagefunctions_8hxx" local="yes">vigra/stdimagefunctions.hxx</includedby>
    <includedby refid="resampling__convolution_8hxx" local="yes">vigra/resampling_convolution.hxx</includedby>
    <includedby refid="fftw3_8hxx" local="yes">vigra/fftw3.hxx</includedby>
    <includedby refid="gaborfilter_8hxx" local="yes">vigra/gaborfilter.hxx</includedby>
    <includedby refid="impex_8hxx" local="yes">vigra/impex.hxx</includedby>
    <includedby refid="noise__normalization_8hxx" local="yes">vigra/noise_normalization.hxx</includedby>
    <includedby refid="slanted__edge__mtf_8hxx" local="yes">vigra/slanted_edge_mtf.hxx</includedby>
    <incdepgraph>
      <node id="9014">
        <label>functional</label>
      </node>
      <node id="8992">
        <label>limits</label>
      </node>
      <node id="9006">
        <label>sized_int.hxx</label>
        <link refid="sized__int_8hxx_source"/>
        <childnode refid="8990" relation="include">
        </childnode>
        <childnode refid="8992" relation="include">
        </childnode>
      </node>
      <node id="9000">
        <label>iterator</label>
      </node>
      <node id="9013">
        <label>inspector_passes.hxx</label>
        <link refid="inspector__passes_8hxx_source"/>
        <childnode refid="8990" relation="include">
        </childnode>
      </node>
      <node id="9007">
        <label>promote_traits.hxx</label>
        <link refid="promote__traits_8hxx_source"/>
      </node>
      <node id="9012">
        <label>algorithm.hxx</label>
        <link refid="algorithm_8hxx_source"/>
        <childnode refid="9006" relation="include">
        </childnode>
        <childnode refid="9003" relation="include">
        </childnode>
        <childnode refid="9013" relation="include">
        </childnode>
        <childnode refid="8993" relation="include">
        </childnode>
        <childnode refid="9014" relation="include">
        </childnode>
        <childnode refid="9000" relation="include">
        </childnode>
      </node>
      <node id="8997">
        <label>cmath</label>
      </node>
      <node id="8986">
        <label>stdexcept</label>
      </node>
      <node id="9019">
        <label>functortraits.hxx</label>
        <link refid="functortraits_8hxx_source"/>
        <childnode refid="9014" relation="include">
        </childnode>
        <childnode refid="8990" relation="include">
        </childnode>
      </node>
      <node id="8999">
        <label>iteratortags.hxx</label>
        <link refid="iteratortags_8hxx_source"/>
        <childnode refid="9000" relation="include">
        </childnode>
      </node>
      <node id="8989">
        <label>string</label>
      </node>
      <node id="9001">
        <label>iteratortraits.hxx</label>
        <link refid="iteratortraits_8hxx_source"/>
        <childnode refid="9002" relation="include">
        </childnode>
        <childnode refid="9008" relation="include">
        </childnode>
      </node>
      <node id="9004">
        <label>cfloat</label>
      </node>
      <node id="8983">
        <label>utilities.hxx</label>
        <link refid="utilities_8hxx_source"/>
        <childnode refid="8984" relation="include">
        </childnode>
        <childnode refid="8987" relation="include">
        </childnode>
        <childnode refid="8990" relation="include">
        </childnode>
        <childnode refid="8994" relation="include">
        </childnode>
        <childnode refid="8996" relation="include">
        </childnode>
        <childnode refid="9010" relation="include">
        </childnode>
        <childnode refid="8989" relation="include">
        </childnode>
        <childnode refid="8988" relation="include">
        </childnode>
      </node>
      <node id="8985">
        <label>vigra/configVersion.hxx</label>
        <link refid="configVersion_8hxx_source"/>
      </node>
      <node id="8982">
        <label>vigra/transformimage.hxx</label>
        <link refid="transformimage.hxx"/>
        <childnode refid="8983" relation="include">
        </childnode>
        <childnode refid="9003" relation="include">
        </childnode>
        <childnode refid="9001" relation="include">
        </childnode>
        <childnode refid="9015" relation="include">
        </childnode>
        <childnode refid="9019" relation="include">
        </childnode>
        <childnode refid="9020" relation="include">
        </childnode>
      </node>
      <node id="8994">
        <label>tuple.hxx</label>
        <link refid="tuple_8hxx_source"/>
        <childnode refid="8995" relation="include">
        </childnode>
      </node>
      <node id="9016">
        <label>tinyvector.hxx</label>
        <link refid="tinyvector_8hxx_source"/>
        <childnode refid="8997" relation="include">
        </childnode>
        <childnode refid="9011" relation="include">
        </childnode>
        <childnode refid="8998" relation="include">
        </childnode>
        <childnode refid="8993" relation="include">
        </childnode>
        <childnode refid="8984" relation="include">
        </childnode>
        <childnode refid="8987" relation="include">
        </childnode>
        <childnode refid="8990" relation="include">
        </childnode>
        <childnode refid="9003" relation="include">
        </childnode>
        <childnode refid="9017" relation="include">
        </childnode>
        <childnode refid="9010" relation="include">
        </childnode>
        <childnode refid="8996" relation="include">
        </childnode>
      </node>
      <node id="9020">
        <label>inspectimage.hxx</label>
        <link refid="inspectimage_8hxx_source"/>
        <childnode refid="9021" relation="include">
        </childnode>
        <childnode refid="8993" relation="include">
        </childnode>
        <childnode refid="8983" relation="include">
        </childnode>
        <childnode refid="9003" relation="include">
        </childnode>
        <childnode refid="9001" relation="include">
        </childnode>
        <childnode refid="9019" relation="include">
        </childnode>
        <childnode refid="9015" relation="include">
        </childnode>
        <childnode refid="9013" relation="include">
        </childnode>
      </node>
      <node id="9010">
        <label>mathutil.hxx</label>
        <link refid="mathutil_8hxx_source"/>
        <childnode refid="8997" relation="include">
        </childnode>
        <childnode refid="9011" relation="include">
        </childnode>
        <childnode refid="9005" relation="include">
        </childnode>
        <childnode refid="8984" relation="include">
        </childnode>
        <childnode refid="8987" relation="include">
        </childnode>
        <childnode refid="8994" relation="include">
        </childnode>
        <childnode refid="9006" relation="include">
        </childnode>
        <childnode refid="9003" relation="include">
        </childnode>
        <childnode refid="9012" relation="include">
        </childnode>
      </node>
      <node id="8984">
        <label>config.hxx</label>
        <link refid="config_8hxx_source"/>
        <childnode refid="8985" relation="include">
        </childnode>
        <childnode refid="8986" relation="include">
        </childnode>
      </node>
      <node id="9003">
        <label>numerictraits.hxx</label>
        <link refid="numerictraits_8hxx_source"/>
        <childnode refid="8991" relation="include">
        </childnode>
        <childnode refid="8992" relation="include">
        </childnode>
        <childnode refid="9004" relation="include">
        </childnode>
        <childnode refid="9005" relation="include">
        </childnode>
        <childnode refid="8990" relation="include">
        </childnode>
        <childnode refid="9006" relation="include">
        </childnode>
        <childnode refid="9007" relation="include">
        </childnode>
      </node>
      <node id="9021">
        <label>vector</label>
      </node>
      <node id="9009">
        <label>iteratoradapter.hxx</label>
        <link refid="iteratoradapter_8hxx_source"/>
      </node>
      <node id="9008">
        <label>imageiteratoradapter.hxx</label>
        <link refid="imageiteratoradapter_8hxx_source"/>
        <childnode refid="9000" relation="include">
        </childnode>
      </node>
      <node id="8995">
        <label>utility</label>
      </node>
      <node id="8988">
        <label>sstream</label>
      </node>
      <node id="9015">
        <label>rgbvalue.hxx</label>
        <link refid="rgbvalue_8hxx_source"/>
        <childnode refid="8997" relation="include">
        </childnode>
        <childnode refid="9011" relation="include">
        </childnode>
        <childnode refid="8984" relation="include">
        </childnode>
        <childnode refid="9003" relation="include">
        </childnode>
        <childnode refid="9002" relation="include">
        </childnode>
        <childnode refid="9016" relation="include">
        </childnode>
        <childnode refid="9018" relation="include">
        </childnode>
      </node>
      <node id="8996">
        <label>diff2d.hxx</label>
        <link refid="diff2d_8hxx_source"/>
        <childnode refid="8997" relation="include">
        </childnode>
        <childnode refid="8998" relation="include">
        </childnode>
        <childnode refid="8984" relation="include">
        </childnode>
        <childnode refid="8999" relation="include">
        </childnode>
        <childnode refid="9001" relation="include">
        </childnode>
        <childnode refid="9009" relation="include">
        </childnode>
        <childnode refid="8994" relation="include">
        </childnode>
      </node>
      <node id="8987">
        <label>error.hxx</label>
        <link refid="error_8hxx_source"/>
        <childnode refid="8986" relation="include">
        </childnode>
        <childnode refid="8988" relation="include">
        </childnode>
        <childnode refid="8989" relation="include">
        </childnode>
        <childnode refid="8984" relation="include">
        </childnode>
      </node>
      <node id="9018">
        <label>static_assert.hxx</label>
        <link refid="static__assert_8hxx_source"/>
      </node>
      <node id="8998">
        <label>iosfwd</label>
      </node>
      <node id="9011">
        <label>cstdlib</label>
      </node>
      <node id="8991">
        <label>climits</label>
      </node>
      <node id="8990">
        <label>metaprogramming.hxx</label>
        <link refid="metaprogramming_8hxx_source"/>
        <childnode refid="8984" relation="include">
        </childnode>
        <childnode refid="8991" relation="include">
        </childnode>
        <childnode refid="8992" relation="include">
        </childnode>
        <childnode refid="8993" relation="include">
        </childnode>
      </node>
      <node id="9005">
        <label>complex</label>
      </node>
      <node id="8993">
        <label>algorithm</label>
      </node>
      <node id="9017">
        <label>memory.hxx</label>
        <link refid="memory_8hxx_source"/>
        <childnode refid="8990" relation="include">
        </childnode>
      </node>
      <node id="9002">
        <label>accessor.hxx</label>
        <link refid="accessor_8hxx_source"/>
        <childnode refid="8990" relation="include">
        </childnode>
        <childnode refid="9003" relation="include">
        </childnode>
        <childnode refid="8994" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="9042">
        <label>vigra/quaternion.hxx</label>
        <link refid="quaternion_8hxx_source"/>
        <childnode refid="9041" relation="include">
        </childnode>
        <childnode refid="9043" relation="include">
        </childnode>
      </node>
      <node id="9025">
        <label>vigra/affine_registration.hxx</label>
        <link refid="affine__registration_8hxx_source"/>
      </node>
      <node id="9023">
        <label>vigra/multi_pointoperators.hxx</label>
        <link refid="multi__pointoperators_8hxx_source"/>
        <childnode refid="9024" relation="include">
        </childnode>
        <childnode refid="9050" relation="include">
        </childnode>
        <childnode refid="9052" relation="include">
        </childnode>
        <childnode refid="9053" relation="include">
        </childnode>
        <childnode refid="9054" relation="include">
        </childnode>
        <childnode refid="9055" relation="include">
        </childnode>
        <childnode refid="9056" relation="include">
        </childnode>
        <childnode refid="9057" relation="include">
        </childnode>
      </node>
      <node id="9065">
        <label>vigra/symmetry.hxx</label>
        <link refid="symmetry_8hxx_source"/>
      </node>
      <node id="9069">
        <label>vigra/resizeimage.hxx</label>
        <link refid="resizeimage_8hxx_source"/>
        <childnode refid="9059" relation="include">
        </childnode>
        <childnode refid="9070" relation="include">
        </childnode>
      </node>
      <node id="9041">
        <label>vigra/invariant_features3D.hxx</label>
        <link refid="invariant__features3D_8hxx_source"/>
      </node>
      <node id="9038">
        <label>vigra/affinegeometry.hxx</label>
        <link refid="affinegeometry_8hxx_source"/>
      </node>
      <node id="9030">
        <label>vigra/noise_normalization.hxx</label>
        <link refid="noise__normalization_8hxx_source"/>
      </node>
      <node id="9031">
        <label>vigra/quadprog.hxx</label>
        <link refid="quadprog_8hxx_source"/>
      </node>
      <node id="9048">
        <label>vigra/random_forest/rf_region.hxx</label>
        <link refid="rf__region_8hxx_source"/>
        <childnode refid="9047" relation="include">
        </childnode>
        <childnode refid="9034" relation="include">
        </childnode>
      </node>
      <node id="9070">
        <label>vigra/multi_resize.hxx</label>
        <link refid="multi__resize_8hxx_source"/>
      </node>
      <node id="9029">
        <label>vigra/linear_algebra.hxx</label>
        <link refid="linear__algebra_8hxx_source"/>
      </node>
      <node id="9047">
        <label>vigra/random_forest/rf_split.hxx</label>
        <link refid="rf__split_8hxx_source"/>
        <childnode refid="9033" relation="include">
        </childnode>
        <childnode refid="9034" relation="include">
        </childnode>
      </node>
      <node id="9073">
        <label>vigra/gaborfilter.hxx</label>
        <link refid="gaborfilter_8hxx_source"/>
      </node>
      <node id="9035">
        <label>vigra/random_forest_hdf5_impex.hxx</label>
        <link refid="random__forest__hdf5__impex_8hxx_source"/>
      </node>
      <node id="9059">
        <label>vigra/stdimagefunctions.hxx</label>
        <link refid="stdimagefunctions_8hxx_source"/>
        <childnode refid="9060" relation="include">
        </childnode>
        <childnode refid="9027" relation="include">
        </childnode>
        <childnode refid="9066" relation="include">
        </childnode>
        <childnode refid="9057" relation="include">
        </childnode>
      </node>
      <node id="9026">
        <label>vigra/linear_solve.hxx</label>
        <link refid="linear__solve_8hxx_source"/>
        <childnode refid="9025" relation="include">
        </childnode>
        <childnode refid="9027" relation="include">
        </childnode>
        <childnode refid="9029" relation="include">
        </childnode>
        <childnode refid="9030" relation="include">
        </childnode>
        <childnode refid="9031" relation="include">
        </childnode>
        <childnode refid="9032" relation="include">
        </childnode>
        <childnode refid="9028" relation="include">
        </childnode>
      </node>
      <node id="9058">
        <label>vigra/watersheds3d.hxx</label>
        <link refid="watersheds3d_8hxx_source"/>
      </node>
      <node id="9036">
        <label>vigra/singular_value_decomposition.hxx</label>
        <link refid="singular__value__decomposition_8hxx_source"/>
        <childnode refid="9026" relation="include">
        </childnode>
        <childnode refid="9032" relation="include">
        </childnode>
        <childnode refid="9037" relation="include">
        </childnode>
      </node>
      <node id="9062">
        <label>vigra/boundarytensor.hxx</label>
        <link refid="boundarytensor_8hxx_source"/>
      </node>
      <node id="9027">
        <label>vigra/edgedetection.hxx</label>
        <link refid="edgedetection_8hxx_source"/>
        <childnode refid="9028" relation="include">
        </childnode>
      </node>
      <node id="9043">
        <label>vigra/wigner-matrix.hxx</label>
        <link refid="wigner-matrix_8hxx_source"/>
      </node>
      <node id="9022">
        <label>vigra/transformimage.hxx</label>
        <link refid="transformimage.hxx"/>
        <childnode refid="9023" relation="include">
        </childnode>
        <childnode refid="9059" relation="include">
        </childnode>
        <childnode refid="9068" relation="include">
        </childnode>
        <childnode refid="9071" relation="include">
        </childnode>
        <childnode refid="9073" relation="include">
        </childnode>
        <childnode refid="9074" relation="include">
        </childnode>
        <childnode refid="9030" relation="include">
        </childnode>
        <childnode refid="9028" relation="include">
        </childnode>
      </node>
      <node id="9072">
        <label>vigra/multi_fft.hxx</label>
        <link refid="multi__fft_8hxx_source"/>
      </node>
      <node id="9061">
        <label>vigra/convolution.hxx</label>
        <link refid="convolution_8hxx_source"/>
        <childnode refid="9062" relation="include">
        </childnode>
        <childnode refid="9063" relation="include">
        </childnode>
        <childnode refid="9027" relation="include">
        </childnode>
        <childnode refid="9064" relation="include">
        </childnode>
        <childnode refid="9065" relation="include">
        </childnode>
        <childnode refid="9040" relation="include">
        </childnode>
      </node>
      <node id="9060">
        <label>vigra/nonlineardiffusion.hxx</label>
        <link refid="nonlineardiffusion_8hxx_source"/>
        <childnode refid="9061" relation="include">
        </childnode>
      </node>
      <node id="9068">
        <label>vigra/resampling_convolution.hxx</label>
        <link refid="resampling__convolution_8hxx_source"/>
        <childnode refid="9069" relation="include">
        </childnode>
      </node>
      <node id="9028">
        <label>vigra/slanted_edge_mtf.hxx</label>
        <link refid="slanted__edge__mtf_8hxx_source"/>
      </node>
      <node id="9052">
        <label>vigra/multi_convolution.hxx</label>
        <link refid="multi__convolution_8hxx_source"/>
      </node>
      <node id="9049">
        <label>vigra/random_forest_deprec.hxx</label>
        <link refid="random__forest__deprec_8hxx_source"/>
      </node>
      <node id="9033">
        <label>vigra/random_forest/rf_ridge_split.hxx</label>
        <link refid="rf__ridge__split_8hxx_source"/>
        <childnode refid="9034" relation="include">
        </childnode>
      </node>
      <node id="9046">
        <label>vigra/random_forest/rf_nodeproxy.hxx</label>
        <link refid="rf__nodeproxy_8hxx_source"/>
        <childnode refid="9045" relation="include">
        </childnode>
        <childnode refid="9047" relation="include">
        </childnode>
        <childnode refid="9033" relation="include">
        </childnode>
        <childnode refid="9034" relation="include">
        </childnode>
      </node>
      <node id="9037">
        <label>vigra/unsupervised_decomposition.hxx</label>
        <link refid="unsupervised__decomposition_8hxx_source"/>
      </node>
      <node id="9034">
        <label>vigra/random_forest.hxx</label>
        <link refid="random__forest_8hxx_source"/>
        <childnode refid="9035" relation="include">
        </childnode>
      </node>
      <node id="9032">
        <label>vigra/regression.hxx</label>
        <link refid="regression_8hxx_source"/>
        <childnode refid="9033" relation="include">
        </childnode>
      </node>
      <node id="9044">
        <label>vigra/matlab.hxx</label>
        <link refid="matlab_8hxx_source"/>
      </node>
      <node id="9045">
        <label>vigra/random_forest/rf_decisionTree.hxx</label>
        <link refid="rf__decisionTree_8hxx_source"/>
        <childnode refid="9034" relation="include">
        </childnode>
      </node>
      <node id="9053">
        <label>vigra/multi_distance.hxx</label>
        <link refid="multi__distance_8hxx_source"/>
        <childnode refid="9054" relation="include">
        </childnode>
      </node>
      <node id="9040">
        <label>vigra/tv_filter.hxx</label>
        <link refid="tv__filter_8hxx_source"/>
      </node>
      <node id="9074">
        <label>vigra/impex.hxx</label>
        <link refid="impex_8hxx"/>
        <childnode refid="9051" relation="include">
        </childnode>
        <childnode refid="9050" relation="include">
        </childnode>
        <childnode refid="9040" relation="include">
        </childnode>
      </node>
      <node id="9054">
        <label>vigra/multi_morphology.hxx</label>
        <link refid="multi__morphology_8hxx_source"/>
      </node>
      <node id="9066">
        <label>vigra/seededregiongrowing.hxx</label>
        <link refid="seededregiongrowing_8hxx_source"/>
        <childnode refid="9057" relation="include">
        </childnode>
        <childnode refid="9067" relation="include">
        </childnode>
      </node>
      <node id="9057">
        <label>vigra/seededregiongrowing3d.hxx</label>
        <link refid="seededregiongrowing3d_8hxx_source"/>
        <childnode refid="9058" relation="include">
        </childnode>
      </node>
      <node id="9064">
        <label>vigra/gradient_energy_tensor.hxx</label>
        <link refid="gradient__energy__tensor_8hxx_source"/>
      </node>
      <node id="9067">
        <label>vigra/watersheds.hxx</label>
        <link refid="watersheds_8hxx_source"/>
        <childnode refid="9058" relation="include">
        </childnode>
      </node>
      <node id="9039">
        <label>vigra/eigensystem.hxx</label>
        <link refid="eigensystem_8hxx_source"/>
        <childnode refid="9029" relation="include">
        </childnode>
        <childnode refid="9040" relation="include">
        </childnode>
      </node>
      <node id="9063">
        <label>vigra/cornerdetection.hxx</label>
        <link refid="cornerdetection_8hxx_source"/>
      </node>
      <node id="9055">
        <label>vigra/multi_tensorutilities.hxx</label>
        <link refid="multi__tensorutilities_8hxx_source"/>
      </node>
      <node id="9024">
        <label>vigra/matrix.hxx</label>
        <link refid="matrix_8hxx_source"/>
        <childnode refid="9025" relation="include">
        </childnode>
        <childnode refid="9026" relation="include">
        </childnode>
        <childnode refid="9036" relation="include">
        </childnode>
        <childnode refid="9038" relation="include">
        </childnode>
        <childnode refid="9039" relation="include">
        </childnode>
        <childnode refid="9041" relation="include">
        </childnode>
        <childnode refid="9042" relation="include">
        </childnode>
        <childnode refid="9029" relation="include">
        </childnode>
        <childnode refid="9044" relation="include">
        </childnode>
        <childnode refid="9031" relation="include">
        </childnode>
        <childnode refid="9045" relation="include">
        </childnode>
        <childnode refid="9046" relation="include">
        </childnode>
        <childnode refid="9048" relation="include">
        </childnode>
        <childnode refid="9047" relation="include">
        </childnode>
        <childnode refid="9032" relation="include">
        </childnode>
        <childnode refid="9034" relation="include">
        </childnode>
        <childnode refid="9049" relation="include">
        </childnode>
        <childnode refid="9037" relation="include">
        </childnode>
        <childnode refid="9043" relation="include">
        </childnode>
      </node>
      <node id="9056">
        <label>vigra/random_forest/rf_visitors.hxx</label>
        <link refid="rf__visitors_8hxx_source"/>
        <childnode refid="9045" relation="include">
        </childnode>
        <childnode refid="9034" relation="include">
        </childnode>
      </node>
      <node id="9051">
        <label>vigra/hdf5impex.hxx</label>
        <link refid="hdf5impex_8hxx_source"/>
        <childnode refid="9035" relation="include">
        </childnode>
      </node>
      <node id="9050">
        <label>vigra/multi_impex.hxx</label>
        <link refid="multi__impex_8hxx_source"/>
        <childnode refid="9051" relation="include">
        </childnode>
      </node>
      <node id="9071">
        <label>vigra/fftw3.hxx</label>
        <link refid="fftw3_8hxx_source"/>
        <childnode refid="9072" relation="include">
        </childnode>
        <childnode refid="9028" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classvigra_1_1BrightnessContrastFunctor" prot="public">vigra::BrightnessContrastFunctor</innerclass>
    <innerclass refid="classvigra_1_1BrightnessContrastFunctor_3_01RGBValue_3_01ComponentType_01_4_01_4" prot="public">vigra::BrightnessContrastFunctor&lt; RGBValue&lt; ComponentType &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1BrightnessContrastFunctor_3_01RGBValue_3_01unsigned_01char_01_4_01_4" prot="public">vigra::BrightnessContrastFunctor&lt; RGBValue&lt; unsigned char &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1BrightnessContrastFunctor_3_01unsigned_01char_01_4" prot="public">vigra::BrightnessContrastFunctor&lt; unsigned char &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01LinearIntensityTransform_3_01DestValueType_00_01Multiplier_01_4_01_4" prot="public">vigra::FunctorTraits&lt; LinearIntensityTransform&lt; DestValueType, Multiplier &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01ScalarIntensityTransform_3_01DestValueType_00_01Multiplier_01_4_01_4" prot="public">vigra::FunctorTraits&lt; ScalarIntensityTransform&lt; DestValueType, Multiplier &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01Threshold_3_01SrcValueType_00_01DestValueType_01_4_01_4" prot="public">vigra::FunctorTraits&lt; Threshold&lt; SrcValueType, DestValueType &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01VectorNormFunctor_3_01ValueType_01_4_01_4" prot="public">vigra::FunctorTraits&lt; VectorNormFunctor&lt; ValueType &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1FunctorTraits_3_01VectorNormSqFunctor_3_01ValueType_01_4_01_4" prot="public">vigra::FunctorTraits&lt; VectorNormSqFunctor&lt; ValueType &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1GammaFunctor" prot="public">vigra::GammaFunctor</innerclass>
    <innerclass refid="classvigra_1_1GammaFunctor_3_01RGBValue_3_01ComponentType_01_4_01_4" prot="public">vigra::GammaFunctor&lt; RGBValue&lt; ComponentType &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1GammaFunctor_3_01RGBValue_3_01unsigned_01char_01_4_01_4" prot="public">vigra::GammaFunctor&lt; RGBValue&lt; unsigned char &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1GammaFunctor_3_01unsigned_01char_01_4" prot="public">vigra::GammaFunctor&lt; unsigned char &gt;</innerclass>
    <innerclass refid="classvigra_1_1LinearIntensityTransform" prot="public">vigra::LinearIntensityTransform</innerclass>
    <innerclass refid="classvigra_1_1ScalarIntensityTransform" prot="public">vigra::ScalarIntensityTransform</innerclass>
    <innerclass refid="classvigra_1_1Threshold" prot="public">vigra::Threshold</innerclass>
    <innerclass refid="classvigra_1_1VectorNormFunctor" prot="public">vigra::VectorNormFunctor</innerclass>
    <innerclass refid="classvigra_1_1VectorNormSqFunctor" prot="public">vigra::VectorNormSqFunctor</innerclass>
    <innernamespace refid="namespacevigra">vigra</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>1998-2002<sp/>by<sp/>Ullrich<sp/>Koethe<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>VIGRA<sp/>computer<sp/>vision<sp/>library.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>The<sp/>VIGRA<sp/>Website<sp/>is<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://hci.iwr.uni-heidelberg.de/vigra/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Please<sp/>direct<sp/>questions,<sp/>bug<sp/>reports,<sp/>and<sp/>contributions<sp/>to<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ullrich.koethe@iwr.uni-heidelberg.de<sp/><sp/><sp/><sp/>or<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra@informatik.uni-hamburg.de<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>conditions:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Software.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VIGRA_TRANSFORMIMAGE_HXX</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_TRANSFORMIMAGE_HXX</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;utilities.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;numerictraits.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iteratortraits.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rgbvalue.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;functortraits.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;inspectimage.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vigra<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="49"><highlight class="comment">/**<sp/>\addtogroup<sp/>TransformAlgo<sp/>Algorithms<sp/>to<sp/>Transform<sp/>Images</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/><sp/>Apply<sp/>functor<sp/>to<sp/>calculate<sp/>a<sp/>pixelwise<sp/>transformation<sp/>of<sp/>one<sp/>image</highlight></codeline>
<codeline lineno="51"><highlight class="comment"></highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/><sp/>@{</highlight></codeline>
<codeline lineno="53"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transformLine<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcAccessor,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DestIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DestAccessor,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor&gt;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">transformLine(SrcIterator<sp/>s,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcIterator<sp/>send,<sp/>SrcAccessor<sp/>src,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DestIterator<sp/>d,<sp/>DestAccessor<sp/>dest,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Functor<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>s<sp/>!=<sp/>send;<sp/>++s,<sp/>++d)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest.set(f(src(s)),<sp/>d);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcAccessor,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskAccessor,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DestIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DestAccessor,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor&gt;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">transformLineIf(SrcIterator<sp/>s,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcIterator<sp/>send,<sp/>SrcAccessor<sp/>src,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaskIterator<sp/>m,<sp/>MaskAccessor<sp/>mask,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DestIterator<sp/>d,<sp/>DestAccessor<sp/>dest,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Functor<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>s<sp/>!=<sp/>send;<sp/>++s,<sp/>++d,<sp/>++m)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mask(m))</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest.set(f(src(s)),<sp/>d);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transformImage<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="95"><highlight class="comment">/**<sp/>\brief<sp/>Apply<sp/>unary<sp/>point<sp/>transformation<sp/>to<sp/>each<sp/>pixel.</highlight></codeline>
<codeline lineno="96"><highlight class="comment"></highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>transformation<sp/>given<sp/>by<sp/>the<sp/>functor<sp/>is<sp/>applied<sp/>to<sp/>every<sp/>source</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/>pixel<sp/>and<sp/>the<sp/>result<sp/>written<sp/>into<sp/>the<sp/>corresponding<sp/>destination<sp/>pixel.</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>function<sp/>uses<sp/>accessors<sp/>to<sp/>access<sp/>the<sp/>pixel<sp/>data.</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/>Note<sp/>that<sp/>the<sp/>unary<sp/>functors<sp/>of<sp/>the<sp/>STL<sp/>can<sp/>be<sp/>used<sp/>in<sp/>addition<sp/>to</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>functors<sp/>specifically<sp/>defined<sp/>in<sp/>\ref<sp/>TransformFunctor.</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/>Creation<sp/>of<sp/>new<sp/>functors<sp/>is<sp/>easiest<sp/>by<sp/>using<sp/>\ref<sp/>FunctorExpressions.</highlight></codeline>
<codeline lineno="103"><highlight class="comment"></highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declarations:&lt;/b&gt;</highlight></codeline>
<codeline lineno="105"><highlight class="comment"></highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/>pass<sp/>arguments<sp/>explicitly:</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>SrcImageIterator,<sp/>class<sp/>SrcAccessor,</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>DestImageIterator,<sp/>class<sp/>DestAccessor,<sp/>class<sp/>Functor&gt;</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transformImage(SrcImageIterator<sp/>src_upperleft,</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcImageIterator<sp/>src_lowerright,<sp/>SrcAccessor<sp/>sa,</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DestImageIterator<sp/>dest_upperleft,<sp/>DestAccessor<sp/>da,</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Functor<sp/>const<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="118"><highlight class="comment"></highlight></codeline>
<codeline lineno="119"><highlight class="comment"></highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/><sp/>use<sp/>argument<sp/>objects<sp/>in<sp/>conjunction<sp/>with<sp/>\ref<sp/>ArgumentObjectFactories<sp/>:</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>SrcImageIterator,<sp/>class<sp/>SrcAccessor,</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>DestImageIterator,<sp/>class<sp/>DestAccessor,<sp/>class<sp/>Functor&gt;</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transformImage(triple&lt;SrcImageIterator,<sp/>SrcImageIterator,<sp/>SrcAccessor&gt;<sp/>src,</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;DestImageIterator,<sp/>DestAccessor&gt;<sp/>dest,</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Functor<sp/>const<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="131"><highlight class="comment"></highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="133"><highlight class="comment"></highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/transformimage.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="136"><highlight class="comment"></highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="138"><highlight class="comment"></highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/>#include<sp/>&lt;cmath&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>for<sp/>sqrt()</highlight></codeline>
<codeline lineno="140"><highlight class="comment"></highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::transformImage(srcImageRange(src),</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destImage(dest),</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(double(*)(double))&amp;std::sqrt<sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="comment"></highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="146"><highlight class="comment"></highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Required<sp/>Interface:&lt;/b&gt;</highlight></codeline>
<codeline lineno="148"><highlight class="comment"></highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/><sp/>SrcImageIterator<sp/>src_upperleft,<sp/>src_lowerright;</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/>DestImageIterator<sp/><sp/><sp/><sp/><sp/><sp/>dest_upperleft;</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/><sp/>SrcImageIterator::row_iterator<sp/>sx<sp/>=<sp/>src_upperleft.rowIterator();</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/><sp/>DestImageIterator::row_iterator<sp/>dx<sp/>=<sp/>dest_upperleft.rowIterator();</highlight></codeline>
<codeline lineno="154"><highlight class="comment"></highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/><sp/>SrcAccessor<sp/>src_accessor;</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/>DestAccessor<sp/>dest_accessor;</highlight></codeline>
<codeline lineno="157"><highlight class="comment"></highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/>Functor<sp/>functor;</highlight></codeline>
<codeline lineno="159"><highlight class="comment"></highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/><sp/>dest_accessor.set(functor(src_accessor(sx)),<sp/>dx);</highlight></codeline>
<codeline lineno="161"><highlight class="comment"></highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="163"><highlight class="comment"></highlight></codeline>
<codeline lineno="164"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal">doxygen_overloaded_function(template<sp/>&lt;...&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__TransformAlgo_1gababa545b60bb7db13076648f83c6b314" kindref="member" tooltip="Apply unary point transformation to each pixel.">transformImage</ref>)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcAccessor,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DestImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DestAccessor,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor&gt;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><ref refid="group__TransformAlgo_1gababa545b60bb7db13076648f83c6b314" kindref="member" tooltip="Apply unary point transformation to each pixel.">transformImage</ref>(SrcImageIterator<sp/>src_upperleft,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcImageIterator<sp/>src_lowerright,<sp/>SrcAccessor<sp/>sa,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DestImageIterator<sp/>dest_upperleft,<sp/>DestAccessor<sp/>da,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Functor<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>src_lowerright.x<sp/>-<sp/>src_upperleft.x;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>src_upperleft.y<sp/>&lt;<sp/>src_lowerright.y;<sp/>++src_upperleft.y,<sp/>++dest_upperleft.y)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transformLine(src_upperleft.rowIterator(),</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_upperleft.rowIterator()<sp/>+<sp/>w,<sp/>sa,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_upperleft.rowIterator(),<sp/>da,<sp/>f);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcAccessor,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DestImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DestAccessor,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor&gt;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><ref refid="group__TransformAlgo_1gababa545b60bb7db13076648f83c6b314" kindref="member" tooltip="Apply unary point transformation to each pixel.">transformImage</ref>(triple&lt;SrcImageIterator,<sp/>SrcImageIterator,<sp/>SrcAccessor&gt;<sp/>src,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;DestImageIterator,<sp/>DestAccessor&gt;<sp/>dest,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Functor<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__TransformAlgo_1gababa545b60bb7db13076648f83c6b314" kindref="member" tooltip="Apply unary point transformation to each pixel.">transformImage</ref>(src.first,<sp/>src.second,<sp/>src.third,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest.first,<sp/>dest.second,<sp/>f);</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transformImageIf<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="203"><highlight class="comment">/**<sp/>\brief<sp/>Apply<sp/>unary<sp/>point<sp/>transformation<sp/>to<sp/>each<sp/>pixel<sp/>within<sp/>the<sp/>ROI</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/><sp/>(i.e.,<sp/>where<sp/>the<sp/>mask<sp/>is<sp/>non-zero).</highlight></codeline>
<codeline lineno="205"><highlight class="comment"></highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>transformation<sp/>given<sp/>by<sp/>the<sp/>functor<sp/>is<sp/>applied<sp/>to<sp/>every<sp/>source</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/><sp/>pixel<sp/>in<sp/>the<sp/>ROI<sp/>(i.e.<sp/>when<sp/>the<sp/>return<sp/>value<sp/>of<sp/>the<sp/>mask&apos;s<sp/>accessor</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/><sp/>is<sp/>not<sp/>zero)</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/>and<sp/>the<sp/>result<sp/>is<sp/>written<sp/>into<sp/>the<sp/>corresponding<sp/>destination<sp/>pixel.</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>function<sp/>uses<sp/>accessors<sp/>to<sp/>access<sp/>the<sp/>pixel<sp/>data.</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/>Note<sp/>that<sp/>the<sp/>unary<sp/>functors<sp/>of<sp/>the<sp/>STL<sp/>can<sp/>be<sp/>used<sp/>in<sp/>addition<sp/>to</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>functors<sp/>specifically<sp/>defined<sp/>in<sp/>\ref<sp/>TransformFunctor.</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/><sp/>Creation<sp/>of<sp/>new<sp/>functors<sp/>is<sp/>easiest<sp/>by<sp/>using<sp/>\ref<sp/>FunctorExpressions.</highlight></codeline>
<codeline lineno="214"><highlight class="comment"></highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declarations:&lt;/b&gt;</highlight></codeline>
<codeline lineno="216"><highlight class="comment"></highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/><sp/>pass<sp/>arguments<sp/>explicitly:</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>SrcImageIterator,<sp/>class<sp/>SrcAccessor,</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>MaskImageIterator,<sp/>class<sp/>MaskAccessor,</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>DestImageIterator,<sp/>clas<sp/>DestAccessor,</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>Functor&gt;</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transformImageIf(SrcImageIterator<sp/>src_upperleft,</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcImageIterator<sp/>src_lowerright,<sp/>SrcAccessor<sp/>sa,</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaskImageIterator<sp/>mask_upperleft,<sp/>MaskAccessor<sp/>ma,</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DestImageIterator<sp/>dest_upperleft,<sp/>DestAccessor<sp/>da,</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Functor<sp/>const<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="232"><highlight class="comment"></highlight></codeline>
<codeline lineno="233"><highlight class="comment"></highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/><sp/><sp/><sp/>use<sp/>argument<sp/>objects<sp/>in<sp/>conjunction<sp/>with<sp/>\ref<sp/>ArgumentObjectFactories<sp/>:</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>SrcImageIterator,<sp/>class<sp/>SrcAccessor,</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>MaskImageIterator,<sp/>class<sp/>MaskAccessor,</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>DestImageIterator,<sp/>clas<sp/>DestAccessor,</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>Functor&gt;</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transformImageIf(triple&lt;SrcImageIterator,<sp/>SrcImageIterator,<sp/>SrcAccessor&gt;<sp/>src,</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;MaskImageIterator,<sp/>MaskAccessor&gt;<sp/>mask,</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;DestImageIterator,<sp/>DestAccessor&gt;<sp/>dest,</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Functor<sp/>const<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="248"><highlight class="comment"></highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="250"><highlight class="comment"></highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/transformimage.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="253"><highlight class="comment"></highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/><sp/>#include<sp/>&lt;cmath&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>for<sp/>sqrt()</highlight></codeline>
<codeline lineno="256"><highlight class="comment"></highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::transformImageIf(srcImageRange(src),</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maskImage(mask),</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destImage(dest),</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(double(*)(double))&amp;std::sqrt<sp/>);</highlight></codeline>
<codeline lineno="261"><highlight class="comment"></highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="263"><highlight class="comment"></highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Required<sp/>Interface:&lt;/b&gt;</highlight></codeline>
<codeline lineno="265"><highlight class="comment"></highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/><sp/><sp/><sp/>SrcImageIterator<sp/>src_upperleft,<sp/>src_lowerright;</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/><sp/><sp/><sp/>DestImageIterator<sp/><sp/>dest_upperleft;</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/><sp/><sp/><sp/>MaskImageIterator<sp/>mask_upperleft;</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/><sp/><sp/><sp/>SrcImageIterator::row_iterator<sp/>sx<sp/>=<sp/>src_upperleft.rowIterator();</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/><sp/><sp/><sp/>MaskImageIterator::row_iterator<sp/>mx<sp/>=<sp/>mask_upperleft.rowIterator();</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/><sp/><sp/><sp/>DestImageIterator::row_iterator<sp/>dx<sp/>=<sp/>dest_upperleft.rowIterator();</highlight></codeline>
<codeline lineno="273"><highlight class="comment"></highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/><sp/>SrcAccessor<sp/>src_accessor;</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/><sp/>DestAccessor<sp/>dest_accessor;</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/>MaskAccessor<sp/>mask_accessor;</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/>Functor<sp/>functor;</highlight></codeline>
<codeline lineno="278"><highlight class="comment"></highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/><sp/>if(mask_accessor(mx))</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_accessor.set(functor(src_accessor(sx)),<sp/>dx);</highlight></codeline>
<codeline lineno="281"><highlight class="comment"></highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="283"><highlight class="comment"></highlight></codeline>
<codeline lineno="284"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal">doxygen_overloaded_function(template<sp/>&lt;...&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__TransformAlgo_1ga2104c7ffff3c6f9fe8f649fbc7a06a94" kindref="member" tooltip="Apply unary point transformation to each pixel within the ROI (i.e., where the mask is non-zero)...">transformImageIf</ref>)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcAccessor,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskAccessor,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DestImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DestAccessor,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor&gt;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><ref refid="group__TransformAlgo_1ga2104c7ffff3c6f9fe8f649fbc7a06a94" kindref="member" tooltip="Apply unary point transformation to each pixel within the ROI (i.e., where the mask is non-zero)...">transformImageIf</ref>(SrcImageIterator<sp/>src_upperleft,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcImageIterator<sp/>src_lowerright,<sp/>SrcAccessor<sp/>sa,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaskImageIterator<sp/>mask_upperleft,<sp/>MaskAccessor<sp/>ma,</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DestImageIterator<sp/>dest_upperleft,<sp/>DestAccessor<sp/>da,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Functor<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="297"><highlight class="normal">{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>src_lowerright.x<sp/>-<sp/>src_upperleft.x;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>src_upperleft.y<sp/>&lt;<sp/>src_lowerright.y;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++src_upperleft.y,<sp/>++mask_upperleft.y,<sp/>++dest_upperleft.y)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transformLineIf(src_upperleft.rowIterator(),</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_upperleft.rowIterator()<sp/>+<sp/>w,<sp/>sa,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask_upperleft.rowIterator(),<sp/>ma,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_upperleft.rowIterator(),<sp/>da,<sp/>f);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcAccessor,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskAccessor,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DestImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DestAccessor,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor&gt;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><ref refid="group__TransformAlgo_1ga2104c7ffff3c6f9fe8f649fbc7a06a94" kindref="member" tooltip="Apply unary point transformation to each pixel within the ROI (i.e., where the mask is non-zero)...">transformImageIf</ref>(triple&lt;SrcImageIterator,<sp/>SrcImageIterator,<sp/>SrcAccessor&gt;<sp/>src,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;MaskImageIterator,<sp/>MaskAccessor&gt;<sp/>mask,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;DestImageIterator,<sp/>DestAccessor&gt;<sp/>dest,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Functor<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__TransformAlgo_1ga2104c7ffff3c6f9fe8f649fbc7a06a94" kindref="member" tooltip="Apply unary point transformation to each pixel within the ROI (i.e., where the mask is non-zero)...">transformImageIf</ref>(src.first,<sp/>src.second,<sp/>src.third,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask.first,<sp/>mask.second,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest.first,<sp/>dest.second,<sp/>f);</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradientBasedTransform<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="332"><highlight class="comment">/**<sp/>\brief<sp/>Calculate<sp/>a<sp/>function<sp/>of<sp/>the<sp/>image<sp/>gradient.</highlight></codeline>
<codeline lineno="333"><highlight class="comment"></highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>gradient<sp/>and<sp/>the<sp/>function<sp/>represented<sp/>by<sp/>&lt;TT&gt;Functor<sp/>f&lt;/TT&gt;</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/><sp/><sp/><sp/>are<sp/>calculated<sp/>in<sp/>one<sp/>go:<sp/>for<sp/>each<sp/>location,<sp/>the<sp/>symmetric</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/><sp/><sp/><sp/>difference<sp/>in<sp/>x-<sp/>and<sp/>y-directions<sp/>(asymmetric<sp/>difference<sp/>at<sp/>the</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/><sp/><sp/><sp/>image<sp/>borders)<sp/>are<sp/>passed<sp/>to<sp/>the<sp/>given<sp/>functor,<sp/>and<sp/>the<sp/>result<sp/>is</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/><sp/><sp/><sp/>written<sp/>the<sp/>destination<sp/>image.<sp/>Functors<sp/>to<sp/>be<sp/>used<sp/>with<sp/>this</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/><sp/><sp/><sp/>function<sp/>include<sp/>\ref<sp/>MagnitudeFunctor<sp/>and<sp/>\ref</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/><sp/><sp/><sp/>RGBGradientMagnitudeFunctor.</highlight></codeline>
<codeline lineno="341"><highlight class="comment"></highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declarations:&lt;/b&gt;</highlight></codeline>
<codeline lineno="343"><highlight class="comment"></highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/><sp/><sp/><sp/>pass<sp/>arguments<sp/>explicitly:</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>SrcImageIterator,<sp/>class<sp/>SrcAccessor,</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>DestImageIterator,<sp/>class<sp/>DestAccessor,<sp/>class<sp/>Functor&gt;</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradientBasedTransform(SrcImageIterator<sp/>srcul,<sp/>SrcImageIterator<sp/>srclr,<sp/>SrcAccessor<sp/>sa,</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DestImageIterator<sp/>destul,<sp/>DestAccessor<sp/>da,<sp/>Functor<sp/>const<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="354"><highlight class="comment"></highlight></codeline>
<codeline lineno="355"><highlight class="comment"></highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/><sp/><sp/><sp/>use<sp/>argument<sp/>objects<sp/>in<sp/>conjunction<sp/>with<sp/>\ref<sp/>ArgumentObjectFactories<sp/>:</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>SrcImageIterator,<sp/>class<sp/>SrcAccessor,</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>DestImageIterator,<sp/>class<sp/>DestAccessor,<sp/>class<sp/>Functor&gt;</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradientBasedTransform(triple&lt;SrcImageIterator,<sp/>SrcImageIterator,<sp/>SrcAccessor&gt;<sp/>src,</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;DestImageIterator,<sp/>DestAccessor&gt;<sp/>dest,<sp/>Functor<sp/>const<sp/>&amp;<sp/>const<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="366"><highlight class="comment"></highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="368"><highlight class="comment"></highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/transformimage.hxx\&gt;</highlight></codeline>
<codeline lineno="370"><highlight class="comment"></highlight></codeline>
<codeline lineno="371"><highlight class="comment"></highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::FImage<sp/>src(w,h),<sp/>magnitude(w,h);</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="375"><highlight class="comment"></highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/><sp/><sp/><sp/>gradientBasedTransform(srcImageRange(src),<sp/>destImage(magnitude),</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra::MagnitudeFunctor&lt;float&gt;());</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="379"><highlight class="comment"></highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Required<sp/>Interface:&lt;/b&gt;</highlight></codeline>
<codeline lineno="381"><highlight class="comment"></highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/><sp/><sp/><sp/>SrcImageIterator<sp/>is,<sp/>isend;</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/><sp/><sp/><sp/>DestImageIterator<sp/>id;</highlight></codeline>
<codeline lineno="385"><highlight class="comment"></highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/><sp/><sp/><sp/>SrcAccessor<sp/>src_accessor;</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/><sp/><sp/><sp/>DestAccessor<sp/>dest_accessor;</highlight></codeline>
<codeline lineno="388"><highlight class="comment"></highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/><sp/><sp/><sp/>typename<sp/>NumericTraits&lt;typename<sp/>SrcAccessor::value_type&gt;::RealPromote</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diffx,<sp/>diffy;</highlight></codeline>
<codeline lineno="391"><highlight class="comment"></highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/><sp/><sp/><sp/>diffx<sp/>=<sp/>src_accessor(is,<sp/>Diff2D(-1,0))<sp/>-<sp/>src_accessor(is,<sp/>Diff2D(1,0));</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/><sp/><sp/><sp/>diffy<sp/>=<sp/>src_accessor(is,<sp/>Diff2D(0,-1))<sp/>-<sp/>src_accessor(is,<sp/>Diff2D(0,1));</highlight></codeline>
<codeline lineno="394"><highlight class="comment"></highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/><sp/><sp/><sp/>Functor<sp/>f;</highlight></codeline>
<codeline lineno="396"><highlight class="comment"></highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/><sp/><sp/><sp/>dest_accessor.set(f(diffx,<sp/>diffy),<sp/>id);</highlight></codeline>
<codeline lineno="398"><highlight class="comment"></highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="400"><highlight class="comment"></highlight></codeline>
<codeline lineno="401"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal">doxygen_overloaded_function(template<sp/>&lt;...&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__TransformAlgo_1ga36fbe70cf44cf9289ca012b726f449d6" kindref="member" tooltip="Calculate a function of the image gradient.">gradientBasedTransform</ref>)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcAccessor,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DestImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DestAccessor,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor&gt;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><ref refid="group__TransformAlgo_1ga36fbe70cf44cf9289ca012b726f449d6" kindref="member" tooltip="Calculate a function of the image gradient.">gradientBasedTransform</ref>(SrcImageIterator<sp/>srcul,<sp/>SrcImageIterator<sp/>srclr,<sp/>SrcAccessor<sp/>sa,</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DestImageIterator<sp/>destul,<sp/>DestAccessor<sp/>da,<sp/>Functor<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>grad)</highlight></codeline>
<codeline lineno="409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>srclr.x<sp/>-<sp/>srcul.x;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>srclr.y<sp/>-<sp/>srcul.y;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,y;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>SrcImageIterator<sp/>sy<sp/>=<sp/>srcul;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>DestImageIterator<sp/>dy<sp/>=<sp/>destul;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Diff2D<sp/>left(-1,0);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Diff2D<sp/>right(1,0);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Diff2D<sp/>top(0,-1);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Diff2D<sp/>bottom(0,1);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;typename<sp/>SrcAccessor::value_type&gt;::RealPromote<sp/>TmpType;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>TmpType<sp/>diffx,<sp/>diffy;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>SrcImageIterator<sp/>sx<sp/>=<sp/>sy;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>DestImageIterator<sp/>dx<sp/>=<sp/>dy;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>diffx<sp/>=<sp/>sa(sx)<sp/>-<sp/>sa(sx,<sp/>right);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>diffy<sp/>=<sp/>sa(sx)<sp/>-<sp/>sa(sx,<sp/>bottom);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>da.set(grad(diffx,<sp/>diffy),<sp/>dx);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(x=2,<sp/>++sx.x,<sp/>++dx.x;<sp/>x&lt;w;<sp/>++x,<sp/>++sx.x,<sp/>++dx.x)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diffx<sp/>=<sp/>(sa(sx,<sp/>left)<sp/>-<sp/>sa(sx,<sp/>right))<sp/>/<sp/>TmpType(2.0);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diffy<sp/>=<sp/>sa(sx)<sp/>-<sp/>sa(sx,<sp/>bottom);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>da.set(grad(diffx,<sp/>diffy),<sp/>dx);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>diffx<sp/>=<sp/>sa(sx,<sp/>left)<sp/>-<sp/>sa(sx);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>diffy<sp/>=<sp/>sa(sx)<sp/>-<sp/>sa(sx,<sp/>bottom);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>da.set(grad(diffx,<sp/>diffy),<sp/>dx);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>++sy.y;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>++dy.y;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(y=2;<sp/>y&lt;h;<sp/>++y,<sp/>++sy.y,<sp/>++dy.y)</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sx<sp/>=<sp/>sy;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>dy;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diffx<sp/>=<sp/>sa(sx)<sp/>-<sp/>sa(sx,<sp/>right);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diffy<sp/>=<sp/>(sa(sx,<sp/>top)<sp/>-<sp/>sa(sx,<sp/>bottom))<sp/>/<sp/>TmpType(2.0);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>da.set(grad(diffx,<sp/>diffy),<sp/>dx);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(x=2,<sp/>++sx.x,<sp/>++dx.x;<sp/>x&lt;w;<sp/>++x,<sp/>++sx.x,<sp/>++dx.x)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diffx<sp/>=<sp/>(sa(sx,<sp/>left)<sp/>-<sp/>sa(sx,<sp/>right))<sp/>/<sp/>TmpType(2.0);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diffy<sp/>=<sp/>(sa(sx,<sp/>top)<sp/>-<sp/>sa(sx,<sp/>bottom))<sp/>/<sp/>TmpType(2.0);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>da.set(grad(diffx,<sp/>diffy),<sp/>dx);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diffx<sp/>=<sp/>sa(sx,<sp/>left)<sp/>-<sp/>sa(sx);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diffy<sp/>=<sp/>(sa(sx,<sp/>top)<sp/>-<sp/>sa(sx,<sp/>bottom))<sp/>/<sp/>TmpType(2.0);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>da.set(grad(diffx,<sp/>diffy),<sp/>dx);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>sx<sp/>=<sp/>sy;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>dy;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>diffx<sp/>=<sp/>sa(sx)<sp/>-<sp/>sa(sx,<sp/>right);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>diffy<sp/>=<sp/>sa(sx,<sp/>top)<sp/>-<sp/>sa(sx);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>da.set(grad(diffx,<sp/>diffy),<sp/>dx);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(x=2,<sp/>++sx.x,<sp/>++dx.x;<sp/>x&lt;w;<sp/>++x,<sp/>++sx.x,<sp/>++dx.x)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diffx<sp/>=<sp/>(sa(sx,<sp/>left)<sp/>-<sp/>sa(sx,<sp/>right))<sp/>/<sp/>TmpType(2.0);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diffy<sp/>=<sp/>sa(sx,<sp/>top)<sp/>-<sp/>sa(sx);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>da.set(grad(diffx,<sp/>diffy),<sp/>dx);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>diffx<sp/>=<sp/>sa(sx,<sp/>left)<sp/>-<sp/>sa(sx);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>diffy<sp/>=<sp/>sa(sx,<sp/>top)<sp/>-<sp/>sa(sx);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>da.set(grad(diffx,<sp/>diffy),<sp/>dx);</highlight></codeline>
<codeline lineno="484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcAccessor,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DestImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DestAccessor,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Functor&gt;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><ref refid="group__TransformAlgo_1ga36fbe70cf44cf9289ca012b726f449d6" kindref="member" tooltip="Calculate a function of the image gradient.">gradientBasedTransform</ref>(triple&lt;SrcImageIterator,<sp/>SrcImageIterator,<sp/>SrcAccessor&gt;<sp/>src,</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;DestImageIterator,<sp/>DestAccessor&gt;<sp/>dest,<sp/>Functor<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>grad)</highlight></codeline>
<codeline lineno="492"><highlight class="normal">{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__TransformAlgo_1ga36fbe70cf44cf9289ca012b726f449d6" kindref="member" tooltip="Calculate a function of the image gradient.">gradientBasedTransform</ref>(src.first,<sp/>src.second,<sp/>src.third,</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest.first,<sp/>dest.second,<sp/>grad);</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="497"><highlight class="comment">/**<sp/>@}<sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="498"><highlight class="comment">/**<sp/>\addtogroup<sp/>TransformFunctor<sp/>Functors<sp/>to<sp/>Transform<sp/>Images</highlight></codeline>
<codeline lineno="499"><highlight class="comment"></highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/><sp/><sp/><sp/>Note<sp/>that<sp/>the<sp/>unary<sp/>functors<sp/>of<sp/>the<sp/>STL<sp/>can<sp/>also<sp/>be<sp/>used<sp/>in</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/><sp/><sp/><sp/>connection<sp/>with<sp/>\ref<sp/>transformImage().</highlight></codeline>
<codeline lineno="502"><highlight class="comment">*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="503"><highlight class="comment">//@{</highlight></codeline>
<codeline lineno="504"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DestValueType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Multiplier<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">LinearIntensityTransform</highlight></codeline>
<codeline lineno="507"><highlight class="normal">{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>functors<sp/>argument<sp/>type<sp/>(actually,<sp/>since</highlight></codeline>
<codeline lineno="510"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;operator()&lt;/tt&gt;<sp/>is<sp/>a<sp/>template,<sp/>much<sp/>more<sp/>types<sp/>are<sp/>possible)</highlight></codeline>
<codeline lineno="511"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>DestValueType<sp/>argument_type;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>functors<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="515"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>DestValueType<sp/>result_type;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="519"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>DestValueType<sp/>value_type;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>type<sp/>of<sp/>the<sp/>offset<sp/>(used<sp/>in<sp/>internal<sp/>calculations<sp/>to<sp/>prevent</highlight></codeline>
<codeline lineno="523"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>overflows<sp/>and<sp/>minimize<sp/>round-off<sp/>errors).</highlight></codeline>
<codeline lineno="524"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumericTraits&lt;DestValueType&gt;::RealPromote<sp/>argument_promote;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>type<sp/>of<sp/>the<sp/>scale<sp/>factor</highlight></codeline>
<codeline lineno="529"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Multiplier<sp/>scalar_multiplier_type;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>init<sp/>scale<sp/>and<sp/>offset</highlight></codeline>
<codeline lineno="533"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>LinearIntensityTransform(scalar_multiplier_type<sp/>scale,<sp/>argument_promote<sp/>offset)</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>scale_(scale),<sp/>offset_(offset)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>transform</highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcValueType&gt;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>result_type<sp/>operator()(SrcValueType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>s)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="542"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NumericTraits&lt;result_type&gt;::fromRealPromote(scale_<sp/>*<sp/>(s<sp/>+<sp/>offset_));</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>scalar_multiplier_type<sp/>scale_;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>argument_promote<sp/>offset_;</highlight></codeline>
<codeline lineno="550"><highlight class="normal">};</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DestValueType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Multiplier&gt;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;LinearIntensityTransform&lt;DestValueType,<sp/>Multiplier&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="554"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;LinearIntensityTransform&lt;DestValueType,<sp/>Multiplier&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="555"><highlight class="normal">{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="558"><highlight class="normal">};</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DestValueType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Multiplier<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ScalarIntensityTransform</highlight></codeline>
<codeline lineno="562"><highlight class="normal">{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>functors<sp/>argument<sp/>type<sp/>(actually,<sp/>since</highlight></codeline>
<codeline lineno="565"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;operator()&lt;/tt&gt;<sp/>is<sp/>a<sp/>template,<sp/>much<sp/>more<sp/>types<sp/>are<sp/>possible)</highlight></codeline>
<codeline lineno="566"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>DestValueType<sp/>argument_type;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>functors<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="570"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>DestValueType<sp/>result_type;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="574"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>DestValueType<sp/>value_type;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>type<sp/>of<sp/>the<sp/>scale<sp/>factor</highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Multiplier<sp/>scalar_multiplier_type;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>init<sp/>scale</highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>ScalarIntensityTransform(scalar_multiplier_type<sp/>scale)</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>scale_(scale)</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>transform</highlight></codeline>
<codeline lineno="588"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcValueType&gt;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>result_type<sp/>operator()(SrcValueType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>s)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="591"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NumericTraits&lt;result_type&gt;::fromRealPromote(scale_<sp/>*<sp/>s);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>scalar_multiplier_type<sp/>scale_;</highlight></codeline>
<codeline lineno="597"><highlight class="normal">};</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DestValueType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Multiplier&gt;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;ScalarIntensityTransform&lt;DestValueType,<sp/>Multiplier&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="601"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;ScalarIntensityTransform&lt;DestValueType,<sp/>Multiplier&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="602"><highlight class="normal">{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="605"><highlight class="normal">};</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearIntensityTransform<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="613"><highlight class="comment">/**<sp/>\brief<sp/>Apply<sp/>a<sp/>linear<sp/>transform<sp/>to<sp/>the<sp/>source<sp/>pixel<sp/>values</highlight></codeline>
<codeline lineno="614"><highlight class="comment"></highlight></codeline>
<codeline lineno="615"><highlight class="comment"><sp/><sp/><sp/><sp/>Factory<sp/>function<sp/>for<sp/>a<sp/>functor<sp/>that<sp/>linearly<sp/>transforms<sp/>the</highlight></codeline>
<codeline lineno="616"><highlight class="comment"><sp/><sp/><sp/><sp/>source<sp/>pixel<sp/>values.<sp/>The<sp/>functor<sp/>applies<sp/>the<sp/>transform</highlight></codeline>
<codeline lineno="617"><highlight class="comment"><sp/><sp/><sp/><sp/>&apos;&lt;TT&gt;destvalue<sp/>=<sp/>scale<sp/>*<sp/>(srcvalue<sp/>+<sp/>offset)&lt;/TT&gt;&apos;<sp/>to<sp/>every<sp/>pixel.</highlight></codeline>
<codeline lineno="618"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>can,<sp/>for<sp/>example,<sp/>be<sp/>used<sp/>to<sp/>transform<sp/>images<sp/>into<sp/>the<sp/>visible</highlight></codeline>
<codeline lineno="619"><highlight class="comment"><sp/><sp/><sp/><sp/>range<sp/>0...255<sp/>or<sp/>to<sp/>invert<sp/>an<sp/>image.</highlight></codeline>
<codeline lineno="620"><highlight class="comment"></highlight></codeline>
<codeline lineno="621"><highlight class="comment"><sp/><sp/><sp/><sp/>If<sp/>you<sp/>leave<sp/>out<sp/>the<sp/>second<sp/>parameter<sp/>/<sp/>offset,<sp/>you<sp/>will<sp/>get<sp/>an</highlight></codeline>
<codeline lineno="622"><highlight class="comment"><sp/><sp/><sp/><sp/>optimized<sp/>version<sp/>of<sp/>the<sp/>functor<sp/>which<sp/>only<sp/>scales<sp/>by<sp/>the<sp/>given</highlight></codeline>
<codeline lineno="623"><highlight class="comment"><sp/><sp/><sp/><sp/>factor,<sp/>however<sp/>you<sp/>have<sp/>to<sp/>make<sp/>the<sp/>template<sp/>parameter<sp/>(pixel</highlight></codeline>
<codeline lineno="624"><highlight class="comment"><sp/><sp/><sp/><sp/>type)<sp/>explicit<sp/>then.</highlight></codeline>
<codeline lineno="625"><highlight class="comment"></highlight></codeline>
<codeline lineno="626"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="627"><highlight class="comment"></highlight></codeline>
<codeline lineno="628"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="629"><highlight class="comment"></highlight></codeline>
<codeline lineno="630"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declaration:&lt;/b&gt;</highlight></codeline>
<codeline lineno="631"><highlight class="comment"></highlight></codeline>
<codeline lineno="632"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="633"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>Multiplier,<sp/>class<sp/>DestValueType&gt;</highlight></codeline>
<codeline lineno="635"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LinearIntensityTransform&lt;DestValueType,<sp/>Multiplier&gt;</highlight></codeline>
<codeline lineno="636"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearIntensityTransform(Multiplier<sp/>scale,<sp/>DestValueType<sp/>offset);</highlight></codeline>
<codeline lineno="637"><highlight class="comment"></highlight></codeline>
<codeline lineno="638"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>DestValueType,<sp/>class<sp/>Multiplier&gt;</highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScalarIntensityTransform&lt;DestValueType,<sp/>Multiplier&gt;</highlight></codeline>
<codeline lineno="640"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearIntensityTransform(Multiplier<sp/>scale);</highlight></codeline>
<codeline lineno="641"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="643"><highlight class="comment"></highlight></codeline>
<codeline lineno="644"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="645"><highlight class="comment"></highlight></codeline>
<codeline lineno="646"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/transformimage.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="647"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="648"><highlight class="comment"></highlight></codeline>
<codeline lineno="649"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="650"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::IImage<sp/>src(width,<sp/>height);</highlight></codeline>
<codeline lineno="651"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BImage<sp/>dest(width,<sp/>height);</highlight></codeline>
<codeline lineno="652"><highlight class="comment"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="653"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::FindMinMax&lt;IImage::PixelType&gt;<sp/>minmax;<sp/><sp/><sp/>//<sp/>functor<sp/>to<sp/>find<sp/>range</highlight></codeline>
<codeline lineno="654"><highlight class="comment"></highlight></codeline>
<codeline lineno="655"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::inspectImage(srcImageRange(src),<sp/>minmax);<sp/>//<sp/>find<sp/>original<sp/>range</highlight></codeline>
<codeline lineno="656"><highlight class="comment"></highlight></codeline>
<codeline lineno="657"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>transform<sp/>to<sp/>range<sp/>0...255</highlight></codeline>
<codeline lineno="658"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::transformImage(srcImageRange(src),<sp/>destImage(dest),</highlight></codeline>
<codeline lineno="659"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearIntensityTransform(</highlight></codeline>
<codeline lineno="660"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>255.0<sp/>/<sp/>(minmax.max<sp/>-<sp/>minmax.min),<sp/>//<sp/>scaling</highlight></codeline>
<codeline lineno="661"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>minmax.min));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>offset</highlight></codeline>
<codeline lineno="662"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="663"><highlight class="comment"></highlight></codeline>
<codeline lineno="664"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>one-parameter<sp/>version<sp/>can<sp/>be<sp/>used<sp/>like<sp/>this:</highlight></codeline>
<codeline lineno="665"><highlight class="comment"></highlight></codeline>
<codeline lineno="666"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="667"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>scale<sp/>from<sp/>0..255<sp/>to<sp/>0..1.0</highlight></codeline>
<codeline lineno="668"><highlight class="comment"><sp/><sp/><sp/><sp/>FImage<sp/>dest(src.size());</highlight></codeline>
<codeline lineno="669"><highlight class="comment"></highlight></codeline>
<codeline lineno="670"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::transformImage(srcImageRange(src),<sp/>destImage(dest),</highlight></codeline>
<codeline lineno="671"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearIntensityTransform&lt;float&gt;(1.0<sp/>/<sp/>255));</highlight></codeline>
<codeline lineno="672"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="673"><highlight class="comment"></highlight></codeline>
<codeline lineno="674"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Required<sp/>Interface:&lt;/b&gt;</highlight></codeline>
<codeline lineno="675"><highlight class="comment"></highlight></codeline>
<codeline lineno="676"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>source<sp/>and<sp/>destination<sp/>value<sp/>types<sp/>must<sp/>be<sp/>models<sp/>of<sp/>\ref<sp/>LinearSpace<sp/>in<sp/>both<sp/>cases.</highlight></codeline>
<codeline lineno="677"><highlight class="comment"></highlight></codeline>
<codeline lineno="678"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Multiplier,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DestValueType&gt;</highlight></codeline>
<codeline lineno="680"><highlight class="normal">LinearIntensityTransform&lt;DestValueType,<sp/>Multiplier&gt;</highlight></codeline>
<codeline lineno="681" refid="group__TransformFunctor_1gaf4b4d2cc02b2dd950838a452847dee0e" refkind="member"><highlight class="normal"><ref refid="group__TransformFunctor_1gaf4b4d2cc02b2dd950838a452847dee0e" kindref="member" tooltip="Apply a linear transform to the source pixel values.">linearIntensityTransform</ref>(Multiplier<sp/>scale,<sp/>DestValueType<sp/>offset)</highlight></codeline>
<codeline lineno="682"><highlight class="normal">{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LinearIntensityTransform&lt;DestValueType,<sp/>Multiplier&gt;(scale,<sp/>offset);</highlight></codeline>
<codeline lineno="684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DestValueType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Multiplier&gt;</highlight></codeline>
<codeline lineno="687"><highlight class="normal">ScalarIntensityTransform&lt;DestValueType,<sp/>Multiplier&gt;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><ref refid="group__TransformFunctor_1gaf4b4d2cc02b2dd950838a452847dee0e" kindref="member" tooltip="Apply a linear transform to the source pixel values.">linearIntensityTransform</ref>(Multiplier<sp/>scale)</highlight></codeline>
<codeline lineno="689"><highlight class="normal">{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ScalarIntensityTransform&lt;DestValueType,<sp/>Multiplier&gt;(scale);</highlight></codeline>
<codeline lineno="691"><highlight class="normal">}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearRangeMapping<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="699"><highlight class="comment">/**<sp/>\brief<sp/>Map<sp/>a<sp/>source<sp/>intensity<sp/>range<sp/>linearly<sp/>to<sp/>a<sp/>destination<sp/>range.</highlight></codeline>
<codeline lineno="700"><highlight class="comment"></highlight></codeline>
<codeline lineno="701"><highlight class="comment"><sp/><sp/><sp/><sp/>Factory<sp/>function<sp/>for<sp/>a<sp/>functor<sp/>that<sp/>linearly<sp/>transforms<sp/>the</highlight></codeline>
<codeline lineno="702"><highlight class="comment"><sp/><sp/><sp/><sp/>source<sp/>pixel<sp/>values.<sp/>The<sp/>functor<sp/>applies<sp/>the<sp/>transform</highlight></codeline>
<codeline lineno="703"><highlight class="comment"><sp/><sp/><sp/><sp/>&apos;&lt;TT&gt;destvalue<sp/>=<sp/>scale<sp/>*<sp/>(srcvalue<sp/>+<sp/>offset)&lt;/TT&gt;&apos;<sp/>to<sp/>every<sp/>pixel,</highlight></codeline>
<codeline lineno="704"><highlight class="comment"><sp/><sp/><sp/><sp/>where<sp/>&lt;tt&gt;scale<sp/>=<sp/>(dest_max<sp/>-<sp/>dest_min)<sp/>/<sp/>(src_max<sp/>-<sp/>src_min)&lt;/tt&gt;</highlight></codeline>
<codeline lineno="705"><highlight class="comment"><sp/><sp/><sp/><sp/>and<sp/>&lt;tt&gt;offset<sp/>=<sp/>dest_min<sp/>/<sp/>scale<sp/>-<sp/>src_min&lt;/tt&gt;.<sp/>As<sp/>a<sp/>result,</highlight></codeline>
<codeline lineno="706"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>pixel<sp/>values<sp/>&lt;tt&gt;src_max&lt;/tt&gt;,<sp/>&lt;tt&gt;src_min&lt;/tt&gt;<sp/>in<sp/>the<sp/>source<sp/>image</highlight></codeline>
<codeline lineno="707"><highlight class="comment"><sp/><sp/><sp/><sp/>are<sp/>mapped<sp/>onto<sp/>&lt;tt&gt;dest_max&lt;/tt&gt;,<sp/>&lt;tt&gt;dest_min&lt;/tt&gt;<sp/>respectively.</highlight></codeline>
<codeline lineno="708"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>works<sp/>for<sp/>scalar<sp/>as<sp/>well<sp/>as<sp/>vector<sp/>pixel<sp/>types.<sp/>Instead<sp/>of<sp/></highlight></codeline>
<codeline lineno="709"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;src_min&lt;/tt&gt;<sp/>and<sp/>&lt;tt&gt;src_max&lt;/tt&gt;,<sp/>you<sp/>may<sp/>also<sp/>pass<sp/>a<sp/>functor</highlight></codeline>
<codeline lineno="710"><highlight class="comment"><sp/><sp/><sp/><sp/>\ref<sp/>FindMinMax.<sp/></highlight></codeline>
<codeline lineno="711"><highlight class="comment"></highlight></codeline>
<codeline lineno="712"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declaration:&lt;/b&gt;</highlight></codeline>
<codeline lineno="713"><highlight class="comment"></highlight></codeline>
<codeline lineno="714"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="715"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>SrcValueType,<sp/>class<sp/>DestValueType&gt;</highlight></codeline>
<codeline lineno="717"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LinearIntensityTransform&lt;DestValueType,<sp/>typename<sp/>NumericTraits&lt;DestValueType&gt;::RealPromote&gt;</highlight></codeline>
<codeline lineno="718"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearRangeMapping(SrcValueType<sp/>src_min,<sp/>SrcValueType<sp/>src_max,</highlight></codeline>
<codeline lineno="719"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DestValueType<sp/>dest_min,<sp/>DestValueType<sp/>dest_max<sp/>);</highlight></codeline>
<codeline lineno="720"><highlight class="comment"></highlight></codeline>
<codeline lineno="721"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>SrcValueType,<sp/>class<sp/>DestValueType&gt;</highlight></codeline>
<codeline lineno="722"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LinearIntensityTransform&lt;DestValueType,<sp/>typename<sp/>NumericTraits&lt;DestValueType&gt;::RealPromote&gt;</highlight></codeline>
<codeline lineno="723"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearRangeMapping(SrcValueType<sp/>src_min,<sp/>SrcValueType<sp/>src_max,</highlight></codeline>
<codeline lineno="724"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DestValueType<sp/>dest_min,<sp/>DestValueType<sp/>dest_max<sp/>);</highlight></codeline>
<codeline lineno="725"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="727"><highlight class="comment"></highlight></codeline>
<codeline lineno="728"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="729"><highlight class="comment"></highlight></codeline>
<codeline lineno="730"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/transformimage.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="731"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="732"><highlight class="comment"></highlight></codeline>
<codeline lineno="733"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="734"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::IImage<sp/>src(width,<sp/>height);</highlight></codeline>
<codeline lineno="735"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BImage<sp/>dest(width,<sp/>height);</highlight></codeline>
<codeline lineno="736"><highlight class="comment"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="737"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::FindMinMax&lt;IImage::PixelType&gt;<sp/>minmax;<sp/><sp/><sp/>//<sp/>functor<sp/>to<sp/>find<sp/>range</highlight></codeline>
<codeline lineno="738"><highlight class="comment"></highlight></codeline>
<codeline lineno="739"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::inspectImage(srcImageRange(src),<sp/>minmax);<sp/>//<sp/>find<sp/>original<sp/>range</highlight></codeline>
<codeline lineno="740"><highlight class="comment"></highlight></codeline>
<codeline lineno="741"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>transform<sp/>to<sp/>range<sp/>0...255</highlight></codeline>
<codeline lineno="742"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::transformImage(srcImageRange(src),<sp/>destImage(dest),</highlight></codeline>
<codeline lineno="743"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearRangeMapping(</highlight></codeline>
<codeline lineno="744"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minmax.min,<sp/>minmax.max,<sp/><sp/>//<sp/>src<sp/>range</highlight></codeline>
<codeline lineno="745"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>255)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>dest<sp/>range</highlight></codeline>
<codeline lineno="746"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="747"><highlight class="comment"></highlight></codeline>
<codeline lineno="748"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>equivalent,<sp/>but<sp/>shorter</highlight></codeline>
<codeline lineno="749"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::transformImage(srcImageRange(src),<sp/>destImage(dest),</highlight></codeline>
<codeline lineno="750"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearRangeMapping(</highlight></codeline>
<codeline lineno="751"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minmax,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>src<sp/>range</highlight></codeline>
<codeline lineno="752"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>255)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>dest<sp/>range</highlight></codeline>
<codeline lineno="753"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="754"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="755"><highlight class="comment"></highlight></codeline>
<codeline lineno="756"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Required<sp/>Interface:&lt;/b&gt;</highlight></codeline>
<codeline lineno="757"><highlight class="comment"></highlight></codeline>
<codeline lineno="758"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>source<sp/>and<sp/>destination<sp/>value<sp/>types<sp/>must<sp/>be<sp/>models<sp/>of<sp/>\ref<sp/>LinearSpace<sp/>in<sp/>both<sp/>cases.</highlight></codeline>
<codeline lineno="759"><highlight class="comment"></highlight></codeline>
<codeline lineno="760"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcValueType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DestValueType&gt;</highlight></codeline>
<codeline lineno="762"><highlight class="normal">LinearIntensityTransform&lt;DestValueType,<sp/>typename<sp/>NumericTraits&lt;DestValueType&gt;::RealPromote&gt;</highlight></codeline>
<codeline lineno="763" refid="group__TransformFunctor_1ga500478e445d819abfc4dc9a748dcba5d" refkind="member"><highlight class="normal"><ref refid="group__TransformFunctor_1ga500478e445d819abfc4dc9a748dcba5d" kindref="member" tooltip="Map a source intensity range linearly to a destination range.">linearRangeMapping</ref>(SrcValueType<sp/>src_min,<sp/>SrcValueType<sp/>src_max,</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DestValueType<sp/>dest_min,<sp/>DestValueType<sp/>dest_max<sp/>)</highlight></codeline>
<codeline lineno="765"><highlight class="normal">{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__TransformFunctor_1ga500478e445d819abfc4dc9a748dcba5d" kindref="member" tooltip="Map a source intensity range linearly to a destination range.">linearRangeMapping</ref>(src_min,<sp/>src_max,<sp/>dest_min,<sp/>dest_max,</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;DestValueType&gt;::isScalar());</highlight></codeline>
<codeline lineno="768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcValueType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DestValueType&gt;</highlight></codeline>
<codeline lineno="771"><highlight class="normal">LinearIntensityTransform&lt;DestValueType,<sp/>typename<sp/>NumericTraits&lt;DestValueType&gt;::RealPromote&gt;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><ref refid="group__TransformFunctor_1ga500478e445d819abfc4dc9a748dcba5d" kindref="member" tooltip="Map a source intensity range linearly to a destination range.">linearRangeMapping</ref>(FindMinMax&lt;SrcValueType&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DestValueType<sp/>dest_min,<sp/>DestValueType<sp/>dest_max<sp/>)</highlight></codeline>
<codeline lineno="774"><highlight class="normal">{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__TransformFunctor_1ga500478e445d819abfc4dc9a748dcba5d" kindref="member" tooltip="Map a source intensity range linearly to a destination range.">linearRangeMapping</ref>(src.min,<sp/>src.max,<sp/>dest_min,<sp/>dest_max,</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;DestValueType&gt;::isScalar());</highlight></codeline>
<codeline lineno="777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcValueType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DestValueType&gt;</highlight></codeline>
<codeline lineno="780"><highlight class="normal">LinearIntensityTransform&lt;DestValueType,<sp/>typename<sp/>NumericTraits&lt;DestValueType&gt;::RealPromote&gt;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><ref refid="group__TransformFunctor_1ga500478e445d819abfc4dc9a748dcba5d" kindref="member" tooltip="Map a source intensity range linearly to a destination range.">linearRangeMapping</ref>(</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>SrcValueType<sp/>src_min,<sp/>SrcValueType<sp/>src_max,</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>DestValueType<sp/>dest_min,<sp/>DestValueType<sp/>dest_max,</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>VigraTrueType<sp/></highlight><highlight class="comment">/*<sp/>isScalar<sp/>*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="785"><highlight class="normal">{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;DestValueType&gt;::RealPromote<sp/>Multiplier;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>Multiplier<sp/>diff<sp/>=<sp/>src_max<sp/>-<sp/>src_min;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>Multiplier<sp/>scale<sp/>=<sp/>diff<sp/>==<sp/>NumericTraits&lt;Multiplier&gt;::zero()</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>NumericTraits&lt;Multiplier&gt;::one()</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(dest_max<sp/>-<sp/>dest_min)<sp/>/<sp/>diff;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LinearIntensityTransform&lt;DestValueType,<sp/>Multiplier&gt;(</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale,<sp/>dest_min<sp/>/<sp/>scale<sp/>-<sp/>src_min<sp/>);</highlight></codeline>
<codeline lineno="793"><highlight class="normal">}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcValueType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DestValueType&gt;</highlight></codeline>
<codeline lineno="796"><highlight class="normal">LinearIntensityTransform&lt;DestValueType,<sp/>typename<sp/>NumericTraits&lt;DestValueType&gt;::RealPromote&gt;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><ref refid="group__TransformFunctor_1ga500478e445d819abfc4dc9a748dcba5d" kindref="member" tooltip="Map a source intensity range linearly to a destination range.">linearRangeMapping</ref>(</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>SrcValueType<sp/>src_min,<sp/>SrcValueType<sp/>src_max,</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>DestValueType<sp/>dest_min,<sp/>DestValueType<sp/>dest_max,</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>VigraFalseType<sp/></highlight><highlight class="comment">/*<sp/>isScalar<sp/>*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="801"><highlight class="normal">{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;DestValueType&gt;::RealPromote<sp/>Multiplier;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Multiplier::value_type<sp/>MComponent;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>Multiplier<sp/>scale(dest_max),<sp/>offset(dest_max);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;src_min.size();<sp/>++i)</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MComponent<sp/>diff<sp/>=<sp/>src_max[i]<sp/>-<sp/>src_min[i];</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale[i]<sp/>=<sp/>diff<sp/>==<sp/>NumericTraits&lt;MComponent&gt;::zero()</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>NumericTraits&lt;MComponent&gt;::one()</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(dest_max[i]<sp/>-<sp/>dest_min[i])<sp/>/<sp/>diff;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset[i]<sp/>=<sp/>dest_min[i]<sp/>/<sp/>scale[i]<sp/>-<sp/>src_min[i];</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LinearIntensityTransform&lt;DestValueType,<sp/>Multiplier&gt;(scale,<sp/>offset);</highlight></codeline>
<codeline lineno="814"><highlight class="normal">}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Threshold<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="822"><highlight class="comment">/**<sp/>\brief<sp/>Threshold<sp/>an<sp/>image.</highlight></codeline>
<codeline lineno="823"><highlight class="comment"></highlight></codeline>
<codeline lineno="824"><highlight class="comment"><sp/><sp/><sp/><sp/>If<sp/>a<sp/>source<sp/>pixel<sp/>is<sp/>above<sp/>or<sp/>equal<sp/>the<sp/>lower<sp/>and<sp/>below</highlight></codeline>
<codeline lineno="825"><highlight class="comment"><sp/><sp/><sp/><sp/>or<sp/>equal<sp/>the<sp/>higher<sp/>threshold<sp/>(i.e.<sp/>within<sp/>the<sp/>closed<sp/>interval</highlight></codeline>
<codeline lineno="826"><highlight class="comment"><sp/><sp/><sp/><sp/>[lower,<sp/>higher])<sp/>the<sp/>destination<sp/>pixel<sp/>is<sp/>set<sp/>to<sp/>&apos;yesresult&apos;,</highlight></codeline>
<codeline lineno="827"><highlight class="comment"><sp/><sp/><sp/><sp/>otherwise<sp/>to<sp/>&apos;noresult&apos;.</highlight></codeline>
<codeline lineno="828"><highlight class="comment"></highlight></codeline>
<codeline lineno="829"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="830"><highlight class="comment"></highlight></codeline>
<codeline lineno="831"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="832"><highlight class="comment"></highlight></codeline>
<codeline lineno="833"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="834"><highlight class="comment"></highlight></codeline>
<codeline lineno="835"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/transformimage.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="836"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="837"><highlight class="comment"></highlight></codeline>
<codeline lineno="838"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="839"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BImage<sp/>src(width,<sp/>height),<sp/>dest(width,<sp/>height);</highlight></codeline>
<codeline lineno="840"><highlight class="comment"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="841"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::transformImage(src.upperLeft(),<sp/>src.lowerRight(),<sp/>src.accessor(),</highlight></codeline>
<codeline lineno="842"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest.upperLeft(),<sp/>dest.accessor(),</highlight></codeline>
<codeline lineno="843"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra::Threshold&lt;</highlight></codeline>
<codeline lineno="844"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra::BImage::PixelType,<sp/>vigra::BImage::PixelType&gt;(10,<sp/>100,<sp/>0,<sp/>255));</highlight></codeline>
<codeline lineno="845"><highlight class="comment"></highlight></codeline>
<codeline lineno="846"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="847"><highlight class="comment"></highlight></codeline>
<codeline lineno="848"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Required<sp/>Interface:&lt;/b&gt;</highlight></codeline>
<codeline lineno="849"><highlight class="comment"></highlight></codeline>
<codeline lineno="850"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="851"><highlight class="comment"></highlight></codeline>
<codeline lineno="852"><highlight class="comment"><sp/><sp/><sp/><sp/>SrcValueType<sp/><sp/><sp/>src;</highlight></codeline>
<codeline lineno="853"><highlight class="comment"><sp/><sp/><sp/><sp/>DestValueType<sp/><sp/>dest,<sp/>yesresult,<sp/>noresult;</highlight></codeline>
<codeline lineno="854"><highlight class="comment"></highlight></codeline>
<codeline lineno="855"><highlight class="comment"><sp/><sp/><sp/><sp/>dest<sp/>=<sp/>((src<sp/>&lt;<sp/>lower)<sp/>||<sp/>(higher<sp/>&lt;<sp/>src))<sp/>?<sp/>noresult<sp/>:<sp/>yesresult;</highlight></codeline>
<codeline lineno="856"><highlight class="comment"></highlight></codeline>
<codeline lineno="857"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="858"><highlight class="comment"></highlight></codeline>
<codeline lineno="859"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcValueType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DestValueType&gt;</highlight></codeline>
<codeline lineno="861" refid="classvigra_1_1Threshold" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1Threshold" kindref="compound" tooltip="Threshold an image.">Threshold</ref></highlight></codeline>
<codeline lineno="862"><highlight class="normal">{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="865"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="866"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867" refid="classvigra_1_1Threshold_1a6df5df72cf21bb83f87a4d52cd5493bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>SrcValueType<sp/><ref refid="classvigra_1_1Threshold_1a6df5df72cf21bb83f87a4d52cd5493bc" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="869"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="870"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871" refid="classvigra_1_1Threshold_1a3031bd1500c1260d3a41ca18a761c142" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>DestValueType<sp/><ref refid="classvigra_1_1Threshold_1a3031bd1500c1260d3a41ca18a761c142" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="873"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>init<sp/>thresholds<sp/>and<sp/>return<sp/>values</highlight></codeline>
<codeline lineno="874"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875" refid="classvigra_1_1Threshold_1a14eb0c1c28ddc1202074e2800d625afc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Threshold_1a14eb0c1c28ddc1202074e2800d625afc" kindref="member">Threshold</ref>(<ref refid="classvigra_1_1Threshold_1a6df5df72cf21bb83f87a4d52cd5493bc" kindref="member">argument_type</ref><sp/>lower,<sp/><ref refid="classvigra_1_1Threshold_1a6df5df72cf21bb83f87a4d52cd5493bc" kindref="member">argument_type</ref><sp/>higher,</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Threshold_1a3031bd1500c1260d3a41ca18a761c142" kindref="member">result_type</ref><sp/>noresult,<sp/><ref refid="classvigra_1_1Threshold_1a3031bd1500c1260d3a41ca18a761c142" kindref="member">result_type</ref><sp/>yesresult)</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>lower_(lower),<sp/>higher_(higher),</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yesresult_(yesresult),<sp/>noresult_(noresult)</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="881"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>calculate<sp/>transform</highlight></codeline>
<codeline lineno="882"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883" refid="classvigra_1_1Threshold_1a5bc46e4bea49fb28e053089a6d115731" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Threshold_1a3031bd1500c1260d3a41ca18a761c142" kindref="member">result_type</ref><sp/><ref refid="classvigra_1_1Threshold_1a5bc46e4bea49fb28e053089a6d115731" kindref="member">operator()</ref>(<ref refid="classvigra_1_1Threshold_1a6df5df72cf21bb83f87a4d52cd5493bc" kindref="member">argument_type</ref><sp/>s)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="884"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((s<sp/>&lt;<sp/>lower_)<sp/>||<sp/>(higher_<sp/>&lt;<sp/>s))<sp/>?<sp/>noresult_<sp/>:<sp/>yesresult_;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Threshold_1a6df5df72cf21bb83f87a4d52cd5493bc" kindref="member">argument_type</ref><sp/>lower_,<sp/>higher_;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Threshold_1a3031bd1500c1260d3a41ca18a761c142" kindref="member">result_type</ref><sp/>yesresult_,<sp/>noresult_;</highlight></codeline>
<codeline lineno="892"><highlight class="normal">};</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcValueType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DestValueType&gt;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;Threshold&lt;SrcValueType,<sp/>DestValueType&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="896"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;Threshold&lt;SrcValueType,<sp/>DestValueType&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="897"><highlight class="normal">{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="900"><highlight class="normal">};</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BrightnessContrastFunctor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="908"><highlight class="comment">/**<sp/>\brief<sp/>Adjust<sp/>brightness<sp/>and<sp/>contrast<sp/>of<sp/>an<sp/>image.</highlight></codeline>
<codeline lineno="909"><highlight class="comment"></highlight></codeline>
<codeline lineno="910"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>functor<sp/>applies<sp/>a<sp/>gamma<sp/>correction<sp/>to<sp/>each<sp/>pixel<sp/>in<sp/>order<sp/>to</highlight></codeline>
<codeline lineno="911"><highlight class="comment"><sp/><sp/><sp/><sp/>modify<sp/>the<sp/>brightness<sp/>of<sp/>the<sp/>image.<sp/>To<sp/>the<sp/>result<sp/>of<sp/>the<sp/>gamma</highlight></codeline>
<codeline lineno="912"><highlight class="comment"><sp/><sp/><sp/><sp/>correction,<sp/>another<sp/>transform<sp/>is<sp/>applied<sp/>that<sp/>modifies<sp/>the</highlight></codeline>
<codeline lineno="913"><highlight class="comment"><sp/><sp/><sp/><sp/>contrast.<sp/>The<sp/>brightness<sp/>and<sp/>contrast<sp/>parameters<sp/>must<sp/>be</highlight></codeline>
<codeline lineno="914"><highlight class="comment"><sp/><sp/><sp/><sp/>positive.<sp/>Values<sp/>greater<sp/>than<sp/>1<sp/>will<sp/>increase<sp/>image<sp/>brightness<sp/>or</highlight></codeline>
<codeline lineno="915"><highlight class="comment"><sp/><sp/><sp/><sp/>contrast<sp/>respectively,<sp/>values<sp/>smaller<sp/>than<sp/>1<sp/>decrease<sp/>them.<sp/><sp/>A</highlight></codeline>
<codeline lineno="916"><highlight class="comment"><sp/><sp/><sp/><sp/>value<sp/>of<sp/>exactly<sp/>1<sp/>will<sp/>have<sp/>no<sp/>effect.<sp/><sp/>If<sp/>contrast<sp/>is<sp/>set<sp/>to<sp/>1,</highlight></codeline>
<codeline lineno="917"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>result<sp/>is<sp/>equivalent<sp/>to<sp/>that<sp/>of<sp/>the<sp/>GammaFunctor<sp/>with<sp/>gamma<sp/>=</highlight></codeline>
<codeline lineno="918"><highlight class="comment"><sp/><sp/><sp/><sp/>1./brightness.</highlight></codeline>
<codeline lineno="919"><highlight class="comment"></highlight></codeline>
<codeline lineno="920"><highlight class="comment"><sp/><sp/><sp/><sp/>For<sp/>\ref<sp/>RGBValue<sp/>&quot;RGBValue&apos;s&quot;,<sp/>the<sp/>transforms<sp/>are<sp/>applied</highlight></codeline>
<codeline lineno="921"><highlight class="comment"><sp/><sp/><sp/><sp/>component-wise.<sp/>The<sp/>pixel<sp/>values<sp/>are<sp/>assumed<sp/>to<sp/>lie<sp/>between<sp/>the</highlight></codeline>
<codeline lineno="922"><highlight class="comment"><sp/><sp/><sp/><sp/>given<sp/>minimum<sp/>and<sp/>maximum<sp/>values<sp/>(in<sp/>case<sp/>of<sp/>RGB,<sp/>this<sp/>is<sp/>again</highlight></codeline>
<codeline lineno="923"><highlight class="comment"><sp/><sp/><sp/><sp/>understood<sp/>component-wise).<sp/>In<sp/>case<sp/>of<sp/>&lt;TT&gt;unsigned<sp/>char&lt;/TT&gt;,<sp/>min</highlight></codeline>
<codeline lineno="924"><highlight class="comment"><sp/><sp/><sp/><sp/>and<sp/>max<sp/>default<sp/>to<sp/>0<sp/>and<sp/>255<sp/>respectively.<sp/><sp/>Precisely,<sp/>the</highlight></codeline>
<codeline lineno="925"><highlight class="comment"><sp/><sp/><sp/><sp/>following<sp/>transform<sp/>is<sp/>applied<sp/>to<sp/>each<sp/>&lt;em&gt;<sp/>PixelValue&lt;/em&gt;:</highlight></codeline>
<codeline lineno="926"><highlight class="comment"></highlight></codeline>
<codeline lineno="927"><highlight class="comment"><sp/><sp/><sp/><sp/>\f[</highlight></codeline>
<codeline lineno="928"><highlight class="comment"><sp/><sp/><sp/><sp/>\begin{array}{rcl}</highlight></codeline>
<codeline lineno="929"><highlight class="comment"><sp/><sp/><sp/><sp/>V_1<sp/>&amp;<sp/>=<sp/>&amp;<sp/>\frac{PixelValue<sp/>-<sp/>min}{max<sp/>-<sp/>min}<sp/>\\</highlight></codeline>
<codeline lineno="930"><highlight class="comment"><sp/><sp/><sp/><sp/>V_2<sp/>&amp;<sp/>=<sp/>&amp;<sp/>V_1^\frac{1}{brightness}<sp/>\\</highlight></codeline>
<codeline lineno="931"><highlight class="comment"><sp/><sp/><sp/><sp/>V_3<sp/>&amp;<sp/>=<sp/>&amp;<sp/>2<sp/>V_2<sp/>-<sp/>1<sp/>\\</highlight></codeline>
<codeline lineno="932"><highlight class="comment"><sp/><sp/><sp/><sp/>V_4<sp/>&amp;<sp/>=<sp/>&amp;<sp/>\left\lbrace</highlight></codeline>
<codeline lineno="933"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\begin{array}{l}</highlight></codeline>
<codeline lineno="934"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V_3^\frac{1}{contrast}<sp/>\mbox{\rm<sp/>\quad<sp/>if<sp/><sp/>}<sp/>V_3<sp/>\ge<sp/>0<sp/>\\</highlight></codeline>
<codeline lineno="935"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>(-V_3)^\frac{1}{contrast}<sp/>\mbox{\rm<sp/>\quad<sp/>otherwise}</highlight></codeline>
<codeline lineno="936"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\end{array}<sp/>\right.<sp/>\\</highlight></codeline>
<codeline lineno="937"><highlight class="comment"><sp/><sp/><sp/><sp/>Result<sp/>&amp;<sp/>=<sp/>&amp;<sp/>\frac{V_4<sp/>+<sp/>1}{2}<sp/>(max<sp/>-<sp/>min)<sp/>+<sp/>min</highlight></codeline>
<codeline lineno="938"><highlight class="comment"><sp/><sp/><sp/><sp/>\end{array}</highlight></codeline>
<codeline lineno="939"><highlight class="comment"><sp/><sp/><sp/><sp/>\f]</highlight></codeline>
<codeline lineno="940"><highlight class="comment"></highlight></codeline>
<codeline lineno="941"><highlight class="comment"><sp/><sp/><sp/><sp/>If<sp/>the<sp/>&lt;TT&gt;PixelType&lt;/TT&gt;<sp/>is<sp/>&lt;TT&gt;unsigned<sp/>char&lt;/TT&gt;,<sp/>a<sp/>look-up-table<sp/>is<sp/>used</highlight></codeline>
<codeline lineno="942"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>faster<sp/>computation.</highlight></codeline>
<codeline lineno="943"><highlight class="comment"></highlight></codeline>
<codeline lineno="944"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="945"><highlight class="comment"></highlight></codeline>
<codeline lineno="946"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="947"><highlight class="comment"></highlight></codeline>
<codeline lineno="948"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="949"><highlight class="comment"></highlight></codeline>
<codeline lineno="950"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/transformimage.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="951"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="952"><highlight class="comment"></highlight></codeline>
<codeline lineno="953"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="954"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BImage<sp/>bimage(width,<sp/>height);</highlight></codeline>
<codeline lineno="955"><highlight class="comment"><sp/><sp/><sp/><sp/>double<sp/>brightness,<sp/>contrast;</highlight></codeline>
<codeline lineno="956"><highlight class="comment"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="957"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::transformImage(srcImageRange(bimage),<sp/>destImage(bimage),</highlight></codeline>
<codeline lineno="958"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra::BrightnessContrastFunctor&lt;unsigned<sp/>char&gt;(brightness,<sp/>contrast));</highlight></codeline>
<codeline lineno="959"><highlight class="comment"></highlight></codeline>
<codeline lineno="960"><highlight class="comment"></highlight></codeline>
<codeline lineno="961"><highlight class="comment"></highlight></codeline>
<codeline lineno="962"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::FImage<sp/>fimage(width,<sp/>height);</highlight></codeline>
<codeline lineno="963"><highlight class="comment"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="964"><highlight class="comment"></highlight></codeline>
<codeline lineno="965"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::FindMinMax&lt;float&gt;<sp/>minmax;</highlight></codeline>
<codeline lineno="966"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::inspectImage(srcImageRange(fimage),<sp/>minmax);</highlight></codeline>
<codeline lineno="967"><highlight class="comment"></highlight></codeline>
<codeline lineno="968"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::transformImage(srcImageRange(fimage),<sp/>destImage(fimage),</highlight></codeline>
<codeline lineno="969"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra::BrightnessContrastFunctor&lt;float&gt;(brightness,<sp/>contrast,<sp/>minmax.min,<sp/>minmax.max));</highlight></codeline>
<codeline lineno="970"><highlight class="comment"></highlight></codeline>
<codeline lineno="971"><highlight class="comment"></highlight></codeline>
<codeline lineno="972"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="973"><highlight class="comment"></highlight></codeline>
<codeline lineno="974"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Required<sp/>Interface:&lt;/b&gt;</highlight></codeline>
<codeline lineno="975"><highlight class="comment"></highlight></codeline>
<codeline lineno="976"><highlight class="comment"><sp/><sp/><sp/><sp/>Scalar<sp/>types:<sp/>must<sp/>be<sp/>a<sp/>linear<sp/>algebra<sp/>(+,<sp/>-<sp/>*,<sp/>NumericTraits),</highlight></codeline>
<codeline lineno="977"><highlight class="comment"><sp/><sp/><sp/><sp/>strict<sp/>weakly<sp/>ordered<sp/>(&lt;),<sp/>and<sp/>&lt;TT&gt;pow()&lt;/TT&gt;<sp/>must<sp/>be<sp/>defined.</highlight></codeline>
<codeline lineno="978"><highlight class="comment"></highlight></codeline>
<codeline lineno="979"><highlight class="comment"><sp/><sp/><sp/><sp/>RGB<sp/>values:<sp/>the<sp/>component<sp/>type<sp/>must<sp/>meet<sp/>the<sp/>above<sp/>requirements.</highlight></codeline>
<codeline lineno="980"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PixelType&gt;</highlight></codeline>
<codeline lineno="982" refid="classvigra_1_1BrightnessContrastFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1BrightnessContrastFunctor" kindref="compound" tooltip="Adjust brightness and contrast of an image.">BrightnessContrastFunctor</ref></highlight></codeline>
<codeline lineno="983"><highlight class="normal">{</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumericTraits&lt;PixelType&gt;::RealPromote<sp/>promote_type;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="989"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="990"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991" refid="classvigra_1_1BrightnessContrastFunctor_1a43a6feb130a539eef06a3666941ad9c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PixelType<sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1a43a6feb130a539eef06a3666941ad9c9" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="993"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="994"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995" refid="classvigra_1_1BrightnessContrastFunctor_1a2f1cac15c70a6f5199a4104c37e88608" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PixelType<sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1a2f1cac15c70a6f5199a4104c37e88608" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="997"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="998"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999" refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PixelType<sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1001"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Init<sp/>functor<sp/>for<sp/>argument<sp/>range<sp/>&lt;TT&gt;[min,<sp/>max]&lt;/TT&gt;.</highlight></codeline>
<codeline lineno="1002"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;TT&gt;brightness&lt;/TT&gt;<sp/>and<sp/>&lt;TT&gt;contrast&lt;/TT&gt;<sp/>values<sp/>&gt;<sp/>1<sp/>will</highlight></codeline>
<codeline lineno="1003"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>increase<sp/>brightness<sp/>and<sp/>contrast,<sp/>&lt;<sp/>1<sp/>will<sp/>decrease<sp/>them,<sp/>and<sp/>==<sp/>1<sp/>means</highlight></codeline>
<codeline lineno="1004"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>no<sp/>change.</highlight></codeline>
<codeline lineno="1005"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006" refid="classvigra_1_1BrightnessContrastFunctor_1a42ab78c7be842781269c2f01ac0dd641" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1a42ab78c7be842781269c2f01ac0dd641" kindref="member">BrightnessContrastFunctor</ref>(promote_type<sp/>brightness,<sp/>promote_type<sp/>contrast,</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1a43a6feb130a539eef06a3666941ad9c9" kindref="member">argument_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">min</ref>,<sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1a43a6feb130a539eef06a3666941ad9c9" kindref="member">argument_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>b_(1.0/brightness),</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c_(1.0/contrast),</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min_(min),</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>diff_(max<sp/>-<sp/>min),</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>zero_(NumericTraits&lt;promote_type&gt;::zero()),</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>one_(NumericTraits&lt;promote_type&gt;::one())</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1016"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Calculate<sp/>modified<sp/>gray<sp/>or<sp/>color<sp/>value</highlight></codeline>
<codeline lineno="1017"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018" refid="classvigra_1_1BrightnessContrastFunctor_1a144b031a96930bdd54be8c0b7164b4e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1a2f1cac15c70a6f5199a4104c37e88608" kindref="member">result_type</ref><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1a144b031a96930bdd54be8c0b7164b4e4" kindref="member">operator()</ref>(<ref refid="classvigra_1_1BrightnessContrastFunctor_1a43a6feb130a539eef06a3666941ad9c9" kindref="member">argument_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1019"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>promote_type<sp/>v1<sp/>=<sp/>(v<sp/>-<sp/>min_)<sp/>/<sp/>diff_;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>promote_type<sp/>brighter<sp/>=<sp/>VIGRA_CSTD::pow(v1,<sp/>b_);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>promote_type<sp/>v2<sp/>=<sp/>2.0<sp/>*<sp/>brighter<sp/>-<sp/>one_;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>promote_type<sp/>contrasted<sp/>=<sp/>(v2<sp/>&lt;<sp/>zero_)<sp/>?</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-VIGRA_CSTD::pow(-v2,<sp/>c_)<sp/>:</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VIGRA_CSTD::pow(v2,<sp/>c_);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1a2f1cac15c70a6f5199a4104c37e88608" kindref="member">result_type</ref>(0.5<sp/>*<sp/>diff_<sp/>*<sp/>(contrasted<sp/>+<sp/>one_)<sp/>+<sp/>min_);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/>promote_type<sp/>b_,<sp/>c_;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1a43a6feb130a539eef06a3666941ad9c9" kindref="member">argument_type</ref><sp/>min_;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>promote_type<sp/>diff_,<sp/>zero_,<sp/>one_;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">BrightnessContrastFunctor&lt;unsigned<sp/>char&gt;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>NumericTraits&lt;unsigned<sp/>char&gt;::RealPromote<sp/>promote_type;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>lut[256];</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1a42ab78c7be842781269c2f01ac0dd641" kindref="member">BrightnessContrastFunctor</ref>(promote_type<sp/>brightness,<sp/>promote_type<sp/>contrast,</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">min</ref><sp/>=<sp/>0,<sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref><sp/>=<sp/>255)</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BrightnessContrastFunctor&lt;promote_type&gt;<sp/>f(brightness,<sp/>contrast,<sp/><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">min</ref>,<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">min</ref>;<sp/>i<sp/>&lt;=<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lut[i]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(f(i)+0.5);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1a144b031a96930bdd54be8c0b7164b4e4" kindref="member">operator()</ref>(<ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1057"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lut[v];</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NO_PARTIAL_TEMPLATE_SPECIALIZATION</highlight></codeline>
<codeline lineno="1064"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ComponentType&gt;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">BrightnessContrastFunctor&lt;RGBValue&lt;ComponentType&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumericTraits&lt;ComponentType&gt;::RealPromote<sp/>promote_type;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>BrightnessContrastFunctor&lt;ComponentType&gt;<sp/>red,<sp/>green,<sp/>blue;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>RGBValue&lt;ComponentType&gt;<sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1a42ab78c7be842781269c2f01ac0dd641" kindref="member">BrightnessContrastFunctor</ref>(promote_type<sp/>brightness,<sp/>promote_type<sp/>contrast,</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">min</ref>,<sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>red(brightness,<sp/>contrast,<sp/>min.red(),<sp/>max.red()),</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>green(brightness,<sp/>contrast,<sp/>min.green(),<sp/>max.green()),</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blue(brightness,<sp/>contrast,<sp/>min.blue(),<sp/>max.blue())</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1a144b031a96930bdd54be8c0b7164b4e4" kindref="member">operator()</ref>(<ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1084"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref>(red(v.red()),<sp/>green(v.green()),<sp/>blue(v.blue()));</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1088"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/>//<sp/>NO_PARTIAL_TEMPLATE_SPECIALIZATION</highlight></codeline>
<codeline lineno="1091"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">BrightnessContrastFunctor&lt;RGBValue&lt;int&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>NumericTraits&lt;int&gt;::RealPromote<sp/>promote_type;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>BrightnessContrastFunctor&lt;int&gt;<sp/>red,<sp/>green,<sp/>blue;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>RGBValue&lt;int&gt;<sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1a42ab78c7be842781269c2f01ac0dd641" kindref="member">BrightnessContrastFunctor</ref>(promote_type<sp/>brightness,<sp/>promote_type<sp/>contrast,</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">min</ref>,<sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>red(brightness,<sp/>contrast,<sp/>min.red(),<sp/>max.red()),</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>green(brightness,<sp/>contrast,<sp/>min.green(),<sp/>max.green()),</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blue(brightness,<sp/>contrast,<sp/>min.blue(),<sp/>max.blue())</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1a144b031a96930bdd54be8c0b7164b4e4" kindref="member">operator()</ref>(<ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1110"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref>(red(v.red()),<sp/>green(v.green()),<sp/>blue(v.blue()));</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1114"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">BrightnessContrastFunctor&lt;RGBValue&lt;float&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>NumericTraits&lt;float&gt;::RealPromote<sp/>promote_type;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>BrightnessContrastFunctor&lt;float&gt;<sp/>red,<sp/>green,<sp/>blue;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>RGBValue&lt;float&gt;<sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1a42ab78c7be842781269c2f01ac0dd641" kindref="member">BrightnessContrastFunctor</ref>(promote_type<sp/>brightness,<sp/>promote_type<sp/>contrast,</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">min</ref>,<sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>red(brightness,<sp/>contrast,<sp/>min.red(),<sp/>max.red()),</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>green(brightness,<sp/>contrast,<sp/>min.green(),<sp/>max.green()),</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blue(brightness,<sp/>contrast,<sp/>min.blue(),<sp/>max.blue())</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1a144b031a96930bdd54be8c0b7164b4e4" kindref="member">operator()</ref>(<ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1134"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref>(red(v.red()),<sp/>green(v.green()),<sp/>blue(v.blue()));</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1138"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PixelType&gt;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;BrightnessContrastFunctor&lt;PixelType&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;BrightnessContrastFunctor&lt;PixelType&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>NO_PARTIAL_TEMPLATE_SPECIALIZATION</highlight></codeline>
<codeline lineno="1149"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">BrightnessContrastFunctor&lt;RGBValue&lt;unsigned<sp/>char&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>NumericTraits&lt;unsigned<sp/>char&gt;::RealPromote<sp/>promote_type;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/>BrightnessContrastFunctor&lt;unsigned<sp/>char&gt;<sp/>red,<sp/>green,<sp/>blue;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>RGBValue&lt;unsigned<sp/>char&gt;<sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1a42ab78c7be842781269c2f01ac0dd641" kindref="member">BrightnessContrastFunctor</ref>(promote_type<sp/>brightness,<sp/>promote_type<sp/>contrast,</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">min</ref><sp/>=<sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref>(0,0,0),</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref><sp/>=<sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref>(255,<sp/>255,<sp/>255))</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>red(brightness,<sp/>contrast,<sp/><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">min</ref>.red(),<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>.red()),</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>green(brightness,<sp/>contrast,<sp/><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">min</ref>.green(),<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>.green()),</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blue(brightness,<sp/>contrast,<sp/><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">min</ref>.blue(),<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>.blue())</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1a144b031a96930bdd54be8c0b7164b4e4" kindref="member">operator()</ref>(<ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1169"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1BrightnessContrastFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref>(red(v.red()),<sp/>green(v.green()),<sp/>blue(v.blue()));</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1173"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GammaFunctor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1183"><highlight class="comment">/**<sp/>\brief<sp/>Perform<sp/>gamma<sp/>correction<sp/>of<sp/>an<sp/>image.</highlight></codeline>
<codeline lineno="1184"><highlight class="comment"></highlight></codeline>
<codeline lineno="1185"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>functor<sp/>applies<sp/>a<sp/>gamma<sp/>correction<sp/>to<sp/>each<sp/>pixel<sp/>in<sp/>order<sp/>to</highlight></codeline>
<codeline lineno="1186"><highlight class="comment"><sp/><sp/><sp/><sp/>modify<sp/>the<sp/>brightness<sp/>of<sp/>the<sp/>image.<sp/><sp/>Gamma<sp/>values<sp/>smaller<sp/>than<sp/>1</highlight></codeline>
<codeline lineno="1187"><highlight class="comment"><sp/><sp/><sp/><sp/>will<sp/>increase<sp/>image<sp/>brightness,<sp/>whereas<sp/>values<sp/>greater<sp/>than<sp/>1</highlight></codeline>
<codeline lineno="1188"><highlight class="comment"><sp/><sp/><sp/><sp/>decrease<sp/>it.<sp/>A<sp/>value<sp/>of<sp/>gamma<sp/>=<sp/>1<sp/>will<sp/>have<sp/>no<sp/>effect.<sp/><sp/>(See<sp/>also</highlight></codeline>
<codeline lineno="1189"><highlight class="comment"><sp/><sp/><sp/><sp/>BrightnessContrastFunctor,<sp/>which<sp/>additionally<sp/>changes<sp/>the</highlight></codeline>
<codeline lineno="1190"><highlight class="comment"><sp/><sp/><sp/><sp/>contrast.)</highlight></codeline>
<codeline lineno="1191"><highlight class="comment"></highlight></codeline>
<codeline lineno="1192"><highlight class="comment"><sp/><sp/><sp/><sp/>For<sp/>\ref<sp/>RGBValue<sp/>&quot;RGBValue&apos;s&quot;,<sp/>the<sp/>transforms<sp/>are<sp/>applied</highlight></codeline>
<codeline lineno="1193"><highlight class="comment"><sp/><sp/><sp/><sp/>component-wise.<sp/><sp/>For<sp/>ease<sp/>of<sp/>use,<sp/>the<sp/>pixel<sp/>values<sp/>are<sp/>assumed<sp/>to</highlight></codeline>
<codeline lineno="1194"><highlight class="comment"><sp/><sp/><sp/><sp/>lie<sp/>between<sp/>the<sp/>given<sp/>minimum<sp/>and<sp/>maximum<sp/>values<sp/>(in<sp/>case<sp/>of<sp/>RGB,</highlight></codeline>
<codeline lineno="1195"><highlight class="comment"><sp/><sp/><sp/><sp/>this<sp/>is<sp/>again<sp/>understood<sp/>component-wise).<sp/>In<sp/>case<sp/>of<sp/>&lt;TT&gt;unsigned</highlight></codeline>
<codeline lineno="1196"><highlight class="comment"><sp/><sp/><sp/><sp/>char&lt;/TT&gt;,<sp/>min<sp/>and<sp/>max<sp/>default<sp/>to<sp/>0<sp/>and<sp/>255<sp/>respectively.</highlight></codeline>
<codeline lineno="1197"><highlight class="comment"><sp/><sp/><sp/><sp/>Precisely,<sp/>the<sp/>following<sp/>transform<sp/>is<sp/>applied<sp/>to<sp/>each<sp/>&lt;em&gt;</highlight></codeline>
<codeline lineno="1198"><highlight class="comment"><sp/><sp/><sp/><sp/>PixelValue&lt;/em&gt;:</highlight></codeline>
<codeline lineno="1199"><highlight class="comment"></highlight></codeline>
<codeline lineno="1200"><highlight class="comment"><sp/><sp/><sp/><sp/>\f[</highlight></codeline>
<codeline lineno="1201"><highlight class="comment"><sp/><sp/><sp/><sp/>\begin{array}{rcl}</highlight></codeline>
<codeline lineno="1202"><highlight class="comment"><sp/><sp/><sp/><sp/>V_1<sp/>&amp;<sp/>=<sp/>&amp;<sp/>\frac{PixelValue<sp/>-<sp/>min}{max<sp/>-<sp/>min}<sp/>\\</highlight></codeline>
<codeline lineno="1203"><highlight class="comment"><sp/><sp/><sp/><sp/>V_2<sp/>&amp;<sp/>=<sp/>&amp;<sp/>V_1^{gamma}<sp/>\\</highlight></codeline>
<codeline lineno="1204"><highlight class="comment"><sp/><sp/><sp/><sp/>Result<sp/>&amp;<sp/>=<sp/>&amp;<sp/>V_2<sp/>(max<sp/>-<sp/>min)<sp/>+<sp/>min</highlight></codeline>
<codeline lineno="1205"><highlight class="comment"><sp/><sp/><sp/><sp/>\end{array}</highlight></codeline>
<codeline lineno="1206"><highlight class="comment"><sp/><sp/><sp/><sp/>\f]</highlight></codeline>
<codeline lineno="1207"><highlight class="comment"></highlight></codeline>
<codeline lineno="1208"><highlight class="comment"><sp/><sp/><sp/><sp/>If<sp/>the<sp/>&lt;TT&gt;PixelType&lt;/TT&gt;<sp/>is<sp/>&lt;TT&gt;unsigned<sp/>char&lt;/TT&gt;,<sp/>a</highlight></codeline>
<codeline lineno="1209"><highlight class="comment"><sp/><sp/><sp/><sp/>look-up-table<sp/>is<sp/>used<sp/>for<sp/>faster<sp/>computation.</highlight></codeline>
<codeline lineno="1210"><highlight class="comment"></highlight></codeline>
<codeline lineno="1211"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1212"><highlight class="comment"></highlight></codeline>
<codeline lineno="1213"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="1214"><highlight class="comment"></highlight></codeline>
<codeline lineno="1215"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1216"><highlight class="comment"></highlight></codeline>
<codeline lineno="1217"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/transformimage.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="1218"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="1219"><highlight class="comment"></highlight></codeline>
<codeline lineno="1220"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1221"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BImage<sp/>bimage(width,<sp/>height);</highlight></codeline>
<codeline lineno="1222"><highlight class="comment"><sp/><sp/><sp/><sp/>double<sp/>gamma;</highlight></codeline>
<codeline lineno="1223"><highlight class="comment"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="1224"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::transformImage(srcImageRange(bimage),<sp/>destImage(bimage),</highlight></codeline>
<codeline lineno="1225"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra::GammaFunctor&lt;unsigned<sp/>char&gt;(gamma));</highlight></codeline>
<codeline lineno="1226"><highlight class="comment"></highlight></codeline>
<codeline lineno="1227"><highlight class="comment"></highlight></codeline>
<codeline lineno="1228"><highlight class="comment"></highlight></codeline>
<codeline lineno="1229"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::FImage<sp/>fimage(width,<sp/>height);</highlight></codeline>
<codeline lineno="1230"><highlight class="comment"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="1231"><highlight class="comment"></highlight></codeline>
<codeline lineno="1232"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::FindMinMax&lt;float&gt;<sp/>minmax;</highlight></codeline>
<codeline lineno="1233"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::inspectImage(srcImageRange(fimage),<sp/>minmax);</highlight></codeline>
<codeline lineno="1234"><highlight class="comment"></highlight></codeline>
<codeline lineno="1235"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::transformImage(srcImageRange(fimage),<sp/>destImage(fimage),</highlight></codeline>
<codeline lineno="1236"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra::GammaFunctor&lt;float&gt;(gamma,<sp/>minmax.min,<sp/>minmax.max));</highlight></codeline>
<codeline lineno="1237"><highlight class="comment"></highlight></codeline>
<codeline lineno="1238"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1239"><highlight class="comment"></highlight></codeline>
<codeline lineno="1240"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Required<sp/>Interface:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1241"><highlight class="comment"></highlight></codeline>
<codeline lineno="1242"><highlight class="comment"><sp/><sp/><sp/><sp/>Scalar<sp/>types:<sp/>must<sp/>be<sp/>a<sp/>linear<sp/>algebra<sp/>(+,<sp/>-<sp/>*,<sp/>NumericTraits),</highlight></codeline>
<codeline lineno="1243"><highlight class="comment"><sp/><sp/><sp/><sp/>strict<sp/>weakly<sp/>ordered<sp/>(&lt;),<sp/>and<sp/>&lt;TT&gt;pow()&lt;/TT&gt;<sp/>must<sp/>be<sp/>defined.</highlight></codeline>
<codeline lineno="1244"><highlight class="comment"></highlight></codeline>
<codeline lineno="1245"><highlight class="comment"><sp/><sp/><sp/><sp/>RGB<sp/>values:<sp/>the<sp/>component<sp/>type<sp/>must<sp/>meet<sp/>the<sp/>above<sp/>requirements.</highlight></codeline>
<codeline lineno="1246"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PixelType&gt;</highlight></codeline>
<codeline lineno="1248" refid="classvigra_1_1GammaFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1GammaFunctor" kindref="compound" tooltip="Perform gamma correction of an image.">GammaFunctor</ref></highlight></codeline>
<codeline lineno="1249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumericTraits&lt;PixelType&gt;::RealPromote<sp/>promote_type;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1255"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="1256"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257" refid="classvigra_1_1GammaFunctor_1a43a6feb130a539eef06a3666941ad9c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PixelType<sp/><ref refid="classvigra_1_1GammaFunctor_1a43a6feb130a539eef06a3666941ad9c9" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1259"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="1260"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261" refid="classvigra_1_1GammaFunctor_1a2f1cac15c70a6f5199a4104c37e88608" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PixelType<sp/><ref refid="classvigra_1_1GammaFunctor_1a2f1cac15c70a6f5199a4104c37e88608" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1263"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>\deprecated<sp/>use<sp/>argument_type<sp/>and<sp/>result_type</highlight></codeline>
<codeline lineno="1264"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265" refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PixelType<sp/><ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1267"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Init<sp/>functor<sp/>for<sp/>argument<sp/>range<sp/>&lt;TT&gt;[min,<sp/>max]&lt;/TT&gt;.</highlight></codeline>
<codeline lineno="1268"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;TT&gt;gamma&lt;/TT&gt;<sp/>values<sp/>&lt;<sp/>1<sp/>will<sp/>increase<sp/>brightness,<sp/>&gt;<sp/>1</highlight></codeline>
<codeline lineno="1269"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>decrease<sp/>it<sp/>(gamma<sp/>==<sp/>1<sp/>means<sp/>no<sp/>change).</highlight></codeline>
<codeline lineno="1270"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1271" refid="classvigra_1_1GammaFunctor_1ab102a43e993c8b16517900205f4dbc0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1GammaFunctor_1ab102a43e993c8b16517900205f4dbc0b" kindref="member">GammaFunctor</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="group__MathFunctions_1ga441c9e4bf9f952c0fe94836634bcf976" kindref="member">gamma</ref>,</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1GammaFunctor_1a43a6feb130a539eef06a3666941ad9c9" kindref="member">argument_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">min</ref>,<sp/><ref refid="classvigra_1_1GammaFunctor_1a43a6feb130a539eef06a3666941ad9c9" kindref="member">argument_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>gamma_((promote_type)gamma),</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min_(min),</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>diff_(max<sp/>-<sp/>min),</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>zero_(NumericTraits&lt;promote_type&gt;::zero()),</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>one_(NumericTraits&lt;promote_type&gt;::one())</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1280"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Calculate<sp/>modified<sp/>gray<sp/>or<sp/>color<sp/>value</highlight></codeline>
<codeline lineno="1281"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282" refid="classvigra_1_1GammaFunctor_1a144b031a96930bdd54be8c0b7164b4e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1GammaFunctor_1a2f1cac15c70a6f5199a4104c37e88608" kindref="member">result_type</ref><sp/><ref refid="classvigra_1_1GammaFunctor_1a144b031a96930bdd54be8c0b7164b4e4" kindref="member">operator()</ref>(<ref refid="classvigra_1_1GammaFunctor_1a43a6feb130a539eef06a3666941ad9c9" kindref="member">argument_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1283"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>promote_type<sp/>v1<sp/>=<sp/>(v<sp/>-<sp/>min_)<sp/>/<sp/>diff_;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>promote_type<sp/>brighter<sp/>=<sp/>VIGRA_CSTD::pow(v1,<sp/>gamma_);</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1GammaFunctor_1a2f1cac15c70a6f5199a4104c37e88608" kindref="member">result_type</ref>(diff_<sp/>*<sp/>brighter<sp/>+<sp/>min_);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/>promote_type<sp/>gamma_;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1GammaFunctor_1a43a6feb130a539eef06a3666941ad9c9" kindref="member">argument_type</ref><sp/>min_;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/>promote_type<sp/>diff_,<sp/>zero_,<sp/>one_;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">GammaFunctor&lt;unsigned<sp/>char&gt;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>NumericTraits&lt;unsigned<sp/>char&gt;::RealPromote<sp/>promote_type;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>lut[256];</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1GammaFunctor_1ab102a43e993c8b16517900205f4dbc0b" kindref="member">GammaFunctor</ref>(promote_type<sp/><ref refid="group__MathFunctions_1ga441c9e4bf9f952c0fe94836634bcf976" kindref="member">gamma</ref>,</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">min</ref><sp/>=<sp/>0,<sp/><ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref><sp/>=<sp/>255)</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GammaFunctor&lt;promote_type&gt;<sp/>f(gamma,<sp/><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">min</ref>,<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>);</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">min</ref>;<sp/>i<sp/>&lt;=<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lut[i]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(f(i)+0.5);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/><ref refid="classvigra_1_1GammaFunctor_1a144b031a96930bdd54be8c0b7164b4e4" kindref="member">operator()</ref>(<ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1317"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lut[v];</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1321"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NO_PARTIAL_TEMPLATE_SPECIALIZATION</highlight></codeline>
<codeline lineno="1324"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ComponentType&gt;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">GammaFunctor&lt;RGBValue&lt;ComponentType&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumericTraits&lt;ComponentType&gt;::RealPromote<sp/>promote_type;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/>GammaFunctor&lt;ComponentType&gt;<sp/>red,<sp/>green,<sp/>blue;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>RGBValue&lt;ComponentType&gt;<sp/><ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1GammaFunctor_1ab102a43e993c8b16517900205f4dbc0b" kindref="member">GammaFunctor</ref>(promote_type<sp/><ref refid="group__MathFunctions_1ga441c9e4bf9f952c0fe94836634bcf976" kindref="member">gamma</ref>,</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">min</ref>,<sp/><ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>red(gamma,<sp/>min.red(),<sp/>max.red()),</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>green(gamma,<sp/>min.green(),<sp/>max.green()),</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blue(gamma,<sp/>min.blue(),<sp/>max.blue())</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/><ref refid="classvigra_1_1GammaFunctor_1a144b031a96930bdd54be8c0b7164b4e4" kindref="member">operator()</ref>(<ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1344"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref>(red(v.red()),<sp/>green(v.green()),<sp/>blue(v.blue()));</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1347"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/>//<sp/>NO_PARTIAL_TEMPLATE_SPECIALIZATION</highlight></codeline>
<codeline lineno="1350"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">GammaFunctor&lt;RGBValue&lt;int&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>NumericTraits&lt;int&gt;::RealPromote<sp/>promote_type;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/>GammaFunctor&lt;int&gt;<sp/>red,<sp/>green,<sp/>blue;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>RGBValue&lt;int&gt;<sp/><ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1GammaFunctor_1ab102a43e993c8b16517900205f4dbc0b" kindref="member">GammaFunctor</ref>(promote_type<sp/><ref refid="group__MathFunctions_1ga441c9e4bf9f952c0fe94836634bcf976" kindref="member">gamma</ref>,</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">min</ref>,<sp/><ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>red(gamma,<sp/>min.red(),<sp/>max.red()),</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>green(gamma,<sp/>min.green(),<sp/>max.green()),</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blue(gamma,<sp/>min.blue(),<sp/>max.blue())</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/><ref refid="classvigra_1_1GammaFunctor_1a144b031a96930bdd54be8c0b7164b4e4" kindref="member">operator()</ref>(<ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1369"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref>(red(v.red()),<sp/>green(v.green()),<sp/>blue(v.blue()));</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1372"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">GammaFunctor&lt;RGBValue&lt;float&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>NumericTraits&lt;float&gt;::RealPromote<sp/>promote_type;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/>GammaFunctor&lt;float&gt;<sp/>red,<sp/>green,<sp/>blue;</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>RGBValue&lt;float&gt;<sp/><ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1GammaFunctor_1ab102a43e993c8b16517900205f4dbc0b" kindref="member">GammaFunctor</ref>(promote_type<sp/><ref refid="group__MathFunctions_1ga441c9e4bf9f952c0fe94836634bcf976" kindref="member">gamma</ref>,</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">min</ref>,<sp/><ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>)</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>red(gamma,<sp/>min.red(),<sp/>max.red()),</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>green(gamma,<sp/>min.green(),<sp/>max.green()),</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blue(gamma,<sp/>min.blue(),<sp/>max.blue())</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/><ref refid="classvigra_1_1GammaFunctor_1a144b031a96930bdd54be8c0b7164b4e4" kindref="member">operator()</ref>(<ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1392"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref>(red(v.red()),<sp/>green(v.green()),<sp/>blue(v.blue()));</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1395"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PixelType&gt;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;GammaFunctor&lt;PixelType&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;GammaFunctor&lt;PixelType&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>NO_PARTIAL_TEMPLATE_SPECIALIZATION</highlight></codeline>
<codeline lineno="1406"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">GammaFunctor&lt;RGBValue&lt;unsigned<sp/>char&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>NumericTraits&lt;unsigned<sp/>char&gt;::RealPromote<sp/>promote_type;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/>GammaFunctor&lt;unsigned<sp/>char&gt;<sp/>red,<sp/>green,<sp/>blue;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>RGBValue&lt;unsigned<sp/>char&gt;<sp/><ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1GammaFunctor_1ab102a43e993c8b16517900205f4dbc0b" kindref="member">GammaFunctor</ref>(promote_type<sp/><ref refid="group__MathFunctions_1ga441c9e4bf9f952c0fe94836634bcf976" kindref="member">gamma</ref>,</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">min</ref><sp/>=<sp/><ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref>(0,0,0),</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref><sp/>=<sp/><ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref>(255,<sp/>255,<sp/>255))</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>red(gamma,<sp/><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">min</ref>.red(),<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>.red()),</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>green(gamma,<sp/><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">min</ref>.green(),<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>.green()),</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blue(gamma,<sp/><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">min</ref>.blue(),<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">max</ref>.blue())</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/><ref refid="classvigra_1_1GammaFunctor_1a144b031a96930bdd54be8c0b7164b4e4" kindref="member">operator()</ref>(<ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1425"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1GammaFunctor_1af1ae1457b0364ede460a98f91a694265" kindref="member">value_type</ref>(red(v.red()),<sp/>green(v.green()),<sp/>blue(v.blue()));</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1428"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VectorNormFunctor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1437"><highlight class="comment">/**<sp/>\brief<sp/>A<sp/>functor<sp/>for<sp/>computing<sp/>the<sp/>vector<sp/>norm</highlight></codeline>
<codeline lineno="1438"><highlight class="comment"></highlight></codeline>
<codeline lineno="1439"><highlight class="comment"><sp/><sp/><sp/><sp/>Calculate<sp/>the<sp/>magnitude<sp/>or<sp/>norm<sp/>from<sp/>a<sp/>given<sp/>vector-valued</highlight></codeline>
<codeline lineno="1440"><highlight class="comment"><sp/><sp/><sp/><sp/>entity.<sp/>The<sp/>vector<sp/>type<sp/>will<sp/>typically<sp/>be<sp/>some<sp/>sort<sp/>of</highlight></codeline>
<codeline lineno="1441"><highlight class="comment"><sp/><sp/><sp/><sp/>ref<sp/>vigra::TinyVector.<sp/>If<sp/>the<sp/>vector<sp/>is<sp/>represented<sp/>by<sp/>a<sp/>pair<sp/>of</highlight></codeline>
<codeline lineno="1442"><highlight class="comment"><sp/><sp/><sp/><sp/>scalar-valued<sp/>images,<sp/>use<sp/>\ref<sp/>vigra::MagnitudeFunctor<sp/>instead.</highlight></codeline>
<codeline lineno="1443"><highlight class="comment"></highlight></codeline>
<codeline lineno="1444"><highlight class="comment"><sp/><sp/><sp/><sp/>At<sp/>least,<sp/>the<sp/>vector<sp/>type<sp/>is<sp/>required<sp/>to<sp/>have<sp/>a<sp/>function</highlight></codeline>
<codeline lineno="1445"><highlight class="comment"><sp/><sp/><sp/><sp/>&apos;&lt;em&gt;result&lt;/em&gt;&lt;TT&gt;<sp/>=<sp/>dot(v,v)&lt;/TT&gt;&apos;.</highlight></codeline>
<codeline lineno="1446"><highlight class="comment"></highlight></codeline>
<codeline lineno="1447"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1448"><highlight class="comment"></highlight></codeline>
<codeline lineno="1449"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="1450"><highlight class="comment"></highlight></codeline>
<codeline lineno="1451"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1452"><highlight class="comment"></highlight></codeline>
<codeline lineno="1453"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/transformimage.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="1454"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="1455"><highlight class="comment"></highlight></codeline>
<codeline lineno="1456"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1457"><highlight class="comment"><sp/><sp/><sp/><sp/>typedef<sp/>vigra::TinyVector&lt;float,<sp/>2&gt;<sp/>Vector;</highlight></codeline>
<codeline lineno="1458"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BasicImage&lt;Vector&gt;<sp/>grad(width,<sp/>height);</highlight></codeline>
<codeline lineno="1459"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::FImage<sp/>magn(width,height);</highlight></codeline>
<codeline lineno="1460"><highlight class="comment"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="1461"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::transformImage(srcImageRange(grad),<sp/>destImage(magn),</highlight></codeline>
<codeline lineno="1462"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VectorNormFunctor&lt;float&gt;()</highlight></codeline>
<codeline lineno="1463"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1464"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1465"><highlight class="comment"></highlight></codeline>
<codeline lineno="1466"><highlight class="comment"><sp/><sp/><sp/><sp/>\see<sp/>vigra::TinyVector,<sp/>dot(),<sp/>vigra::MagnitudeFunctor</highlight></codeline>
<codeline lineno="1467"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="1469" refid="classvigra_1_1VectorNormFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1VectorNormFunctor" kindref="compound" tooltip="A functor for computing the vector norm.">VectorNormFunctor</ref></highlight></codeline>
<codeline lineno="1470"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1472"><highlight class="comment"><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="1473"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1474" refid="classvigra_1_1VectorNormFunctor_1a327eb5b994f1ff9ca372f91051f49325" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>ValueType<sp/><ref refid="classvigra_1_1VectorNormFunctor_1a327eb5b994f1ff9ca372f91051f49325" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1476"><highlight class="comment"><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="1477"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1478" refid="classvigra_1_1VectorNormFunctor_1a7c05131c20aa8fecf170338ed03adbbd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;typename<sp/>ValueType::value_type&gt;::RealPromote<sp/><ref refid="classvigra_1_1VectorNormFunctor_1a7c05131c20aa8fecf170338ed03adbbd" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1480"><highlight class="comment"><sp/><sp/>/**<sp/>calculate<sp/>transform<sp/>&apos;&lt;TT&gt;sqrt(v1*v1<sp/>+<sp/>v2*v2<sp/>+<sp/>...)&lt;/TT&gt;&apos;.</highlight></codeline>
<codeline lineno="1481"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1482" refid="classvigra_1_1VectorNormFunctor_1accc16fa1805fc4130d617cbe0ee01d90" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classvigra_1_1VectorNormFunctor_1a7c05131c20aa8fecf170338ed03adbbd" kindref="member">result_type</ref><sp/><ref refid="classvigra_1_1VectorNormFunctor_1accc16fa1805fc4130d617cbe0ee01d90" kindref="member">operator()</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1VectorNormFunctor_1a327eb5b994f1ff9ca372f91051f49325" kindref="member">argument_type</ref><sp/>&amp;a<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1483"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__FixedPointOperations_1ga22d75753836176f3d172f58be11ecc4c" kindref="member" tooltip="square root.">VIGRA_CSTD::sqrt</ref>(<sp/><ref refid="group__RGBValueOperators_1gaabe9d910ba7a54cbf606254a81e409e6" kindref="member" tooltip="dot product">dot</ref>(a,a)<sp/>);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1486"><highlight class="normal">};<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//--<sp/>class<sp/>VectorNormFunctor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;VectorNormFunctor&lt;ValueType&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1490"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;VectorNormFunctor&lt;ValueType&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1496"><highlight class="comment">/**<sp/>\brief<sp/>A<sp/>functor<sp/>for<sp/>computing<sp/>the<sp/>squared<sp/>vector<sp/>norm</highlight></codeline>
<codeline lineno="1497"><highlight class="comment"></highlight></codeline>
<codeline lineno="1498"><highlight class="comment"><sp/><sp/><sp/><sp/>Calculate<sp/>the<sp/>squared<sp/>magnitude<sp/>or<sp/>norm<sp/>from<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="1499"><highlight class="comment"><sp/><sp/><sp/><sp/>vector-valued<sp/>entity.<sp/>The<sp/>vector<sp/>type<sp/>will<sp/>typically<sp/>be<sp/>some</highlight></codeline>
<codeline lineno="1500"><highlight class="comment"><sp/><sp/><sp/><sp/>sort<sp/>of<sp/>TinyVector.</highlight></codeline>
<codeline lineno="1501"><highlight class="comment"></highlight></codeline>
<codeline lineno="1502"><highlight class="comment"><sp/><sp/><sp/><sp/>At<sp/>least,<sp/>the<sp/>vector<sp/>type<sp/>is<sp/>required<sp/>to<sp/>have<sp/>a<sp/>function</highlight></codeline>
<codeline lineno="1503"><highlight class="comment"><sp/><sp/><sp/><sp/>&apos;&lt;em&gt;result&lt;/em&gt;&lt;TT&gt;<sp/>=<sp/>dot(v,v)&lt;/TT&gt;&apos;.</highlight></codeline>
<codeline lineno="1504"><highlight class="comment"></highlight></codeline>
<codeline lineno="1505"><highlight class="comment"><sp/><sp/><sp/><sp/>For<sp/>an<sp/>example<sp/>of<sp/>its<sp/>usage<sp/>see<sp/>VectorNormFunctor</highlight></codeline>
<codeline lineno="1506"><highlight class="comment"></highlight></codeline>
<codeline lineno="1507"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Traits<sp/>defined:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1508"><highlight class="comment"></highlight></codeline>
<codeline lineno="1509"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;FunctorTraits::isUnaryFunctor&lt;/tt&gt;<sp/>is<sp/>true<sp/>(&lt;tt&gt;VigraTrueType&lt;/tt&gt;)</highlight></codeline>
<codeline lineno="1510"><highlight class="comment"></highlight></codeline>
<codeline lineno="1511"><highlight class="comment"><sp/><sp/><sp/><sp/>\see<sp/>TinyVector,<sp/>dot()</highlight></codeline>
<codeline lineno="1512"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="1514" refid="classvigra_1_1VectorNormSqFunctor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1VectorNormSqFunctor" kindref="compound" tooltip="A functor for computing the squared vector norm.">VectorNormSqFunctor</ref></highlight></codeline>
<codeline lineno="1515"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1517"><highlight class="comment"><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>argument<sp/>type</highlight></codeline>
<codeline lineno="1518"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1519" refid="classvigra_1_1VectorNormSqFunctor_1a327eb5b994f1ff9ca372f91051f49325" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>ValueType<sp/><ref refid="classvigra_1_1VectorNormSqFunctor_1a327eb5b994f1ff9ca372f91051f49325" kindref="member">argument_type</ref>;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1521"><highlight class="comment"><sp/><sp/>/**<sp/>the<sp/>functor&apos;s<sp/>result<sp/>type</highlight></codeline>
<codeline lineno="1522"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1523" refid="classvigra_1_1VectorNormSqFunctor_1a7c05131c20aa8fecf170338ed03adbbd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;typename<sp/>ValueType::value_type&gt;::RealPromote<sp/><ref refid="classvigra_1_1VectorNormSqFunctor_1a7c05131c20aa8fecf170338ed03adbbd" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1525"><highlight class="comment"><sp/><sp/>/**<sp/>calculate<sp/>transform<sp/>&apos;&lt;TT&gt;v1*v1<sp/>+<sp/>v2*v2<sp/>+<sp/>...&lt;/TT&gt;&apos;.</highlight></codeline>
<codeline lineno="1526"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1527" refid="classvigra_1_1VectorNormSqFunctor_1accc16fa1805fc4130d617cbe0ee01d90" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classvigra_1_1VectorNormSqFunctor_1a7c05131c20aa8fecf170338ed03adbbd" kindref="member">result_type</ref><sp/><ref refid="classvigra_1_1VectorNormSqFunctor_1accc16fa1805fc4130d617cbe0ee01d90" kindref="member">operator()</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1VectorNormSqFunctor_1a327eb5b994f1ff9ca372f91051f49325" kindref="member">argument_type</ref><sp/>&amp;a<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1528"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__RGBValueOperators_1gaabe9d910ba7a54cbf606254a81e409e6" kindref="member" tooltip="dot product">dot</ref>(a,a);</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1531"><highlight class="normal">};<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//--<sp/>class<sp/>VectorNormSqFunctor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FunctorTraits&lt;VectorNormSqFunctor&lt;ValueType&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>FunctorTraitsBase&lt;VectorNormSqFunctor&lt;ValueType&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1536"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraTrueType<sp/>isUnaryFunctor;</highlight></codeline>
<codeline lineno="1539"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1541"><highlight class="comment">//@}</highlight></codeline>
<codeline lineno="1542"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>vigra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>VIGRA_TRANSFORMIMAGE_HXX</highlight></codeline>
    </programlisting>
    <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/transformimage.hxx"/>
  </compounddef>
</doxygen>
