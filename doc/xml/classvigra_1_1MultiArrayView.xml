<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="classvigra_1_1MultiArrayView" kind="class" prot="public">
    <compoundname>vigra::MultiArrayView</compoundname>
    <includes refid="multi__array_8hxx" local="no">vigra/multi_array.hxx</includes>
    <templateparamlist>
      <param>
        <type>unsigned int</type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
      <param>
        <type>class</type>
        <declname>StrideTag</declname>
        <defname>StrideTag</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classvigra_1_1MultiArrayView_1ad1ff5270f93b932185051401f1bdc351" prot="public" static="no">
        <name>ActualDimension</name>
        <enumvalue id="classvigra_1_1MultiArrayView_1ad1ff5270f93b932185051401f1bdc351ad5e9f57920c8f3be820823a379d521ea" prot="public">
          <name>actual_dimension</name>
          <initializer> (N==0) ? 1 : N</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the array&apos;s actual dimensionality. This ensures that <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref> can also be used for scalars (that is, when <computeroutput>N == 0</computeroutput>). Calculated as:<linebreak/>
 <programlisting><codeline><highlight class="normal">actual_dimension<sp/>=<sp/>(N==0)<sp/>?<sp/>1<sp/>:<sp/>N</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="777" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="777" bodyend="777"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1MultiArrayView_1a7ccba9db082c23d8d019296dcd9ff735" prot="public" static="no">
        <type><ref refid="classvigra_1_1StridedScanOrderIterator" kindref="compound">StridedScanOrderIterator</ref>&lt; actual_dimension, T, T const &amp;, T const * &gt;</type>
        <definition>typedef StridedScanOrderIterator&lt;actual_dimension, T, T const &amp;, T const *&gt; const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>const scan-order iterator (<ref refid="classvigra_1_1StridedScanOrderIterator" kindref="compound">StridedScanOrderIterator</ref>) type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="817" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="817" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1MultiArrayView_1a13c57dab17e2c903cadfa5e35ba84064" prot="public" static="no">
        <type>const <ref refid="classvigra_1_1MultiArrayView_1a265a253612b46abed17c61b0a5e5ce30" kindref="member">value_type</ref> *</type>
        <definition>typedef const value_type* const_pointer</definition>
        <argsstring></argsstring>
        <name>const_pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>const pointer type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="797" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="797" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1MultiArrayView_1afdb67657e63a66ed3fae7b0c9fd81b48" prot="public" static="no">
        <type>const <ref refid="classvigra_1_1MultiArrayView_1a265a253612b46abed17c61b0a5e5ce30" kindref="member">value_type</ref> &amp;</type>
        <definition>typedef const value_type&amp; const_reference</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>const reference type (result of operator[] const) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="789" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="789" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1MultiArrayView_1a58290f6e0cbd34a15d2e5024bd69d567" prot="public" static="no">
        <type>vigra::detail::MultiIteratorChooser&lt; StrideTag &gt;::template Traverser&lt; actual_dimension, T, T const &amp;, T const * &gt;::type</type>
        <definition>typedef vigra::detail::MultiIteratorChooser&lt; StrideTag&gt;::template Traverser&lt;actual_dimension, T, T const &amp;, T const *&gt;::type const_traverser</definition>
        <argsstring></argsstring>
        <name>const_traverser</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>const traverser (<ref refid="classvigra_1_1MultiIterator" kindref="compound">MultiIterator</ref>) type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="827" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="827" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" prot="public" static="no">
        <type><ref refid="classvigra_1_1MultiArrayShape" kindref="compound">MultiArrayShape</ref>&lt; actual_dimension &gt;::type</type>
        <definition>typedef MultiArrayShape&lt;actual_dimension&gt;::type difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>difference type (used for multi-dimensional offsets and indices) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="801" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="801" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" prot="public" static="no">
        <type><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref></type>
        <definition>typedef MultiArrayIndex difference_type_1</definition>
        <argsstring></argsstring>
        <name>difference_type_1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>difference and index type for a single dimension </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="809" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="809" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1MultiArrayView_1aeee42f6d6232520f1f2342866a2ddefb" prot="public" static="no">
        <type><ref refid="classvigra_1_1StridedScanOrderIterator" kindref="compound">StridedScanOrderIterator</ref>&lt; actual_dimension, T, T &amp;, T * &gt;</type>
        <definition>typedef StridedScanOrderIterator&lt;actual_dimension, T, T &amp;, T *&gt; iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>scan-order iterator (<ref refid="classvigra_1_1StridedScanOrderIterator" kindref="compound">StridedScanOrderIterator</ref>) type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="813" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="813" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1MultiArrayView_1ae77ee86b1b883625be8f0092c104ae75" prot="public" static="no">
        <type><ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray</ref>&lt; N, T &gt;</type>
        <definition>typedef MultiArray&lt;N, T&gt; matrix_type</definition>
        <argsstring></argsstring>
        <name>matrix_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the matrix type associated with this array. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="835" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="835" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1MultiArrayView_1ad25b518036b886d8f35a3c059301d007" prot="public" static="no">
        <type><ref refid="classvigra_1_1MultiArrayView_1a265a253612b46abed17c61b0a5e5ce30" kindref="member">value_type</ref> *</type>
        <definition>typedef value_type* pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>pointer type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="793" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1MultiArrayView_1abe8933d436779a43cb5c1896ff5f2918" prot="public" static="no">
        <type><ref refid="classvigra_1_1MultiArrayView_1a265a253612b46abed17c61b0a5e5ce30" kindref="member">value_type</ref> &amp;</type>
        <definition>typedef value_type&amp; reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>reference type (result of operator[]) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="785" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="785" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1MultiArrayView_1aa0f974ecbf50663cc55fb80dc82af95b" prot="public" static="no">
        <type><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref></type>
        <definition>typedef difference_type size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>size type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="805" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="805" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1MultiArrayView_1a004f010b30c35872abd72cd8bc9a0d19" prot="public" static="no">
        <type>vigra::detail::MultiIteratorChooser&lt; StrideTag &gt;::template Traverser&lt; actual_dimension, T, T &amp;, T * &gt;::type</type>
        <definition>typedef vigra::detail::MultiIteratorChooser&lt; StrideTag&gt;::template Traverser&lt;actual_dimension, T, T &amp;, T *&gt;::type traverser</definition>
        <argsstring></argsstring>
        <name>traverser</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>traverser (<ref refid="classvigra_1_1MultiIterator" kindref="compound">MultiIterator</ref>) type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="822" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="822" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1MultiArrayView_1a265a253612b46abed17c61b0a5e5ce30" prot="public" static="no">
        <type>T</type>
        <definition>typedef T value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the array&apos;s value type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="781" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="781" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1MultiArrayView_1a130f62c61e834658de66d05ed4e2ae02" prot="public" static="no">
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, T, StrideTag &gt;</type>
        <definition>typedef MultiArrayView&lt;N, T, StrideTag&gt; view_type</definition>
        <argsstring></argsstring>
        <name>view_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the view type associated with this array. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="831" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="831" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="classvigra_1_1MultiArrayView_1a607c140f0bd1f5cd4a4a482493afe93c" prot="protected" static="no">
        <type>difference_type::value_type</type>
        <definition>typedef difference_type::value_type diff_zero_t</definition>
        <argsstring></argsstring>
        <name>diff_zero_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="839" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="839" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" prot="protected" static="no" mutable="no">
        <type><ref refid="classvigra_1_1MultiArrayView_1ad25b518036b886d8f35a3c059301d007" kindref="member">pointer</ref></type>
        <definition>pointer m_ptr</definition>
        <argsstring></argsstring>
        <name>m_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>pointer to the image. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="852" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="852" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" prot="protected" static="no" mutable="no">
        <type><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref></type>
        <definition>difference_type m_shape</definition>
        <argsstring></argsstring>
        <name>m_shape</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the shape of the image pointed to is stored here. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="843" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="843" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" prot="protected" static="no" mutable="no">
        <type><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref></type>
        <definition>difference_type m_stride</definition>
        <argsstring></argsstring>
        <name>m_stride</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the strides (offset of a sample to the next) for every dimension are stored here. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="848" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="848" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1acfc6e475db7e5d4f439c5940f4b18c6d" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CN</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool arraysOverlap</definition>
        <argsstring>(const MultiArrayView&lt; N, T, CN &gt; &amp;rhs) const </argsstring>
        <name>arraysOverlap</name>
        <param>
          <type>const <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, T, CN &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="861" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1931" bodyend="1941"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1aa4c08bc293c9e26bc3a5888f9af8f05f" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class CN</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool arraysOverlap</definition>
        <argsstring>(const MultiArrayView&lt; N, U, CN &gt; &amp;) const </argsstring>
        <name>arraysOverlap</name>
        <param>
          <type>const <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, U, CN &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="865" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="864" bodyend="867"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1ada10d77a4929689e467bf3478d5dc538" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool checkInnerStride</definition>
        <argsstring>(UnstridedArrayTag)</argsstring>
        <name>checkInnerStride</name>
        <param>
          <type><ref refid="structvigra_1_1UnstridedArrayTag" kindref="compound">UnstridedArrayTag</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="870" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="869" bodyend="872"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a193cf45dcc77a4247554361ca1835330" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool checkInnerStride</definition>
        <argsstring>(StridedArrayTag)</argsstring>
        <name>checkInnerStride</name>
        <param>
          <type><ref refid="structvigra_1_1StridedArrayTag" kindref="compound">StridedArrayTag</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="875" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="874" bodyend="877"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a84313f2a23b1242a0a0c556d6d97ba06" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class CN</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void copyImpl</definition>
        <argsstring>(const MultiArrayView&lt; N, U, CN &gt; &amp;rhs)</argsstring>
        <name>copyImpl</name>
        <param>
          <type>const <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, U, CN &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="855" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1946" bodyend="1960"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a4d4727187e1a94b33400901c1c815c0b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class CN</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void swapDataImpl</definition>
        <argsstring>(MultiArrayView&lt; N, U, CN &gt; rhs)</argsstring>
        <name>swapDataImpl</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, U, CN &gt;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="858" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1991" bodyend="2015"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a8df8a389781b95596f98ef919b00d5f0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool all</definition>
        <argsstring>() const </argsstring>
        <name>all</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the array contains only non-zero elements (or if all elements are &apos;true&apos; if the value type is &apos;bool&apos;). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1661" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1660" bodyend="1668"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a8be230fdd50e0ce842dd3b0a3012821b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool any</definition>
        <argsstring>() const </argsstring>
        <name>any</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the array contains a non-zero element (or an element that is &apos;true&apos; if the value type is &apos;bool&apos;). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1674" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1673" bodyend="1681"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1ad69bd11391be1a1dba5c8202259664f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1aeee42f6d6232520f1f2342866a2ddefb" kindref="member">iterator</ref></type>
        <definition>iterator begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <reimplementedby refid="classvigra_1_1MultiArray_1ad69bd11391be1a1dba5c8202259664f8">begin</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1ad69bd11391be1a1dba5c8202259664f8">begin</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1ad69bd11391be1a1dba5c8202259664f8">begin</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1ad69bd11391be1a1dba5c8202259664f8">begin</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1ad69bd11391be1a1dba5c8202259664f8">begin</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1ad69bd11391be1a1dba5c8202259664f8">begin</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1ad69bd11391be1a1dba5c8202259664f8">begin</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1ad69bd11391be1a1dba5c8202259664f8">begin</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1ad69bd11391be1a1dba5c8202259664f8">begin</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns a scan-order iterator pointing to the first array element. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1835" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1834" bodyend="1837"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1aa4b02d4f1a8500fb07a551069060709f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1a7ccba9db082c23d8d019296dcd9ff735" kindref="member">const_iterator</ref></type>
        <definition>const_iterator begin</definition>
        <argsstring>() const </argsstring>
        <name>begin</name>
        <reimplementedby refid="classvigra_1_1MultiArray_1aa4b02d4f1a8500fb07a551069060709f">begin</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1aa4b02d4f1a8500fb07a551069060709f">begin</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1aa4b02d4f1a8500fb07a551069060709f">begin</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1aa4b02d4f1a8500fb07a551069060709f">begin</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1aa4b02d4f1a8500fb07a551069060709f">begin</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1aa4b02d4f1a8500fb07a551069060709f">begin</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1aa4b02d4f1a8500fb07a551069060709f">begin</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1aa4b02d4f1a8500fb07a551069060709f">begin</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1aa4b02d4f1a8500fb07a551069060709f">begin</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns a const scan-order iterator pointing to the first array element. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1843" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1842" bodyend="1845"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a5620a71abd33556ab702350b31b123da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N-1, T, typename vigra::detail::MaybeStrided&lt; StrideTag, M &gt;::type &gt;</type>
        <definition>MultiArrayView&lt; N-1, T, typename detail::MaybeStrided&lt; StrideTag, M &gt;::type &gt; bind</definition>
        <argsstring>(difference_type_1 d) const </argsstring>
        <name>bind</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>bind dimension M to index d. this reduces the dimensionality of the image to max { 1, N-1 }.</para><para><bold>Usage:</bold> <programlisting><codeline><highlight class="comment">//<sp/>create<sp/>a<sp/>3D<sp/>array<sp/>of<sp/>size<sp/>40x30x20</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>MultiArray&lt;3,<sp/>double&gt;::difference_type<sp/>Shape;</highlight></codeline>
<codeline><highlight class="normal">MultiArray&lt;3,<sp/>double&gt;<sp/>array3(Shape(40,<sp/>30,<sp/>20));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>get<sp/>a<sp/>2D<sp/>array<sp/>by<sp/>fixing<sp/>index<sp/>1<sp/>to<sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">MultiArrayView<sp/>&lt;2,<sp/>double&gt;<sp/>array2<sp/>=<sp/>array3.bind&lt;1&gt;(12);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>get<sp/>a<sp/>2D<sp/>array<sp/>by<sp/>fixing<sp/>index<sp/>0<sp/>to<sp/>23</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">MultiArrayView<sp/>&lt;2,<sp/>double,<sp/>StridedArrayTag&gt;<sp/>array2a<sp/>=<sp/>array3.bind&lt;0&gt;(23);</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1319" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2130" bodyend="2151"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a1e24fcdbd0c298cbbb07fe21368d5abc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N-1, T, <ref refid="structvigra_1_1StridedArrayTag" kindref="compound">StridedArrayTag</ref> &gt;</type>
        <definition>MultiArrayView&lt; N-1, T, StridedArrayTag &gt; bindAt</definition>
        <argsstring>(difference_type_1 m, difference_type_1 d) const </argsstring>
        <name>bindAt</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>m</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>bind dimension m to index d. this reduces the dimensionality of the image to max { 1, N-1 }.</para><para><bold>Usage:</bold> <programlisting><codeline><highlight class="comment">//<sp/>create<sp/>a<sp/>3D<sp/>array<sp/>of<sp/>size<sp/>40x30x20</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>MultiArray&lt;3,<sp/>double&gt;::difference_type<sp/>Shape;</highlight></codeline>
<codeline><highlight class="normal">MultiArray&lt;3,<sp/>double&gt;<sp/>array3(Shape(40,<sp/>30,<sp/>20));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>get<sp/>a<sp/>2D<sp/>array<sp/>by<sp/>fixing<sp/>index<sp/>2<sp/>to<sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">MultiArrayView<sp/>&lt;2,<sp/>double,<sp/>StridedArrayTag&gt;<sp/>array2<sp/>=<sp/>array3.bindAt(2,<sp/>15);</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1368" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2195" bodyend="2219"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a59031884a541eed08347b5b626ba5613" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, typename ExpandElementResult&lt; T &gt;::type, <ref refid="structvigra_1_1StridedArrayTag" kindref="compound">StridedArrayTag</ref> &gt;</type>
        <definition>MultiArrayView&lt;N, typename ExpandElementResult&lt;T&gt;::type, StridedArrayTag&gt; bindElementChannel</definition>
        <argsstring>(difference_type_1 i) const </argsstring>
        <name>bindElementChannel</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a view to channel &apos;i&apos; of a vector-like value type. Possible value types (of the original array) are: <ref refid="classvigra_1_1TinyVector" kindref="compound">TinyVector</ref>, <ref refid="classvigra_1_1RGBValue" kindref="compound">RGBValue</ref>, <ref refid="classvigra_1_1FFTWComplex" kindref="compound">FFTWComplex</ref>, and <computeroutput>std::complex</computeroutput>. The list can be extended to any type whose memory layout is equivalent to a fixed-size C array, by specializing <computeroutput>ExpandElementResult</computeroutput>.</para><para><bold>Usage:</bold> <programlisting><codeline><highlight class="normal">MultiArray&lt;2,<sp/>RGBValue&lt;float&gt;<sp/>&gt;<sp/>rgb_image(<ref refid="group__MultiIteratorGroup_1ga2e2ffc107bb0e38f9b1288b647c8ec5b" kindref="member" tooltip="shape type for MultiArray&amp;lt;2, T&amp;gt;">Shape2</ref>(w,<sp/>h));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">MultiArrayView&lt;2,<sp/>float,<sp/>StridedArrayTag&gt;<sp/>red<sp/><sp/><sp/>=<sp/>rgb_image.bindElementChannel(0);</highlight></codeline>
<codeline><highlight class="normal">MultiArrayView&lt;2,<sp/>float,<sp/>StridedArrayTag&gt;<sp/>green<sp/>=<sp/>rgb_image.bindElementChannel(1);</highlight></codeline>
<codeline><highlight class="normal">MultiArrayView&lt;2,<sp/>float,<sp/>StridedArrayTag&gt;<sp/>blue<sp/><sp/>=<sp/>rgb_image.bindElementChannel(2);</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1388" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1387" bodyend="1392"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a262f8f52cd526b497522b444a53aeb1c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N-M, T, <ref refid="structvigra_1_1StridedArrayTag" kindref="compound">StridedArrayTag</ref> &gt;</type>
        <definition>MultiArrayView&lt; N-M, T, StridedArrayTag &gt; bindInner</definition>
        <argsstring>(const TinyVector&lt; MultiArrayIndex, M &gt; &amp;d) const </argsstring>
        <name>bindInner</name>
        <param>
          <type>const <ref refid="classvigra_1_1TinyVector" kindref="compound">TinyVector</ref>&lt; <ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref>, M &gt; &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>bind the M innermost dimensions to certain indices. this reduces the dimensionality of the image to max { 1, N-M }.</para><para><bold>Usage:</bold> <programlisting><codeline><highlight class="comment">//<sp/>create<sp/>a<sp/>3D<sp/>array<sp/>of<sp/>size<sp/>40x30x20</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>MultiArray&lt;3,<sp/>double&gt;::difference_type<sp/>Shape;</highlight></codeline>
<codeline><highlight class="normal">MultiArray&lt;3,<sp/>double&gt;<sp/>array3(Shape(40,<sp/>30,<sp/>20));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>get<sp/>a<sp/>1D<sp/>array<sp/>by<sp/>fixing<sp/>index<sp/>0<sp/>to<sp/>12,<sp/>and<sp/>index<sp/>1<sp/>to<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">MultiArrayView<sp/>&lt;1,<sp/>double,<sp/>StridedArrayTag&gt;<sp/>array1<sp/>=<sp/>array3.bindInner(TinyVector&lt;MultiArrayIndex,<sp/>2&gt;(12,<sp/>10));</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1298" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2106" bodyend="2125"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1acf6b7dc4ce0db4457beed5f3d90b5e7e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N-1, T, <ref refid="structvigra_1_1StridedArrayTag" kindref="compound">StridedArrayTag</ref> &gt;</type>
        <definition>MultiArrayView&lt; N-1, T, StridedArrayTag &gt; bindInner</definition>
        <argsstring>(difference_type_1 d) const </argsstring>
        <name>bindInner</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>bind the innermost dimension to a certain index. this reduces the dimensionality of the image to max { 1, N-1 }.</para><para><bold>Usage:</bold> <programlisting><codeline><highlight class="comment">//<sp/>create<sp/>a<sp/>3D<sp/>array<sp/>of<sp/>size<sp/>40x30x20</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>MultiArray&lt;3,<sp/>double&gt;::difference_type<sp/>Shape;</highlight></codeline>
<codeline><highlight class="normal">MultiArray&lt;3,<sp/>double&gt;<sp/>array3(Shape(40,<sp/>30,<sp/>20));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>get<sp/>a<sp/>2D<sp/>array<sp/>by<sp/>fixing<sp/>the<sp/>innermost<sp/>index<sp/>(i.e.<sp/>index<sp/>0)<sp/>to<sp/>23</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">MultiArrayView<sp/>&lt;2,<sp/>double,<sp/>StridedArrayTag&gt;<sp/>array2<sp/>=<sp/>array3.bindInner(23);</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1351" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2175" bodyend="2191"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1acaca6e5790fa86120c4df40c3385d324" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N-M, T, StrideTag &gt;</type>
        <definition>MultiArrayView&lt; N-M, T, StrideTag &gt; bindOuter</definition>
        <argsstring>(const TinyVector&lt; MultiArrayIndex, M &gt; &amp;d) const </argsstring>
        <name>bindOuter</name>
        <param>
          <type>const <ref refid="classvigra_1_1TinyVector" kindref="compound">TinyVector</ref>&lt; <ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref>, M &gt; &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>bind the M outmost dimensions to certain indices. this reduces the dimensionality of the image to max { 1, N-M }.</para><para><bold>Usage:</bold> <programlisting><codeline><highlight class="comment">//<sp/>create<sp/>a<sp/>3D<sp/>array<sp/>of<sp/>size<sp/>40x30x20</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>MultiArray&lt;3,<sp/>double&gt;::difference_type<sp/>Shape;</highlight></codeline>
<codeline><highlight class="normal">MultiArray&lt;3,<sp/>double&gt;<sp/>array3(Shape(40,<sp/>30,<sp/>20));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>get<sp/>a<sp/>1D<sp/>array<sp/>by<sp/>fixing<sp/>index<sp/>1<sp/>to<sp/>12,<sp/>and<sp/>index<sp/>2<sp/>to<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">MultiArrayView<sp/>&lt;1,<sp/>double&gt;<sp/>array1<sp/>=<sp/>array3.bindOuter(TinyVector&lt;MultiArrayIndex,<sp/>2&gt;(12,<sp/>10));</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1280" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2083" bodyend="2101"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a8ca5e1bbe796369b97ee1711671b9ca7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N-1, T, StrideTag &gt;</type>
        <definition>MultiArrayView&lt; N-1, T, StrideTag &gt; bindOuter</definition>
        <argsstring>(difference_type_1 d) const </argsstring>
        <name>bindOuter</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>bind the outmost dimension to a certain index. this reduces the dimensionality of the image to max { 1, N-1 }.</para><para><bold>Usage:</bold> <programlisting><codeline><highlight class="comment">//<sp/>create<sp/>a<sp/>3D<sp/>array<sp/>of<sp/>size<sp/>40x30x20</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>MultiArray&lt;3,<sp/>double&gt;::difference_type<sp/>Shape;</highlight></codeline>
<codeline><highlight class="normal">MultiArray&lt;3,<sp/>double&gt;<sp/>array3(Shape(40,<sp/>30,<sp/>20));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>get<sp/>a<sp/>2D<sp/>array<sp/>by<sp/>fixing<sp/>the<sp/>outermost<sp/>index<sp/>(i.e.<sp/>index<sp/>2)<sp/>to<sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">MultiArrayView<sp/>&lt;2,<sp/>double&gt;<sp/>array2<sp/>=<sp/>array3.bindOuter(12);</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1335" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2155" bodyend="2171"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a55d0184c5fbde73165533111441bb8ff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
        <definition>difference_type_1 coordinateToScanOrderIndex</definition>
        <argsstring>(const difference_type &amp;d) const </argsstring>
        <name>coordinateToScanOrderIndex</name>
        <param>
          <type>const <ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>convert coordinate to scan-order index. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1116" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1115" bodyend="1118"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a93b4cd51930b5c3f49081829c06a10da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void copy</definition>
        <argsstring>(const MultiArrayView &amp;rhs)</argsstring>
        <name>copy</name>
        <param>
          <type>const <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy the data of the right-hand array (array shapes must match). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1217" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1216" bodyend="1221"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a93cc8e36bc3893691f7c34f6f2b742ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class CN</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void copy</definition>
        <argsstring>(const MultiArrayView&lt; N, U, CN &gt; &amp;rhs)</argsstring>
        <name>copy</name>
        <param>
          <type>const <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, U, CN &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy the data of the right-hand array (array shapes must match). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1227" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1226" bodyend="1229"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a9711a38a3b5f2d85c44505938499a0e2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1ad25b518036b886d8f35a3c059301d007" kindref="member">pointer</ref></type>
        <definition>pointer data</definition>
        <argsstring>() const </argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return the pointer to the image data </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1817" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1816" bodyend="1819"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a94fcd2d26ff25d3e428031416b75054d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; 1, T, <ref refid="structvigra_1_1StridedArrayTag" kindref="compound">StridedArrayTag</ref> &gt;</type>
        <definition>MultiArrayView&lt;1, T, StridedArrayTag&gt; diagonal</definition>
        <argsstring>() const </argsstring>
        <name>diagonal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a view to the diagonal elements of the array.</para><para>This produces a 1D array view whose size equals the size of the shortest dimension of the original array.</para><para><bold>Usage:</bold> <programlisting><codeline><highlight class="comment">//<sp/>create<sp/>a<sp/>3D<sp/>array<sp/>of<sp/>size<sp/>40x30x20</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>MultiArray&lt;3,<sp/>double&gt;::difference_type<sp/>Shape;</highlight></codeline>
<codeline><highlight class="normal">MultiArray&lt;3,<sp/>double&gt;<sp/>array3(Shape(40,<sp/>30,<sp/>20));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>get<sp/>a<sp/>view<sp/>to<sp/>the<sp/>diagonal<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">MultiArrayView<sp/>&lt;1,<sp/>double,<sp/>StridedArrayTag&gt;<sp/>diagonal<sp/>=<sp/>array3.diagonal();</highlight></codeline>
<codeline><highlight class="normal">assert(diagonal.shape(0)<sp/>==<sp/>20);</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1464" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1463" bodyend="1467"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a76f6c30e31c82e61b8b7e09ce3d8871d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
        <definition>difference_type_1 elementCount</definition>
        <argsstring>() const </argsstring>
        <name>elementCount</name>
        <reimplementedby refid="classvigra_1_1linalg_1_1Matrix_1a76f6c30e31c82e61b8b7e09ce3d8871d">elementCount</reimplementedby>
        <reimplementedby refid="classvigra_1_1linalg_1_1Matrix_1a76f6c30e31c82e61b8b7e09ce3d8871d">elementCount</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>number of the elements in the array. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1577" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1576" bodyend="1582"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1acad38d52497a975bfb6f2f6acd76631f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1aeee42f6d6232520f1f2342866a2ddefb" kindref="member">iterator</ref></type>
        <definition>iterator end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <reimplementedby refid="classvigra_1_1MultiArray_1acad38d52497a975bfb6f2f6acd76631f">end</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1acad38d52497a975bfb6f2f6acd76631f">end</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1acad38d52497a975bfb6f2f6acd76631f">end</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1acad38d52497a975bfb6f2f6acd76631f">end</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1acad38d52497a975bfb6f2f6acd76631f">end</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1acad38d52497a975bfb6f2f6acd76631f">end</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1acad38d52497a975bfb6f2f6acd76631f">end</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1acad38d52497a975bfb6f2f6acd76631f">end</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1acad38d52497a975bfb6f2f6acd76631f">end</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns a scan-order iterator pointing beyond the last array element. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1851" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1850" bodyend="1853"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a350132543d80a1c1e5be844e6d2878ea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1a7ccba9db082c23d8d019296dcd9ff735" kindref="member">const_iterator</ref></type>
        <definition>const_iterator end</definition>
        <argsstring>() const </argsstring>
        <name>end</name>
        <reimplementedby refid="classvigra_1_1MultiArray_1a350132543d80a1c1e5be844e6d2878ea">end</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a350132543d80a1c1e5be844e6d2878ea">end</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a350132543d80a1c1e5be844e6d2878ea">end</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a350132543d80a1c1e5be844e6d2878ea">end</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a350132543d80a1c1e5be844e6d2878ea">end</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a350132543d80a1c1e5be844e6d2878ea">end</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a350132543d80a1c1e5be844e6d2878ea">end</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a350132543d80a1c1e5be844e6d2878ea">end</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a350132543d80a1c1e5be844e6d2878ea">end</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns a const scan-order iterator pointing beyond the last array element. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1859" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1858" bodyend="1861"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1ab005801d6e252c3ae75ce9da36d1a600" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N+1, typename ExpandElementResult&lt; T &gt;::type, <ref refid="structvigra_1_1StridedArrayTag" kindref="compound">StridedArrayTag</ref> &gt;</type>
        <definition>MultiArrayView&lt; N+1, typename ExpandElementResult&lt; T &gt;::type, StridedArrayTag &gt; expandElements</definition>
        <argsstring>(difference_type_1 d) const </argsstring>
        <name>expandElements</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a view where a vector-like element type is expanded into a new array dimension. The new dimension is inserted at index position &apos;d&apos;, which must be between 0 and N inclusive.</para><para>Possible value types of the original array are: <ref refid="classvigra_1_1TinyVector" kindref="compound">TinyVector</ref>, <ref refid="classvigra_1_1RGBValue" kindref="compound">RGBValue</ref>, <ref refid="classvigra_1_1FFTWComplex" kindref="compound">FFTWComplex</ref>, <computeroutput>std::complex</computeroutput>, and the built-in number types (in this case, <computeroutput>expandElements</computeroutput> is equivalent to <computeroutput>insertSingletonDimension</computeroutput>). The list of supported types can be extended to any type whose memory layout is equivalent to a fixed-size C array, by specializing <computeroutput>ExpandElementResult</computeroutput>.</para><para><bold>Usage:</bold> <programlisting><codeline><highlight class="normal">MultiArray&lt;2,<sp/>RGBValue&lt;float&gt;<sp/>&gt;<sp/>rgb_image(<ref refid="group__MultiIteratorGroup_1ga2e2ffc107bb0e38f9b1288b647c8ec5b" kindref="member" tooltip="shape type for MultiArray&amp;lt;2, T&amp;gt;">Shape2</ref>(w,<sp/>h));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">MultiArrayView&lt;3,<sp/>float,<sp/>StridedArrayTag&gt;<sp/>multiband_image<sp/>=<sp/>rgb_image.expandElements(2);</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1413" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2224" bodyend="2249"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a0effbd4cf91891700ac41e86defe4aa6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hasData</definition>
        <argsstring>() const </argsstring>
        <name>hasData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns true iff this view refers to valid data, i.e. <ref refid="classvigra_1_1MultiArrayView_1a9711a38a3b5f2d85c44505938499a0e2" kindref="member">data()</ref> is not a NULL pointer. (this is false after default construction.) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1827" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1826" bodyend="1829"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1ae8d75c08347781b9854c8aea98c34610" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref> &amp;</type>
        <definition>MultiArrayView&amp; init</definition>
        <argsstring>(const U &amp;init)</argsstring>
        <name>init</name>
        <reimplementedby refid="classvigra_1_1linalg_1_1Matrix_1abb74842cde52d611354a0d685df1f945">init</reimplementedby>
        <reimplementedby refid="classvigra_1_1linalg_1_1Matrix_1abb74842cde52d611354a0d685df1f945">init</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1aa90c22c574eaf8e0bd703912f644081b">init</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1aa90c22c574eaf8e0bd703912f644081b">init</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1aa90c22c574eaf8e0bd703912f644081b">init</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1aa90c22c574eaf8e0bd703912f644081b">init</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1aa90c22c574eaf8e0bd703912f644081b">init</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1aa90c22c574eaf8e0bd703912f644081b">init</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1aa90c22c574eaf8e0bd703912f644081b">init</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1aa90c22c574eaf8e0bd703912f644081b">init</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1aa90c22c574eaf8e0bd703912f644081b">init</reimplementedby>
        <param>
          <type>const U &amp;</type>
          <declname>init</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init with a constant. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1208" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1207" bodyend="1211"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a70170072585722399abd07c46f168909" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N+1, T, StrideTag &gt;</type>
        <definition>MultiArrayView&lt; N+1, T, StrideTag &gt; insertSingletonDimension</definition>
        <argsstring>(difference_type_1 i) const </argsstring>
        <name>insertSingletonDimension</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a singleton dimension (dimension of length 1).</para><para>Singleton dimensions don&apos;t change the size of the data, but introduce a new index that can only take the value 0. This is mainly useful for the &apos;reduce mode&apos; of <ref refid="group__MultiPointoperators_1ga4e3f906de480f4a867340968da8a98dd" kindref="member">transformMultiArray()</ref> and <ref refid="group__MultiPointoperators_1ga14152b4ce55fee06cba896303ef0a539" kindref="member">combineTwoMultiArrays()</ref>, because these functions require the source and destination arrays to have the same number of dimensions.</para><para>The range of <emphasis>i</emphasis> must be <computeroutput>0 &lt;= i &lt;= N</computeroutput>. The new dimension will become the i&apos;th index, and the old indices from i upwards will shift one place to the right.</para><para><bold>Usage:</bold></para><para>Suppose we want have a 2D array and want to create a 1D array that contains the row average of the first array. <programlisting><codeline><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>MultiArrayShape&lt;2&gt;::type<sp/><ref refid="group__MultiIteratorGroup_1ga2e2ffc107bb0e38f9b1288b647c8ec5b" kindref="member" tooltip="shape type for MultiArray&amp;lt;2, T&amp;gt;">Shape2</ref>;</highlight></codeline>
<codeline><highlight class="normal">MultiArray&lt;2,<sp/>double&gt;<sp/>original(<ref refid="group__MultiIteratorGroup_1ga2e2ffc107bb0e38f9b1288b647c8ec5b" kindref="member" tooltip="shape type for MultiArray&amp;lt;2, T&amp;gt;">Shape2</ref>(40,<sp/>30));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>MultiArrayShape&lt;1&gt;::type<sp/><ref refid="group__MultiIteratorGroup_1gaf6799170bf47f30c42a3f164f6ccf8ce" kindref="member" tooltip="shape type for MultiArray&amp;lt;1, T&amp;gt;">Shape1</ref>;</highlight></codeline>
<codeline><highlight class="normal">MultiArray&lt;1,<sp/>double&gt;<sp/>rowAverages(<ref refid="group__MultiIteratorGroup_1gaf6799170bf47f30c42a3f164f6ccf8ce" kindref="member" tooltip="shape type for MultiArray&amp;lt;1, T&amp;gt;">Shape1</ref>(30));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>temporarily<sp/>add<sp/>a<sp/>singleton<sp/>dimension<sp/>to<sp/>the<sp/>destination<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="group__MultiPointoperators_1ga4e3f906de480f4a867340968da8a98dd" kindref="member" tooltip="Transform a multi-dimensional array with a unary function or functor.">transformMultiArray</ref>(srcMultiArrayRange(original),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destMultiArrayRange(rowAverages.insertSingletonDimension(0)),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FindAverage&lt;double&gt;());</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1445" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2253" bodyend="2267"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1acc16a9ac0801c380fcfe1841566efb99" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool isInside</definition>
        <argsstring>(difference_type const &amp;p) const </argsstring>
        <name>isInside</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>check whether the given point is in the array range. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1650" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1649" bodyend="1655"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a3e1a9e07d9bc055f20a1b216370afd2f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool isUnstrided</definition>
        <argsstring>(unsigned int dimension=N-1) const </argsstring>
        <name>isUnstrided</name>
        <param>
          <type>unsigned int</type>
          <declname>dimension</declname>
          <defval>N-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>check whether the array is unstrided (i.e. has consecutive memory) up to the given dimension.</para><para><emphasis>dimension</emphasis> can range from 0 ... N-1. If a certain dimension is unstrided, all lower dimensions are also unstrided. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1258" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1257" bodyend="1263"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1acd4c954a3c2fe5db856c4608f773eb45" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void meanVariance</definition>
        <argsstring>(U *mean, U *variance) const </argsstring>
        <name>meanVariance</name>
        <param>
          <type>U *</type>
          <declname>mean</declname>
        </param>
        <param>
          <type>U *</type>
          <declname>variance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the mean and variance of the values in this array. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1700" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1699" bodyend="1709"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a6d8831009ea104ac1d9f36a2af5b0176" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void minmax</definition>
        <argsstring>(T *minimum, T *maximum) const </argsstring>
        <name>minmax</name>
        <param>
          <type>T *</type>
          <declname>minimum</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>maximum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find the minimum and maximum element in this array. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1686" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1685" bodyend="1694"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1acddece61538d74dc1d7f71ea7c581e67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MultiArrayView</definition>
        <argsstring>()</argsstring>
        <name>MultiArrayView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>default constructor: create an invalid view, i.e. <ref refid="classvigra_1_1MultiArrayView_1a0effbd4cf91891700ac41e86defe4aa6" kindref="member">hasData()</ref> returns false and <ref refid="classvigra_1_1MultiArrayView_1a14c1df938ca1578ffc71bc9728b4e401" kindref="member">size()</ref> is zero. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="886" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="884" bodyend="886"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a2d2c039824d104f03d97d00a5b87d914" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MultiArrayView</definition>
        <argsstring>(const difference_type &amp;shape, pointer ptr)</argsstring>
        <name>MultiArrayView</name>
        <param>
          <type>const <ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref> &amp;</type>
          <declname>shape</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1ad25b518036b886d8f35a3c059301d007" kindref="member">pointer</ref></type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>construct from shape and pointer </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="894" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="890" bodyend="894"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1ac8e675f45de1e53c3cc147375a920ea4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MultiArrayView</definition>
        <argsstring>(const difference_type &amp;shape, const difference_type &amp;stride, pointer ptr)</argsstring>
        <name>MultiArrayView</name>
        <param>
          <type>const <ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref> &amp;</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>const <ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref> &amp;</type>
          <declname>stride</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1ad25b518036b886d8f35a3c059301d007" kindref="member">pointer</ref></type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct from shape, strides (offset of a sample to the next) for every dimension, and pointer. (Note that strides are not given in bytes, but in offset steps of the respective pointer type.) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="907" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="901" bodyend="910"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a0816d7af1f17517f39dbef405d2e4a47" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>NormTraits&lt; <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref> &gt;::NormType</type>
        <definition>NormTraits&lt; MultiArrayView&lt; N, T, StrideTag &gt; &gt;::NormType norm</definition>
        <argsstring>(int type=2, bool useSquaredNorm=true) const </argsstring>
        <name>norm</name>
        <param>
          <type>int</type>
          <declname>type</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>useSquaredNorm</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute various norms of the array. The norm is determined by parameter <emphasis>type:</emphasis> </para><para><itemizedlist>
<listitem>
<para>type == 0: maximum norm (L-infinity): maximum of absolute values of the array elements </para></listitem>
<listitem>
<para>type == 1: Manhattan norm (L1): sum of absolute values of the array elements </para></listitem>
<listitem>
<para>type == 2: Euclidean norm (L2): square root of <computeroutput><ref refid="classvigra_1_1MultiArrayView_1a6ada450d8e72c934a5406d1c2b5cf033" kindref="member">squaredNorm()</ref></computeroutput> when <emphasis>useSquaredNorm</emphasis> is <computeroutput>true</computeroutput>,<linebreak/>
 or direct algorithm that avoids underflow/overflow otherwise. </para></listitem>
</itemizedlist>
</para><para>Parameter <emphasis>useSquaredNorm</emphasis> has no effect when <emphasis>type</emphasis> != 2. Defaults: compute L2 norm as square root of <computeroutput><ref refid="classvigra_1_1MultiArrayView_1a6ada450d8e72c934a5406d1c2b5cf033" kindref="member">squaredNorm()</ref></computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1812" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2271" bodyend="2322"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1ae01c274541e9b1d39eab573df7344fd1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>operator MultiArrayView&lt; N, T, StridedArrayTag &gt;</definition>
        <argsstring>() const </argsstring>
        <name>operator MultiArrayView&lt; N, T, StridedArrayTag &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Conversion to a strided view. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="915" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="914" bodyend="917"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a018c002f23f0985c9ca89cd0a244f59d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class C1</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(MultiArrayView&lt; N, U, C1 &gt; const &amp;rhs) const </argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, U, C1 &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>check whether two arrays are not elementwise equal. Also true when the two arrays have different shapes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1643" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1642" bodyend="1645"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a902647635a189183308cb1fa8457f54a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1abe8933d436779a43cb5c1896ff5f2918" kindref="member">reference</ref></type>
        <definition>reference operator()</definition>
        <argsstring>(difference_type_1 x)</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>1D array access. Use only if N == 1. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1123" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1122" bodyend="1126"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a3fe9a64fd6323465b3bf17ef76de53b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1abe8933d436779a43cb5c1896ff5f2918" kindref="member">reference</ref></type>
        <definition>reference operator()</definition>
        <argsstring>(difference_type_1 x, difference_type_1 y)</argsstring>
        <name>operator()</name>
        <reimplementedby refid="classvigra_1_1linalg_1_1Matrix_1a509f81b4fe64d6545f02c54a75fa9b5a">operator()</reimplementedby>
        <reimplementedby refid="classvigra_1_1linalg_1_1Matrix_1a509f81b4fe64d6545f02c54a75fa9b5a">operator()</reimplementedby>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>2D array access. Use only if N == 2. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1131" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1130" bodyend="1134"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a95f6b94c53d6aa8ba4a9c4671a9daa65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1abe8933d436779a43cb5c1896ff5f2918" kindref="member">reference</ref></type>
        <definition>reference operator()</definition>
        <argsstring>(difference_type_1 x, difference_type_1 y, difference_type_1 z)</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>3D array access. Use only if N == 3. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1139" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1138" bodyend="1142"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1af2c5eb62f1650fb7a3735990346478ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1abe8933d436779a43cb5c1896ff5f2918" kindref="member">reference</ref></type>
        <definition>reference operator()</definition>
        <argsstring>(difference_type_1 x, difference_type_1 y, difference_type_1 z, difference_type_1 u)</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>z</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>4D array access. Use only if N == 4. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1148" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1146" bodyend="1151"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a05f95d6148a375885a7be85819dcbc02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1abe8933d436779a43cb5c1896ff5f2918" kindref="member">reference</ref></type>
        <definition>reference operator()</definition>
        <argsstring>(difference_type_1 x, difference_type_1 y, difference_type_1 z, difference_type_1 u, difference_type_1 v)</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>z</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>u</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>5D array access. Use only if N == 5. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1157" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1155" bodyend="1160"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a2fa26a6082ac991137129dcbc4257ae0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1afdb67657e63a66ed3fae7b0c9fd81b48" kindref="member">const_reference</ref></type>
        <definition>const_reference operator()</definition>
        <argsstring>(difference_type_1 x) const </argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>1D const array access. Use only if N == 1. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1165" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1164" bodyend="1168"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a5fbf52c1c9127b0e97f2cd1c263f9c5f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1afdb67657e63a66ed3fae7b0c9fd81b48" kindref="member">const_reference</ref></type>
        <definition>const_reference operator()</definition>
        <argsstring>(difference_type_1 x, difference_type_1 y) const </argsstring>
        <name>operator()</name>
        <reimplementedby refid="classvigra_1_1linalg_1_1Matrix_1a19ffd54d21c4a293f7a86cbefdcdf65c">operator()</reimplementedby>
        <reimplementedby refid="classvigra_1_1linalg_1_1Matrix_1a19ffd54d21c4a293f7a86cbefdcdf65c">operator()</reimplementedby>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>2D const array access. Use only if N == 2. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1173" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1172" bodyend="1176"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1ad157dd636e184ad7a235158bab39c5d8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1afdb67657e63a66ed3fae7b0c9fd81b48" kindref="member">const_reference</ref></type>
        <definition>const_reference operator()</definition>
        <argsstring>(difference_type_1 x, difference_type_1 y, difference_type_1 z) const </argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>3D const array access. Use only if N == 3. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1181" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1180" bodyend="1184"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1abcbc55ed1f30019f85a6f25bf376ef2a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1afdb67657e63a66ed3fae7b0c9fd81b48" kindref="member">const_reference</ref></type>
        <definition>const_reference operator()</definition>
        <argsstring>(difference_type_1 x, difference_type_1 y, difference_type_1 z, difference_type_1 u) const </argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>z</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>4D const array access. Use only if N == 4. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1190" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1188" bodyend="1193"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a7792042817681cc6d8f5674b168419c1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1afdb67657e63a66ed3fae7b0c9fd81b48" kindref="member">const_reference</ref></type>
        <definition>const_reference operator()</definition>
        <argsstring>(difference_type_1 x, difference_type_1 y, difference_type_1 z, difference_type_1 u, difference_type_1 v) const </argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>z</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>u</declname>
        </param>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>5D const array access. Use only if N == 5. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1199" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1197" bodyend="1202"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a2246e065e45bd9bd792efabac9fab724" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class C1</type>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref> &amp;</type>
        <definition>MultiArrayView&amp; operator*=</definition>
        <argsstring>(MultiArrayView&lt; N, U, C1 &gt; const &amp;rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, U, C1 &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiply-assignment of a compatible <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>. Fails with <computeroutput>PreconditionViolation</computeroutput> exception when the shapes do not match. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="958"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a6cc7ac8b9105a0d95b2c7750252d32ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref> &amp;</type>
        <definition>MultiArrayView&amp; operator*=</definition>
        <argsstring>(T const &amp;rhs)</argsstring>
        <name>operator*=</name>
        <reimplementedby refid="classvigra_1_1MultiArray_1a88ea293d8f6d74123071e5ee63fc0c5a">operator*=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a88ea293d8f6d74123071e5ee63fc0c5a">operator*=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a88ea293d8f6d74123071e5ee63fc0c5a">operator*=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a88ea293d8f6d74123071e5ee63fc0c5a">operator*=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a88ea293d8f6d74123071e5ee63fc0c5a">operator*=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a88ea293d8f6d74123071e5ee63fc0c5a">operator*=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a88ea293d8f6d74123071e5ee63fc0c5a">operator*=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a88ea293d8f6d74123071e5ee63fc0c5a">operator*=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a88ea293d8f6d74123071e5ee63fc0c5a">operator*=</reimplementedby>
        <param>
          <type>T const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiply-assignment of a scalar. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="985" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="984" bodyend="988"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a35f6aab0e7f37cbf1de49abe62901ec5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Expression</type>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref> &amp;</type>
        <definition>MultiArrayView&amp; operator*=</definition>
        <argsstring>(multi_math::MultiMathOperand&lt; Expression &gt; const &amp;rhs)</argsstring>
        <name>operator*=</name>
        <reimplementedby refid="classvigra_1_1MultiArray_1a78d6b918c2821316ffc5665e4498a62b">operator*=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a78d6b918c2821316ffc5665e4498a62b">operator*=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a78d6b918c2821316ffc5665e4498a62b">operator*=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a78d6b918c2821316ffc5665e4498a62b">operator*=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a78d6b918c2821316ffc5665e4498a62b">operator*=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a78d6b918c2821316ffc5665e4498a62b">operator*=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a78d6b918c2821316ffc5665e4498a62b">operator*=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a78d6b918c2821316ffc5665e4498a62b">operator*=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a78d6b918c2821316ffc5665e4498a62b">operator*=</reimplementedby>
        <param>
          <type>multi_math::MultiMathOperand&lt; Expression &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiply-assignment of an array expression. Fails with <computeroutput>PreconditionViolation</computeroutput> exception when the shapes do not match. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1033" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1032" bodyend="1036"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a0db6c678b054c0cfba823c0fd355cc92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class C1</type>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref> &amp;</type>
        <definition>MultiArrayView&amp; operator+=</definition>
        <argsstring>(MultiArrayView&lt; N, U, C1 &gt; const &amp;rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, U, C1 &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add-assignment of a compatible <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>. Fails with <computeroutput>PreconditionViolation</computeroutput> exception when the shapes do not match. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="946"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1af80e0592a63a35af2748ba5c54bf51ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref> &amp;</type>
        <definition>MultiArrayView&amp; operator+=</definition>
        <argsstring>(T const &amp;rhs)</argsstring>
        <name>operator+=</name>
        <reimplementedby refid="classvigra_1_1MultiArray_1afa950f74d05a3e46a65dcaa0e353ec8c">operator+=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1afa950f74d05a3e46a65dcaa0e353ec8c">operator+=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1afa950f74d05a3e46a65dcaa0e353ec8c">operator+=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1afa950f74d05a3e46a65dcaa0e353ec8c">operator+=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1afa950f74d05a3e46a65dcaa0e353ec8c">operator+=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1afa950f74d05a3e46a65dcaa0e353ec8c">operator+=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1afa950f74d05a3e46a65dcaa0e353ec8c">operator+=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1afa950f74d05a3e46a65dcaa0e353ec8c">operator+=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1afa950f74d05a3e46a65dcaa0e353ec8c">operator+=</reimplementedby>
        <param>
          <type>T const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add-assignment of a scalar. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="969" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="968" bodyend="972"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a927f4e96d6f5b28c7c7cbc7e6ca978bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Expression</type>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref> &amp;</type>
        <definition>MultiArrayView&amp; operator+=</definition>
        <argsstring>(multi_math::MultiMathOperand&lt; Expression &gt; const &amp;rhs)</argsstring>
        <name>operator+=</name>
        <reimplementedby refid="classvigra_1_1MultiArray_1a3afee44754e764e42527a74f10d91162">operator+=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a3afee44754e764e42527a74f10d91162">operator+=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a3afee44754e764e42527a74f10d91162">operator+=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a3afee44754e764e42527a74f10d91162">operator+=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a3afee44754e764e42527a74f10d91162">operator+=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a3afee44754e764e42527a74f10d91162">operator+=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a3afee44754e764e42527a74f10d91162">operator+=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a3afee44754e764e42527a74f10d91162">operator+=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a3afee44754e764e42527a74f10d91162">operator+=</reimplementedby>
        <param>
          <type>multi_math::MultiMathOperand&lt; Expression &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add-assignment of an array expression. Fails with <computeroutput>PreconditionViolation</computeroutput> exception when the shapes do not match. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1013" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1012" bodyend="1016"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1ac9d3cda29b22226f730c4520bcb2c1ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class C1</type>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref> &amp;</type>
        <definition>MultiArrayView&amp; operator-=</definition>
        <argsstring>(MultiArrayView&lt; N, U, C1 &gt; const &amp;rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, U, C1 &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Subtract-assignment of a compatible <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>. Fails with <computeroutput>PreconditionViolation</computeroutput> exception when the shapes do not match. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="952"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1aa8b0daf746d75139531bff75b1f43fa9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref> &amp;</type>
        <definition>MultiArrayView&amp; operator-=</definition>
        <argsstring>(T const &amp;rhs)</argsstring>
        <name>operator-=</name>
        <reimplementedby refid="classvigra_1_1MultiArray_1a5bd660af26f82ea07946ef35780a04a3">operator-=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a5bd660af26f82ea07946ef35780a04a3">operator-=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a5bd660af26f82ea07946ef35780a04a3">operator-=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a5bd660af26f82ea07946ef35780a04a3">operator-=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a5bd660af26f82ea07946ef35780a04a3">operator-=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a5bd660af26f82ea07946ef35780a04a3">operator-=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a5bd660af26f82ea07946ef35780a04a3">operator-=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a5bd660af26f82ea07946ef35780a04a3">operator-=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a5bd660af26f82ea07946ef35780a04a3">operator-=</reimplementedby>
        <param>
          <type>T const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Subtract-assignment of a scalar. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="977" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="976" bodyend="980"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1af514e5535c2682fcc0970b133a25b158" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Expression</type>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref> &amp;</type>
        <definition>MultiArrayView&amp; operator-=</definition>
        <argsstring>(multi_math::MultiMathOperand&lt; Expression &gt; const &amp;rhs)</argsstring>
        <name>operator-=</name>
        <reimplementedby refid="classvigra_1_1MultiArray_1a57a1104160719fee7bbc19880aaef568">operator-=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a57a1104160719fee7bbc19880aaef568">operator-=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a57a1104160719fee7bbc19880aaef568">operator-=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a57a1104160719fee7bbc19880aaef568">operator-=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a57a1104160719fee7bbc19880aaef568">operator-=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a57a1104160719fee7bbc19880aaef568">operator-=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a57a1104160719fee7bbc19880aaef568">operator-=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a57a1104160719fee7bbc19880aaef568">operator-=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a57a1104160719fee7bbc19880aaef568">operator-=</reimplementedby>
        <param>
          <type>multi_math::MultiMathOperand&lt; Expression &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Subtract-assignment of an array expression. Fails with <computeroutput>PreconditionViolation</computeroutput> exception when the shapes do not match. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1023" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1022" bodyend="1026"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1ae4dd7bff037e05a3580cd66ca857c3f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class C1</type>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref> &amp;</type>
        <definition>MultiArrayView&amp; operator/=</definition>
        <argsstring>(MultiArrayView&lt; N, U, C1 &gt; const &amp;rhs)</argsstring>
        <name>operator/=</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, U, C1 &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Divide-assignment of a compatible <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>. Fails with <computeroutput>PreconditionViolation</computeroutput> exception when the shapes do not match. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="964"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1aad41190865f1ff0b93dcef5d07938a0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref> &amp;</type>
        <definition>MultiArrayView&amp; operator/=</definition>
        <argsstring>(T const &amp;rhs)</argsstring>
        <name>operator/=</name>
        <reimplementedby refid="classvigra_1_1MultiArray_1a3417966535ad503c8f293f298205a8f5">operator/=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a3417966535ad503c8f293f298205a8f5">operator/=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a3417966535ad503c8f293f298205a8f5">operator/=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a3417966535ad503c8f293f298205a8f5">operator/=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a3417966535ad503c8f293f298205a8f5">operator/=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a3417966535ad503c8f293f298205a8f5">operator/=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a3417966535ad503c8f293f298205a8f5">operator/=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a3417966535ad503c8f293f298205a8f5">operator/=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a3417966535ad503c8f293f298205a8f5">operator/=</reimplementedby>
        <param>
          <type>T const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Divide-assignment of a scalar. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="993" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="992" bodyend="996"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a644075b68b6b01524b1b8620dbd79758" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Expression</type>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref> &amp;</type>
        <definition>MultiArrayView&amp; operator/=</definition>
        <argsstring>(multi_math::MultiMathOperand&lt; Expression &gt; const &amp;rhs)</argsstring>
        <name>operator/=</name>
        <reimplementedby refid="classvigra_1_1MultiArray_1a6e8d929ccae2ab0f0a07668610b5b172">operator/=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a6e8d929ccae2ab0f0a07668610b5b172">operator/=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a6e8d929ccae2ab0f0a07668610b5b172">operator/=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a6e8d929ccae2ab0f0a07668610b5b172">operator/=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a6e8d929ccae2ab0f0a07668610b5b172">operator/=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a6e8d929ccae2ab0f0a07668610b5b172">operator/=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a6e8d929ccae2ab0f0a07668610b5b172">operator/=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a6e8d929ccae2ab0f0a07668610b5b172">operator/=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1a6e8d929ccae2ab0f0a07668610b5b172">operator/=</reimplementedby>
        <param>
          <type>multi_math::MultiMathOperand&lt; Expression &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Divide-assignment of an array expression. Fails with <computeroutput>PreconditionViolation</computeroutput> exception when the shapes do not match. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1043" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1042" bodyend="1046"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1aaf7167061b3a03a33146694f32aa380f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref> &amp;</type>
        <definition>MultiArrayView&lt; N, T, StrideTag &gt; &amp; operator=</definition>
        <argsstring>(MultiArrayView const &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref> const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assignment. There are 3 cases:</para><para><itemizedlist>
<listitem>
<para>When this <computeroutput><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref></computeroutput> does not point to valid data (e.g. after default construction), it becomes a copy of <emphasis>rhs</emphasis>. </para></listitem>
<listitem>
<para>When the shapes of the two arrays match, the array contents are copied. </para></listitem>
<listitem>
<para>Otherwise, a <computeroutput>PreconditionViolation</computeroutput> exception is thrown. </para></listitem>
</itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="928" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1911" bodyend="1926"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a47317f3dddbd8b1d447eee03040ae00b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class C1</type>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref> &amp;</type>
        <definition>MultiArrayView&amp; operator=</definition>
        <argsstring>(MultiArrayView&lt; N, U, C1 &gt; const &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, U, C1 &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assignment of a differently typed <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>. Fails with <computeroutput>PreconditionViolation</computeroutput> exception when the shapes do not match. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="935" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="934" bodyend="940"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1aba1db9e0b6bddad5e85929219950e98d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Expression</type>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref> &amp;</type>
        <definition>MultiArrayView&amp; operator=</definition>
        <argsstring>(multi_math::MultiMathOperand&lt; Expression &gt; const &amp;rhs)</argsstring>
        <name>operator=</name>
        <reimplementedby refid="classvigra_1_1MultiArray_1ad4d7ed46ffb1338b0654272afa1682f8">operator=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1ad4d7ed46ffb1338b0654272afa1682f8">operator=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1ad4d7ed46ffb1338b0654272afa1682f8">operator=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1ad4d7ed46ffb1338b0654272afa1682f8">operator=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1ad4d7ed46ffb1338b0654272afa1682f8">operator=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1ad4d7ed46ffb1338b0654272afa1682f8">operator=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1ad4d7ed46ffb1338b0654272afa1682f8">operator=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1ad4d7ed46ffb1338b0654272afa1682f8">operator=</reimplementedby>
        <reimplementedby refid="classvigra_1_1MultiArray_1ad4d7ed46ffb1338b0654272afa1682f8">operator=</reimplementedby>
        <param>
          <type>multi_math::MultiMathOperand&lt; Expression &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assignment of an array expression. Fails with <computeroutput>PreconditionViolation</computeroutput> exception when the shapes do not match. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1003" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1002" bodyend="1006"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1af2799b196fd761fc6d5313cf374f2b5a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class C1</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(MultiArrayView&lt; N, U, C1 &gt; const &amp;rhs) const </argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, U, C1 &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>check whether two arrays are elementwise equal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1632" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1631" bodyend="1636"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1aebc939b0cbcef6234def78f6fcb50bf2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1abe8933d436779a43cb5c1896ff5f2918" kindref="member">reference</ref></type>
        <definition>reference operator[]</definition>
        <argsstring>(const difference_type &amp;d)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>array access. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1051" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1050" bodyend="1054"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a77fdced99246dc012c098ffdd020e336" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1afdb67657e63a66ed3fae7b0c9fd81b48" kindref="member">const_reference</ref></type>
        <definition>const_reference operator[]</definition>
        <argsstring>(const difference_type &amp;d) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>array access. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1059" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1058" bodyend="1062"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1ace2c9cd7baee89bc7f005e3664693235" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned int</type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N-M, T, <ref refid="structvigra_1_1StridedArrayTag" kindref="compound">StridedArrayTag</ref> &gt;</type>
        <definition>MultiArrayView&lt;N-M, T, StridedArrayTag&gt; operator[]</definition>
        <argsstring>(const TinyVector&lt; MultiArrayIndex, M &gt; &amp;d) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="classvigra_1_1TinyVector" kindref="compound">TinyVector</ref>&lt; <ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref>, M &gt; &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>equivalent to <ref refid="classvigra_1_1MultiArrayView_1a262f8f52cd526b497522b444a53aeb1c" kindref="member">bindInner()</ref>, when M &lt; N. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1068" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1067" bodyend="1070"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a994b70e9a282ffd06e7fc7df7308e4c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1abe8933d436779a43cb5c1896ff5f2918" kindref="member">reference</ref></type>
        <definition>reference operator[]</definition>
        <argsstring>(difference_type_1 d)</argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Array access in scan-order sense. Mostly useful to support standard indexing for 1-dimensional multi-arrays, but works for any N. Use <ref refid="classvigra_1_1MultiArrayView_1aa2a1a7741de3368ab949dff7b574680c" kindref="member">scanOrderIndexToCoordinate()</ref> and <ref refid="classvigra_1_1MultiArrayView_1a55d0184c5fbde73165533111441bb8ff" kindref="member">coordinateToScanOrderIndex()</ref> for conversion between indices and coordinates.</para><para><bold>Note:</bold> This function should not be used in the inner loop, because the conversion of the scan order index into a memory address is expensive (it must take into account that memory may not be consecutive for subarrays and/or strided arrays). Always prefer operator() if possible. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1083" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1082" bodyend="1086"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a7ec14f3bf1d4cdfc41d8630176a82a07" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1afdb67657e63a66ed3fae7b0c9fd81b48" kindref="member">const_reference</ref></type>
        <definition>const_reference operator[]</definition>
        <argsstring>(difference_type_1 d) const </argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Array access in scan-order sense. Mostly useful to support standard indexing for 1-dimensional multi-arrays, but works for any N. Use <ref refid="classvigra_1_1MultiArrayView_1aa2a1a7741de3368ab949dff7b574680c" kindref="member">scanOrderIndexToCoordinate()</ref> and <ref refid="classvigra_1_1MultiArrayView_1a55d0184c5fbde73165533111441bb8ff" kindref="member">coordinateToScanOrderIndex()</ref> for conversion between indices and coordinates.</para><para><bold>Note:</bold> This function should not be used in the inner loop, because the conversion of the scan order index into a memory address is expensive (it must take into account that memory may not be consecutive for subarrays and/or strided arrays). Always prefer operator() if possible. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1099" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1098" bodyend="1102"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a62a571ba62a9cc4b4f27af78b20a6d0e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, T, <ref refid="structvigra_1_1StridedArrayTag" kindref="compound">StridedArrayTag</ref> &gt;</type>
        <definition>MultiArrayView&lt; N, T, StridedArrayTag &gt; permuteDimensions</definition>
        <argsstring>(const difference_type &amp;s) const </argsstring>
        <name>permuteDimensions</name>
        <param>
          <type>const <ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>permute the dimensions of the array. The function exchanges the meaning of the dimensions without copying the data. In case of a 2-dimensional array, this is simply array transposition. In higher dimensions, there are more possibilities.</para><para><bold>Usage:</bold><linebreak/>
 <programlisting><codeline><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArray_1a7a3c9714bbd0b64760c377a88fd36c63" kindref="member">MultiArray&lt;2, double&gt;::difference_type</ref><sp/>Shape;</highlight></codeline>
<codeline><highlight class="normal">MultiArray&lt;2,<sp/>double&gt;<sp/>array(10,<sp/>20);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">MultiArray&lt;2,<sp/>double,<sp/>StridedArrayTag&gt;<sp/>transposed<sp/>=<sp/>array.permuteDimensions(Shape(1,0));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;array.shape(0),<sp/>++i)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;array.shape(1);<sp/>++j)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(array(i,<sp/>j)<sp/>==<sp/>transposed(j,<sp/>i));</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1545" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2019" bodyend="2031"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a4f32a16f89e9ff9927a20dc3c7abee6b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, T, <ref refid="structvigra_1_1StridedArrayTag" kindref="compound">StridedArrayTag</ref> &gt;</type>
        <definition>MultiArrayView&lt; N, T, StridedArrayTag &gt; permuteStridesAscending</definition>
        <argsstring>() const </argsstring>
        <name>permuteStridesAscending</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Permute the dimensions of the array so that the strides are in ascending order. Determines the appropriate permutation and then calls <ref refid="classvigra_1_1MultiArrayView_1a62a571ba62a9cc4b4f27af78b20a6d0e" kindref="member">permuteDimensions()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1551" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2062" bodyend="2068"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a421ac71c17f86f900041784e3c77857a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, T, <ref refid="structvigra_1_1StridedArrayTag" kindref="compound">StridedArrayTag</ref> &gt;</type>
        <definition>MultiArrayView&lt; N, T, StridedArrayTag &gt; permuteStridesDescending</definition>
        <argsstring>() const </argsstring>
        <name>permuteStridesDescending</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Permute the dimensions of the array so that the strides are in descending order. Determines the appropriate permutation and then calls <ref refid="classvigra_1_1MultiArrayView_1a62a571ba62a9cc4b4f27af78b20a6d0e" kindref="member">permuteDimensions()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1557" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2072" bodyend="2078"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a5b3042c71814da638e52b4d547771cf4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>U</type>
        <definition>U product</definition>
        <argsstring>() const </argsstring>
        <name>product</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the product of the array elements.</para><para>You must provide the type of the result by an explicit template parameter: <programlisting><codeline><highlight class="normal">MultiArray&lt;2,<sp/>UInt8&gt;<sp/>A(width,<sp/>height);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prod<sp/>=<sp/>A.product&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;();</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1775" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1774" bodyend="1782"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1aa2a1a7741de3368ab949dff7b574680c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref></type>
        <definition>difference_type scanOrderIndexToCoordinate</definition>
        <argsstring>(difference_type_1 d) const </argsstring>
        <name>scanOrderIndexToCoordinate</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>convert scan-order index to coordinate. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1107" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1106" bodyend="1111"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref> &amp;</type>
        <definition>const difference_type&amp; shape</definition>
        <argsstring>() const </argsstring>
        <name>shape</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return the array&apos;s shape. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1595" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1594" bodyend="1597"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a33c2d2f3676a54c9393d06fbda8bd190" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
        <definition>difference_type_1 shape</definition>
        <argsstring>(difference_type_1 n) const </argsstring>
        <name>shape</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return the array&apos;s shape at a certain dimension (same as <computeroutput>size(n)</computeroutput>). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1610" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1609" bodyend="1612"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a14c1df938ca1578ffc71bc9728b4e401" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
        <definition>difference_type_1 size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>number of the elements in the array. Same as <computeroutput><ref refid="classvigra_1_1MultiArrayView_1a76f6c30e31c82e61b8b7e09ce3d8871d" kindref="member">elementCount()</ref></computeroutput>. Mostly useful to support the std::vector interface. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1588" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1587" bodyend="1590"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1abfcdc6d232e4633fe63ba5f0881e0998" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
        <definition>difference_type_1 size</definition>
        <argsstring>(difference_type_1 n) const </argsstring>
        <name>size</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return the array&apos;s size at a certain dimension. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1602" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1601" bodyend="1604"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a6ada450d8e72c934a5406d1c2b5cf033" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>NormTraits&lt; <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref> &gt;::SquaredNormType</type>
        <definition>NormTraits&lt;MultiArrayView&gt;::SquaredNormType squaredNorm</definition>
        <argsstring>() const </argsstring>
        <name>squaredNorm</name>
        <reimplementedby refid="classvigra_1_1linalg_1_1Matrix_1a76ee76a88e612da5109e278165878e66">squaredNorm</reimplementedby>
        <reimplementedby refid="classvigra_1_1linalg_1_1Matrix_1a76ee76a88e612da5109e278165878e66">squaredNorm</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the squared Euclidean norm of the array (sum of squares of the array elements). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1788" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1787" bodyend="1796"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a3fee5f2594095fe1e747155d6bad57b0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref> &amp;</type>
        <definition>const difference_type&amp; stride</definition>
        <argsstring>() const </argsstring>
        <name>stride</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return the array&apos;s stride for every dimension. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1617" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1616" bodyend="1619"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a38ba1f2e9f964bc1e2f8531bd030c84e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref></type>
        <definition>difference_type_1 stride</definition>
        <argsstring>(int n) const </argsstring>
        <name>stride</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return the array&apos;s stride at a certain dimension. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1624" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1623" bodyend="1626"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1ac5561077d69e2d8b92a62bc5206664e4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, T, <ref refid="structvigra_1_1StridedArrayTag" kindref="compound">StridedArrayTag</ref> &gt;</type>
        <definition>MultiArrayView&lt;N, T, StridedArrayTag&gt; stridearray</definition>
        <argsstring>(const difference_type &amp;s) const </argsstring>
        <name>stridearray</name>
        <param>
          <type>const <ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>apply an additional striding to the image, thereby reducing the shape of the array. for example, multiplying the stride of dimension one by three turns an appropriately laid out (interleaved) rgb image into a single band image. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1497" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1496" bodyend="1502"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a614a382ab304114f19a2c1168502647d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref></type>
        <definition>difference_type strideOrdering</definition>
        <argsstring>() const </argsstring>
        <name>strideOrdering</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the ordering of the strides in this array. The result is describes the current permutation of the axes relative to the standard ascending stride order. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1564" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1563" bodyend="1566"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a2271545a765e00427cb6c59f6c4d78e0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref></type>
        <definition>MultiArrayView subarray</definition>
        <argsstring>(const difference_type &amp;p, const difference_type &amp;q) const </argsstring>
        <name>subarray</name>
        <param>
          <type>const <ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>create a rectangular subarray that spans between the points p and q, where p is in the subarray, q not.</para><para><bold>Usage:</bold> <programlisting><codeline><highlight class="comment">//<sp/>create<sp/>a<sp/>3D<sp/>array<sp/>of<sp/>size<sp/>40x30x20</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>MultiArray&lt;3,<sp/>double&gt;::difference_type<sp/>Shape;</highlight></codeline>
<codeline><highlight class="normal">MultiArray&lt;3,<sp/>double&gt;<sp/>array3(Shape(40,<sp/>30,<sp/>20));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>get<sp/>a<sp/>subarray<sp/>set<sp/>is<sp/>smaller<sp/>by<sp/>one<sp/>element<sp/>at<sp/>all<sp/>sides</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">MultiArrayView<sp/>&lt;3,<sp/>double&gt;<sp/>subarray<sp/>=<sp/>array3.subarray(Shape(1,1,1),<sp/>Shape(39,<sp/>29,<sp/>19));</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1484" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1482" bodyend="1487"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a2863f8aff8f52d7471f7b8f6f3b41390" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>U</type>
        <definition>U sum</definition>
        <argsstring>() const </argsstring>
        <name>sum</name>
        <reimplementedby refid="classvigra_1_1linalg_1_1Matrix_1a705dbbdf9c755bf803cc66288b382af6">sum</reimplementedby>
        <reimplementedby refid="classvigra_1_1linalg_1_1Matrix_1a705dbbdf9c755bf803cc66288b382af6">sum</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the sum of the array elements.</para><para>You must provide the type of the result by an explicit template parameter: <programlisting><codeline><highlight class="normal">MultiArray&lt;2,<sp/>UInt8&gt;<sp/>A(width,<sp/>height);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>A.<ref refid="classvigra_1_1FindSum_1abcbd58c449406faedb740e8c570b282a" kindref="member">sum</ref>&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;();</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1722" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1721" bodyend="1729"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a3b2d9689550ecef9ddc5b225f253b7d7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class S</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void sum</definition>
        <argsstring>(MultiArrayView&lt; N, U, S &gt; sums) const </argsstring>
        <name>sum</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, U, S &gt;</type>
          <declname>sums</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the sum of the array elements over selected axes.</para><para><itemizedlist>
<listitem><para>sums must have the same shape as this array, except for the axes along which the sum is to be accumulated. These axes must be singletons. Note that you must include <computeroutput><ref refid="multi__pointoperators_8hxx_source" kindref="compound">multi_pointoperators.hxx</ref></computeroutput> for this function to work.</para></listitem>
</itemizedlist>
<bold>Usage:</bold> <programlisting><codeline><highlight class="preprocessor">#include<sp/>&lt;vigra/multi_array.hxx&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vigra/multi_pointoperators.hxx&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">MultiArray&lt;2,<sp/>double&gt;<sp/>A(rows,<sp/>cols);</highlight></codeline>
<codeline><highlight class="normal">...<sp/></highlight><highlight class="comment">//<sp/>fill<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>make<sp/>the<sp/>first<sp/>axis<sp/>a<sp/>singleton<sp/>to<sp/>sum<sp/>over<sp/>the<sp/>first<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">MultiArray&lt;2,<sp/>double&gt;<sp/>rowSums(1,<sp/>cols);</highlight></codeline>
<codeline><highlight class="normal">A.sum(rowSums);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>equivalent<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="group__MultiPointoperators_1ga4e3f906de480f4a867340968da8a98dd" kindref="member" tooltip="Transform a multi-dimensional array with a unary function or functor.">transformMultiArray</ref>(srcMultiArrayRange(A),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destMultiArrayRange(rowSums),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FindSum&lt;double&gt;());</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1758" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1757" bodyend="1762"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a1d0311cdc0759be49f6e54595b88c5c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void swapData</definition>
        <argsstring>(MultiArrayView rhs)</argsstring>
        <name>swapData</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>swap the data between two <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref> objects.</para><para>The shapes of the two array must match. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1236" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1235" bodyend="1239"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a37c3d67af76aa3ab3c6ceecd01efe841" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T2</type>
          </param>
          <param>
            <type>class C2</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void swapData</definition>
        <argsstring>(MultiArrayView&lt; N, T2, C2 &gt; rhs)</argsstring>
        <name>swapData</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, T2, C2 &gt;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>swap the data between two <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref> objects.</para><para>The shapes of the two array must match. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1247" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1246" bodyend="1249"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1af54479ad2ee57be8181f50013864cc33" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, T, <ref refid="structvigra_1_1StridedArrayTag" kindref="compound">StridedArrayTag</ref> &gt;</type>
        <definition>MultiArrayView&lt;N, T, StridedArrayTag&gt; transpose</definition>
        <argsstring>() const </argsstring>
        <name>transpose</name>
        <reimplementedby refid="classvigra_1_1linalg_1_1Matrix_1a80913ef765a08d8d59d2879dc828f315">transpose</reimplementedby>
        <reimplementedby refid="classvigra_1_1linalg_1_1Matrix_1a80913ef765a08d8d59d2879dc828f315">transpose</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transpose an array. If N==2, this implements the usual matrix transposition. For N &gt; 2, it reverses the order of the indices.</para><para><bold>Usage:</bold><linebreak/>
 <programlisting><codeline><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArray_1a7a3c9714bbd0b64760c377a88fd36c63" kindref="member">MultiArray&lt;2, double&gt;::difference_type</ref><sp/>Shape;</highlight></codeline>
<codeline><highlight class="normal">MultiArray&lt;2,<sp/>double&gt;<sp/>array(10,<sp/>20);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">MultiArray&lt;2,<sp/>double,<sp/>StridedArrayTag&gt;<sp/>transposed<sp/>=<sp/>array.transpose();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;array.shape(0),<sp/>++i)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;array.shape(1);<sp/>++j)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(array(i,<sp/>j)<sp/>==<sp/>transposed(j,<sp/>i));</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1521" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1520" bodyend="1525"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a6da88764aadffdf26736523ba73a53b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1a004f010b30c35872abd72cd8bc9a0d19" kindref="member">traverser</ref></type>
        <definition>traverser traverser_begin</definition>
        <argsstring>()</argsstring>
        <name>traverser_begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the N-dimensional <ref refid="classvigra_1_1MultiIterator" kindref="compound">MultiIterator</ref> pointing to the first element in every dimension. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1867" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1866" bodyend="1870"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1af5bd133df88785669c1f7058fd6ee4b5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1a58290f6e0cbd34a15d2e5024bd69d567" kindref="member">const_traverser</ref></type>
        <definition>const_traverser traverser_begin</definition>
        <argsstring>() const </argsstring>
        <name>traverser_begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the N-dimensional <ref refid="classvigra_1_1MultiIterator" kindref="compound">MultiIterator</ref> pointing to the const first element in every dimension. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1876" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1875" bodyend="1879"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a8e25dc1fff81a9ff3776106365bbd73f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1a004f010b30c35872abd72cd8bc9a0d19" kindref="member">traverser</ref></type>
        <definition>traverser traverser_end</definition>
        <argsstring>()</argsstring>
        <name>traverser_end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the N-dimensional <ref refid="classvigra_1_1MultiIterator" kindref="compound">MultiIterator</ref> pointing beyond the last element in dimension N, and to the first element in every other dimension. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1886" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1885" bodyend="1890"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a8eeb5d1af1828e5f7f99548c03f51640" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1a58290f6e0cbd34a15d2e5024bd69d567" kindref="member">const_traverser</ref></type>
        <definition>const_traverser traverser_end</definition>
        <argsstring>() const </argsstring>
        <name>traverser_end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the N-dimensional const <ref refid="classvigra_1_1MultiIterator" kindref="compound">MultiIterator</ref> pointing beyond the last element in dimension N, and to the first element in every other dimension. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1897" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1896" bodyend="1901"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a6317301617e7845bcd8d940a7af43156" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1a130f62c61e834658de66d05ed4e2ae02" kindref="member">view_type</ref></type>
        <definition>view_type view</definition>
        <argsstring>()</argsstring>
        <name>view</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1904" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1903" bodyend="1906"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classvigra_1_1MultiArrayView_1a78785a3e970fb24bb63462af833934d8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref></type>
        <definition>MultiArrayView&lt; N, T, StrideTag &gt;::difference_type strideOrdering</definition>
        <argsstring>(difference_type strides)</argsstring>
        <name>strideOrdering</name>
        <param>
          <type><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref></type>
          <declname>strides</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the ordering of the given strides. The result is describes the current permutation of the axes relative to the standard ascending stride order. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1572" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="2035" bodyend="2058"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for, and view to, <ref refid="classvigra_1_1MultiArray" kindref="compound">vigra::MultiArray</ref>. </para>    </briefdescription>
    <detaileddescription>
<para>This class implements the interface of both <ref refid="classvigra_1_1MultiArray" kindref="compound">MultiArray</ref> and <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>. By default, MultiArrayViews are tagged as unstrided. If necessary, strided arrays are constructed automatically by calls to a variant of the bind...() function.</para><para>In addition to the member functions described here, <computeroutput><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref></computeroutput> and its subclasses support arithmetic and algebraic functions via the module <ref refid="group__MultiMathModule" kindref="compound">vigra::multi_math</ref>.</para><para>If you want to apply an algorithm requiring an image to a <computeroutput><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref></computeroutput> of appropriate (2-dimensional) shape, you can create a <ref refid="classvigra_1_1BasicImageView" kindref="compound">vigra::BasicImageView</ref> that acts as a wrapper with the necessary interface <ndash/> see <ref refid="group__MultiArrayToImage" kindref="compound">Wrap aref vigra::MultiArrayView in</ref>.</para><para>The template parameter are as follows <programlisting><codeline><highlight class="normal">N:<sp/>the<sp/>array<sp/>dimension</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">T:<sp/>the<sp/>type<sp/>of<sp/>the<sp/>array<sp/>elements</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">C:<sp/>a<sp/>tag<sp/>determining<sp/>whether<sp/>the<sp/>array</highlight><highlight class="stringliteral">&apos;s<sp/>inner<sp/>dimension<sp/>is<sp/>strided</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/>or<sp/>not.<sp/>An<sp/>array<sp/>is<sp/>unstrided<sp/>if<sp/>the<sp/>array<sp/>elements<sp/>occupy<sp/>consecutive</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/>memory<sp/>location,<sp/>strided<sp/>if<sp/>there<sp/>is<sp/>an<sp/>offset<sp/>in<sp/>between<sp/>(e.g.</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/>when<sp/>a<sp/>view<sp/>is<sp/>created<sp/>that<sp/>skips<sp/>every<sp/>other<sp/>array<sp/>element).</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/>The<sp/>compiler<sp/>can<sp/>generate<sp/>faster<sp/>code<sp/>for<sp/>unstrided<sp/>arrays.</highlight></codeline>
<codeline><highlight class="stringliteral"><sp/><sp/><sp/>Possible<sp/>values:<sp/>UnstridedArrayTag<sp/>(default),<sp/>StridedArrayTag</highlight></codeline>
</programlisting></para><para><bold>#include</bold> &lt;<ref refid="multi__array_8hxx_source" kindref="compound">vigra/multi_array.hxx</ref>&gt;</para><para>Namespace: vigra </para>    </detaileddescription>
    <collaborationgraph>
      <node id="1112">
        <label>MultiArrayShape&lt; actual_dimension &gt;</label>
        <link refid="classvigra_1_1MultiArrayShape"/>
      </node>
      <node id="1111">
        <label>MultiArrayView&lt; N, T, StrideTag &gt;</label>
        <link refid="classvigra_1_1MultiArrayView"/>
        <childnode refid="1112" relation="usage">
          <edgelabel>m_stride</edgelabel>
          <edgelabel>m_shape</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="767" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="766" bodyend="1907"/>
    <listofallmembers>
      <member refid="classvigra_1_1MultiArrayView_1ad1ff5270f93b932185051401f1bdc351ad5e9f57920c8f3be820823a379d521ea" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>actual_dimension</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ad1ff5270f93b932185051401f1bdc351" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>ActualDimension</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a8df8a389781b95596f98ef919b00d5f0" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>all</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a8be230fdd50e0ce842dd3b0a3012821b" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>any</name></member>
      <member refid="classvigra_1_1MultiArrayView_1acfc6e475db7e5d4f439c5940f4b18c6d" prot="protected" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>arraysOverlap</name></member>
      <member refid="classvigra_1_1MultiArrayView_1aa4c08bc293c9e26bc3a5888f9af8f05f" prot="protected" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>arraysOverlap</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ad69bd11391be1a1dba5c8202259664f8" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>begin</name></member>
      <member refid="classvigra_1_1MultiArrayView_1aa4b02d4f1a8500fb07a551069060709f" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>begin</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a5620a71abd33556ab702350b31b123da" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>bind</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a1e24fcdbd0c298cbbb07fe21368d5abc" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>bindAt</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a59031884a541eed08347b5b626ba5613" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>bindElementChannel</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a262f8f52cd526b497522b444a53aeb1c" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>bindInner</name></member>
      <member refid="classvigra_1_1MultiArrayView_1acf6b7dc4ce0db4457beed5f3d90b5e7e" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>bindInner</name></member>
      <member refid="classvigra_1_1MultiArrayView_1acaca6e5790fa86120c4df40c3385d324" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>bindOuter</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a8ca5e1bbe796369b97ee1711671b9ca7" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>bindOuter</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ada10d77a4929689e467bf3478d5dc538" prot="protected" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>checkInnerStride</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a193cf45dcc77a4247554361ca1835330" prot="protected" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>checkInnerStride</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a7ccba9db082c23d8d019296dcd9ff735" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>const_iterator</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a13c57dab17e2c903cadfa5e35ba84064" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>const_pointer</name></member>
      <member refid="classvigra_1_1MultiArrayView_1afdb67657e63a66ed3fae7b0c9fd81b48" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>const_reference</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a58290f6e0cbd34a15d2e5024bd69d567" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>const_traverser</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a55d0184c5fbde73165533111441bb8ff" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>coordinateToScanOrderIndex</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a93b4cd51930b5c3f49081829c06a10da" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>copy</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a93cc8e36bc3893691f7c34f6f2b742ff" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>copy</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a84313f2a23b1242a0a0c556d6d97ba06" prot="protected" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>copyImpl</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a9711a38a3b5f2d85c44505938499a0e2" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>data</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a94fcd2d26ff25d3e428031416b75054d" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>diagonal</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a607c140f0bd1f5cd4a4a482493afe93c" prot="protected" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>diff_zero_t</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>difference_type</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>difference_type_1</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a76f6c30e31c82e61b8b7e09ce3d8871d" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>elementCount</name></member>
      <member refid="classvigra_1_1MultiArrayView_1acad38d52497a975bfb6f2f6acd76631f" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>end</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a350132543d80a1c1e5be844e6d2878ea" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>end</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ab005801d6e252c3ae75ce9da36d1a600" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>expandElements</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a0effbd4cf91891700ac41e86defe4aa6" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>hasData</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ae8d75c08347781b9854c8aea98c34610" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>init</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a70170072585722399abd07c46f168909" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>insertSingletonDimension</name></member>
      <member refid="classvigra_1_1MultiArrayView_1acc16a9ac0801c380fcfe1841566efb99" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>isInside</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a3e1a9e07d9bc055f20a1b216370afd2f" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>isUnstrided</name></member>
      <member refid="classvigra_1_1MultiArrayView_1aeee42f6d6232520f1f2342866a2ddefb" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>iterator</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" prot="protected" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>m_ptr</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" prot="protected" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>m_shape</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" prot="protected" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>m_stride</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ae77ee86b1b883625be8f0092c104ae75" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>matrix_type</name></member>
      <member refid="classvigra_1_1MultiArrayView_1acd4c954a3c2fe5db856c4608f773eb45" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>meanVariance</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a6d8831009ea104ac1d9f36a2af5b0176" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>minmax</name></member>
      <member refid="classvigra_1_1MultiArrayView_1acddece61538d74dc1d7f71ea7c581e67" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>MultiArrayView</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a2d2c039824d104f03d97d00a5b87d914" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>MultiArrayView</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ac8e675f45de1e53c3cc147375a920ea4" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>MultiArrayView</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a0816d7af1f17517f39dbef405d2e4a47" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>norm</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ae01c274541e9b1d39eab573df7344fd1" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator MultiArrayView&lt; N, T, StridedArrayTag &gt;</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a018c002f23f0985c9ca89cd0a244f59d" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator!=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a902647635a189183308cb1fa8457f54a" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator()</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a3fe9a64fd6323465b3bf17ef76de53b7" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator()</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a95f6b94c53d6aa8ba4a9c4671a9daa65" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator()</name></member>
      <member refid="classvigra_1_1MultiArrayView_1af2c5eb62f1650fb7a3735990346478ed" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator()</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a05f95d6148a375885a7be85819dcbc02" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator()</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a2fa26a6082ac991137129dcbc4257ae0" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator()</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a5fbf52c1c9127b0e97f2cd1c263f9c5f" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator()</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ad157dd636e184ad7a235158bab39c5d8" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator()</name></member>
      <member refid="classvigra_1_1MultiArrayView_1abcbc55ed1f30019f85a6f25bf376ef2a" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator()</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a7792042817681cc6d8f5674b168419c1" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator()</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a2246e065e45bd9bd792efabac9fab724" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator*=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a6cc7ac8b9105a0d95b2c7750252d32ec" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator*=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a35f6aab0e7f37cbf1de49abe62901ec5" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator*=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a0db6c678b054c0cfba823c0fd355cc92" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator+=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1af80e0592a63a35af2748ba5c54bf51ea" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator+=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a927f4e96d6f5b28c7c7cbc7e6ca978bc" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator+=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ac9d3cda29b22226f730c4520bcb2c1ad" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator-=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1aa8b0daf746d75139531bff75b1f43fa9" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator-=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1af514e5535c2682fcc0970b133a25b158" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator-=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ae4dd7bff037e05a3580cd66ca857c3f2" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator/=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1aad41190865f1ff0b93dcef5d07938a0f" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator/=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a644075b68b6b01524b1b8620dbd79758" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator/=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1aaf7167061b3a03a33146694f32aa380f" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a47317f3dddbd8b1d447eee03040ae00b" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1aba1db9e0b6bddad5e85929219950e98d" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1af2799b196fd761fc6d5313cf374f2b5a" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator==</name></member>
      <member refid="classvigra_1_1MultiArrayView_1aebc939b0cbcef6234def78f6fcb50bf2" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator[]</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a77fdced99246dc012c098ffdd020e336" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator[]</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ace2c9cd7baee89bc7f005e3664693235" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator[]</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a994b70e9a282ffd06e7fc7df7308e4c0" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator[]</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a7ec14f3bf1d4cdfc41d8630176a82a07" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>operator[]</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a62a571ba62a9cc4b4f27af78b20a6d0e" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>permuteDimensions</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a4f32a16f89e9ff9927a20dc3c7abee6b" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>permuteStridesAscending</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a421ac71c17f86f900041784e3c77857a" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>permuteStridesDescending</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ad25b518036b886d8f35a3c059301d007" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>pointer</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a5b3042c71814da638e52b4d547771cf4" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>product</name></member>
      <member refid="classvigra_1_1MultiArrayView_1abe8933d436779a43cb5c1896ff5f2918" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>reference</name></member>
      <member refid="classvigra_1_1MultiArrayView_1aa2a1a7741de3368ab949dff7b574680c" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>scanOrderIndexToCoordinate</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>shape</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a33c2d2f3676a54c9393d06fbda8bd190" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>shape</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a14c1df938ca1578ffc71bc9728b4e401" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>size</name></member>
      <member refid="classvigra_1_1MultiArrayView_1abfcdc6d232e4633fe63ba5f0881e0998" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>size</name></member>
      <member refid="classvigra_1_1MultiArrayView_1aa0f974ecbf50663cc55fb80dc82af95b" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>size_type</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a6ada450d8e72c934a5406d1c2b5cf033" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>squaredNorm</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a3fee5f2594095fe1e747155d6bad57b0" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>stride</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a38ba1f2e9f964bc1e2f8531bd030c84e" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>stride</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ac5561077d69e2d8b92a62bc5206664e4" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>stridearray</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a614a382ab304114f19a2c1168502647d" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>strideOrdering</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a78785a3e970fb24bb63462af833934d8" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>strideOrdering</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a2271545a765e00427cb6c59f6c4d78e0" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>subarray</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a2863f8aff8f52d7471f7b8f6f3b41390" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>sum</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a3b2d9689550ecef9ddc5b225f253b7d7" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>sum</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a1d0311cdc0759be49f6e54595b88c5c5" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>swapData</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a37c3d67af76aa3ab3c6ceecd01efe841" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>swapData</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a4d4727187e1a94b33400901c1c815c0b" prot="protected" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>swapDataImpl</name></member>
      <member refid="classvigra_1_1MultiArrayView_1af54479ad2ee57be8181f50013864cc33" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>transpose</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a004f010b30c35872abd72cd8bc9a0d19" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>traverser</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a6da88764aadffdf26736523ba73a53b2" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>traverser_begin</name></member>
      <member refid="classvigra_1_1MultiArrayView_1af5bd133df88785669c1f7058fd6ee4b5" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>traverser_begin</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a8e25dc1fff81a9ff3776106365bbd73f" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>traverser_end</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a8eeb5d1af1828e5f7f99548c03f51640" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>traverser_end</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a265a253612b46abed17c61b0a5e5ce30" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>value_type</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a6317301617e7845bcd8d940a7af43156" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>view</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a130f62c61e834658de66d05ed4e2ae02" prot="public" virt="non-virtual"><scope>vigra::MultiArrayView</scope><name>view_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
