<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="accessor_8hxx" kind="file">
    <compoundname>accessor.hxx</compoundname>
    <includes refid="metaprogramming_8hxx" local="yes">metaprogramming.hxx</includes>
    <includes refid="numerictraits_8hxx" local="yes">numerictraits.hxx</includes>
    <includes refid="tuple_8hxx" local="yes">tuple.hxx</includes>
    <includedby refid="multi__array_8hxx" local="yes">vigra/multi_array.hxx</includedby>
    <includedby refid="iteratortraits_8hxx" local="yes">vigra/iteratortraits.hxx</includedby>
    <includedby refid="rgbvalue_8hxx" local="yes">vigra/rgbvalue.hxx</includedby>
    <includedby refid="imageiterator_8hxx" local="yes">vigra/imageiterator.hxx</includedby>
    <includedby refid="basicimage_8hxx" local="yes">vigra/basicimage.hxx</includedby>
    <includedby refid="stdimage_8hxx" local="yes">vigra/stdimage.hxx</includedby>
    <includedby refid="coordinate__iterator_8hxx" local="yes">vigra/coordinate_iterator.hxx</includedby>
    <includedby refid="impex_8hxx" local="yes">vigra/impex.hxx</includedby>
    <includedby refid="interpolating__accessor_8hxx" local="yes">vigra/interpolating_accessor.hxx</includedby>
    <includedby refid="multi__convolution_8hxx" local="yes">vigra/multi_convolution.hxx</includedby>
    <includedby refid="multi__distance_8hxx" local="yes">vigra/multi_distance.hxx</includedby>
    <includedby refid="multi__morphology_8hxx" local="yes">vigra/multi_morphology.hxx</includedby>
    <incdepgraph>
      <node id="14">
        <label>limits</label>
      </node>
      <node id="19">
        <label>sized_int.hxx</label>
        <link refid="sized__int_8hxx_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>promote_traits.hxx</label>
        <link refid="promote__traits_8hxx_source"/>
      </node>
      <node id="12">
        <label>stdexcept</label>
      </node>
      <node id="17">
        <label>cfloat</label>
      </node>
      <node id="11">
        <label>vigra/configVersion.hxx</label>
        <link refid="configVersion_8hxx_source"/>
      </node>
      <node id="21">
        <label>tuple.hxx</label>
        <link refid="tuple_8hxx_source"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>config.hxx</label>
        <link refid="config_8hxx_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>numerictraits.hxx</label>
        <link refid="numerictraits_8hxx_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>utility</label>
      </node>
      <node id="13">
        <label>climits</label>
      </node>
      <node id="9">
        <label>metaprogramming.hxx</label>
        <link refid="metaprogramming_8hxx_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>complex</label>
      </node>
      <node id="15">
        <label>algorithm</label>
      </node>
      <node id="8">
        <label>vigra/accessor.hxx</label>
        <link refid="accessor.hxx"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="61">
        <label>vigra/splineimageview.hxx</label>
        <link refid="splineimageview_8hxx_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>vigra/quaternion.hxx</label>
        <link refid="quaternion_8hxx_source"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>vigra/affine_registration.hxx</label>
        <link refid="affine__registration_8hxx_source"/>
      </node>
      <node id="51">
        <label>vigra/multi_pointoperators.hxx</label>
        <link refid="multi__pointoperators_8hxx_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>vigra/contourcirculator.hxx</label>
        <link refid="contourcirculator_8hxx_source"/>
      </node>
      <node id="88">
        <label>vigra/symmetry.hxx</label>
        <link refid="symmetry_8hxx_source"/>
      </node>
      <node id="109">
        <label>vigra/python_utility.hxx</label>
        <link refid="python__utility_8hxx_source"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>vigra/basicimage.hxx</label>
        <link refid="basicimage_8hxx_source"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>vigra/box.hxx</label>
        <link refid="box_8hxx_source"/>
      </node>
      <node id="99">
        <label>vigra/orientedtensorfilters.hxx</label>
        <link refid="orientedtensorfilters_8hxx_source"/>
      </node>
      <node id="91">
        <label>vigra/resizeimage.hxx</label>
        <link refid="resizeimage_8hxx_source"/>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>vigra/tensorutilities.hxx</label>
        <link refid="tensorutilities_8hxx_source"/>
      </node>
      <node id="97">
        <label>vigra/basicgeometry.hxx</label>
        <link refid="basicgeometry_8hxx_source"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>vigra/multi_array.hxx</label>
        <link refid="multi__array_8hxx_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>vigra/invariant_features3D.hxx</label>
        <link refid="invariant__features3D_8hxx_source"/>
      </node>
      <node id="124">
        <label>vigra/pixelneighborhood.hxx</label>
        <link refid="pixelneighborhood_8hxx_source"/>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>vigra/affinegeometry.hxx</label>
        <link refid="affinegeometry_8hxx_source"/>
      </node>
      <node id="31">
        <label>vigra/noise_normalization.hxx</label>
        <link refid="noise__normalization_8hxx_source"/>
      </node>
      <node id="114">
        <label>vigra/initimage.hxx</label>
        <link refid="initimage_8hxx_source"/>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>vigra/quadprog.hxx</label>
        <link refid="quadprog_8hxx_source"/>
      </node>
      <node id="49">
        <label>vigra/random_forest/rf_region.hxx</label>
        <link refid="rf__region_8hxx_source"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>vigra/numpy_array_taggedshape.hxx</label>
        <link refid="numpy__array__taggedshape_8hxx_source"/>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>vigra/multi_resize.hxx</label>
        <link refid="multi__resize_8hxx_source"/>
      </node>
      <node id="30">
        <label>vigra/linear_algebra.hxx</label>
        <link refid="linear__algebra_8hxx_source"/>
      </node>
      <node id="123">
        <label>vigra/separableconvolution.hxx</label>
        <link refid="separableconvolution_8hxx_source"/>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>vigra/localminmax.hxx</label>
        <link refid="localminmax_8hxx_source"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="115">
        <label>vigra/copyimage.hxx</label>
        <link refid="copyimage_8hxx_source"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>vigra/random_forest/rf_split.hxx</label>
        <link refid="rf__split_8hxx_source"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>vigra/basicimageview.hxx</label>
        <link refid="basicimageview_8hxx_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>vigra/imagecontainer.hxx</label>
        <link refid="imagecontainer_8hxx_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>vigra/gaborfilter.hxx</label>
        <link refid="gaborfilter_8hxx_source"/>
      </node>
      <node id="77">
        <label>vigra/iteratortraits.hxx</label>
        <link refid="iteratortraits_8hxx_source"/>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>vigra/labelvolume.hxx</label>
        <link refid="labelvolume_8hxx_source"/>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>vigra/random_forest_hdf5_impex.hxx</label>
        <link refid="random__forest__hdf5__impex_8hxx_source"/>
      </node>
      <node id="82">
        <label>vigra/stdimagefunctions.hxx</label>
        <link refid="stdimagefunctions_8hxx_source"/>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>vigra/linear_solve.hxx</label>
        <link refid="linear__solve_8hxx_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="118">
        <label>vigra/recursiveconvolution.hxx</label>
        <link refid="recursiveconvolution_8hxx_source"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>vigra/random_forest/rf_online_prediction_set.hxx</label>
        <link refid="rf__online__prediction__set_8hxx_source"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>vigra/watersheds3d.hxx</label>
        <link refid="watersheds3d_8hxx_source"/>
      </node>
      <node id="69">
        <label>vigra/multi_math.hxx</label>
        <link refid="multi__math_8hxx_source"/>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>vigra/singular_value_decomposition.hxx</label>
        <link refid="singular__value__decomposition_8hxx_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>vigra/labelimage.hxx</label>
        <link refid="labelimage_8hxx_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>vigra/utilities.hxx</label>
        <link refid="utilities_8hxx_source"/>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>vigra/boundarytensor.hxx</label>
        <link refid="boundarytensor_8hxx_source"/>
      </node>
      <node id="28">
        <label>vigra/edgedetection.hxx</label>
        <link refid="edgedetection_8hxx_source"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>vigra/wigner-matrix.hxx</label>
        <link refid="wigner-matrix_8hxx_source"/>
      </node>
      <node id="81">
        <label>vigra/transformimage.hxx</label>
        <link refid="transformimage_8hxx_source"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>vigra/multi_fft.hxx</label>
        <link refid="multi__fft_8hxx_source"/>
      </node>
      <node id="84">
        <label>vigra/convolution.hxx</label>
        <link refid="convolution_8hxx_source"/>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>vigra/nonlineardiffusion.hxx</label>
        <link refid="nonlineardiffusion_8hxx_source"/>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>vigra/numpy_array_converters.hxx</label>
        <link refid="numpy__array__converters_8hxx_source"/>
      </node>
      <node id="128">
        <label>vigra/codec.hxx</label>
        <link refid="codec_8hxx_source"/>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>vigra/distancetransform.hxx</label>
        <link refid="distancetransform_8hxx_source"/>
      </node>
      <node id="79">
        <label>vigra/tinyvector.hxx</label>
        <link refid="tinyvector_8hxx_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>vigra/resampling_convolution.hxx</label>
        <link refid="resampling__convolution_8hxx_source"/>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>vigra/slanted_edge_mtf.hxx</label>
        <link refid="slanted__edge__mtf_8hxx_source"/>
      </node>
      <node id="54">
        <label>vigra/multi_convolution.hxx</label>
        <link refid="multi__convolution_8hxx_source"/>
      </node>
      <node id="96">
        <label>vigra/stdimage.hxx</label>
        <link refid="stdimage_8hxx_source"/>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>vigra/inspectimage.hxx</label>
        <link refid="inspectimage_8hxx_source"/>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>vigra/random_forest_deprec.hxx</label>
        <link refid="random__forest__deprec_8hxx_source"/>
      </node>
      <node id="76">
        <label>vigra/sifImport.hxx</label>
        <link refid="sifImport_8hxx_source"/>
      </node>
      <node id="34">
        <label>vigra/random_forest/rf_ridge_split.hxx</label>
        <link refid="rf__ridge__split_8hxx_source"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>vigra/random_forest/rf_nodeproxy.hxx</label>
        <link refid="rf__nodeproxy_8hxx_source"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>vigra/voxelneighborhood.hxx</label>
        <link refid="voxelneighborhood_8hxx_source"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>vigra/unsupervised_decomposition.hxx</label>
        <link refid="unsupervised__decomposition_8hxx_source"/>
      </node>
      <node id="74">
        <label>vigra/random_forest/rf_algorithm.hxx</label>
        <link refid="rf__algorithm_8hxx_source"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>vigra/imageiterator.hxx</label>
        <link refid="imageiterator_8hxx_source"/>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>vigra/random_forest.hxx</label>
        <link refid="random__forest_8hxx_source"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>vigra/tiff.hxx</label>
        <link refid="tiff_8hxx_source"/>
      </node>
      <node id="105">
        <label>vigra/imageinfo.hxx</label>
        <link refid="imageinfo_8hxx_source"/>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>vigra/regression.hxx</label>
        <link refid="regression_8hxx_source"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>vigra/matlab.hxx</label>
        <link refid="matlab_8hxx_source"/>
      </node>
      <node id="126">
        <label>vigra/flatmorphology.hxx</label>
        <link refid="flatmorphology_8hxx_source"/>
      </node>
      <node id="120">
        <label>vigra/cellimage.hxx</label>
        <link refid="cellimage_8hxx_source"/>
        <childnode refid="121" relation="include">
        </childnode>
      </node>
      <node id="122">
        <label>vigra/axistags.hxx</label>
        <link refid="axistags_8hxx_source"/>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>vigra/rgbvalue.hxx</label>
        <link refid="rgbvalue_8hxx_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>vigra/diff2d.hxx</label>
        <link refid="diff2d_8hxx_source"/>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>vigra/random_forest/rf_decisionTree.hxx</label>
        <link refid="rf__decisionTree_8hxx_source"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>vigra/interpolating_accessor.hxx</label>
        <link refid="interpolating__accessor_8hxx_source"/>
      </node>
      <node id="55">
        <label>vigra/multi_distance.hxx</label>
        <link refid="multi__distance_8hxx_source"/>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>vigra/tv_filter.hxx</label>
        <link refid="tv__filter_8hxx_source"/>
      </node>
      <node id="108">
        <label>vigra/meshgrid.hxx</label>
        <link refid="meshgrid_8hxx_source"/>
      </node>
      <node id="104">
        <label>vigra/multi_iterator.hxx</label>
        <link refid="multi__iterator_8hxx_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>vigra/impex.hxx</label>
        <link refid="impex_8hxx"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>vigra/multi_morphology.hxx</label>
        <link refid="multi__morphology_8hxx_source"/>
      </node>
      <node id="89">
        <label>vigra/seededregiongrowing.hxx</label>
        <link refid="seededregiongrowing_8hxx_source"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>vigra/random_forest/splices.hxx</label>
        <link refid="splices_8hxx_source"/>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>vigra/multi_localminmax.hxx</label>
        <link refid="multi__localminmax_8hxx_source"/>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>vigra/seededregiongrowing3d.hxx</label>
        <link refid="seededregiongrowing3d_8hxx_source"/>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>vigra/gradient_energy_tensor.hxx</label>
        <link refid="gradient__energy__tensor_8hxx_source"/>
      </node>
      <node id="72">
        <label>vigra/numpy_array_traits.hxx</label>
        <link refid="numpy__array__traits_8hxx_source"/>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="121">
        <label>vigra/cellconfigurations.hxx</label>
        <link refid="cellconfigurations_8hxx_source"/>
      </node>
      <node id="98">
        <label>vigra/stdconvolution.hxx</label>
        <link refid="stdconvolution_8hxx_source"/>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>vigra/watersheds.hxx</label>
        <link refid="watersheds_8hxx_source"/>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>vigra/eigensystem.hxx</label>
        <link refid="eigensystem_8hxx_source"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="117">
        <label>vigra/combineimages.hxx</label>
        <link refid="combineimages_8hxx_source"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>vigra/cornerdetection.hxx</label>
        <link refid="cornerdetection_8hxx_source"/>
      </node>
      <node id="57">
        <label>vigra/multi_tensorutilities.hxx</label>
        <link refid="multi__tensorutilities_8hxx_source"/>
      </node>
      <node id="102">
        <label>vigra/colorconversions.hxx</label>
        <link refid="colorconversions_8hxx_source"/>
      </node>
      <node id="62">
        <label>vigra/coordinate_iterator.hxx</label>
        <link refid="coordinate__iterator_8hxx_source"/>
      </node>
      <node id="25">
        <label>vigra/matrix.hxx</label>
        <link refid="matrix_8hxx_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>vigra/random_forest/rf_visitors.hxx</label>
        <link refid="rf__visitors_8hxx_source"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>vigra/accessor.hxx</label>
        <link refid="accessor.hxx"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>vigra/hdf5impex.hxx</label>
        <link refid="hdf5impex_8hxx_source"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>vigra/multi_impex.hxx</label>
        <link refid="multi__impex_8hxx_source"/>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>vigra/numpy_array.hxx</label>
        <link refid="numpy__array_8hxx_source"/>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>vigra/fftw3.hxx</label>
        <link refid="fftw3_8hxx_source"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structvigra_1_1AccessorTraits" prot="public">vigra::AccessorTraits</innerclass>
    <innerclass refid="structvigra_1_1AccessorTraits_3_01RGBValue_3_01T_00_01RED__IDX_00_01GREEN__IDX_00_01BLUE__IDX_01_4_01_4" prot="public">vigra::AccessorTraits&lt; RGBValue&lt; T, RED_IDX, GREEN_IDX, BLUE_IDX &gt; &gt;</innerclass>
    <innerclass refid="structvigra_1_1AccessorTraits_3_01TinyVector_3_01T_00_01SIZE_01_4_01_4" prot="public">vigra::AccessorTraits&lt; TinyVector&lt; T, SIZE &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1MultiImageAccessor2" prot="public">vigra::MultiImageAccessor2</innerclass>
    <innerclass refid="classvigra_1_1SequenceAccessor" prot="public">vigra::SequenceAccessor</innerclass>
    <innerclass refid="classvigra_1_1StandardAccessor" prot="public">vigra::StandardAccessor</innerclass>
    <innerclass refid="classvigra_1_1StandardConstAccessor" prot="public">vigra::StandardConstAccessor</innerclass>
    <innerclass refid="classvigra_1_1StandardConstValueAccessor" prot="public">vigra::StandardConstValueAccessor</innerclass>
    <innerclass refid="classvigra_1_1StandardValueAccessor" prot="public">vigra::StandardValueAccessor</innerclass>
    <innerclass refid="classvigra_1_1VectorAccessor" prot="public">vigra::VectorAccessor</innerclass>
    <innerclass refid="classvigra_1_1VectorComponentAccessor" prot="public">vigra::VectorComponentAccessor</innerclass>
    <innerclass refid="classvigra_1_1VectorComponentValueAccessor" prot="public">vigra::VectorComponentValueAccessor</innerclass>
    <innerclass refid="classvigra_1_1VectorElementAccessor" prot="public">vigra::VectorElementAccessor</innerclass>
    <innernamespace refid="namespacevigra">vigra</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="accessor_8hxx_1a400cbdbdaf726c65116ff0c3ed9eadf0" prot="public" static="no">
        <name>VIGRA_DEFINE_ACCESSOR_TRAITS</name>
        <param><defname>VALUE</defname></param>
        <param><defname>ACCESSOR</defname></param>
        <param><defname>CONST_ACCESSOR</defname></param>
        <initializer>template &lt;&gt; \
    struct AccessorTraits&lt;VALUE &gt; \
    { \
        typedef ACCESSOR&lt;VALUE &gt;         default_accessor; \
        typedef CONST_ACCESSOR&lt;VALUE &gt;   default_const_accessor; \
    };</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" line="924" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx" bodystart="918" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>1998-2002<sp/>by<sp/>Ullrich<sp/>Koethe<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>VIGRA<sp/>computer<sp/>vision<sp/>library.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>The<sp/>VIGRA<sp/>Website<sp/>is<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://hci.iwr.uni-heidelberg.de/vigra/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Please<sp/>direct<sp/>questions,<sp/>bug<sp/>reports,<sp/>and<sp/>contributions<sp/>to<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ullrich.koethe@iwr.uni-heidelberg.de<sp/><sp/><sp/><sp/>or<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra@informatik.uni-hamburg.de<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>conditions:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Software.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VIGRA_ACCESSOR_HXX</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_ACCESSOR_HXX</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;metaprogramming.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;numerictraits.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tuple.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="namespacevigra" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vigra<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="45"><highlight class="comment">/**<sp/>\addtogroup<sp/>DataAccessors<sp/>Data<sp/>Accessors</highlight></codeline>
<codeline lineno="46"><highlight class="comment"></highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/><sp/>Basic<sp/>templates<sp/>to<sp/>encapsulate<sp/>access<sp/>to<sp/>the<sp/>data<sp/>of<sp/>an<sp/>iterator.</highlight></codeline>
<codeline lineno="48"><highlight class="comment"></highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/><sp/>Data<sp/>accessors<sp/>are<sp/>used<sp/>to<sp/>allow<sp/>for<sp/>flexible<sp/>access<sp/>to<sp/>the<sp/>data</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/><sp/>an<sp/>iterator<sp/>points<sp/>to.<sp/>When<sp/>we<sp/>access<sp/>the<sp/>data<sp/>directly,<sp/>we</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/><sp/>are<sp/>bound<sp/>to<sp/>what<sp/>&lt;TT&gt;operator*()&lt;/TT&gt;<sp/>returns,<sp/>if<sp/>this<sp/>method<sp/>exists<sp/>at</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/><sp/>all.<sp/>Encapsulating<sp/>access<sp/>in<sp/>an<sp/>accessor<sp/>enables<sp/>a<sp/>better</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/><sp/>decoupling<sp/>of<sp/>data<sp/>structures<sp/>and<sp/>algorithms.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;a<sp/>href=&quot;documents/DataAccessors.ps&quot;&gt;This<sp/>paper&lt;/a&gt;<sp/>contains</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/><sp/>a<sp/>detailed<sp/>description<sp/>of<sp/>the<sp/>concept.<sp/>Here<sp/>is<sp/>a<sp/>brief<sp/>list<sp/>of<sp/>the<sp/>basic</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/><sp/>accessor<sp/>requirements:</highlight></codeline>
<codeline lineno="57"><highlight class="comment">&lt;p&gt;</highlight></codeline>
<codeline lineno="58"><highlight class="comment">&lt;table<sp/>border=2<sp/>cellspacing=0<sp/>cellpadding=2<sp/>width=&quot;100%&quot;&gt;</highlight></codeline>
<codeline lineno="59"><highlight class="comment">&lt;tr&gt;&lt;th&gt;</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/>Operation</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/th&gt;&lt;th&gt;</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/>Result</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/th&gt;&lt;th&gt;</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/>Semantics</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/th&gt;</highlight></codeline>
<codeline lineno="66"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="67"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;accessor(iter)&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;convertible<sp/>to<sp/>&lt;br&gt;&lt;tt&gt;Accessor::value_type<sp/>const<sp/>&amp;&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;read<sp/>data<sp/>at<sp/>the<sp/>current<sp/>position<sp/>of<sp/>the<sp/>iterator&lt;/td&gt;</highlight></codeline>
<codeline lineno="70"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="71"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;accessor(iter,<sp/>index)&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;convertible<sp/>to<sp/>&lt;br&gt;&lt;tt&gt;Accessor::value_type<sp/>const<sp/>&amp;&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;read<sp/>data<sp/>at<sp/>offset<sp/>&lt;tt&gt;index&lt;/tt&gt;<sp/>relative<sp/>to<sp/>iterator&apos;s<sp/>current<sp/>position</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/>(random-access<sp/>iterator<sp/>only)&lt;/td&gt;</highlight></codeline>
<codeline lineno="75"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="76"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;accessor.set(value,<sp/>iter)&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;void&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;write<sp/>data<sp/>&lt;tt&gt;value&lt;/tt&gt;<sp/>at<sp/>the<sp/>current<sp/>position<sp/>of<sp/>the<sp/>iterator<sp/>(mutable<sp/>iterator<sp/>only)&lt;/td&gt;</highlight></codeline>
<codeline lineno="79"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="80"><highlight class="comment">&lt;tr&gt;</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;&lt;tt&gt;accessor.set(value,<sp/>iter,<sp/>index)&lt;/tt&gt;&lt;/td&gt;&lt;td&gt;&lt;tt&gt;void&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;write<sp/>data<sp/>&lt;tt&gt;value&lt;/tt&gt;<sp/>at<sp/>offset<sp/>&lt;tt&gt;index&lt;/tt&gt;<sp/>relative<sp/>to<sp/>iterator&apos;s<sp/>current<sp/>position</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/>(mutable<sp/>random-access<sp/>iterator<sp/>only)&lt;/td&gt;</highlight></codeline>
<codeline lineno="84"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="85"><highlight class="comment">&lt;tr&gt;&lt;td<sp/>colspan=2&gt;</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;Accessor::value_type&lt;/tt&gt;&lt;/td&gt;</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;td&gt;type<sp/>of<sp/>the<sp/>data<sp/>field<sp/>the<sp/>accessor<sp/>refers<sp/>to&lt;/td&gt;</highlight></codeline>
<codeline lineno="88"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="89"><highlight class="comment">&lt;tr&gt;&lt;td<sp/>colspan=3&gt;</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;iter&lt;/tt&gt;<sp/>is<sp/>an<sp/>iterator&lt;br&gt;</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;index&lt;/tt&gt;<sp/>has<sp/>the<sp/>iterator&apos;s<sp/>index<sp/>type<sp/>(&lt;tt&gt;Iterator::difference_type&lt;/tt&gt;)&lt;br&gt;</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;value&lt;/tt&gt;<sp/>is<sp/>convertible<sp/>to<sp/>&lt;tt&gt;Accessor::value_type<sp/>const<sp/>&amp;&lt;/tt&gt;</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/td&gt;</highlight></codeline>
<codeline lineno="94"><highlight class="comment">&lt;/tr&gt;</highlight></codeline>
<codeline lineno="95"><highlight class="comment">&lt;/table&gt;</highlight></codeline>
<codeline lineno="96"><highlight class="comment">&lt;/p&gt;</highlight></codeline>
<codeline lineno="97"><highlight class="comment"></highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>template<sp/>&lt;tt&gt;AccessorTraits&lt;T&gt;&lt;/tt&gt;<sp/>can<sp/>be<sp/>used<sp/>to<sp/>find<sp/>the<sp/>default<sp/>accessor</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/><sp/>associated<sp/>with<sp/>the<sp/>type<sp/>&lt;tt&gt;T&lt;/tt&gt;,<sp/>e.g.</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>AccessorTraits&lt;typename<sp/>Image::value_type&gt;::default_accessor<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Accessor;</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/><sp/>typedef<sp/>typename<sp/>AccessorTraits&lt;typename<sp/>Image::value_type&gt;::default_const_accessor<sp/>ConstAccessor;</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="105"><highlight class="comment">*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="106"><highlight class="comment">//@{</highlight></codeline>
<codeline lineno="107"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StandardAccessor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="114"><highlight class="comment">/**<sp/>\brief<sp/>Encapsulate<sp/>access<sp/>to<sp/>the<sp/>values<sp/>an<sp/>iterator<sp/>points<sp/>to.</highlight></codeline>
<codeline lineno="115"><highlight class="comment"></highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/><sp/>StandardAccessor<sp/>is<sp/>a<sp/>trivial<sp/>accessor<sp/>that<sp/>simply<sp/>encapsulates</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>iterator&apos;s<sp/>operator*()<sp/>and<sp/>operator[]()<sp/>in<sp/>its</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/>read<sp/>and<sp/>write<sp/>functions.<sp/>It<sp/>passes<sp/>its<sp/>arguments<sp/>&lt;em&gt;by<sp/>reference&lt;/em&gt;.</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/>If<sp/>you<sp/>want<sp/>to<sp/>return<sp/>items<sp/>by<sp/>value,<sp/>you</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/><sp/>must<sp/>use<sp/>StandardValueAccessor<sp/>instead<sp/>of<sp/>StandardAccessor.</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/><sp/>Both<sp/>accessors<sp/>have<sp/>different<sp/>optimization<sp/>properties<sp/>--</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/><sp/>StandardAccessor<sp/>is<sp/>usually<sp/>faster<sp/>for<sp/>compound<sp/>pixel<sp/>types,</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/><sp/>while<sp/>StandardValueAccessor<sp/>is<sp/>faster<sp/>for<sp/>the<sp/>built-in<sp/>types.</highlight></codeline>
<codeline lineno="124"><highlight class="comment"></highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/><sp/>When<sp/>a<sp/>floating<sp/>point<sp/>number<sp/>is<sp/>assigned<sp/>by<sp/>means<sp/>of<sp/>an<sp/>accessor</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/><sp/>with<sp/>integral<sp/>value_type,<sp/>the<sp/>value<sp/>is<sp/>rounded<sp/>and<sp/>clipped<sp/>as<sp/>appropriate.</highlight></codeline>
<codeline lineno="127"><highlight class="comment"></highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/accessor.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="130"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUETYPE&gt;</highlight></codeline>
<codeline lineno="132" refid="classvigra_1_1StandardAccessor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1StandardAccessor" kindref="compound" tooltip="Encapsulate access to the values an iterator points to.">StandardAccessor</ref></highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>value_type</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="classvigra_1_1StandardAccessor_1ad81add7f462b51d2bedbccd43c12e32a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUETYPE<sp/><ref refid="classvigra_1_1StandardAccessor_1ad81add7f462b51d2bedbccd43c12e32a" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>read<sp/>the<sp/>current<sp/>data<sp/>item</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR&gt;</highlight></codeline>
<codeline lineno="142" refid="classvigra_1_1StandardAccessor_1a7185a8540aa9b9eff7646eaf17da2b33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>VALUETYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="classvigra_1_1StandardAccessor_1a7185a8540aa9b9eff7646eaf17da2b33" kindref="member">operator()</ref>(ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*i;<sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>VALUETYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="classvigra_1_1StandardAccessor_1a7185a8540aa9b9eff7646eaf17da2b33" kindref="member">operator()</ref>(VALUETYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*i;<sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>read<sp/>the<sp/>data<sp/>item<sp/>at<sp/>an<sp/>offset<sp/>(can<sp/>be<sp/>1D<sp/>or<sp/>2D<sp/>or<sp/>higher<sp/>order<sp/>difference).</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DIFFERENCE&gt;</highlight></codeline>
<codeline lineno="149" refid="classvigra_1_1StandardAccessor_1ac33fe3dcf9a78edeb4c32a423acfe2e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>VALUETYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="classvigra_1_1StandardAccessor_1a7185a8540aa9b9eff7646eaf17da2b33" kindref="member">operator()</ref>(ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i,<sp/>DIFFERENCE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>diff)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="150"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i[diff];</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Write<sp/>the<sp/>current<sp/>data<sp/>item.<sp/>The<sp/>type<sp/>&lt;TT&gt;V&lt;/TT&gt;<sp/>of<sp/>the<sp/>passed</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>&lt;TT&gt;value&lt;/TT&gt;<sp/>is<sp/>automatically<sp/>converted<sp/>to<sp/>&lt;TT&gt;VALUETYPE&lt;/TT&gt;.</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>case<sp/>of<sp/>a<sp/>conversion<sp/>floating<sp/>point<sp/>-&gt;<sp/>integral<sp/>this<sp/>includes<sp/>rounding<sp/>and<sp/>clipping.</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR&gt;</highlight></codeline>
<codeline lineno="159" refid="classvigra_1_1StandardAccessor_1a7cb2c9deaa4edb5bf641f1a190c76685" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>value,<sp/>ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>*i<sp/>=<sp/>detail::RequiresExplicitCast&lt;VALUETYPE&gt;::cast(value);<sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>overload<sp/>is<sp/>needed<sp/>to<sp/>make<sp/>the<sp/>accessor<sp/>work<sp/>with<sp/>a<sp/>std::back_inserter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR&gt;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>value,<sp/>ITERATOR<sp/>&amp;<sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>*i<sp/>=<sp/>detail::RequiresExplicitCast&lt;VALUETYPE&gt;::cast(value);<sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Write<sp/>the<sp/>data<sp/>item<sp/>at<sp/>an<sp/>offset<sp/>(can<sp/>be<sp/>1D<sp/>or<sp/>2D<sp/>or<sp/>higher<sp/>order<sp/>difference)..</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>type<sp/>&lt;TT&gt;V&lt;/TT&gt;<sp/>of<sp/>the<sp/>passed</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>&lt;TT&gt;value&lt;/TT&gt;<sp/>is<sp/>automatically<sp/>converted<sp/>to<sp/>&lt;TT&gt;VALUETYPE&lt;/TT&gt;.</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>case<sp/>of<sp/>a<sp/>conversion<sp/>floating<sp/>point<sp/>-&gt;<sp/>integral<sp/>this<sp/>includes<sp/>rounding<sp/>and<sp/>clipping.</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DIFFERENCE&gt;</highlight></codeline>
<codeline lineno="173" refid="classvigra_1_1StandardAccessor_1a548cdb2243d69b4cce0fa66084d0bee9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>value,<sp/>ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i,<sp/>DIFFERENCE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>diff)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i[diff]=<sp/>detail::RequiresExplicitCast&lt;VALUETYPE&gt;::cast(value);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal">};</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="179"><highlight class="comment">/**<sp/>\brief<sp/>Encapsulate<sp/>access<sp/>to<sp/>the<sp/>values<sp/>an<sp/>iterator<sp/>points<sp/>to.</highlight></codeline>
<codeline lineno="180"><highlight class="comment"></highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/>StandardValueAccessor<sp/>is<sp/>a<sp/>trivial<sp/>accessor<sp/>that<sp/>simply<sp/>encapsulates</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>iterator&apos;s<sp/>operator*()<sp/>and<sp/>operator[]()<sp/>in<sp/>its</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/><sp/>read<sp/>and<sp/>write<sp/>functions.<sp/>It<sp/>passes<sp/>its<sp/>arguments<sp/>&lt;em&gt;by<sp/>value&lt;/em&gt;.</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/>If<sp/>the<sp/>iterator<sp/>returns<sp/>its<sp/>items<sp/>by<sp/>reference<sp/>(such<sp/>as<sp/>\ref<sp/>vigra::ImageIterator),</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/><sp/>you<sp/>can<sp/>also<sp/>use<sp/>StandardAccessor.</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/><sp/>These<sp/>accessors<sp/>have<sp/>different<sp/>optimization<sp/>properties<sp/>--</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/><sp/>StandardAccessor<sp/>is<sp/>usually<sp/>faster<sp/>for<sp/>compound<sp/>pixel<sp/>types,</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/><sp/><sp/>while<sp/>StandardValueAccessor<sp/>is<sp/>faster<sp/>for<sp/>the<sp/>built-in<sp/>types.</highlight></codeline>
<codeline lineno="189"><highlight class="comment"></highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/><sp/><sp/>When<sp/>a<sp/>floating<sp/>point<sp/>number<sp/>is<sp/>assigned<sp/>by<sp/>means<sp/>of<sp/>an<sp/>accessor</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/><sp/>with<sp/>integral<sp/>value_type,<sp/>the<sp/>value<sp/>is<sp/>rounded<sp/>and<sp/>clipped<sp/>as<sp/>appropriate.</highlight></codeline>
<codeline lineno="192"><highlight class="comment"></highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/accessor.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="195"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUETYPE&gt;</highlight></codeline>
<codeline lineno="197" refid="classvigra_1_1StandardValueAccessor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1StandardValueAccessor" kindref="compound" tooltip="Encapsulate access to the values an iterator points to.">StandardValueAccessor</ref></highlight></codeline>
<codeline lineno="198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>value_type</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="classvigra_1_1StandardValueAccessor_1ad81add7f462b51d2bedbccd43c12e32a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUETYPE<sp/><ref refid="classvigra_1_1StandardValueAccessor_1ad81add7f462b51d2bedbccd43c12e32a" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Read<sp/>the<sp/>current<sp/>data<sp/>item.<sp/>The<sp/>type<sp/>&lt;TT&gt;ITERATOR::reference&lt;/TT&gt;</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>automatically<sp/>converted<sp/>to<sp/>&lt;TT&gt;VALUETYPE&lt;/TT&gt;.</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>case<sp/>of<sp/>a<sp/>conversion<sp/>floating<sp/>point<sp/>-&gt;<sp/>integral<sp/>this<sp/>includes<sp/>rounding<sp/>and<sp/>clipping.</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR&gt;</highlight></codeline>
<codeline lineno="209" refid="classvigra_1_1StandardValueAccessor_1a2eb541fc0f76bbde9028bc3c4f02ed04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>VALUETYPE<sp/><ref refid="classvigra_1_1StandardValueAccessor_1a2eb541fc0f76bbde9028bc3c4f02ed04" kindref="member">operator()</ref>(ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="210"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::RequiresExplicitCast&lt;VALUETYPE&gt;::cast(*i);<sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Read<sp/>the<sp/>data<sp/>item<sp/>at<sp/>an<sp/>offset<sp/>(can<sp/>be<sp/>1D<sp/>or<sp/>2D<sp/>or<sp/>higher<sp/>order<sp/>difference).</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>type<sp/>&lt;TT&gt;ITERATOR::index_reference&lt;/TT&gt;</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>automatically<sp/>converted<sp/>to<sp/>&lt;TT&gt;VALUETYPE&lt;/TT&gt;.</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>case<sp/>of<sp/>a<sp/>conversion<sp/>floating<sp/>point<sp/>-&gt;<sp/>integral<sp/>this<sp/>includes<sp/>rounding<sp/>and<sp/>clipping.</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DIFFERENCE&gt;</highlight></codeline>
<codeline lineno="218" refid="classvigra_1_1StandardValueAccessor_1ab4a1e300f5bf29ed0a509cdf1c3bcea4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>VALUETYPE<sp/><ref refid="classvigra_1_1StandardValueAccessor_1a2eb541fc0f76bbde9028bc3c4f02ed04" kindref="member">operator()</ref>(ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i,<sp/>DIFFERENCE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>diff)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="219"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::RequiresExplicitCast&lt;VALUETYPE&gt;::cast(i[diff]);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Write<sp/>the<sp/>current<sp/>data<sp/>item.<sp/>The<sp/>type<sp/>&lt;TT&gt;V&lt;/TT&gt;<sp/>of<sp/>the<sp/>passed</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>&lt;TT&gt;value&lt;/TT&gt;<sp/>is<sp/>automatically<sp/>converted<sp/>to<sp/>&lt;TT&gt;VALUETYPE&lt;/TT&gt;.</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>case<sp/>of<sp/>a<sp/>conversion<sp/>floating<sp/>point<sp/>-&gt;<sp/>integral<sp/>this<sp/>includes<sp/>rounding<sp/>and<sp/>clipping.</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR&gt;</highlight></codeline>
<codeline lineno="227" refid="classvigra_1_1StandardValueAccessor_1ab8a7388dced872227daaa1d0f563c54e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(V<sp/>value,<sp/>ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>*i<sp/>=<sp/>detail::RequiresExplicitCast&lt;VALUETYPE&gt;::cast(value);<sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>overload<sp/>is<sp/>needed<sp/>to<sp/>make<sp/>the<sp/>accessor<sp/>work<sp/>with<sp/>a<sp/>std::back_inserter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR&gt;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(V<sp/>value,<sp/>ITERATOR<sp/>&amp;<sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>*i<sp/>=<sp/>detail::RequiresExplicitCast&lt;VALUETYPE&gt;::cast(value);<sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Write<sp/>the<sp/>data<sp/>item<sp/>at<sp/>an<sp/>offset<sp/>(can<sp/>be<sp/>1D<sp/>or<sp/>2D<sp/>or<sp/>higher<sp/>order<sp/>difference)..</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>type<sp/>&lt;TT&gt;V&lt;/TT&gt;<sp/>of<sp/>the<sp/>passed</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>&lt;TT&gt;value&lt;/TT&gt;<sp/>is<sp/>automatically<sp/>converted<sp/>to<sp/>&lt;TT&gt;VALUETYPE&lt;/TT&gt;.</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>case<sp/>of<sp/>a<sp/>conversion<sp/>floating<sp/>point<sp/>-&gt;<sp/>integral<sp/>this<sp/>includes<sp/>rounding<sp/>and<sp/>clipping.</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DIFFERENCE&gt;</highlight></codeline>
<codeline lineno="241" refid="classvigra_1_1StandardValueAccessor_1ad5d06809bf9f223ea38a9061f123b3b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(V<sp/>value,<sp/>ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i,<sp/>DIFFERENCE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>diff)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i[diff]=<sp/>detail::RequiresExplicitCast&lt;VALUETYPE&gt;::cast(value);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal">};</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StandardConstAccessor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="253"><highlight class="comment">/**<sp/>\brief<sp/>Encapsulate<sp/>read<sp/>access<sp/>to<sp/>the<sp/>values<sp/>an<sp/>iterator<sp/>points<sp/>to.</highlight></codeline>
<codeline lineno="254"><highlight class="comment"></highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/><sp/>StandardConstAccessor<sp/>is<sp/>a<sp/>trivial<sp/>accessor<sp/>that<sp/>simply<sp/>encapsulates</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>iterator&apos;s<sp/>operator*()<sp/>and<sp/>operator[]()<sp/>in<sp/>its</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/><sp/><sp/>read<sp/>functions.<sp/>It<sp/>passes<sp/>its<sp/>arguments<sp/>&lt;em&gt;by<sp/>reference&lt;/em&gt;.</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/><sp/><sp/><sp/>If<sp/>the<sp/>iterator<sp/>returns<sp/>its<sp/>items<sp/>by<sp/>value<sp/>(such<sp/>as<sp/>\ref<sp/>vigra::CoordinateIterator),<sp/>you</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/><sp/>must<sp/>use<sp/>StandardConstValueAccessor<sp/>instead<sp/>of<sp/>StandardConstAccessor.</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/><sp/><sp/><sp/>Both<sp/>accessors<sp/>also<sp/>have<sp/>different<sp/>optimization<sp/>properties<sp/>--</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/><sp/><sp/><sp/>StandardConstAccessor<sp/>is<sp/>usually<sp/>faster<sp/>for<sp/>compound<sp/>pixel<sp/>types,</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/><sp/><sp/><sp/>while<sp/>StandardConstValueAccessor<sp/>is<sp/>faster<sp/>for<sp/>the<sp/>built-in<sp/>types.</highlight></codeline>
<codeline lineno="263"><highlight class="comment"></highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/accessor.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="266"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUETYPE&gt;</highlight></codeline>
<codeline lineno="268" refid="classvigra_1_1StandardConstAccessor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1StandardConstAccessor" kindref="compound" tooltip="Encapsulate read access to the values an iterator points to.">StandardConstAccessor</ref></highlight></codeline>
<codeline lineno="269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUETYPE<sp/>value_type;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>read<sp/>the<sp/>current<sp/>data<sp/>item</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR&gt;</highlight></codeline>
<codeline lineno="276" refid="classvigra_1_1StandardConstAccessor_1a7185a8540aa9b9eff7646eaf17da2b33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>VALUETYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="classvigra_1_1StandardConstAccessor_1a7185a8540aa9b9eff7646eaf17da2b33" kindref="member">operator()</ref>(ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="277"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*i;<sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>read<sp/>the<sp/>data<sp/>item<sp/>at<sp/>an<sp/>offset<sp/>(can<sp/>be<sp/>1D<sp/>or<sp/>2D<sp/>or<sp/>higher<sp/>order<sp/>difference).</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DIFFERENCE&gt;</highlight></codeline>
<codeline lineno="282" refid="classvigra_1_1StandardConstAccessor_1ac33fe3dcf9a78edeb4c32a423acfe2e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>VALUETYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="classvigra_1_1StandardConstAccessor_1a7185a8540aa9b9eff7646eaf17da2b33" kindref="member">operator()</ref>(ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i,<sp/>DIFFERENCE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>diff)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="283"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i[diff];</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal">};</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="288"><highlight class="comment">/**<sp/>\brief<sp/>Encapsulate<sp/>access<sp/>to<sp/>the<sp/>values<sp/>an<sp/>iterator<sp/>points<sp/>to.</highlight></codeline>
<codeline lineno="289"><highlight class="comment"></highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/><sp/><sp/><sp/>StandardConstValueAccessor<sp/>is<sp/>a<sp/>trivial<sp/>accessor<sp/>that<sp/>simply<sp/>encapsulates</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>iterator&apos;s<sp/>operator*()<sp/>and<sp/>operator[]()<sp/>in<sp/>its</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/><sp/><sp/><sp/>read<sp/>functions.<sp/>It<sp/>passes<sp/>its<sp/>arguments<sp/>&lt;em&gt;by<sp/>value&lt;/em&gt;.</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/><sp/><sp/><sp/>If<sp/>the<sp/>iterator<sp/>returns<sp/>its<sp/>items<sp/>by<sp/>reference<sp/>(such<sp/>as<sp/>\ref<sp/>vigra::ConstImageIterator),</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/><sp/><sp/><sp/>you<sp/>can<sp/>also<sp/>use<sp/>StandardConstAccessor.</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/><sp/><sp/><sp/>These<sp/>accessors<sp/>have<sp/>different<sp/>optimization<sp/>properties<sp/>--</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/><sp/><sp/><sp/>StandardConstAccessor<sp/>is<sp/>usually<sp/>faster<sp/>for<sp/>compound<sp/>pixel<sp/>types,</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/><sp/><sp/><sp/>while<sp/>StandardConstValueAccessor<sp/>is<sp/>faster<sp/>for<sp/>the<sp/>built-in<sp/>types.</highlight></codeline>
<codeline lineno="298"><highlight class="comment"></highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/><sp/><sp/><sp/>When<sp/>an<sp/>iterator<sp/>passes<sp/>a<sp/>floating<sp/>point<sp/>number<sp/>to<sp/>an<sp/>accessor</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/><sp/><sp/><sp/>with<sp/>integral<sp/>value_type,<sp/>the<sp/>value<sp/>is<sp/>rounded<sp/>and<sp/>clipped<sp/>as<sp/>appropriate.</highlight></codeline>
<codeline lineno="301"><highlight class="comment"></highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/accessor.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="304"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUETYPE&gt;</highlight></codeline>
<codeline lineno="306" refid="classvigra_1_1StandardConstValueAccessor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1StandardConstValueAccessor" kindref="compound" tooltip="Encapsulate access to the values an iterator points to.">StandardConstValueAccessor</ref></highlight></codeline>
<codeline lineno="307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VALUETYPE<sp/>value_type;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Read<sp/>the<sp/>current<sp/>data<sp/>item.<sp/>The<sp/>type<sp/>&lt;TT&gt;ITERATOR::reference&lt;/TT&gt;</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>automatically<sp/>converted<sp/>to<sp/>&lt;TT&gt;VALUETYPE&lt;/TT&gt;.</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>case<sp/>of<sp/>a<sp/>conversion<sp/>floating<sp/>point<sp/>-&gt;<sp/>integral<sp/>this<sp/>includes<sp/>rounding<sp/>and<sp/>clipping.</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR&gt;</highlight></codeline>
<codeline lineno="316" refid="classvigra_1_1StandardConstValueAccessor_1a2eb541fc0f76bbde9028bc3c4f02ed04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>VALUETYPE<sp/><ref refid="classvigra_1_1StandardConstValueAccessor_1a2eb541fc0f76bbde9028bc3c4f02ed04" kindref="member">operator()</ref>(ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="317"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::RequiresExplicitCast&lt;VALUETYPE&gt;::cast(*i);<sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Read<sp/>the<sp/>data<sp/>item<sp/>at<sp/>an<sp/>offset<sp/>(can<sp/>be<sp/>1D<sp/>or<sp/>2D<sp/>or<sp/>higher<sp/>order<sp/>difference).</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>type<sp/>&lt;TT&gt;ITERATOR::index_reference&lt;/TT&gt;</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>automatically<sp/>converted<sp/>to<sp/>&lt;TT&gt;VALUETYPE&lt;/TT&gt;.</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>case<sp/>of<sp/>a<sp/>conversion<sp/>floating<sp/>point<sp/>-&gt;<sp/>integral<sp/>this<sp/>includes<sp/>rounding<sp/>and<sp/>clipping.</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DIFFERENCE&gt;</highlight></codeline>
<codeline lineno="325" refid="classvigra_1_1StandardConstValueAccessor_1ab4a1e300f5bf29ed0a509cdf1c3bcea4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>VALUETYPE<sp/><ref refid="classvigra_1_1StandardConstValueAccessor_1a2eb541fc0f76bbde9028bc3c4f02ed04" kindref="member">operator()</ref>(ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i,<sp/>DIFFERENCE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>diff)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="326"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::RequiresExplicitCast&lt;VALUETYPE&gt;::cast(i[diff]);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal">};</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VectorComponentAccessor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="337"><highlight class="comment">/**<sp/>\brief<sp/>Accessor<sp/>for<sp/>one<sp/>component<sp/>of<sp/>a<sp/>vector.</highlight></codeline>
<codeline lineno="338"><highlight class="comment"></highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>accessor<sp/>allows<sp/>to<sp/>select<sp/>a<sp/>single<sp/>component<sp/>(a<sp/>single<sp/>&apos;band&apos;)</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/><sp/><sp/><sp/>of<sp/>a<sp/>vector<sp/>valued<sp/>pixel<sp/>type.<sp/>The<sp/>pixel<sp/>type<sp/>must<sp/>support</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;TT&gt;operator[]&lt;/TT&gt;.<sp/>The<sp/>index<sp/>of<sp/>the<sp/>component<sp/>to<sp/>be<sp/>selected</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/><sp/><sp/><sp/>is<sp/>passed<sp/>in<sp/>the<sp/>constructor.<sp/>The<sp/>accessor<sp/>returns<sp/>its<sp/>items</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;em&gt;by<sp/>reference&lt;/em&gt;.<sp/>If<sp/>you<sp/>want<sp/>to<sp/>pass/return<sp/>items<sp/>by<sp/>value,</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/><sp/><sp/><sp/>use<sp/>VectorComponentValueAccessor.<sp/>If<sp/>a<sp/>floating<sp/>point<sp/>number</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/><sp/><sp/><sp/>is<sp/>assigned<sp/>by<sp/>means<sp/>of<sp/>an<sp/>accessor<sp/>with<sp/>integral<sp/>value_type,<sp/>the</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/><sp/><sp/><sp/>value<sp/>is<sp/>rounded<sp/>and<sp/>clipped<sp/>as<sp/>appropriate.</highlight></codeline>
<codeline lineno="347"><highlight class="comment"></highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="349"><highlight class="comment"></highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BRGBImage<sp/>image(w,h);</highlight></codeline>
<codeline lineno="352"><highlight class="comment"></highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>init<sp/>red<sp/>channel<sp/>with<sp/>255</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/><sp/><sp/><sp/>initImage(destImageRange(image,</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VectorComponentAccessor&lt;vigra::BRGBImage::value_type&gt;(0)),</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>255);</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="358"><highlight class="comment"></highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/accessor.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="361"><highlight class="comment"></highlight></codeline>
<codeline lineno="362"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VECTORTYPE&gt;</highlight></codeline>
<codeline lineno="364" refid="classvigra_1_1VectorComponentAccessor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1VectorComponentAccessor" kindref="compound" tooltip="Accessor for one component of a vector.">VectorComponentAccessor</ref></highlight></codeline>
<codeline lineno="365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index_;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>value_type</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370" refid="classvigra_1_1VectorComponentAccessor_1adbf17926ea681d4e56c96d16c7d6b73f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VECTORTYPE::value_type<sp/><ref refid="classvigra_1_1VectorComponentAccessor_1adbf17926ea681d4e56c96d16c7d6b73f" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>determine<sp/>the<sp/>component<sp/>to<sp/>be<sp/>accessed</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="classvigra_1_1VectorComponentAccessor_1a2155dad154a950ae3f81b2b34428f714" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1VectorComponentAccessor_1a2155dad154a950ae3f81b2b34428f714" kindref="member">VectorComponentAccessor</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>index_(index)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>read<sp/>the<sp/>current<sp/>data<sp/>item</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR&gt;</highlight></codeline>
<codeline lineno="381" refid="classvigra_1_1VectorComponentAccessor_1a194770c0c0f7a5305b6940cceb975296" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1VectorComponentAccessor_1adbf17926ea681d4e56c96d16c7d6b73f" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="classvigra_1_1VectorComponentAccessor_1a194770c0c0f7a5305b6940cceb975296" kindref="member">operator()</ref>(ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="382"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*i)[index_];<sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>read<sp/>the<sp/>data<sp/>item<sp/>at<sp/>an<sp/>offset<sp/>(can<sp/>be<sp/>1D<sp/>or<sp/>2D<sp/>or<sp/>higher<sp/>order<sp/>difference).</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DIFFERENCE&gt;</highlight></codeline>
<codeline lineno="387" refid="classvigra_1_1VectorComponentAccessor_1ac558e4f20934ee77fcfd57004ad34dae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1VectorComponentAccessor_1adbf17926ea681d4e56c96d16c7d6b73f" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="classvigra_1_1VectorComponentAccessor_1a194770c0c0f7a5305b6940cceb975296" kindref="member">operator()</ref>(ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i,<sp/>DIFFERENCE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>diff)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="388"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i[diff][index_];</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Write<sp/>the<sp/>current<sp/>data<sp/>item.<sp/>The<sp/>type<sp/>&lt;TT&gt;V&lt;/TT&gt;<sp/>of<sp/>the<sp/>passed</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>&lt;TT&gt;value&lt;/TT&gt;<sp/>is<sp/>automatically<sp/>converted<sp/>to<sp/>&lt;TT&gt;value_type&lt;/TT&gt;.</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>case<sp/>of<sp/>a<sp/>conversion<sp/>floating<sp/>point<sp/>-&gt;<sp/>integral<sp/>this<sp/>includes<sp/>rounding<sp/>and<sp/>clipping.</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR&gt;</highlight></codeline>
<codeline lineno="397" refid="classvigra_1_1VectorComponentAccessor_1a7cb2c9deaa4edb5bf641f1a190c76685" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>value,<sp/>ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*i)[index_]<sp/>=<sp/>detail::RequiresExplicitCast&lt;value_type&gt;::cast(value);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Write<sp/>the<sp/>data<sp/>item<sp/>at<sp/>an<sp/>offset<sp/>(can<sp/>be<sp/>1D<sp/>or<sp/>2D<sp/>or<sp/>higher<sp/>order<sp/>difference)..</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>type<sp/>&lt;TT&gt;V&lt;/TT&gt;<sp/>of<sp/>the<sp/>passed</highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>&lt;TT&gt;value&lt;/TT&gt;<sp/>is<sp/>automatically<sp/>converted<sp/>to<sp/>&lt;TT&gt;value_type&lt;/TT&gt;.</highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>case<sp/>of<sp/>a<sp/>conversion<sp/>floating<sp/>point<sp/>-&gt;<sp/>integral<sp/>this<sp/>includes<sp/>rounding<sp/>and<sp/>clipping.</highlight></codeline>
<codeline lineno="406"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DIFFERENCE&gt;</highlight></codeline>
<codeline lineno="408" refid="classvigra_1_1VectorComponentAccessor_1a548cdb2243d69b4cce0fa66084d0bee9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>value,<sp/>ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i,<sp/>DIFFERENCE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>diff)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i[diff][index_]=<sp/>detail::RequiresExplicitCast&lt;value_type&gt;::cast(value);<sp/></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Reset<sp/>the<sp/>index<sp/>to<sp/>the<sp/>given<sp/>number.</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415" refid="classvigra_1_1VectorComponentAccessor_1a5f6dddb34141ffe1bb4373bbc12f2412" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1VectorComponentAccessor_1a5f6dddb34141ffe1bb4373bbc12f2412" kindref="member">setIndex</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal">};</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="421"><highlight class="comment">/**<sp/>\brief<sp/>Accessor<sp/>for<sp/>one<sp/>component<sp/>of<sp/>a<sp/>vector.</highlight></codeline>
<codeline lineno="422"><highlight class="comment"></highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>accessor<sp/>allows<sp/>to<sp/>select<sp/>a<sp/>single<sp/>component<sp/>(a<sp/>single<sp/>&apos;band&apos;)</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/><sp/><sp/><sp/>of<sp/>a<sp/>vector<sp/>valued<sp/>pixel<sp/>type.<sp/>The<sp/>pixel<sp/>type<sp/>must<sp/>support</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;TT&gt;operator[]&lt;/TT&gt;.<sp/>The<sp/>index<sp/>of<sp/>the<sp/>component<sp/>to<sp/>be<sp/>selected</highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/><sp/><sp/><sp/>is<sp/>passed<sp/>in<sp/>the<sp/>constructor.<sp/>The<sp/>accessor<sp/>returns<sp/>its<sp/>items</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;em&gt;by<sp/>value&lt;/em&gt;.<sp/>If<sp/>you<sp/>want<sp/>to<sp/>pass/return<sp/>items<sp/>by<sp/>reference,</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/><sp/><sp/><sp/>use<sp/>VectorComponentAccessor.<sp/>If<sp/>a<sp/>floating<sp/>point<sp/>number</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/><sp/><sp/><sp/>is<sp/>assigned<sp/>by<sp/>means<sp/>of<sp/>an<sp/>accessor<sp/>with<sp/>integral<sp/>value_type,<sp/>the</highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/><sp/><sp/><sp/>value<sp/>is<sp/>rounded<sp/>and<sp/>clipped<sp/>as<sp/>appropriate.</highlight></codeline>
<codeline lineno="431"><highlight class="comment"></highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="433"><highlight class="comment"></highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BRGBImage<sp/>image(w,h);</highlight></codeline>
<codeline lineno="436"><highlight class="comment"></highlight></codeline>
<codeline lineno="437"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>init<sp/>red<sp/>channel<sp/>with<sp/>255</highlight></codeline>
<codeline lineno="438"><highlight class="comment"><sp/><sp/><sp/><sp/>initImage(destImageRange(image,</highlight></codeline>
<codeline lineno="439"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VectorComponentValueAccessor&lt;vigra::BRGBImage::value_type&gt;(0)),</highlight></codeline>
<codeline lineno="440"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>255);</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="442"><highlight class="comment"></highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/accessor.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="445"><highlight class="comment"></highlight></codeline>
<codeline lineno="446"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VECTORTYPE&gt;</highlight></codeline>
<codeline lineno="448" refid="classvigra_1_1VectorComponentValueAccessor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1VectorComponentValueAccessor" kindref="compound" tooltip="Accessor for one component of a vector.">VectorComponentValueAccessor</ref></highlight></codeline>
<codeline lineno="449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index_;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="452"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>value_type</highlight></codeline>
<codeline lineno="453"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454" refid="classvigra_1_1VectorComponentValueAccessor_1adbf17926ea681d4e56c96d16c7d6b73f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VECTORTYPE::value_type<sp/><ref refid="classvigra_1_1VectorComponentValueAccessor_1adbf17926ea681d4e56c96d16c7d6b73f" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="456"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>determine<sp/>the<sp/>component<sp/>to<sp/>be<sp/>accessed</highlight></codeline>
<codeline lineno="457"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458" refid="classvigra_1_1VectorComponentValueAccessor_1a8f815f4fca71ae71636aafecac7772e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1VectorComponentValueAccessor_1a8f815f4fca71ae71636aafecac7772e2" kindref="member">VectorComponentValueAccessor</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>index_(index)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="462"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Read<sp/>the<sp/>current<sp/>data<sp/>item.</highlight></codeline>
<codeline lineno="463"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>type<sp/>&lt;TT&gt;ITERATOR::index_reference::value_type&lt;/TT&gt;</highlight></codeline>
<codeline lineno="464"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>automatically<sp/>converted<sp/>to<sp/>&lt;TT&gt;value_type&lt;/TT&gt;.</highlight></codeline>
<codeline lineno="465"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>case<sp/>of<sp/>a<sp/>conversion<sp/>floating<sp/>point<sp/>-&gt;<sp/>integral<sp/>this<sp/>includes<sp/>rounding<sp/>and<sp/>clipping.</highlight></codeline>
<codeline lineno="466"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR&gt;</highlight></codeline>
<codeline lineno="468" refid="classvigra_1_1VectorComponentValueAccessor_1ae9de5fbb33af2eb53b4253158f26f501" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1VectorComponentValueAccessor_1adbf17926ea681d4e56c96d16c7d6b73f" kindref="member">value_type</ref><sp/><ref refid="classvigra_1_1VectorComponentValueAccessor_1ae9de5fbb33af2eb53b4253158f26f501" kindref="member">operator()</ref>(ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="469"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::RequiresExplicitCast&lt;value_type&gt;::cast((*i)[index_]);<sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Read<sp/>the<sp/>data<sp/>item<sp/>at<sp/>an<sp/>offset<sp/>(can<sp/>be<sp/>1D<sp/>or<sp/>2D<sp/>or<sp/>higher<sp/>order<sp/>difference).</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>type<sp/>&lt;TT&gt;ITERATOR::index_reference::value_type&lt;/TT&gt;</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>automatically<sp/>converted<sp/>to<sp/>&lt;TT&gt;value_type&lt;/TT&gt;.</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>case<sp/>of<sp/>a<sp/>conversion<sp/>floating<sp/>point<sp/>-&gt;<sp/>integral<sp/>this<sp/>includes<sp/>rounding<sp/>and<sp/>clipping.</highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DIFFERENCE&gt;</highlight></codeline>
<codeline lineno="477" refid="classvigra_1_1VectorComponentValueAccessor_1a8dd87b019eb9ddb6c1ce2aff88ec67d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1VectorComponentValueAccessor_1adbf17926ea681d4e56c96d16c7d6b73f" kindref="member">value_type</ref><sp/><ref refid="classvigra_1_1VectorComponentValueAccessor_1ae9de5fbb33af2eb53b4253158f26f501" kindref="member">operator()</ref>(ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i,<sp/>DIFFERENCE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>diff)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="478"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::RequiresExplicitCast&lt;value_type&gt;::cast(i[diff][index_]);<sp/></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Write<sp/>the<sp/>current<sp/>data<sp/>item.<sp/>The<sp/>type<sp/>&lt;TT&gt;V&lt;/TT&gt;<sp/>of<sp/>the<sp/>passed</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>&lt;TT&gt;value&lt;/TT&gt;<sp/>is<sp/>automatically<sp/>converted<sp/>to<sp/>&lt;TT&gt;value_type&lt;/TT&gt;.</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>case<sp/>of<sp/>a<sp/>conversion<sp/>floating<sp/>point<sp/>-&gt;<sp/>integral<sp/>this<sp/>includes<sp/>rounding<sp/>and<sp/>clipping.</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR&gt;</highlight></codeline>
<codeline lineno="487" refid="classvigra_1_1VectorComponentValueAccessor_1ab8a7388dced872227daaa1d0f563c54e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(V<sp/>value,<sp/>ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*i)[index_]<sp/>=<sp/>detail::RequiresExplicitCast&lt;value_type&gt;::cast(value);<sp/></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Write<sp/>the<sp/>data<sp/>item<sp/>at<sp/>an<sp/>offset<sp/>(can<sp/>be<sp/>1D<sp/>or<sp/>2D<sp/>or<sp/>higher<sp/>order<sp/>difference)..</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>type<sp/>&lt;TT&gt;V&lt;/TT&gt;<sp/>of<sp/>the<sp/>passed</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>&lt;TT&gt;value&lt;/TT&gt;<sp/>is<sp/>automatically<sp/>converted<sp/>to<sp/>&lt;TT&gt;value_type&lt;/TT&gt;.</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>case<sp/>of<sp/>a<sp/>conversion<sp/>floating<sp/>point<sp/>-&gt;<sp/>integral<sp/>this<sp/>includes<sp/>rounding<sp/>and<sp/>clipping.</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DIFFERENCE&gt;</highlight></codeline>
<codeline lineno="498" refid="classvigra_1_1VectorComponentValueAccessor_1ad5d06809bf9f223ea38a9061f123b3b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(V<sp/>value,<sp/>ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i,<sp/>DIFFERENCE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>diff)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i[diff][index_]=<sp/>detail::RequiresExplicitCast&lt;value_type&gt;::cast(value);<sp/></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Reset<sp/>the<sp/>index<sp/>to<sp/>the<sp/>given<sp/>number.</highlight></codeline>
<codeline lineno="504"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505" refid="classvigra_1_1VectorComponentValueAccessor_1a5f6dddb34141ffe1bb4373bbc12f2412" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1VectorComponentValueAccessor_1a5f6dddb34141ffe1bb4373bbc12f2412" kindref="member">setIndex</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal">};</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VectorElementAccessor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="517"><highlight class="comment">/**<sp/>\brief<sp/>Accessor<sp/>for<sp/>one<sp/>component<sp/>of<sp/>a<sp/>vector.</highlight></codeline>
<codeline lineno="518"><highlight class="comment"></highlight></codeline>
<codeline lineno="519"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>works<sp/>like<sp/>VectorComponentAccessor,<sp/>only<sp/>the<sp/>template<sp/>parameters<sp/>differ:<sp/></highlight></codeline>
<codeline lineno="520"><highlight class="comment"><sp/><sp/><sp/><sp/>Here,<sp/>we<sp/>need<sp/>a<sp/>vector<sp/>accessor<sp/>type<sp/>,<sp/>whereas<sp/>VectorComponentAccessor<sp/>requires<sp/>a<sp/>vector<sp/>type.</highlight></codeline>
<codeline lineno="521"><highlight class="comment"></highlight></codeline>
<codeline lineno="522"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="523"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="524"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="525"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BRGBImage<sp/>image(w,h);</highlight></codeline>
<codeline lineno="526"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>init<sp/>red<sp/>channel<sp/>with<sp/>255</highlight></codeline>
<codeline lineno="528"><highlight class="comment"><sp/><sp/><sp/><sp/>initImage(destImageRange(image,<sp/></highlight></codeline>
<codeline lineno="529"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VectorElementAccessor&lt;vigra::BRGBImage::Accessor&gt;(0)),</highlight></codeline>
<codeline lineno="530"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>255);</highlight></codeline>
<codeline lineno="531"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="532"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="533"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/accessor.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="534"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="535"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="536"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ACCESSOR&gt;</highlight></codeline>
<codeline lineno="538" refid="classvigra_1_1VectorElementAccessor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1VectorElementAccessor" kindref="compound" tooltip="Accessor for one component of a vector.">VectorElementAccessor</ref></highlight></codeline>
<codeline lineno="539"><highlight class="normal">{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index_;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>ACCESSOR<sp/>a_;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>value_type</highlight></codeline>
<codeline lineno="544"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545" refid="classvigra_1_1VectorElementAccessor_1a89781c3de507fc3c341fd575ef833808" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ACCESSOR::component_type<sp/><ref refid="classvigra_1_1VectorElementAccessor_1a89781c3de507fc3c341fd575ef833808" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>determine<sp/>the<sp/>component<sp/>to<sp/>be<sp/>accessed</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549" refid="classvigra_1_1VectorElementAccessor_1a229ff667b5c76c67960cba6f32bd4f8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1VectorElementAccessor_1a229ff667b5c76c67960cba6f32bd4f8d" kindref="member">VectorElementAccessor</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/>ACCESSOR<sp/>a<sp/>=<sp/>ACCESSOR())</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>index_(index),</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a_(a)</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>read<sp/>the<sp/>current<sp/>data<sp/>item</highlight></codeline>
<codeline lineno="555"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR&gt;</highlight></codeline>
<codeline lineno="557" refid="classvigra_1_1VectorElementAccessor_1a194770c0c0f7a5305b6940cceb975296" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1VectorElementAccessor_1a89781c3de507fc3c341fd575ef833808" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="classvigra_1_1VectorElementAccessor_1a194770c0c0f7a5305b6940cceb975296" kindref="member">operator()</ref>(ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight></codeline>
<codeline lineno="558"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a_.getComponent(i,<sp/>index_);<sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>read<sp/>the<sp/>data<sp/>item<sp/>at<sp/>an<sp/>offset<sp/>(can<sp/>be<sp/>1D<sp/>or<sp/>2D<sp/>or<sp/>higher<sp/>order<sp/>difference).</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DIFFERENCE&gt;</highlight></codeline>
<codeline lineno="563" refid="classvigra_1_1VectorElementAccessor_1ac558e4f20934ee77fcfd57004ad34dae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1VectorElementAccessor_1a89781c3de507fc3c341fd575ef833808" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="classvigra_1_1VectorElementAccessor_1a194770c0c0f7a5305b6940cceb975296" kindref="member">operator()</ref>(ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i,<sp/>DIFFERENCE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>diff)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="564"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a_.getComponent(i,<sp/>diff,<sp/>index_);<sp/></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="568"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Write<sp/>the<sp/>current<sp/>data<sp/>item.<sp/>The<sp/>type<sp/>&lt;TT&gt;V&lt;/TT&gt;<sp/>of<sp/>the<sp/>passed</highlight></codeline>
<codeline lineno="569"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>&lt;TT&gt;value&lt;/TT&gt;<sp/>is<sp/>automatically<sp/>converted<sp/>to<sp/>&lt;TT&gt;value_type&lt;/TT&gt;.</highlight></codeline>
<codeline lineno="570"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>case<sp/>of<sp/>a<sp/>conversion<sp/>floating<sp/>point<sp/>-&gt;<sp/>integral<sp/>this<sp/>includes<sp/>rounding<sp/>and<sp/>clipping.</highlight></codeline>
<codeline lineno="571"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR&gt;</highlight></codeline>
<codeline lineno="573" refid="classvigra_1_1VectorElementAccessor_1a7cb2c9deaa4edb5bf641f1a190c76685" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>value,<sp/>ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_.setComponent(detail::RequiresExplicitCast&lt;value_type&gt;::cast(value),<sp/>i,<sp/>index_);<sp/></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Write<sp/>the<sp/>data<sp/>item<sp/>at<sp/>an<sp/>offset<sp/>(can<sp/>be<sp/>1D<sp/>or<sp/>2D<sp/>or<sp/>higher<sp/>order<sp/>difference)..</highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>type<sp/>&lt;TT&gt;V&lt;/TT&gt;<sp/>of<sp/>the<sp/>passed</highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>&lt;TT&gt;value&lt;/TT&gt;<sp/>is<sp/>automatically<sp/>converted<sp/>to<sp/>&lt;TT&gt;value_type&lt;/TT&gt;.</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>case<sp/>of<sp/>a<sp/>conversion<sp/>floating<sp/>point<sp/>-&gt;<sp/>integral<sp/>this<sp/>includes<sp/>rounding<sp/>and<sp/>clipping.</highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DIFFERENCE&gt;</highlight></codeline>
<codeline lineno="584" refid="classvigra_1_1VectorElementAccessor_1a548cdb2243d69b4cce0fa66084d0bee9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>value,<sp/>ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i,<sp/>DIFFERENCE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>diff)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_.setComponent(detail::RequiresExplicitCast&lt;value_type&gt;::cast(value),<sp/>i,<sp/>diff,<sp/>index_);<sp/></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="589"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Reset<sp/>the<sp/>index<sp/>to<sp/>the<sp/>given<sp/>number.</highlight></codeline>
<codeline lineno="590"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591" refid="classvigra_1_1VectorElementAccessor_1a5f6dddb34141ffe1bb4373bbc12f2412" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1VectorElementAccessor_1a5f6dddb34141ffe1bb4373bbc12f2412" kindref="member">setIndex</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal">};</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SequenceAccessor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="603"><highlight class="comment">/**<sp/>\brief<sp/>Accessor<sp/>for<sp/>items<sp/>that<sp/>are<sp/>STL<sp/>compatible<sp/>sequences.</highlight></codeline>
<codeline lineno="604"><highlight class="comment"></highlight></codeline>
<codeline lineno="605"><highlight class="comment"><sp/><sp/><sp/><sp/>It<sp/>encapsulates<sp/>access<sp/>to<sp/>the<sp/>sequences&apos;<sp/>begin()<sp/>and<sp/>end()</highlight></codeline>
<codeline lineno="606"><highlight class="comment"><sp/><sp/><sp/><sp/>functions.</highlight></codeline>
<codeline lineno="607"><highlight class="comment"></highlight></codeline>
<codeline lineno="608"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="609"><highlight class="comment"></highlight></codeline>
<codeline lineno="610"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/accessor.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="611"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="612"><highlight class="comment"></highlight></codeline>
<codeline lineno="613"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="614"><highlight class="comment"><sp/><sp/><sp/><sp/>typedef<sp/>std::list&lt;std::list&lt;int&gt;<sp/>&gt;<sp/>ListOfLists;</highlight></codeline>
<codeline lineno="615"><highlight class="comment"></highlight></codeline>
<codeline lineno="616"><highlight class="comment"><sp/><sp/><sp/><sp/>ListOfLists<sp/>ll;</highlight></codeline>
<codeline lineno="617"><highlight class="comment"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="618"><highlight class="comment"></highlight></codeline>
<codeline lineno="619"><highlight class="comment"><sp/><sp/><sp/><sp/>typedef<sp/>vigra::SequenceAccessor&lt;ListOfLists::value_type&gt;<sp/>ListOfListsAccessor;</highlight></codeline>
<codeline lineno="620"><highlight class="comment"><sp/><sp/><sp/><sp/>ListOfListsAccessor<sp/>a;</highlight></codeline>
<codeline lineno="621"><highlight class="comment"><sp/><sp/><sp/><sp/>for(ListOfLists::iterator<sp/>li<sp/>=<sp/>ll.begin();<sp/>li<sp/>!=<sp/>ll.end();<sp/>++li)</highlight></codeline>
<codeline lineno="622"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(ListOfListsAccessor::iterator<sp/>i<sp/>=<sp/>a.begin(li);<sp/>i<sp/>!=<sp/>a.end(li);<sp/>++i)</highlight></codeline>
<codeline lineno="624"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*i<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="626"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="629"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SEQUENCE&gt;</highlight></codeline>
<codeline lineno="631" refid="classvigra_1_1SequenceAccessor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1SequenceAccessor" kindref="compound" tooltip="Accessor for items that are STL compatible sequences.">SequenceAccessor</ref></highlight></codeline>
<codeline lineno="632"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StandardAccessor" kindref="compound" tooltip="Encapsulate access to the values an iterator points to.">StandardAccessor</ref>&lt;SEQUENCE&gt;</highlight></codeline>
<codeline lineno="633"><highlight class="normal">{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="635"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>sequence&apos;s<sp/>value_type</highlight></codeline>
<codeline lineno="636"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637" refid="classvigra_1_1SequenceAccessor_1a147ce64ac2dd7e4cb3d1c4295ab778a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SEQUENCE::value_type<sp/><ref refid="classvigra_1_1SequenceAccessor_1a147ce64ac2dd7e4cb3d1c4295ab778a3" kindref="member">component_type</ref>;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NO_PARTIAL_TEMPLATE_SPECIALIZATION</highlight></codeline>
<codeline lineno="640"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If&lt;typename<sp/>TypeTraits&lt;SEQUENCE&gt;::isConst,</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SEQUENCE::const_iterator,</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SEQUENCE::iterator&gt;::type<sp/></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="646"><highlight class="preprocessor"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>sequence&apos;s<sp/>iterator<sp/>type</highlight></codeline>
<codeline lineno="647"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SEQUENCE::iterator<sp/>iterator;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="650"><highlight class="preprocessor"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="651"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>get<sp/>begin<sp/>iterator<sp/>for<sp/>sequence<sp/>at<sp/>given<sp/>iterator<sp/>position</highlight></codeline>
<codeline lineno="652"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR&gt;</highlight></codeline>
<codeline lineno="654" refid="classvigra_1_1SequenceAccessor_1ac627712df1aaa7de9309106f1ee6bff6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>iterator<sp/><ref refid="classvigra_1_1SequenceAccessor_1ac627712df1aaa7de9309106f1ee6bff6" kindref="member">begin</ref>(ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="655"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*i).begin();</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="659"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>get<sp/>end<sp/>iterator<sp/>for<sp/>sequence<sp/>at<sp/>given<sp/>iterator<sp/>position</highlight></codeline>
<codeline lineno="660"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR&gt;</highlight></codeline>
<codeline lineno="662" refid="classvigra_1_1SequenceAccessor_1acae2ec02131d37ece846351e0fb8bdc9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>iterator<sp/><ref refid="classvigra_1_1SequenceAccessor_1acae2ec02131d37ece846351e0fb8bdc9" kindref="member">end</ref>(ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i)</highlight><highlight class="keyword"><sp/><sp/>const</highlight></codeline>
<codeline lineno="663"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*i).end();</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="667"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>get<sp/>begin<sp/>iterator<sp/>for<sp/>sequence<sp/>at<sp/>an<sp/>offset</highlight></codeline>
<codeline lineno="668"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>given<sp/>iterator<sp/>position</highlight></codeline>
<codeline lineno="669"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DIFFERENCE&gt;</highlight></codeline>
<codeline lineno="671" refid="classvigra_1_1SequenceAccessor_1a55613b9ba07429232ec18e1a9bf579d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>iterator<sp/><ref refid="classvigra_1_1SequenceAccessor_1ac627712df1aaa7de9309106f1ee6bff6" kindref="member">begin</ref>(ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i,<sp/>DIFFERENCE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>diff)</highlight><highlight class="keyword"><sp/><sp/>const</highlight></codeline>
<codeline lineno="672"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i[diff].begin();</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="676"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>get<sp/>end<sp/>iterator<sp/>for<sp/>sequence<sp/>at<sp/>a<sp/>2D<sp/>difference<sp/>vector</highlight></codeline>
<codeline lineno="677"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>given<sp/>iterator<sp/>position</highlight></codeline>
<codeline lineno="678"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DIFFERENCE&gt;</highlight></codeline>
<codeline lineno="680" refid="classvigra_1_1SequenceAccessor_1a999a8398b2558e0dd600fbdcf79e2413" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>iterator<sp/><ref refid="classvigra_1_1SequenceAccessor_1acae2ec02131d37ece846351e0fb8bdc9" kindref="member">end</ref>(ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i,<sp/>DIFFERENCE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>diff)</highlight><highlight class="keyword"><sp/><sp/>const</highlight></codeline>
<codeline lineno="681"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i[diff].end();</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="685"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>get<sp/>size<sp/>of<sp/>sequence<sp/>at<sp/>given<sp/>iterator<sp/>position</highlight></codeline>
<codeline lineno="686"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR&gt;</highlight></codeline>
<codeline lineno="688" refid="classvigra_1_1SequenceAccessor_1aaa2cbf44aa60205ca08c7e95ab63c05b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1SequenceAccessor_1aaa2cbf44aa60205ca08c7e95ab63c05b" kindref="member">size</ref>(ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*i).size();<sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="690"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>get<sp/>size<sp/>of<sp/>sequence<sp/>at<sp/>2D<sp/>difference<sp/>vector<sp/>of<sp/>given<sp/>iterator<sp/>position</highlight></codeline>
<codeline lineno="691"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DIFFERENCE&gt;</highlight></codeline>
<codeline lineno="693" refid="classvigra_1_1SequenceAccessor_1a448bee3c0efb6f11a3927d3a26d6dbed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1SequenceAccessor_1aaa2cbf44aa60205ca08c7e95ab63c05b" kindref="member">size</ref>(ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i,<sp/>DIFFERENCE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>diff)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="694"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i[diff].size();<sp/>}</highlight></codeline>
<codeline lineno="695"><highlight class="normal">};</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VectorAccessor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="703"><highlight class="comment">/**<sp/>\brief<sp/>Accessor<sp/>for<sp/>items<sp/>that<sp/>are<sp/>STL<sp/>compatible<sp/>vectors.</highlight></codeline>
<codeline lineno="704"><highlight class="comment"></highlight></codeline>
<codeline lineno="705"><highlight class="comment"><sp/><sp/><sp/><sp/>It<sp/>encapsulates<sp/>access<sp/>to<sp/>a<sp/>vector&apos;s<sp/>access<sp/>functionality.</highlight></codeline>
<codeline lineno="706"><highlight class="comment"></highlight></codeline>
<codeline lineno="707"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="708"><highlight class="comment"></highlight></codeline>
<codeline lineno="709"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/accessor.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="710"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="711"><highlight class="comment"></highlight></codeline>
<codeline lineno="712"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>accessor<sp/>has<sp/>two<sp/>modes<sp/>of<sp/>operation:</highlight></codeline>
<codeline lineno="713"><highlight class="comment"></highlight></codeline>
<codeline lineno="714"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;ol&gt;</highlight></codeline>
<codeline lineno="715"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;li&gt;<sp/>Access<sp/>the<sp/>vector&apos;s<sp/>iterator<sp/>via<sp/>the<sp/>&lt;TT&gt;begin()&lt;/TT&gt;<sp/>and<sp/>&lt;TT&gt;end()&lt;/TT&gt;</highlight></codeline>
<codeline lineno="716"><highlight class="comment"><sp/><sp/><sp/><sp/>functions:</highlight></codeline>
<codeline lineno="717"><highlight class="comment"></highlight></codeline>
<codeline lineno="718"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="719"><highlight class="comment"><sp/><sp/><sp/><sp/>typedef<sp/>std::list&lt;std::vector&lt;int&gt;<sp/>&gt;<sp/>ListOfVectors;</highlight></codeline>
<codeline lineno="720"><highlight class="comment"></highlight></codeline>
<codeline lineno="721"><highlight class="comment"><sp/><sp/><sp/><sp/>ListOfVectors<sp/>ll;</highlight></codeline>
<codeline lineno="722"><highlight class="comment"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="723"><highlight class="comment"></highlight></codeline>
<codeline lineno="724"><highlight class="comment"><sp/><sp/><sp/><sp/>typedef<sp/>vigra::SequenceAccessor&lt;ListOfVectors::value_type&gt;<sp/>ListOfVectorsAccessor;</highlight></codeline>
<codeline lineno="725"><highlight class="comment"><sp/><sp/><sp/><sp/>ListOfVectorsAccessor<sp/>a;</highlight></codeline>
<codeline lineno="726"><highlight class="comment"><sp/><sp/><sp/><sp/>for(ListOfVectors::iterator<sp/>li<sp/>=<sp/>ll.begin();<sp/>li<sp/>!=<sp/>ll.end();<sp/>++li)</highlight></codeline>
<codeline lineno="727"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(ListOfVectorsAccessor::iterator<sp/>i<sp/>=<sp/>a.begin(li);<sp/>i<sp/>!=<sp/>a.end(li);<sp/>++i)</highlight></codeline>
<codeline lineno="729"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*i<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="731"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="732"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="734"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;li&gt;<sp/>Access<sp/>the<sp/>vector&apos;s<sp/>components<sp/>via<sp/>an<sp/>index<sp/>(internally<sp/>calls</highlight></codeline>
<codeline lineno="735"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>vector&apos;s<sp/>&lt;TT&gt;operator[]&lt;/TT&gt;<sp/>):</highlight></codeline>
<codeline lineno="736"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="737"><highlight class="comment"><sp/><sp/><sp/><sp/>typedef<sp/>std::list&lt;std::vector&lt;int&gt;<sp/>&gt;<sp/>ListOfVectors;</highlight></codeline>
<codeline lineno="738"><highlight class="comment"></highlight></codeline>
<codeline lineno="739"><highlight class="comment"><sp/><sp/><sp/><sp/>ListOfVectors<sp/>ll;</highlight></codeline>
<codeline lineno="740"><highlight class="comment"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="741"><highlight class="comment"></highlight></codeline>
<codeline lineno="742"><highlight class="comment"><sp/><sp/><sp/><sp/>typedef<sp/>vigra::SequenceAccessor&lt;ListOfVectors::value_type&gt;<sp/>ListOfVectorsAccessor;</highlight></codeline>
<codeline lineno="743"><highlight class="comment"><sp/><sp/><sp/><sp/>ListOfVectorsAccessor<sp/>a;</highlight></codeline>
<codeline lineno="744"><highlight class="comment"><sp/><sp/><sp/><sp/>for(ListOfVectors::iterator<sp/>li<sp/>=<sp/>ll.begin();<sp/>li<sp/>!=<sp/>ll.end();<sp/>++li)</highlight></codeline>
<codeline lineno="745"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>a.size(li);<sp/>++i)</highlight></codeline>
<codeline lineno="747"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.setComponent(10,<sp/>li,<sp/>i);</highlight></codeline>
<codeline lineno="749"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="752"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/ol&gt;</highlight></codeline>
<codeline lineno="753"><highlight class="comment"></highlight></codeline>
<codeline lineno="754"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Required<sp/>Interface:&lt;/b&gt;</highlight></codeline>
<codeline lineno="755"><highlight class="comment"></highlight></codeline>
<codeline lineno="756"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="757"><highlight class="comment"><sp/><sp/><sp/><sp/>VECTOR<sp/>v;</highlight></codeline>
<codeline lineno="758"><highlight class="comment"><sp/><sp/><sp/><sp/>VECTOR::iterator<sp/>i;</highlight></codeline>
<codeline lineno="759"><highlight class="comment"><sp/><sp/><sp/><sp/>value_type<sp/>d;</highlight></codeline>
<codeline lineno="760"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>index;</highlight></codeline>
<codeline lineno="761"><highlight class="comment"></highlight></codeline>
<codeline lineno="762"><highlight class="comment"><sp/><sp/><sp/><sp/>d<sp/>=<sp/>v[index];</highlight></codeline>
<codeline lineno="763"><highlight class="comment"><sp/><sp/><sp/><sp/>v[index]<sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="764"><highlight class="comment"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>v.begin();</highlight></codeline>
<codeline lineno="765"><highlight class="comment"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>v.end();</highlight></codeline>
<codeline lineno="766"><highlight class="comment"><sp/><sp/><sp/><sp/>v.size();</highlight></codeline>
<codeline lineno="767"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="768"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VECTOR&gt;</highlight></codeline>
<codeline lineno="770" refid="classvigra_1_1VectorAccessor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1VectorAccessor" kindref="compound" tooltip="Accessor for items that are STL compatible vectors.">VectorAccessor</ref></highlight></codeline>
<codeline lineno="771"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1SequenceAccessor" kindref="compound" tooltip="Accessor for items that are STL compatible sequences.">SequenceAccessor</ref>&lt;VECTOR&gt;</highlight></codeline>
<codeline lineno="772"><highlight class="normal">{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="774"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>vector&apos;s<sp/>value_type</highlight></codeline>
<codeline lineno="775"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776" refid="classvigra_1_1VectorAccessor_1ad95c119fb9ff83e1f6faa8de36d549a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VECTOR::value_type<sp/><ref refid="classvigra_1_1VectorAccessor_1ad95c119fb9ff83e1f6faa8de36d549a8" kindref="member">component_type</ref>;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="778"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>vector<sp/>element<sp/>accessor<sp/>associated<sp/>with<sp/>this<sp/>vector<sp/>accessor</highlight></codeline>
<codeline lineno="779"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(see<sp/>\ref<sp/>VectorElementAccessor)</highlight></codeline>
<codeline lineno="780"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781" refid="classvigra_1_1VectorAccessor_1a184070be108879ef237c7fc37a6f27a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1VectorElementAccessor" kindref="compound" tooltip="Accessor for one component of a vector.">VectorElementAccessor&lt;VectorAccessor&lt;VECTOR&gt;</ref><sp/>&gt;<sp/><ref refid="classvigra_1_1VectorAccessor_1a184070be108879ef237c7fc37a6f27a6" kindref="member">ElementAccessor</ref>;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="783"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Read<sp/>the<sp/>component<sp/>data<sp/>at<sp/>given<sp/>vector<sp/>index</highlight></codeline>
<codeline lineno="784"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>at<sp/>given<sp/>iterator<sp/>position</highlight></codeline>
<codeline lineno="785"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR&gt;</highlight></codeline>
<codeline lineno="787" refid="classvigra_1_1VectorAccessor_1a75c782b99ca13bed01bfca842f8d383a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1SequenceAccessor_1a147ce64ac2dd7e4cb3d1c4295ab778a3" kindref="member">component_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="classvigra_1_1VectorAccessor_1a75c782b99ca13bed01bfca842f8d383a" kindref="member">getComponent</ref>(ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="788"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*i)[idx];</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="792"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Set<sp/>the<sp/>component<sp/>data<sp/>at<sp/>given<sp/>vector<sp/>index</highlight></codeline>
<codeline lineno="793"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>at<sp/>given<sp/>iterator<sp/>position.<sp/>The<sp/>type<sp/>&lt;TT&gt;V&lt;/TT&gt;<sp/>of<sp/>the<sp/>passed</highlight></codeline>
<codeline lineno="794"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>&lt;TT&gt;value&lt;/TT&gt;<sp/>is<sp/>automatically<sp/>converted<sp/>to<sp/>&lt;TT&gt;component_type&lt;/TT&gt;.</highlight></codeline>
<codeline lineno="795"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>case<sp/>of<sp/>a<sp/>conversion<sp/>floating<sp/>point<sp/>-&gt;<sp/>integral<sp/>this<sp/>includes<sp/>rounding<sp/>and<sp/>clipping.</highlight></codeline>
<codeline lineno="796"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR&gt;</highlight></codeline>
<codeline lineno="798" refid="classvigra_1_1VectorAccessor_1aee32b776e76e452e150421707a3e3154" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1VectorAccessor_1aee32b776e76e452e150421707a3e3154" kindref="member">setComponent</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>value,<sp/>ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="799"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*i)[idx]<sp/>=<sp/>detail::RequiresExplicitCast&lt;component_type&gt;::cast(value);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="803"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Read<sp/>the<sp/>component<sp/>data<sp/>at<sp/>given<sp/>vector<sp/>index</highlight></codeline>
<codeline lineno="804"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>at<sp/>an<sp/>offset<sp/>of<sp/>given<sp/>iterator<sp/>position</highlight></codeline>
<codeline lineno="805"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DIFFERENCE&gt;</highlight></codeline>
<codeline lineno="807" refid="classvigra_1_1VectorAccessor_1aacd0e3c27a08826066ddc442bfc1e385" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1SequenceAccessor_1a147ce64ac2dd7e4cb3d1c4295ab778a3" kindref="member">component_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="classvigra_1_1VectorAccessor_1a75c782b99ca13bed01bfca842f8d383a" kindref="member">getComponent</ref>(ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i,<sp/>DIFFERENCE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>diff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="808"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i[diff][idx];</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="812"><highlight class="comment"><sp/><sp/><sp/><sp/>/**<sp/>Set<sp/>the<sp/>component<sp/>data<sp/>at<sp/>given<sp/>vector<sp/>index</highlight></codeline>
<codeline lineno="813"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>at<sp/>an<sp/>offset<sp/>of<sp/>given<sp/>iterator<sp/>position.<sp/>The<sp/>type<sp/>&lt;TT&gt;V&lt;/TT&gt;<sp/>of<sp/>the<sp/>passed</highlight></codeline>
<codeline lineno="814"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>&lt;TT&gt;value&lt;/TT&gt;<sp/>is<sp/>automatically<sp/>converted<sp/>to<sp/>&lt;TT&gt;component_type&lt;/TT&gt;.</highlight></codeline>
<codeline lineno="815"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>case<sp/>of<sp/>a<sp/>conversion<sp/>floating<sp/>point<sp/>-&gt;<sp/>integral<sp/>this<sp/>includes<sp/>rounding<sp/>and<sp/>clipping.</highlight></codeline>
<codeline lineno="816"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ITERATOR,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DIFFERENCE&gt;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819" refid="classvigra_1_1VectorAccessor_1a721f8e2b70b81d65776337a28bbaac50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1VectorAccessor_1aee32b776e76e452e150421707a3e3154" kindref="member">setComponent</ref>(V<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>value,<sp/>ITERATOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>i,<sp/>DIFFERENCE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>diff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="820"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i[diff][idx]<sp/>=<sp/>detail::RequiresExplicitCast&lt;component_type&gt;::cast(value);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal">};</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiImageAccessor2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="832"><highlight class="comment">/**<sp/>\brief<sp/>Access<sp/>two<sp/>images<sp/>simultaneously.</highlight></codeline>
<codeline lineno="833"><highlight class="comment"></highlight></codeline>
<codeline lineno="834"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>accessor<sp/>is<sp/>used<sp/>when<sp/>two<sp/>images<sp/>need<sp/>to<sp/>be<sp/>treated<sp/>as<sp/>one</highlight></codeline>
<codeline lineno="835"><highlight class="comment"><sp/><sp/><sp/><sp/>because<sp/>an<sp/>algorithm<sp/>accepts<sp/>only<sp/>one<sp/>image.<sp/>For<sp/>example,</highlight></codeline>
<codeline lineno="836"><highlight class="comment"><sp/><sp/><sp/><sp/>\ref<sp/>seededRegionGrowing()<sp/>uses<sp/>only<sp/>one<sp/>image<sp/>two<sp/>calculate</highlight></codeline>
<codeline lineno="837"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>cost<sp/>for<sp/>aggregating<sp/>each<sp/>pixel<sp/>into<sp/>a<sp/>region.<sp/>Sometimes,<sp/>we</highlight></codeline>
<codeline lineno="838"><highlight class="comment"><sp/><sp/><sp/><sp/>need<sp/>more<sp/>information<sp/>to<sp/>calculate<sp/>this<sp/>cost,<sp/>for<sp/>example<sp/>gray<sp/>value</highlight></codeline>
<codeline lineno="839"><highlight class="comment"><sp/><sp/><sp/><sp/>and<sp/>local<sp/>gradient<sp/>magnitude.<sp/>These<sp/>values<sp/>can<sp/>be<sp/>stored<sp/>in<sp/>two<sp/>images,</highlight></codeline>
<codeline lineno="840"><highlight class="comment"><sp/><sp/><sp/><sp/>which<sp/>appear<sp/>as<sp/>only<sp/>one<sp/>when<sp/>we<sp/>pass<sp/>a<sp/>&lt;TT&gt;MultiImageAccessor2&lt;/TT&gt;<sp/>to</highlight></codeline>
<codeline lineno="841"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>algorithms.<sp/>Of<sp/>course,<sp/>the<sp/>cost<sp/>functor<sp/>must<sp/>accept<sp/>a<sp/>&lt;TT&gt;pair&lt;/TT&gt;</highlight></codeline>
<codeline lineno="842"><highlight class="comment"><sp/><sp/><sp/><sp/>of<sp/>values<sp/>for<sp/>this<sp/>to<sp/>work.<sp/>Instead<sp/>of<sp/>an<sp/>actual<sp/>image<sp/>iterator,<sp/>we</highlight></codeline>
<codeline lineno="843"><highlight class="comment"><sp/><sp/><sp/><sp/>pass<sp/>a<sp/>&lt;a<sp/>href=&quot;CoordinateIterator.html&quot;&gt;CoordinateIterator&lt;/a&gt;<sp/>which</highlight></codeline>
<codeline lineno="844"><highlight class="comment"><sp/><sp/><sp/><sp/>selects<sp/>the<sp/>right<sp/>pixels<sp/>form<sp/>both<sp/>images.</highlight></codeline>
<codeline lineno="845"><highlight class="comment"></highlight></codeline>
<codeline lineno="846"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="847"><highlight class="comment"></highlight></codeline>
<codeline lineno="848"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/accessor.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="849"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="850"><highlight class="comment"></highlight></codeline>
<codeline lineno="851"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="852"><highlight class="comment"><sp/><sp/><sp/><sp/>using<sp/>namespace<sp/>vigra;</highlight></codeline>
<codeline lineno="853"><highlight class="comment"></highlight></codeline>
<codeline lineno="854"><highlight class="comment"><sp/><sp/><sp/><sp/>FImage<sp/>gray_values(w,h),<sp/>gradient_magnitude(w,h);</highlight></codeline>
<codeline lineno="855"><highlight class="comment"><sp/><sp/><sp/><sp/>IImage<sp/>seeds(w,h),<sp/>labels(w,h);</highlight></codeline>
<codeline lineno="856"><highlight class="comment"></highlight></codeline>
<codeline lineno="857"><highlight class="comment"><sp/><sp/><sp/><sp/>seededRegionGrowing(</highlight></codeline>
<codeline lineno="858"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcIterRange(CoordinateIterator(),<sp/>CoordinateIterator(w,h),</highlight></codeline>
<codeline lineno="859"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiImageAccessor2&lt;FImage::iterator,<sp/>FImage::Accessor,</highlight></codeline>
<codeline lineno="860"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FImage::iterator,<sp/>FImage::Accessor&gt;</highlight></codeline>
<codeline lineno="861"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(gray_values.upperLeft(),<sp/>gray_values.accessor(),</highlight></codeline>
<codeline lineno="862"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradient_magnitude.upperLeft(),<sp/>gradient_magnitude.accessor())),</highlight></codeline>
<codeline lineno="863"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcImage(seeds),</highlight></codeline>
<codeline lineno="864"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destImage(labels),</highlight></codeline>
<codeline lineno="865"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SomeCostFunctor());</highlight></codeline>
<codeline lineno="866"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="867"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Iter1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Acc1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Iter2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Acc2&gt;</highlight></codeline>
<codeline lineno="870" refid="classvigra_1_1MultiImageAccessor2" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1MultiImageAccessor2" kindref="compound" tooltip="Access two images simultaneously.">MultiImageAccessor2</ref></highlight></codeline>
<codeline lineno="871"><highlight class="normal">{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="873"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>The<sp/>accessors<sp/>value_type:<sp/>construct<sp/>a<sp/>pair<sp/>that<sp/>contains</highlight></codeline>
<codeline lineno="874"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>corresponding<sp/>image<sp/>values.</highlight></codeline>
<codeline lineno="875"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>pair&lt;typename<sp/>Acc1::value_type,<sp/>typename<sp/>Acc2::value_type&gt;</highlight></codeline>
<codeline lineno="877" refid="classvigra_1_1MultiImageAccessor2_1a8270d04923edabf5d08cc7b355d3abda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiImageAccessor2_1a8270d04923edabf5d08cc7b355d3abda" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="879"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Construct<sp/>from<sp/>two<sp/>image<sp/>iterators<sp/>and<sp/>associated<sp/>accessors.</highlight></codeline>
<codeline lineno="880"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881" refid="classvigra_1_1MultiImageAccessor2_1a601559ab1bee550eb46665e8136122fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiImageAccessor2_1a601559ab1bee550eb46665e8136122fb" kindref="member">MultiImageAccessor2</ref>(Iter1<sp/>i1,<sp/>Acc1<sp/>a1,<sp/>Iter2<sp/>i2,<sp/>Acc2<sp/>a2)</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>i1_(i1),<sp/>a1_(a1),<sp/>i2_(i2),<sp/>a2_(a2)</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="885"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>read<sp/>the<sp/>current<sp/>data<sp/>item</highlight></codeline>
<codeline lineno="886"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DIFFERENCE&gt;</highlight></codeline>
<codeline lineno="888" refid="classvigra_1_1MultiImageAccessor2_1a55a82d2222382cab8d2dcd9fd820c7a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiImageAccessor2_1a8270d04923edabf5d08cc7b355d3abda" kindref="member">value_type</ref><sp/><ref refid="classvigra_1_1MultiImageAccessor2_1a55a82d2222382cab8d2dcd9fd820c7a4" kindref="member">operator()</ref>(DIFFERENCE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="889"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(a1_(i1_,<sp/>d),<sp/>a2_(i2_,<sp/>d));</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="893"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>read<sp/>the<sp/>data<sp/>item<sp/>at<sp/>an<sp/>offset</highlight></codeline>
<codeline lineno="894"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DIFFERENCE1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DIFFERENCE2&gt;</highlight></codeline>
<codeline lineno="896" refid="classvigra_1_1MultiImageAccessor2_1af8b544ffe24090e6ed49777755be650a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiImageAccessor2_1a8270d04923edabf5d08cc7b355d3abda" kindref="member">value_type</ref><sp/><ref refid="classvigra_1_1MultiImageAccessor2_1a55a82d2222382cab8d2dcd9fd820c7a4" kindref="member">operator()</ref>(DIFFERENCE1<sp/>d1,<sp/>DIFFERENCE2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>d2)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="897"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d1<sp/>+=<sp/>d2;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(a1_(i1_,<sp/>d1),<sp/>a2_(i2_,<sp/>d1));</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>Iter1<sp/>i1_;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>Acc1<sp/>a1_;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>Iter2<sp/>i2_;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>Acc2<sp/>a2_;</highlight></codeline>
<codeline lineno="907"><highlight class="normal">};</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="909"><highlight class="comment">//@}</highlight></codeline>
<codeline lineno="910"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">AccessorTraits</highlight></codeline>
<codeline lineno="913"><highlight class="normal">{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>StandardAccessor&lt;T&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_accessor;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>StandardConstAccessor&lt;T&gt;<sp/><sp/><sp/>default_const_accessor;</highlight></codeline>
<codeline lineno="916"><highlight class="normal">};</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_DEFINE_ACCESSOR_TRAITS(VALUE,<sp/>ACCESSOR,<sp/>CONST_ACCESSOR)<sp/>\</highlight></codeline>
<codeline lineno="919"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;&gt;<sp/>\</highlight></codeline>
<codeline lineno="920"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>struct<sp/>AccessorTraits&lt;VALUE<sp/>&gt;<sp/>\</highlight></codeline>
<codeline lineno="921"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="922"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>ACCESSOR&lt;VALUE<sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default_accessor;<sp/>\</highlight></codeline>
<codeline lineno="923"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>CONST_ACCESSOR&lt;VALUE<sp/>&gt;<sp/><sp/><sp/>default_const_accessor;<sp/>\</highlight></codeline>
<codeline lineno="924"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="925"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">,<sp/>StandardValueAccessor,<sp/>StandardConstValueAccessor)</highlight></codeline>
<codeline lineno="927"><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">,<sp/>StandardValueAccessor,<sp/>StandardConstValueAccessor)</highlight></codeline>
<codeline lineno="928"><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">,<sp/>StandardValueAccessor,<sp/>StandardConstValueAccessor)</highlight></codeline>
<codeline lineno="929"><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">,<sp/>StandardValueAccessor,<sp/>StandardConstValueAccessor)</highlight></codeline>
<codeline lineno="930"><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>StandardValueAccessor,<sp/>StandardConstValueAccessor)</highlight></codeline>
<codeline lineno="931"><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>StandardValueAccessor,<sp/>StandardConstValueAccessor)</highlight></codeline>
<codeline lineno="932"><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>StandardValueAccessor,<sp/>StandardConstValueAccessor)</highlight></codeline>
<codeline lineno="933"><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/>StandardValueAccessor,<sp/>StandardConstValueAccessor)</highlight></codeline>
<codeline lineno="934"><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/>StandardValueAccessor,<sp/>StandardConstValueAccessor)</highlight></codeline>
<codeline lineno="935"><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/>StandardValueAccessor,<sp/>StandardConstValueAccessor)</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal">template<sp/>&lt;class<sp/>T,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RED_IDX,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GREEN_IDX,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BLUE_IDX&gt;<sp/>class<sp/>RGBValue;</highlight></codeline>
<codeline lineno="938"><highlight class="normal">template<sp/>&lt;class<sp/>T&gt;<sp/>class<sp/>RGBAccessor;</highlight></codeline>
<codeline lineno="939"><highlight class="normal">template<sp/>&lt;class<sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE&gt;<sp/>class<sp/>TinyVector;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NO_PARTIAL_TEMPLATE_SPECIALIZATION</highlight></codeline>
<codeline lineno="942"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RED_IDX,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GREEN_IDX,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BLUE_IDX&gt;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">AccessorTraits&lt;RGBValue&lt;T,<sp/>RED_IDX,<sp/>GREEN_IDX,<sp/>BLUE_IDX&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="945"><highlight class="normal">{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>RGBAccessor&lt;RGBValue&lt;T,<sp/>RED_IDX,<sp/>GREEN_IDX,<sp/>BLUE_IDX&gt;<sp/>&gt;<sp/><sp/><sp/>default_accessor;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>RGBAccessor&lt;RGBValue&lt;T,<sp/>RED_IDX,<sp/>GREEN_IDX,<sp/>BLUE_IDX&gt;<sp/>&gt;<sp/><sp/><sp/>default_const_accessor;</highlight></codeline>
<codeline lineno="948"><highlight class="normal">};</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">AccessorTraits&lt;TinyVector&lt;T,<sp/>SIZE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="952"><highlight class="normal">{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VectorAccessor&lt;TinyVector&lt;T,<sp/>SIZE&gt;<sp/>&gt;<sp/><sp/><sp/>default_accessor;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VectorAccessor&lt;TinyVector&lt;T,<sp/>SIZE&gt;<sp/>&gt;<sp/><sp/><sp/>default_const_accessor;</highlight></codeline>
<codeline lineno="955"><highlight class="normal">};</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/>//<sp/>NO_PARTIAL_TEMPLATE_SPECIALIZATION</highlight></codeline>
<codeline lineno="958"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(RGBValue&lt;unsigned<sp/>char&gt;,<sp/>RGBAccessor,<sp/>RGBAccessor)</highlight></codeline>
<codeline lineno="960"><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(RGBValue&lt;</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">&gt;,<sp/>RGBAccessor,<sp/>RGBAccessor)</highlight></codeline>
<codeline lineno="961"><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(RGBValue&lt;</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">&gt;,<sp/>RGBAccessor,<sp/>RGBAccessor)</highlight></codeline>
<codeline lineno="962"><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(RGBValue&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">&gt;,<sp/>RGBAccessor,<sp/>RGBAccessor)</highlight></codeline>
<codeline lineno="963"><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(RGBValue&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;,<sp/>RGBAccessor,<sp/>RGBAccessor)</highlight></codeline>
<codeline lineno="964"><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(RGBValue&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;,<sp/>RGBAccessor,<sp/>RGBAccessor)</highlight></codeline>
<codeline lineno="965"><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(RGBValue&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">&gt;,<sp/>RGBAccessor,<sp/>RGBAccessor)</highlight></codeline>
<codeline lineno="966"><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(RGBValue&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">&gt;,<sp/>RGBAccessor,<sp/>RGBAccessor)</highlight></codeline>
<codeline lineno="967"><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(RGBValue&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;,<sp/>RGBAccessor,<sp/>RGBAccessor)</highlight></codeline>
<codeline lineno="968"><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(RGBValue&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;,<sp/>RGBAccessor,<sp/>RGBAccessor)</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_PIXELTYPE<sp/>TinyVector&lt;unsigned<sp/>char,<sp/>2&gt;</highlight></codeline>
<codeline lineno="971"><highlight class="preprocessor"></highlight><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(VIGRA_PIXELTYPE,<sp/>VectorAccessor,<sp/>VectorAccessor)</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_PIXELTYPE</highlight></codeline>
<codeline lineno="973"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_PIXELTYPE<sp/>TinyVector&lt;unsigned<sp/>char,<sp/>3&gt;</highlight></codeline>
<codeline lineno="974"><highlight class="preprocessor"></highlight><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(VIGRA_PIXELTYPE,<sp/>VectorAccessor,<sp/>VectorAccessor)</highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_PIXELTYPE</highlight></codeline>
<codeline lineno="976"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_PIXELTYPE<sp/>TinyVector&lt;unsigned<sp/>char,<sp/>4&gt;</highlight></codeline>
<codeline lineno="977"><highlight class="preprocessor"></highlight><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(VIGRA_PIXELTYPE,<sp/>VectorAccessor,<sp/>VectorAccessor)</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_PIXELTYPE</highlight></codeline>
<codeline lineno="979"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_PIXELTYPE<sp/>TinyVector&lt;short,<sp/>2&gt;</highlight></codeline>
<codeline lineno="980"><highlight class="preprocessor"></highlight><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(VIGRA_PIXELTYPE,<sp/>VectorAccessor,<sp/>VectorAccessor)</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_PIXELTYPE</highlight></codeline>
<codeline lineno="982"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_PIXELTYPE<sp/>TinyVector&lt;short,<sp/>3&gt;</highlight></codeline>
<codeline lineno="983"><highlight class="preprocessor"></highlight><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(VIGRA_PIXELTYPE,<sp/>VectorAccessor,<sp/>VectorAccessor)</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_PIXELTYPE</highlight></codeline>
<codeline lineno="985"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_PIXELTYPE<sp/>TinyVector&lt;short,<sp/>4&gt;</highlight></codeline>
<codeline lineno="986"><highlight class="preprocessor"></highlight><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(VIGRA_PIXELTYPE,<sp/>VectorAccessor,<sp/>VectorAccessor)</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_PIXELTYPE</highlight></codeline>
<codeline lineno="988"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_PIXELTYPE<sp/>TinyVector&lt;int,<sp/>2&gt;</highlight></codeline>
<codeline lineno="989"><highlight class="preprocessor"></highlight><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(VIGRA_PIXELTYPE,<sp/>VectorAccessor,<sp/>VectorAccessor)</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_PIXELTYPE</highlight></codeline>
<codeline lineno="991"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_PIXELTYPE<sp/>TinyVector&lt;int,<sp/>3&gt;</highlight></codeline>
<codeline lineno="992"><highlight class="preprocessor"></highlight><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(VIGRA_PIXELTYPE,<sp/>VectorAccessor,<sp/>VectorAccessor)</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_PIXELTYPE</highlight></codeline>
<codeline lineno="994"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_PIXELTYPE<sp/>TinyVector&lt;int,<sp/>4&gt;</highlight></codeline>
<codeline lineno="995"><highlight class="preprocessor"></highlight><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(VIGRA_PIXELTYPE,<sp/>VectorAccessor,<sp/>VectorAccessor)</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_PIXELTYPE</highlight></codeline>
<codeline lineno="997"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_PIXELTYPE<sp/>TinyVector&lt;float,<sp/>2&gt;</highlight></codeline>
<codeline lineno="998"><highlight class="preprocessor"></highlight><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(VIGRA_PIXELTYPE,<sp/>VectorAccessor,<sp/>VectorAccessor)</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_PIXELTYPE</highlight></codeline>
<codeline lineno="1000"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_PIXELTYPE<sp/>TinyVector&lt;float,<sp/>3&gt;</highlight></codeline>
<codeline lineno="1001"><highlight class="preprocessor"></highlight><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(VIGRA_PIXELTYPE,<sp/>VectorAccessor,<sp/>VectorAccessor)</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_PIXELTYPE</highlight></codeline>
<codeline lineno="1003"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_PIXELTYPE<sp/>TinyVector&lt;float,<sp/>4&gt;</highlight></codeline>
<codeline lineno="1004"><highlight class="preprocessor"></highlight><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(VIGRA_PIXELTYPE,<sp/>VectorAccessor,<sp/>VectorAccessor)</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_PIXELTYPE</highlight></codeline>
<codeline lineno="1006"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_PIXELTYPE<sp/>TinyVector&lt;double,<sp/>2&gt;</highlight></codeline>
<codeline lineno="1007"><highlight class="preprocessor"></highlight><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(VIGRA_PIXELTYPE,<sp/>VectorAccessor,<sp/>VectorAccessor)</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_PIXELTYPE</highlight></codeline>
<codeline lineno="1009"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_PIXELTYPE<sp/>TinyVector&lt;double,<sp/>3&gt;</highlight></codeline>
<codeline lineno="1010"><highlight class="preprocessor"></highlight><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(VIGRA_PIXELTYPE,<sp/>VectorAccessor,<sp/>VectorAccessor)</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_PIXELTYPE</highlight></codeline>
<codeline lineno="1012"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_PIXELTYPE<sp/>TinyVector&lt;double,<sp/>4&gt;</highlight></codeline>
<codeline lineno="1013"><highlight class="preprocessor"></highlight><highlight class="normal">VIGRA_DEFINE_ACCESSOR_TRAITS(VIGRA_PIXELTYPE,<sp/>VectorAccessor,<sp/>VectorAccessor)</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_PIXELTYPE</highlight></codeline>
<codeline lineno="1015"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>NO_PARTIAL_TEMPLATE_SPECIALIZATION</highlight></codeline>
<codeline lineno="1017"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_DEFINE_ACCESSOR_TRAITS</highlight></codeline>
<codeline lineno="1019"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>vigra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>VIGRA_ACCESSOR_HXX</highlight></codeline>
    </programlisting>
    <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/accessor.hxx"/>
  </compounddef>
</doxygen>
