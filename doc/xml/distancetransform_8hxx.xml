<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="distancetransform_8hxx" kind="file">
    <compoundname>distancetransform.hxx</compoundname>
    <includes local="no">cmath</includes>
    <includes refid="stdimage_8hxx" local="yes">stdimage.hxx</includes>
    <incdepgraph>
      <node id="1937">
        <label>functional</label>
      </node>
      <node id="1911">
        <label>limits</label>
      </node>
      <node id="1915">
        <label>basicimage.hxx</label>
        <link refid="basicimage_8hxx_source"/>
        <childnode refid="1916" relation="include">
        </childnode>
        <childnode refid="1912" relation="include">
        </childnode>
        <childnode refid="1917" relation="include">
        </childnode>
        <childnode refid="1925" relation="include">
        </childnode>
        <childnode refid="1926" relation="include">
        </childnode>
        <childnode refid="1938" relation="include">
        </childnode>
      </node>
      <node id="1905">
        <label>sized_int.hxx</label>
        <link refid="sized__int_8hxx_source"/>
        <childnode refid="1906" relation="include">
        </childnode>
        <childnode refid="1911" relation="include">
        </childnode>
      </node>
      <node id="1924">
        <label>iterator</label>
      </node>
      <node id="1936">
        <label>inspector_passes.hxx</label>
        <link refid="inspector__passes_8hxx_source"/>
        <childnode refid="1906" relation="include">
        </childnode>
      </node>
      <node id="1930">
        <label>promote_traits.hxx</label>
        <link refid="promote__traits_8hxx_source"/>
      </node>
      <node id="1935">
        <label>algorithm.hxx</label>
        <link refid="algorithm_8hxx_source"/>
        <childnode refid="1905" relation="include">
        </childnode>
        <childnode refid="1927" relation="include">
        </childnode>
        <childnode refid="1936" relation="include">
        </childnode>
        <childnode refid="1912" relation="include">
        </childnode>
        <childnode refid="1937" relation="include">
        </childnode>
        <childnode refid="1924" relation="include">
        </childnode>
      </node>
      <node id="1903">
        <label>cmath</label>
      </node>
      <node id="1909">
        <label>stdexcept</label>
      </node>
      <node id="1923">
        <label>iteratortags.hxx</label>
        <link refid="iteratortags_8hxx_source"/>
        <childnode refid="1924" relation="include">
        </childnode>
      </node>
      <node id="1920">
        <label>string</label>
      </node>
      <node id="1925">
        <label>iteratortraits.hxx</label>
        <link refid="iteratortraits_8hxx_source"/>
        <childnode refid="1926" relation="include">
        </childnode>
        <childnode refid="1931" relation="include">
        </childnode>
      </node>
      <node id="1928">
        <label>cfloat</label>
      </node>
      <node id="1917">
        <label>utilities.hxx</label>
        <link refid="utilities_8hxx_source"/>
        <childnode refid="1907" relation="include">
        </childnode>
        <childnode refid="1918" relation="include">
        </childnode>
        <childnode refid="1906" relation="include">
        </childnode>
        <childnode refid="1913" relation="include">
        </childnode>
        <childnode refid="1921" relation="include">
        </childnode>
        <childnode refid="1933" relation="include">
        </childnode>
        <childnode refid="1920" relation="include">
        </childnode>
        <childnode refid="1919" relation="include">
        </childnode>
      </node>
      <node id="1908">
        <label>vigra/configVersion.hxx</label>
        <link refid="configVersion_8hxx_source"/>
      </node>
      <node id="1913">
        <label>tuple.hxx</label>
        <link refid="tuple_8hxx_source"/>
        <childnode refid="1914" relation="include">
        </childnode>
      </node>
      <node id="1902">
        <label>vigra/distancetransform.hxx</label>
        <link refid="distancetransform.hxx"/>
        <childnode refid="1903" relation="include">
        </childnode>
        <childnode refid="1904" relation="include">
        </childnode>
      </node>
      <node id="1940">
        <label>tinyvector.hxx</label>
        <link refid="tinyvector_8hxx_source"/>
        <childnode refid="1903" relation="include">
        </childnode>
        <childnode refid="1934" relation="include">
        </childnode>
        <childnode refid="1922" relation="include">
        </childnode>
        <childnode refid="1912" relation="include">
        </childnode>
        <childnode refid="1907" relation="include">
        </childnode>
        <childnode refid="1918" relation="include">
        </childnode>
        <childnode refid="1906" relation="include">
        </childnode>
        <childnode refid="1927" relation="include">
        </childnode>
        <childnode refid="1938" relation="include">
        </childnode>
        <childnode refid="1933" relation="include">
        </childnode>
        <childnode refid="1921" relation="include">
        </childnode>
      </node>
      <node id="1904">
        <label>stdimage.hxx</label>
        <link refid="stdimage_8hxx_source"/>
        <childnode refid="1905" relation="include">
        </childnode>
        <childnode refid="1913" relation="include">
        </childnode>
        <childnode refid="1915" relation="include">
        </childnode>
        <childnode refid="1925" relation="include">
        </childnode>
        <childnode refid="1926" relation="include">
        </childnode>
        <childnode refid="1939" relation="include">
        </childnode>
      </node>
      <node id="1933">
        <label>mathutil.hxx</label>
        <link refid="mathutil_8hxx_source"/>
        <childnode refid="1903" relation="include">
        </childnode>
        <childnode refid="1934" relation="include">
        </childnode>
        <childnode refid="1929" relation="include">
        </childnode>
        <childnode refid="1907" relation="include">
        </childnode>
        <childnode refid="1918" relation="include">
        </childnode>
        <childnode refid="1913" relation="include">
        </childnode>
        <childnode refid="1905" relation="include">
        </childnode>
        <childnode refid="1927" relation="include">
        </childnode>
        <childnode refid="1935" relation="include">
        </childnode>
      </node>
      <node id="1907">
        <label>config.hxx</label>
        <link refid="config_8hxx_source"/>
        <childnode refid="1908" relation="include">
        </childnode>
        <childnode refid="1909" relation="include">
        </childnode>
      </node>
      <node id="1927">
        <label>numerictraits.hxx</label>
        <link refid="numerictraits_8hxx_source"/>
        <childnode refid="1910" relation="include">
        </childnode>
        <childnode refid="1911" relation="include">
        </childnode>
        <childnode refid="1928" relation="include">
        </childnode>
        <childnode refid="1929" relation="include">
        </childnode>
        <childnode refid="1906" relation="include">
        </childnode>
        <childnode refid="1905" relation="include">
        </childnode>
        <childnode refid="1930" relation="include">
        </childnode>
      </node>
      <node id="1932">
        <label>iteratoradapter.hxx</label>
        <link refid="iteratoradapter_8hxx_source"/>
      </node>
      <node id="1931">
        <label>imageiteratoradapter.hxx</label>
        <link refid="imageiteratoradapter_8hxx_source"/>
        <childnode refid="1924" relation="include">
        </childnode>
      </node>
      <node id="1914">
        <label>utility</label>
      </node>
      <node id="1919">
        <label>sstream</label>
      </node>
      <node id="1939">
        <label>rgbvalue.hxx</label>
        <link refid="rgbvalue_8hxx_source"/>
        <childnode refid="1903" relation="include">
        </childnode>
        <childnode refid="1934" relation="include">
        </childnode>
        <childnode refid="1907" relation="include">
        </childnode>
        <childnode refid="1927" relation="include">
        </childnode>
        <childnode refid="1926" relation="include">
        </childnode>
        <childnode refid="1940" relation="include">
        </childnode>
        <childnode refid="1941" relation="include">
        </childnode>
      </node>
      <node id="1921">
        <label>diff2d.hxx</label>
        <link refid="diff2d_8hxx_source"/>
        <childnode refid="1903" relation="include">
        </childnode>
        <childnode refid="1922" relation="include">
        </childnode>
        <childnode refid="1907" relation="include">
        </childnode>
        <childnode refid="1923" relation="include">
        </childnode>
        <childnode refid="1925" relation="include">
        </childnode>
        <childnode refid="1932" relation="include">
        </childnode>
        <childnode refid="1913" relation="include">
        </childnode>
      </node>
      <node id="1918">
        <label>error.hxx</label>
        <link refid="error_8hxx_source"/>
        <childnode refid="1909" relation="include">
        </childnode>
        <childnode refid="1919" relation="include">
        </childnode>
        <childnode refid="1920" relation="include">
        </childnode>
        <childnode refid="1907" relation="include">
        </childnode>
      </node>
      <node id="1941">
        <label>static_assert.hxx</label>
        <link refid="static__assert_8hxx_source"/>
      </node>
      <node id="1922">
        <label>iosfwd</label>
      </node>
      <node id="1934">
        <label>cstdlib</label>
      </node>
      <node id="1910">
        <label>climits</label>
      </node>
      <node id="1906">
        <label>metaprogramming.hxx</label>
        <link refid="metaprogramming_8hxx_source"/>
        <childnode refid="1907" relation="include">
        </childnode>
        <childnode refid="1910" relation="include">
        </childnode>
        <childnode refid="1911" relation="include">
        </childnode>
        <childnode refid="1912" relation="include">
        </childnode>
      </node>
      <node id="1929">
        <label>complex</label>
      </node>
      <node id="1912">
        <label>algorithm</label>
      </node>
      <node id="1938">
        <label>memory.hxx</label>
        <link refid="memory_8hxx_source"/>
        <childnode refid="1906" relation="include">
        </childnode>
      </node>
      <node id="1926">
        <label>accessor.hxx</label>
        <link refid="accessor_8hxx_source"/>
        <childnode refid="1906" relation="include">
        </childnode>
        <childnode refid="1927" relation="include">
        </childnode>
        <childnode refid="1913" relation="include">
        </childnode>
      </node>
      <node id="1916">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innerclass refid="structvigra_1_1InternalDistanceTransformL1NormFunctor" prot="public">vigra::InternalDistanceTransformL1NormFunctor</innerclass>
    <innerclass refid="structvigra_1_1InternalDistanceTransformL2NormFunctor" prot="public">vigra::InternalDistanceTransformL2NormFunctor</innerclass>
    <innerclass refid="structvigra_1_1InternalDistanceTransformLInifinityNormFunctor" prot="public">vigra::InternalDistanceTransformLInifinityNormFunctor</innerclass>
    <innernamespace refid="namespacevigra">vigra</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>1998-2002<sp/>by<sp/>Ullrich<sp/>Koethe<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>VIGRA<sp/>computer<sp/>vision<sp/>library.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>The<sp/>VIGRA<sp/>Website<sp/>is<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://hci.iwr.uni-heidelberg.de/vigra/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Please<sp/>direct<sp/>questions,<sp/>bug<sp/>reports,<sp/>and<sp/>contributions<sp/>to<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ullrich.koethe@iwr.uni-heidelberg.de<sp/><sp/><sp/><sp/>or<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra@informatik.uni-hamburg.de<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>conditions:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Software.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VIGRA_DISTANCETRANSFORM_HXX</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_DISTANCETRANSFORM_HXX</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdimage.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vigra<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>functors<sp/>to<sp/>determine<sp/>the<sp/>distance<sp/>norm<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>these<sp/>functors<sp/>assume<sp/>that<sp/>dx<sp/>and<sp/>dy<sp/>are<sp/>positive</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>(this<sp/>is<sp/>OK<sp/>for<sp/>use<sp/>in<sp/>internalDistanceTransform())</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>chessboard<sp/>metric</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">InternalDistanceTransformLInifinityNormFunctor</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>operator()(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dy)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="55"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(dx<sp/>&lt;<sp/>dy)<sp/>?<sp/>dy<sp/>:<sp/>dx;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal">};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Manhattan<sp/>metric</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">InternalDistanceTransformL1NormFunctor</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>operator()(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dy)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="64"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dx<sp/>+<sp/>dy;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal">};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Euclidean<sp/>metric</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">InternalDistanceTransformL2NormFunctor</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>operator()(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dy)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="73"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__FixedPointOperations_1ga22d75753836176f3d172f58be11ecc4c" kindref="member" tooltip="square root.">VIGRA_CSTD::sqrt</ref>(dx*dx<sp/>+<sp/>dy*dy);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal">};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcAccessor,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DestImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DestAccessor,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ValueType,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">NormFunctor&gt;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">internalDistanceTransform(SrcImageIterator<sp/>src_upperleft,<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcImageIterator<sp/>src_lowerright,<sp/>SrcAccessor<sp/>sa,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DestImageIterator<sp/>dest_upperleft,<sp/>DestAccessor<sp/>da,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ValueType<sp/>background,<sp/>NormFunctor<sp/><ref refid="group__FFTWComplexOperators_1ga396baa79e8bd78a178597d32d5152041" kindref="member" tooltip="norm (= magnitude)">norm</ref>)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>src_lowerright.x<sp/>-<sp/>src_upperleft.x;<sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>src_lowerright.y<sp/>-<sp/>src_upperleft.y;<sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__StandardImageTypes_1ga1170a9252f2ce52a075238e327ec78f0" kindref="member">FImage</ref><sp/>xdist(w,h),<sp/>ydist(w,h);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>xdist<sp/>=<sp/>(<ref refid="classvigra_1_1BasicImage_1ad618f240f2b743f553b20beac68bbaf8" kindref="member">FImage::value_type</ref>)w;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>x<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>ydist<sp/>=<sp/>(<ref refid="classvigra_1_1BasicImage_1ad618f240f2b743f553b20beac68bbaf8" kindref="member">FImage::value_type</ref>)h;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>y<sp/>distances<sp/>with<sp/>&apos;large&apos;<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>SrcImageIterator<sp/>sy<sp/>=<sp/>src_upperleft;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>DestImageIterator<sp/>ry<sp/>=<sp/>dest_upperleft;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1BasicImage_1af41e23f99db325a93187f3cd64201529" kindref="member">FImage::Iterator</ref><sp/>xdy<sp/>=<sp/>xdist.upperLeft();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1BasicImage_1af41e23f99db325a93187f3cd64201529" kindref="member">FImage::Iterator</ref><sp/>ydy<sp/>=<sp/>ydist.upperLeft();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>SrcImageIterator<sp/>sx<sp/>=<sp/>sy;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>DestImageIterator<sp/>rx<sp/>=<sp/>ry;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1BasicImage_1af41e23f99db325a93187f3cd64201529" kindref="member">FImage::Iterator</ref><sp/>xdx<sp/>=<sp/>xdy;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1BasicImage_1af41e23f99db325a93187f3cd64201529" kindref="member">FImage::Iterator</ref><sp/>ydx<sp/>=<sp/>ydy;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Diff2D<sp/>left(-1,<sp/>0);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Diff2D<sp/>right(1,<sp/>0);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Diff2D<sp/>top(0,<sp/>-1);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Diff2D<sp/>bottom(0,<sp/>1);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,y;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sa(sx)<sp/>!=<sp/>background)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*xdx<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ydx<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>da.set(0.0,<sp/>rx);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>da.set(<ref refid="group__FFTWComplexOperators_1ga396baa79e8bd78a178597d32d5152041" kindref="member" tooltip="norm (= magnitude)">norm</ref>(*xdx,<sp/>*ydx),<sp/>rx);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(x=1,<sp/>++xdx.x,<sp/>++ydx.x,<sp/>++sx.x,<sp/>++rx.x;<sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x&lt;w;<sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++x,<sp/>++xdx.x,<sp/>++ydx.x,<sp/>++sx.x,<sp/>++rx.x)<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>row<sp/>left<sp/>to<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sa(sx)<sp/>!=<sp/>background)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*xdx<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ydx<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>da.set(0.0,<sp/>rx);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*xdx<sp/><sp/>=<sp/>xdx[left]<sp/>+<sp/>1.0f;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>propagate<sp/>x<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ydx<sp/><sp/>=<sp/>ydx[left];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>y<sp/>components<sp/>of<sp/>distance<sp/>from<sp/>left<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>da.set(<ref refid="group__FFTWComplexOperators_1ga396baa79e8bd78a178597d32d5152041" kindref="member" tooltip="norm (= magnitude)">norm</ref>(*xdx,<sp/>*ydx),<sp/>rx);<sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>distance<sp/>from<sp/>x<sp/>and<sp/>y<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(x=w-2,<sp/>xdx.x<sp/>-=<sp/>2,<sp/>ydx.x<sp/>-=<sp/>2,<sp/>sx.x<sp/>-=<sp/>2,<sp/>rx.x<sp/>-=<sp/>2;<sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x&gt;=0;<sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--x,<sp/>--xdx.x,<sp/>--ydx.x,<sp/>--sx.x,<sp/>--rx.x)<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>row<sp/>right<sp/>to<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d<sp/>=<sp/><ref refid="group__FFTWComplexOperators_1ga396baa79e8bd78a178597d32d5152041" kindref="member" tooltip="norm (= magnitude)">norm</ref>(xdx[right]<sp/>+<sp/>1.0f,<sp/>ydx[right]);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(da(rx)<sp/>&lt;<sp/>d)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*xdx<sp/>=<sp/>xdx[right]<sp/>+<sp/>1.0f;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ydx<sp/>=<sp/>ydx[right];</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>da.set(d,<sp/>rx);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(y=1,<sp/>++xdy.y,<sp/>++ydy.y,<sp/>++sy.y,<sp/>++ry.y;<sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y&lt;h;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++y,<sp/>++xdy.y,<sp/>++ydy.y,<sp/>++sy.y,<sp/>++ry.y)<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>top<sp/>to<sp/>bottom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sx<sp/>=<sp/>sy;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx<sp/>=<sp/>ry;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xdx<sp/>=<sp/>xdy;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ydx<sp/>=<sp/>ydy;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sa(sx)<sp/>!=<sp/>background)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>pixel<sp/>of<sp/>current<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*xdx<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ydx<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>da.set(0.0,<sp/>rx);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*xdx<sp/>=<sp/>xdx[top];</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ydx<sp/>=<sp/>ydx[top]<sp/>+<sp/>1.0f;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>da.set(<ref refid="group__FFTWComplexOperators_1ga396baa79e8bd78a178597d32d5152041" kindref="member" tooltip="norm (= magnitude)">norm</ref>(*xdx,<sp/>*ydx),<sp/>rx);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(x=1,<sp/>++xdx.x,<sp/>++ydx.x,<sp/>++sx.x,<sp/>++rx.x;<sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x&lt;w;<sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++x,<sp/>++xdx.x,<sp/>++ydx.x,<sp/>++sx.x,<sp/>++rx.x)<sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>row<sp/>left<sp/>to<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sa(sx)<sp/>!=<sp/>background)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*xdx<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ydx<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>da.set(0.0,<sp/>rx);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d1<sp/>=<sp/><ref refid="group__FFTWComplexOperators_1ga396baa79e8bd78a178597d32d5152041" kindref="member" tooltip="norm (= magnitude)">norm</ref>(xdx[left]<sp/>+<sp/>1.0f,<sp/>ydx[left]);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d2<sp/>=<sp/><ref refid="group__FFTWComplexOperators_1ga396baa79e8bd78a178597d32d5152041" kindref="member" tooltip="norm (= magnitude)">norm</ref>(xdx[top],<sp/>ydx[top]<sp/>+<sp/>1.0f);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(d1<sp/>&lt;<sp/>d2)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*xdx<sp/>=<sp/>xdx[left]<sp/>+<sp/>1.0f;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ydx<sp/>=<sp/>ydx[left];</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>da.set(d1,<sp/>rx);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*xdx<sp/>=<sp/>xdx[top];</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ydx<sp/>=<sp/>ydx[top]<sp/>+<sp/>1.0f;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>da.set(d2,<sp/>rx);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(x=w-2,<sp/>xdx.x<sp/>-=<sp/>2,<sp/>ydx.x<sp/>-=<sp/>2,<sp/>sx.x<sp/>-=<sp/>2,<sp/>rx.x<sp/>-=<sp/>2;<sp/></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x&gt;=0;<sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--x,<sp/>--xdx.x,<sp/>--ydx.x,<sp/>--sx.x,<sp/>--rx.x)<sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>row<sp/>right<sp/>to<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d1<sp/>=<sp/><ref refid="group__FFTWComplexOperators_1ga396baa79e8bd78a178597d32d5152041" kindref="member" tooltip="norm (= magnitude)">norm</ref>(xdx[right]<sp/>+<sp/>1.0f,<sp/>ydx[right]);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(da(rx)<sp/>&lt;<sp/>d1)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*xdx<sp/>=<sp/>xdx[right]<sp/>+<sp/>1.0f;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ydx<sp/>=<sp/>ydx[right];</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>da.set(d1,<sp/>rx);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(y=h-2,<sp/>xdy.y<sp/>-=<sp/>2,<sp/>ydy.y<sp/>-=<sp/>2,<sp/>sy.y<sp/>-=<sp/>2,<sp/>ry.y<sp/>-=<sp/>2;<sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y&gt;=0;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--y,<sp/>--xdy.y,<sp/>--ydy.y,<sp/>--sy.y,<sp/>--ry.y)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bottom<sp/>to<sp/>top</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sx<sp/>=<sp/>sy;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx<sp/>=<sp/>ry;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xdx<sp/>=<sp/>xdy;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ydx<sp/>=<sp/>ydy;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d<sp/>=<sp/><ref refid="group__FFTWComplexOperators_1ga396baa79e8bd78a178597d32d5152041" kindref="member" tooltip="norm (= magnitude)">norm</ref>(xdx[bottom],<sp/>ydx[bottom]<sp/>+<sp/>1.0f);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(d<sp/>&lt;<sp/>da(rx))<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>pixel<sp/>of<sp/>current<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*xdx<sp/>=<sp/>xdx[bottom];</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ydx<sp/>=<sp/>ydx[bottom]<sp/>+<sp/>1.0f;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>da.set(d,<sp/>rx);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(x=1,<sp/>++xdx.x,<sp/>++ydx.x,<sp/>++sx.x,<sp/>++rx.x;<sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x&lt;w;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++x,<sp/>++xdx.x,<sp/>++ydx.x,<sp/>++sx.x,<sp/>++rx.x)<sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>row<sp/>left<sp/>to<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d1<sp/>=<sp/><ref refid="group__FFTWComplexOperators_1ga396baa79e8bd78a178597d32d5152041" kindref="member" tooltip="norm (= magnitude)">norm</ref>(xdx[left]<sp/>+<sp/>1.0f,<sp/>ydx[left]);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d2<sp/>=<sp/><ref refid="group__FFTWComplexOperators_1ga396baa79e8bd78a178597d32d5152041" kindref="member" tooltip="norm (= magnitude)">norm</ref>(xdx[bottom],<sp/>ydx[bottom]<sp/>+<sp/>1.0f);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(d1<sp/>&lt;<sp/>d2)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(da(rx)<sp/>&lt;<sp/>d1)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*xdx<sp/>=<sp/>xdx[left]<sp/>+<sp/>1.0f;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ydx<sp/>=<sp/>ydx[left];</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>da.set(d1,<sp/>rx);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(da(rx)<sp/>&lt;<sp/>d2)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*xdx<sp/>=<sp/>xdx[bottom];</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ydx<sp/>=<sp/>ydx[bottom]<sp/>+<sp/>1.0f;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>da.set(d2,<sp/>rx);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(x=w-2,<sp/>xdx.x<sp/>-=<sp/>2,<sp/>ydx.x<sp/>-=<sp/>2,<sp/>sx.x<sp/>-=<sp/>2,<sp/>rx.x<sp/>-=<sp/>2;<sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x&gt;=0;<sp/></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--x,<sp/>--xdx.x,<sp/>--ydx.x,<sp/>--sx.x,<sp/>--rx.x)<sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>row<sp/>right<sp/>to<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d1<sp/>=<sp/><ref refid="group__FFTWComplexOperators_1ga396baa79e8bd78a178597d32d5152041" kindref="member" tooltip="norm (= magnitude)">norm</ref>(xdx[right]<sp/>+<sp/>1.0f,<sp/>ydx[right]);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(da(rx)<sp/>&lt;<sp/>d1)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*xdx<sp/>=<sp/>xdx[right]<sp/>+<sp/>1.0f;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ydx<sp/>=<sp/>ydx[right];</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>da.set(d1,<sp/>rx);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distanceTransform<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="275"><highlight class="comment">/**<sp/>\addtogroup<sp/>DistanceTransform<sp/>Distance<sp/>Transform</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/>Perform<sp/>a<sp/>distance<sp/>transform<sp/>using<sp/>either<sp/>the<sp/>Euclidean,<sp/>Manhattan,<sp/></highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/>or<sp/>chessboard<sp/>metrics.</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/><sp/>See<sp/>also:<sp/>\ref<sp/>MultiArrayDistanceTransform<sp/>&quot;multi-dimensional<sp/>distance<sp/>transforms&quot;</highlight></codeline>
<codeline lineno="280"><highlight class="comment">*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="281"><highlight class="comment">//@{</highlight></codeline>
<codeline lineno="282"><highlight class="comment"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="283"><highlight class="comment">/**<sp/>For<sp/>all<sp/>background<sp/>pixels,<sp/>calculate<sp/>the<sp/>distance<sp/>to<sp/></highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>nearest<sp/>object<sp/>or<sp/>contour.<sp/>The<sp/>label<sp/>of<sp/>the<sp/>pixels<sp/>to<sp/>be<sp/>considered<sp/></highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/><sp/><sp/><sp/>background<sp/>in<sp/>the<sp/>source<sp/>image<sp/>is<sp/>passed<sp/>in<sp/>the<sp/>parameter<sp/>&apos;background&apos;.</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/><sp/><sp/><sp/>Source<sp/>pixels<sp/>with<sp/>other<sp/>labels<sp/>will<sp/>be<sp/>considered<sp/>objects.<sp/>In<sp/>the<sp/></highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/><sp/><sp/><sp/>destination<sp/>image,<sp/>all<sp/>pixels<sp/>corresponding<sp/>to<sp/>background<sp/>will<sp/>be<sp/>assigned<sp/></highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>their<sp/>distance<sp/>value,<sp/>all<sp/>pixels<sp/>corresponding<sp/>to<sp/>objects<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/><sp/><sp/>assigned<sp/>0.</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>parameter<sp/>&apos;norm&apos;<sp/>gives<sp/>the<sp/>distance<sp/>norm<sp/>to<sp/>be<sp/>used:</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="294"><highlight class="comment"></highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;li&gt;<sp/>norm<sp/>==<sp/>0:<sp/>use<sp/>chessboard<sp/>distance<sp/>(L-infinity<sp/>norm)</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;li&gt;<sp/>norm<sp/>==<sp/>1:<sp/>use<sp/>Manhattan<sp/>distance<sp/>(L1<sp/>norm)</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;li&gt;<sp/>norm<sp/>==<sp/>2:<sp/>use<sp/>Euclidean<sp/>distance<sp/>(L2<sp/>norm)</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/><sp/><sp/><sp/>If<sp/>you<sp/>use<sp/>the<sp/>L2<sp/>norm,<sp/>the<sp/>destination<sp/>pixels<sp/>must<sp/>be<sp/>real<sp/>valued<sp/>to<sp/>give</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/><sp/><sp/>correct<sp/>results.</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declarations:&lt;/b&gt;</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/><sp/><sp/><sp/>pass<sp/>arguments<sp/>explicitly:</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>SrcImageIterator,<sp/>class<sp/>SrcAccessor,</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>DestImageIterator,<sp/>class<sp/>DestAccessor,</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>distanceTransform(SrcImageIterator<sp/>src_upperleft,<sp/></highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcImageIterator<sp/>src_lowerright,<sp/>SrcAccessor<sp/>sa,</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DestImageIterator<sp/>dest_upperleft,<sp/>DestAccessor<sp/>da,</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ValueType<sp/>background,<sp/>int<sp/>norm)</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/><sp/><sp/><sp/>use<sp/>argument<sp/>objects<sp/>in<sp/>conjunction<sp/>with<sp/>\ref<sp/>ArgumentObjectFactories<sp/>:</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>SrcImageIterator,<sp/>class<sp/>SrcAccessor,</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>DestImageIterator,<sp/>class<sp/>DestAccessor,</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>distanceTransform(</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>triple&lt;SrcImageIterator,<sp/>SrcImageIterator,<sp/>SrcAccessor&gt;<sp/>src,</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;DestImageIterator,<sp/>DestAccessor&gt;<sp/>dest,</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ValueType<sp/>background,<sp/>int<sp/>norm)</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/distancetransform.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BImage<sp/>src(w,h),<sp/>edges(w,h);</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::FImage<sp/>distance(w,<sp/>h);</highlight></codeline>
<codeline lineno="343"><highlight class="comment"></highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>empty<sp/>edge<sp/>image</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/><sp/><sp/><sp/>edges<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="347"><highlight class="comment"></highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>detect<sp/>edges<sp/>in<sp/>src<sp/>image<sp/>(edges<sp/>will<sp/>be<sp/>marked<sp/>1,<sp/>background<sp/>0)</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::differenceOfExponentialEdgeImage(srcImageRange(src),<sp/>destImage(edges),<sp/></highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.8,<sp/>4.0);</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>find<sp/>distance<sp/>of<sp/>all<sp/>pixels<sp/>from<sp/>nearest<sp/>edge</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::distanceTransform(srcImageRange(edges),<sp/>destImage(distance),</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2);</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>^<sp/>background<sp/>label<sp/><sp/><sp/>^<sp/>norm<sp/>(Euclidean)</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="357"><highlight class="comment"></highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Required<sp/>Interface:&lt;/b&gt;</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/><sp/><sp/><sp/>SrcImageIterator<sp/>src_upperleft,<sp/>src_lowerright;</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/><sp/><sp/><sp/>DestImageIterator<sp/>dest_upperleft;</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/><sp/><sp/><sp/>SrcAccessor<sp/>sa;</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/><sp/><sp/><sp/>DestAccessor<sp/>da;</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/><sp/><sp/><sp/>ValueType<sp/>background;</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/><sp/><sp/><sp/>float<sp/>distance;</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/><sp/><sp/><sp/>sa(src_upperleft)<sp/>!=<sp/>background;</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/><sp/><sp/><sp/>da(dest_upperleft)<sp/>&lt;<sp/>distance;</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/><sp/><sp/><sp/>da.set(distance,<sp/>dest_upperleft);</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="376"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal">doxygen_overloaded_function(template<sp/>&lt;...&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__DistanceTransform_1gad481d272471bfa808196959dffca524b" kindref="member">distanceTransform</ref>)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcAccessor,</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DestImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DestAccessor,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ValueType&gt;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><ref refid="group__DistanceTransform_1gad481d272471bfa808196959dffca524b" kindref="member">distanceTransform</ref>(SrcImageIterator<sp/>src_upperleft,<sp/></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SrcImageIterator<sp/>src_lowerright,<sp/>SrcAccessor<sp/>sa,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DestImageIterator<sp/>dest_upperleft,<sp/>DestAccessor<sp/>da,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ValueType<sp/>background,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>norm)</highlight></codeline>
<codeline lineno="387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(norm<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internalDistanceTransform(src_upperleft,<sp/>src_lowerright,<sp/>sa,</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_upperleft,<sp/>da,<sp/>background,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InternalDistanceTransformL1NormFunctor());</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(norm<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internalDistanceTransform(src_upperleft,<sp/>src_lowerright,<sp/>sa,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_upperleft,<sp/>da,<sp/>background,</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InternalDistanceTransformL2NormFunctor());</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internalDistanceTransform(src_upperleft,<sp/>src_lowerright,<sp/>sa,</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest_upperleft,<sp/>da,<sp/>background,</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InternalDistanceTransformLInifinityNormFunctor());</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SrcAccessor,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DestImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DestAccessor,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ValueType&gt;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><ref refid="group__DistanceTransform_1gad481d272471bfa808196959dffca524b" kindref="member">distanceTransform</ref>(</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>triple&lt;SrcImageIterator,<sp/>SrcImageIterator,<sp/>SrcAccessor&gt;<sp/>src,</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>pair&lt;DestImageIterator,<sp/>DestAccessor&gt;<sp/>dest,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>ValueType<sp/>background,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>norm)</highlight></codeline>
<codeline lineno="416"><highlight class="normal">{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DistanceTransform_1gad481d272471bfa808196959dffca524b" kindref="member">distanceTransform</ref>(src.first,<sp/>src.second,<sp/>src.third,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest.first,<sp/>dest.second,<sp/>background,<sp/>norm);</highlight></codeline>
<codeline lineno="419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="421"><highlight class="comment">//@}</highlight></codeline>
<codeline lineno="422"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>vigra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>VIGRA_DISTANCETRANSFORM_HXX</highlight></codeline>
<codeline lineno="426"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/distancetransform.hxx"/>
  </compounddef>
</doxygen>
