<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="multi__array_8hxx" kind="file">
    <compoundname>multi_array.hxx</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">algorithm</includes>
    <includes refid="accessor_8hxx" local="yes">accessor.hxx</includes>
    <includes refid="tinyvector_8hxx" local="yes">tinyvector.hxx</includes>
    <includes refid="rgbvalue_8hxx" local="yes">rgbvalue.hxx</includes>
    <includes refid="basicimageview_8hxx" local="yes">basicimageview.hxx</includes>
    <includes refid="imageiterator_8hxx" local="yes">imageiterator.hxx</includes>
    <includes refid="numerictraits_8hxx" local="yes">numerictraits.hxx</includes>
    <includes refid="multi__iterator_8hxx" local="yes">multi_iterator.hxx</includes>
    <includes refid="metaprogramming_8hxx" local="yes">metaprogramming.hxx</includes>
    <includes refid="mathutil_8hxx" local="yes">mathutil.hxx</includes>
    <includedby refid="matrix_8hxx" local="yes">vigra/matrix.hxx</includedby>
    <includedby refid="multi__pointoperators_8hxx" local="yes">vigra/multi_pointoperators.hxx</includedby>
    <includedby refid="splineimageview_8hxx" local="yes">vigra/splineimageview.hxx</includedby>
    <includedby refid="coordinate__iterator_8hxx" local="yes">vigra/coordinate_iterator.hxx</includedby>
    <includedby refid="impex_8hxx" local="yes">vigra/impex.hxx</includedby>
    <includedby refid="hdf5impex_8hxx" local="yes">vigra/hdf5impex.hxx</includedby>
    <includedby refid="multi__impex_8hxx" local="yes">vigra/multi_impex.hxx</includedby>
    <includedby refid="labelvolume_8hxx" local="yes">vigra/labelvolume.hxx</includedby>
    <includedby refid="multi__convolution_8hxx" local="yes">vigra/multi_convolution.hxx</includedby>
    <includedby refid="multi__distance_8hxx" local="yes">vigra/multi_distance.hxx</includedby>
    <includedby refid="multi__fft_8hxx" local="yes">vigra/multi_fft.hxx</includedby>
    <includedby refid="multi__localminmax_8hxx" local="yes">vigra/multi_localminmax.hxx</includedby>
    <includedby refid="multi__math_8hxx" local="yes">vigra/multi_math.hxx</includedby>
    <includedby refid="multi__morphology_8hxx" local="yes">vigra/multi_morphology.hxx</includedby>
    <includedby refid="numpy__array_8hxx" local="yes">vigra/numpy_array.hxx</includedby>
    <includedby refid="numpy__array__traits_8hxx" local="yes">vigra/numpy_array_traits.hxx</includedby>
    <includedby refid="splices_8hxx" local="no">vigra/random_forest/splices.hxx</includedby>
    <includedby refid="rf__decisionTree_8hxx" local="yes">vigra/random_forest/rf_decisionTree.hxx</includedby>
    <includedby refid="rf__online__prediction__set_8hxx" local="yes">vigra/random_forest/rf_online_prediction_set.hxx</includedby>
    <includedby refid="sifImport_8hxx" local="yes">vigra/sifImport.hxx</includedby>
    <includedby refid="tv__filter_8hxx" local="yes">vigra/tv_filter.hxx</includedby>
    <includedby refid="watersheds3d_8hxx" local="yes">vigra/watersheds3d.hxx</includedby>
    <incdepgraph>
      <node id="4681">
        <label>functional</label>
      </node>
      <node id="4662">
        <label>limits</label>
      </node>
      <node id="4666">
        <label>sized_int.hxx</label>
        <link refid="sized__int_8hxx_source"/>
        <childnode refid="4657" relation="include">
        </childnode>
        <childnode refid="4662" relation="include">
        </childnode>
      </node>
      <node id="4682">
        <label>iterator</label>
      </node>
      <node id="4653">
        <label>vigra/multi_array.hxx</label>
        <link refid="multi_array.hxx"/>
        <childnode refid="4654" relation="include">
        </childnode>
        <childnode refid="4655" relation="include">
        </childnode>
        <childnode refid="4656" relation="include">
        </childnode>
        <childnode refid="4670" relation="include">
        </childnode>
        <childnode refid="4688" relation="include">
        </childnode>
        <childnode refid="4690" relation="include">
        </childnode>
        <childnode refid="4691" relation="include">
        </childnode>
        <childnode refid="4663" relation="include">
        </childnode>
        <childnode refid="4695" relation="include">
        </childnode>
        <childnode refid="4657" relation="include">
        </childnode>
        <childnode refid="4678" relation="include">
        </childnode>
      </node>
      <node id="4680">
        <label>inspector_passes.hxx</label>
        <link refid="inspector__passes_8hxx_source"/>
        <childnode refid="4657" relation="include">
        </childnode>
      </node>
      <node id="4667">
        <label>promote_traits.hxx</label>
        <link refid="promote__traits_8hxx_source"/>
      </node>
      <node id="4693">
        <label>initimage.hxx</label>
        <link refid="initimage_8hxx_source"/>
        <childnode refid="4692" relation="include">
        </childnode>
        <childnode refid="4685" relation="include">
        </childnode>
        <childnode refid="4694" relation="include">
        </childnode>
      </node>
      <node id="4679">
        <label>algorithm.hxx</label>
        <link refid="algorithm_8hxx_source"/>
        <childnode refid="4666" relation="include">
        </childnode>
        <childnode refid="4663" relation="include">
        </childnode>
        <childnode refid="4680" relation="include">
        </childnode>
        <childnode refid="4655" relation="include">
        </childnode>
        <childnode refid="4681" relation="include">
        </childnode>
        <childnode refid="4682" relation="include">
        </childnode>
      </node>
      <node id="4671">
        <label>cmath</label>
      </node>
      <node id="4660">
        <label>stdexcept</label>
      </node>
      <node id="4694">
        <label>functortraits.hxx</label>
        <link refid="functortraits_8hxx_source"/>
        <childnode refid="4681" relation="include">
        </childnode>
        <childnode refid="4657" relation="include">
        </childnode>
      </node>
      <node id="4684">
        <label>iteratortags.hxx</label>
        <link refid="iteratortags_8hxx_source"/>
        <childnode refid="4682" relation="include">
        </childnode>
      </node>
      <node id="4676">
        <label>string</label>
      </node>
      <node id="4690">
        <label>basicimageview.hxx</label>
        <link refid="basicimageview_8hxx_source"/>
        <childnode refid="4691" relation="include">
        </childnode>
        <childnode refid="4693" relation="include">
        </childnode>
      </node>
      <node id="4685">
        <label>iteratortraits.hxx</label>
        <link refid="iteratortraits_8hxx_source"/>
        <childnode refid="4656" relation="include">
        </childnode>
        <childnode refid="4686" relation="include">
        </childnode>
      </node>
      <node id="4664">
        <label>cfloat</label>
      </node>
      <node id="4692">
        <label>utilities.hxx</label>
        <link refid="utilities_8hxx_source"/>
        <childnode refid="4658" relation="include">
        </childnode>
        <childnode refid="4674" relation="include">
        </childnode>
        <childnode refid="4657" relation="include">
        </childnode>
        <childnode refid="4668" relation="include">
        </childnode>
        <childnode refid="4683" relation="include">
        </childnode>
        <childnode refid="4678" relation="include">
        </childnode>
        <childnode refid="4676" relation="include">
        </childnode>
        <childnode refid="4675" relation="include">
        </childnode>
      </node>
      <node id="4659">
        <label>vigra/configVersion.hxx</label>
        <link refid="configVersion_8hxx_source"/>
      </node>
      <node id="4668">
        <label>tuple.hxx</label>
        <link refid="tuple_8hxx_source"/>
        <childnode refid="4669" relation="include">
        </childnode>
      </node>
      <node id="4670">
        <label>tinyvector.hxx</label>
        <link refid="tinyvector_8hxx_source"/>
        <childnode refid="4671" relation="include">
        </childnode>
        <childnode refid="4672" relation="include">
        </childnode>
        <childnode refid="4673" relation="include">
        </childnode>
        <childnode refid="4655" relation="include">
        </childnode>
        <childnode refid="4658" relation="include">
        </childnode>
        <childnode refid="4674" relation="include">
        </childnode>
        <childnode refid="4657" relation="include">
        </childnode>
        <childnode refid="4663" relation="include">
        </childnode>
        <childnode refid="4677" relation="include">
        </childnode>
        <childnode refid="4678" relation="include">
        </childnode>
        <childnode refid="4683" relation="include">
        </childnode>
      </node>
      <node id="4696">
        <label>sys/types.h</label>
      </node>
      <node id="4678">
        <label>mathutil.hxx</label>
        <link refid="mathutil_8hxx_source"/>
        <childnode refid="4671" relation="include">
        </childnode>
        <childnode refid="4672" relation="include">
        </childnode>
        <childnode refid="4665" relation="include">
        </childnode>
        <childnode refid="4658" relation="include">
        </childnode>
        <childnode refid="4674" relation="include">
        </childnode>
        <childnode refid="4668" relation="include">
        </childnode>
        <childnode refid="4666" relation="include">
        </childnode>
        <childnode refid="4663" relation="include">
        </childnode>
        <childnode refid="4679" relation="include">
        </childnode>
      </node>
      <node id="4658">
        <label>config.hxx</label>
        <link refid="config_8hxx_source"/>
        <childnode refid="4659" relation="include">
        </childnode>
        <childnode refid="4660" relation="include">
        </childnode>
      </node>
      <node id="4663">
        <label>numerictraits.hxx</label>
        <link refid="numerictraits_8hxx_source"/>
        <childnode refid="4661" relation="include">
        </childnode>
        <childnode refid="4662" relation="include">
        </childnode>
        <childnode refid="4664" relation="include">
        </childnode>
        <childnode refid="4665" relation="include">
        </childnode>
        <childnode refid="4657" relation="include">
        </childnode>
        <childnode refid="4666" relation="include">
        </childnode>
        <childnode refid="4667" relation="include">
        </childnode>
      </node>
      <node id="4691">
        <label>imageiterator.hxx</label>
        <link refid="imageiterator_8hxx_source"/>
        <childnode refid="4692" relation="include">
        </childnode>
        <childnode refid="4656" relation="include">
        </childnode>
        <childnode refid="4685" relation="include">
        </childnode>
        <childnode refid="4657" relation="include">
        </childnode>
      </node>
      <node id="4687">
        <label>iteratoradapter.hxx</label>
        <link refid="iteratoradapter_8hxx_source"/>
      </node>
      <node id="4686">
        <label>imageiteratoradapter.hxx</label>
        <link refid="imageiteratoradapter_8hxx_source"/>
        <childnode refid="4682" relation="include">
        </childnode>
      </node>
      <node id="4669">
        <label>utility</label>
      </node>
      <node id="4675">
        <label>sstream</label>
      </node>
      <node id="4688">
        <label>rgbvalue.hxx</label>
        <link refid="rgbvalue_8hxx_source"/>
        <childnode refid="4671" relation="include">
        </childnode>
        <childnode refid="4672" relation="include">
        </childnode>
        <childnode refid="4658" relation="include">
        </childnode>
        <childnode refid="4663" relation="include">
        </childnode>
        <childnode refid="4656" relation="include">
        </childnode>
        <childnode refid="4670" relation="include">
        </childnode>
        <childnode refid="4689" relation="include">
        </childnode>
      </node>
      <node id="4683">
        <label>diff2d.hxx</label>
        <link refid="diff2d_8hxx_source"/>
        <childnode refid="4671" relation="include">
        </childnode>
        <childnode refid="4673" relation="include">
        </childnode>
        <childnode refid="4658" relation="include">
        </childnode>
        <childnode refid="4684" relation="include">
        </childnode>
        <childnode refid="4685" relation="include">
        </childnode>
        <childnode refid="4687" relation="include">
        </childnode>
        <childnode refid="4668" relation="include">
        </childnode>
      </node>
      <node id="4674">
        <label>error.hxx</label>
        <link refid="error_8hxx_source"/>
        <childnode refid="4660" relation="include">
        </childnode>
        <childnode refid="4675" relation="include">
        </childnode>
        <childnode refid="4676" relation="include">
        </childnode>
        <childnode refid="4658" relation="include">
        </childnode>
      </node>
      <node id="4689">
        <label>static_assert.hxx</label>
        <link refid="static__assert_8hxx_source"/>
      </node>
      <node id="4673">
        <label>iosfwd</label>
      </node>
      <node id="4672">
        <label>cstdlib</label>
      </node>
      <node id="4695">
        <label>multi_iterator.hxx</label>
        <link refid="multi__iterator_8hxx_source"/>
        <childnode refid="4696" relation="include">
        </childnode>
        <childnode refid="4670" relation="include">
        </childnode>
        <childnode refid="4684" relation="include">
        </childnode>
      </node>
      <node id="4661">
        <label>climits</label>
      </node>
      <node id="4657">
        <label>metaprogramming.hxx</label>
        <link refid="metaprogramming_8hxx_source"/>
        <childnode refid="4658" relation="include">
        </childnode>
        <childnode refid="4661" relation="include">
        </childnode>
        <childnode refid="4662" relation="include">
        </childnode>
        <childnode refid="4655" relation="include">
        </childnode>
      </node>
      <node id="4665">
        <label>complex</label>
      </node>
      <node id="4655">
        <label>algorithm</label>
      </node>
      <node id="4677">
        <label>memory.hxx</label>
        <link refid="memory_8hxx_source"/>
        <childnode refid="4657" relation="include">
        </childnode>
      </node>
      <node id="4656">
        <label>accessor.hxx</label>
        <link refid="accessor_8hxx_source"/>
        <childnode refid="4657" relation="include">
        </childnode>
        <childnode refid="4663" relation="include">
        </childnode>
        <childnode refid="4668" relation="include">
        </childnode>
      </node>
      <node id="4654">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4734">
        <label>vigra/splineimageview.hxx</label>
        <link refid="splineimageview_8hxx_source"/>
        <childnode refid="4699" relation="include">
        </childnode>
        <childnode refid="4712" relation="include">
        </childnode>
      </node>
      <node id="4716">
        <label>vigra/quaternion.hxx</label>
        <link refid="quaternion_8hxx_source"/>
        <childnode refid="4715" relation="include">
        </childnode>
        <childnode refid="4717" relation="include">
        </childnode>
      </node>
      <node id="4699">
        <label>vigra/affine_registration.hxx</label>
        <link refid="affine__registration_8hxx_source"/>
      </node>
      <node id="4724">
        <label>vigra/multi_pointoperators.hxx</label>
        <link refid="multi__pointoperators_8hxx_source"/>
        <childnode refid="4698" relation="include">
        </childnode>
        <childnode refid="4725" relation="include">
        </childnode>
        <childnode refid="4727" relation="include">
        </childnode>
        <childnode refid="4728" relation="include">
        </childnode>
        <childnode refid="4729" relation="include">
        </childnode>
        <childnode refid="4730" relation="include">
        </childnode>
        <childnode refid="4731" relation="include">
        </childnode>
        <childnode refid="4732" relation="include">
        </childnode>
      </node>
      <node id="4697">
        <label>vigra/multi_array.hxx</label>
        <link refid="multi_array.hxx"/>
        <childnode refid="4698" relation="include">
        </childnode>
        <childnode refid="4724" relation="include">
        </childnode>
        <childnode refid="4734" relation="include">
        </childnode>
        <childnode refid="4735" relation="include">
        </childnode>
        <childnode refid="4736" relation="include">
        </childnode>
        <childnode refid="4726" relation="include">
        </childnode>
        <childnode refid="4725" relation="include">
        </childnode>
        <childnode refid="4737" relation="include">
        </childnode>
        <childnode refid="4727" relation="include">
        </childnode>
        <childnode refid="4728" relation="include">
        </childnode>
        <childnode refid="4741" relation="include">
        </childnode>
        <childnode refid="4739" relation="include">
        </childnode>
        <childnode refid="4742" relation="include">
        </childnode>
        <childnode refid="4729" relation="include">
        </childnode>
        <childnode refid="4743" relation="include">
        </childnode>
        <childnode refid="4745" relation="include">
        </childnode>
        <childnode refid="4746" relation="include">
        </childnode>
        <childnode refid="4719" relation="include">
        </childnode>
        <childnode refid="4748" relation="include">
        </childnode>
        <childnode refid="4749" relation="include">
        </childnode>
        <childnode refid="4714" relation="include">
        </childnode>
        <childnode refid="4733" relation="include">
        </childnode>
      </node>
      <node id="4715">
        <label>vigra/invariant_features3D.hxx</label>
        <link refid="invariant__features3D_8hxx_source"/>
      </node>
      <node id="4712">
        <label>vigra/affinegeometry.hxx</label>
        <link refid="affinegeometry_8hxx_source"/>
      </node>
      <node id="4704">
        <label>vigra/noise_normalization.hxx</label>
        <link refid="noise__normalization_8hxx_source"/>
      </node>
      <node id="4705">
        <label>vigra/quadprog.hxx</label>
        <link refid="quadprog_8hxx_source"/>
      </node>
      <node id="4722">
        <label>vigra/random_forest/rf_region.hxx</label>
        <link refid="rf__region_8hxx_source"/>
        <childnode refid="4721" relation="include">
        </childnode>
        <childnode refid="4708" relation="include">
        </childnode>
      </node>
      <node id="4703">
        <label>vigra/linear_algebra.hxx</label>
        <link refid="linear__algebra_8hxx_source"/>
      </node>
      <node id="4738">
        <label>vigra/localminmax.hxx</label>
        <link refid="localminmax_8hxx_source"/>
        <childnode refid="4739" relation="include">
        </childnode>
        <childnode refid="4704" relation="include">
        </childnode>
        <childnode refid="4740" relation="include">
        </childnode>
      </node>
      <node id="4721">
        <label>vigra/random_forest/rf_split.hxx</label>
        <link refid="rf__split_8hxx_source"/>
        <childnode refid="4707" relation="include">
        </childnode>
        <childnode refid="4708" relation="include">
        </childnode>
      </node>
      <node id="4737">
        <label>vigra/labelvolume.hxx</label>
        <link refid="labelvolume_8hxx_source"/>
        <childnode refid="4738" relation="include">
        </childnode>
        <childnode refid="4733" relation="include">
        </childnode>
      </node>
      <node id="4709">
        <label>vigra/random_forest_hdf5_impex.hxx</label>
        <link refid="random__forest__hdf5__impex_8hxx_source"/>
      </node>
      <node id="4700">
        <label>vigra/linear_solve.hxx</label>
        <link refid="linear__solve_8hxx_source"/>
        <childnode refid="4699" relation="include">
        </childnode>
        <childnode refid="4701" relation="include">
        </childnode>
        <childnode refid="4703" relation="include">
        </childnode>
        <childnode refid="4704" relation="include">
        </childnode>
        <childnode refid="4705" relation="include">
        </childnode>
        <childnode refid="4706" relation="include">
        </childnode>
        <childnode refid="4702" relation="include">
        </childnode>
      </node>
      <node id="4748">
        <label>vigra/random_forest/rf_online_prediction_set.hxx</label>
        <link refid="rf__online__prediction__set_8hxx_source"/>
        <childnode refid="4708" relation="include">
        </childnode>
      </node>
      <node id="4733">
        <label>vigra/watersheds3d.hxx</label>
        <link refid="watersheds3d_8hxx_source"/>
      </node>
      <node id="4742">
        <label>vigra/multi_math.hxx</label>
        <link refid="multi__math_8hxx_source"/>
        <childnode refid="4714" relation="include">
        </childnode>
      </node>
      <node id="4710">
        <label>vigra/singular_value_decomposition.hxx</label>
        <link refid="singular__value__decomposition_8hxx_source"/>
        <childnode refid="4700" relation="include">
        </childnode>
        <childnode refid="4706" relation="include">
        </childnode>
        <childnode refid="4711" relation="include">
        </childnode>
      </node>
      <node id="4701">
        <label>vigra/edgedetection.hxx</label>
        <link refid="edgedetection_8hxx_source"/>
        <childnode refid="4702" relation="include">
        </childnode>
      </node>
      <node id="4717">
        <label>vigra/wigner-matrix.hxx</label>
        <link refid="wigner-matrix_8hxx_source"/>
      </node>
      <node id="4741">
        <label>vigra/multi_fft.hxx</label>
        <link refid="multi__fft_8hxx_source"/>
      </node>
      <node id="4744">
        <label>vigra/numpy_array_converters.hxx</label>
        <link refid="numpy__array__converters_8hxx_source"/>
      </node>
      <node id="4702">
        <label>vigra/slanted_edge_mtf.hxx</label>
        <link refid="slanted__edge__mtf_8hxx_source"/>
      </node>
      <node id="4727">
        <label>vigra/multi_convolution.hxx</label>
        <link refid="multi__convolution_8hxx_source"/>
      </node>
      <node id="4723">
        <label>vigra/random_forest_deprec.hxx</label>
        <link refid="random__forest__deprec_8hxx_source"/>
      </node>
      <node id="4749">
        <label>vigra/sifImport.hxx</label>
        <link refid="sifImport_8hxx_source"/>
      </node>
      <node id="4707">
        <label>vigra/random_forest/rf_ridge_split.hxx</label>
        <link refid="rf__ridge__split_8hxx_source"/>
        <childnode refid="4708" relation="include">
        </childnode>
      </node>
      <node id="4720">
        <label>vigra/random_forest/rf_nodeproxy.hxx</label>
        <link refid="rf__nodeproxy_8hxx_source"/>
        <childnode refid="4719" relation="include">
        </childnode>
        <childnode refid="4721" relation="include">
        </childnode>
        <childnode refid="4707" relation="include">
        </childnode>
        <childnode refid="4708" relation="include">
        </childnode>
      </node>
      <node id="4711">
        <label>vigra/unsupervised_decomposition.hxx</label>
        <link refid="unsupervised__decomposition_8hxx_source"/>
      </node>
      <node id="4747">
        <label>vigra/random_forest/rf_algorithm.hxx</label>
        <link refid="rf__algorithm_8hxx_source"/>
        <childnode refid="4708" relation="include">
        </childnode>
      </node>
      <node id="4708">
        <label>vigra/random_forest.hxx</label>
        <link refid="random__forest_8hxx_source"/>
        <childnode refid="4709" relation="include">
        </childnode>
      </node>
      <node id="4706">
        <label>vigra/regression.hxx</label>
        <link refid="regression_8hxx_source"/>
        <childnode refid="4707" relation="include">
        </childnode>
      </node>
      <node id="4718">
        <label>vigra/matlab.hxx</label>
        <link refid="matlab_8hxx_source"/>
      </node>
      <node id="4719">
        <label>vigra/random_forest/rf_decisionTree.hxx</label>
        <link refid="rf__decisionTree_8hxx_source"/>
        <childnode refid="4708" relation="include">
        </childnode>
      </node>
      <node id="4728">
        <label>vigra/multi_distance.hxx</label>
        <link refid="multi__distance_8hxx_source"/>
        <childnode refid="4729" relation="include">
        </childnode>
      </node>
      <node id="4714">
        <label>vigra/tv_filter.hxx</label>
        <link refid="tv__filter_8hxx_source"/>
      </node>
      <node id="4736">
        <label>vigra/impex.hxx</label>
        <link refid="impex_8hxx"/>
        <childnode refid="4726" relation="include">
        </childnode>
        <childnode refid="4725" relation="include">
        </childnode>
        <childnode refid="4714" relation="include">
        </childnode>
      </node>
      <node id="4729">
        <label>vigra/multi_morphology.hxx</label>
        <link refid="multi__morphology_8hxx_source"/>
      </node>
      <node id="4746">
        <label>vigra/random_forest/splices.hxx</label>
        <link refid="splices_8hxx_source"/>
        <childnode refid="4747" relation="include">
        </childnode>
      </node>
      <node id="4739">
        <label>vigra/multi_localminmax.hxx</label>
        <link refid="multi__localminmax_8hxx_source"/>
        <childnode refid="4733" relation="include">
        </childnode>
      </node>
      <node id="4732">
        <label>vigra/seededregiongrowing3d.hxx</label>
        <link refid="seededregiongrowing3d_8hxx_source"/>
        <childnode refid="4733" relation="include">
        </childnode>
      </node>
      <node id="4745">
        <label>vigra/numpy_array_traits.hxx</label>
        <link refid="numpy__array__traits_8hxx_source"/>
        <childnode refid="4743" relation="include">
        </childnode>
      </node>
      <node id="4740">
        <label>vigra/watersheds.hxx</label>
        <link refid="watersheds_8hxx_source"/>
        <childnode refid="4733" relation="include">
        </childnode>
      </node>
      <node id="4713">
        <label>vigra/eigensystem.hxx</label>
        <link refid="eigensystem_8hxx_source"/>
        <childnode refid="4703" relation="include">
        </childnode>
        <childnode refid="4714" relation="include">
        </childnode>
      </node>
      <node id="4730">
        <label>vigra/multi_tensorutilities.hxx</label>
        <link refid="multi__tensorutilities_8hxx_source"/>
      </node>
      <node id="4735">
        <label>vigra/coordinate_iterator.hxx</label>
        <link refid="coordinate__iterator_8hxx_source"/>
      </node>
      <node id="4698">
        <label>vigra/matrix.hxx</label>
        <link refid="matrix_8hxx_source"/>
        <childnode refid="4699" relation="include">
        </childnode>
        <childnode refid="4700" relation="include">
        </childnode>
        <childnode refid="4710" relation="include">
        </childnode>
        <childnode refid="4712" relation="include">
        </childnode>
        <childnode refid="4713" relation="include">
        </childnode>
        <childnode refid="4715" relation="include">
        </childnode>
        <childnode refid="4716" relation="include">
        </childnode>
        <childnode refid="4703" relation="include">
        </childnode>
        <childnode refid="4718" relation="include">
        </childnode>
        <childnode refid="4705" relation="include">
        </childnode>
        <childnode refid="4719" relation="include">
        </childnode>
        <childnode refid="4720" relation="include">
        </childnode>
        <childnode refid="4722" relation="include">
        </childnode>
        <childnode refid="4721" relation="include">
        </childnode>
        <childnode refid="4706" relation="include">
        </childnode>
        <childnode refid="4708" relation="include">
        </childnode>
        <childnode refid="4723" relation="include">
        </childnode>
        <childnode refid="4711" relation="include">
        </childnode>
        <childnode refid="4717" relation="include">
        </childnode>
      </node>
      <node id="4731">
        <label>vigra/random_forest/rf_visitors.hxx</label>
        <link refid="rf__visitors_8hxx_source"/>
        <childnode refid="4719" relation="include">
        </childnode>
        <childnode refid="4708" relation="include">
        </childnode>
      </node>
      <node id="4726">
        <label>vigra/hdf5impex.hxx</label>
        <link refid="hdf5impex_8hxx_source"/>
        <childnode refid="4709" relation="include">
        </childnode>
      </node>
      <node id="4725">
        <label>vigra/multi_impex.hxx</label>
        <link refid="multi__impex_8hxx_source"/>
        <childnode refid="4726" relation="include">
        </childnode>
      </node>
      <node id="4743">
        <label>vigra/numpy_array.hxx</label>
        <link refid="numpy__array_8hxx_source"/>
        <childnode refid="4744" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structvigra_1_1ExpandElementResult" prot="public">vigra::ExpandElementResult</innerclass>
    <innerclass refid="structvigra_1_1ExpandElementResult_3_01FFTWComplex_3_01T_01_4_01_4" prot="public">vigra::ExpandElementResult&lt; FFTWComplex&lt; T &gt; &gt;</innerclass>
    <innerclass refid="structvigra_1_1ExpandElementResult_3_01RGBValue_3_01T_00_01R_00_01G_00_01B_01_4_01_4" prot="public">vigra::ExpandElementResult&lt; RGBValue&lt; T, R, G, B &gt; &gt;</innerclass>
    <innerclass refid="structvigra_1_1ExpandElementResult_3_01std_1_1complex_3_01T_01_4_01_4" prot="public">vigra::ExpandElementResult&lt; std::complex&lt; T &gt; &gt;</innerclass>
    <innerclass refid="structvigra_1_1ExpandElementResult_3_01TinyVector_3_01T_00_01SIZE_01_4_01_4" prot="public">vigra::ExpandElementResult&lt; TinyVector&lt; T, SIZE &gt; &gt;</innerclass>
    <innerclass refid="classvigra_1_1MultiArray" prot="public">vigra::MultiArray</innerclass>
    <innerclass refid="classvigra_1_1MultiArrayView" prot="public">vigra::MultiArrayView</innerclass>
    <innerclass refid="structvigra_1_1NormTraits_3_01MultiArray_3_01N_00_01T_00_01A_01_4_01_4" prot="public">vigra::NormTraits&lt; MultiArray&lt; N, T, A &gt; &gt;</innerclass>
    <innerclass refid="structvigra_1_1NormTraits_3_01MultiArrayView_3_01N_00_01T_00_01C_01_4_01_4" prot="public">vigra::NormTraits&lt; MultiArrayView&lt; N, T, C &gt; &gt;</innerclass>
    <innerclass refid="structvigra_1_1UnsuitableTypeForExpandElements" prot="public">vigra::UnsuitableTypeForExpandElements</innerclass>
    <innernamespace refid="namespacevigra">vigra</innernamespace>
    <innernamespace refid="namespacevigra_1_1multi__math">vigra::multi_math</innernamespace>
    <innernamespace refid="namespacevigra_1_1multi__math_1_1detail">vigra::multi_math::detail</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="multi__array_8hxx_1ab8d99bf80e6ae6e0fb26656b1fcf8697" prot="public" static="no">
        <name>VIGRA_ASSERT_INSIDE</name>
        <param><defname>diff</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="57" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="multi__array_8hxx_1ac1778fe3719e02e28e8f795ab3e08491" prot="public" static="no">
        <name>VIGRA_COPY_MULTI_ARRAY_DATA</name>
        <param><defname>name</defname></param>
        <param><defname>op</defname></param>
        <initializer>template &lt;class SrcIterator, class Shape, class DestIterator&gt; \
inline void \
name##MultiArrayData(SrcIterator s, Shape const &amp; shape, DestIterator d, MetaInt&lt;0&gt;) \
{     \
    SrcIterator send = s + shape[0]; \
    for(; s &lt; send; ++s, ++d) \
    { \
        *d op detail::RequiresExplicitCast&lt;typename DestIterator::value_type&gt;::cast(*s); \
    } \
} \
 \
template &lt;class Ref, class Ptr, class Shape, class DestIterator&gt; \
inline void \
name##MultiArrayData(MultiIterator&lt;1, UInt8, Ref, Ptr&gt; si, Shape const &amp; shape, DestIterator d, MetaInt&lt;0&gt;) \
{ \
    Ptr s = &amp;(*si), send = s + shape[0]; \
    for(; s &lt; send; ++s, ++d) \
    { \
        *d op detail::RequiresExplicitCast&lt;typename DestIterator::value_type&gt;::cast(*s); \
    } \
} \
\
template &lt;class SrcIterator, class Shape, class DestIterator, int N&gt; \
void \
name##MultiArrayData(SrcIterator s, Shape const &amp; shape, DestIterator d, MetaInt&lt;N&gt;) \
{ \
    SrcIterator send = s + shape[N]; \
    for(; s &lt; send; ++s, ++d) \
    { \
        name##MultiArrayData(s.begin(), shape, d.begin(), MetaInt&lt;N-1&gt;()); \
    } \
} \
\
template &lt;class DestIterator, class Shape, class T&gt; \
inline void \
name##ScalarMultiArrayData(DestIterator d, Shape const &amp; shape, T const &amp; init, MetaInt&lt;0&gt;) \
{     \
    DestIterator dend = d + shape[0]; \
    for(; d &lt; dend; ++d) \
    { \
        *d op detail::RequiresExplicitCast&lt;typename DestIterator::value_type&gt;::cast(init); \
    } \
} \
 \
template &lt;class DestIterator, class Shape, class T, int N&gt; \
void \
name##ScalarMultiArrayData(DestIterator d, Shape const &amp; shape, T const &amp; init, MetaInt&lt;N&gt;) \
{     \
    DestIterator dend = d + shape[N]; \
    for(; d &lt; dend; ++d) \
    { \
        name##ScalarMultiArrayData(d.begin(), shape, init, MetaInt&lt;N-1&gt;()); \
    } \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="365" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="multi__array_8hxx_1ad4669527ae691b70c5621a6b6ad374e3" prot="public" static="no">
        <name>VIGRA_DEFINE_EXPAND_ELEMENT_RESULT</name>
        <param><defname>TYPE</defname></param>
        <initializer>template &lt;&gt;  \
struct ExpandElementResult&lt;TYPE&gt; \
{ \
    typedef TYPE type; \
    enum { size = 1 }; \
}; \</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="686" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="679" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="multi__array_8hxx_1aa5472187a7dc5b85819c5c6c98919d06" prot="public" static="no">
        <name>VIGRA_MULTI_ARRAY_COMPUTED_ASSIGNMENT</name>
        <param><defname>name</defname></param>
        <param><defname>op</defname></param>
        <initializer>template &lt;unsigned int N, class T, class StrideTag&gt; \
template&lt;class U, class C1&gt; \
MultiArrayView&lt;N, T, StrideTag&gt; &amp;  \
MultiArrayView &lt;N, T, StrideTag&gt;::operator op(MultiArrayView&lt;N, U, C1&gt; const &amp; rhs) \
{ \
    vigra_precondition(this-&gt;shape() == rhs.shape(), &quot;MultiArrayView::operator&quot; #op &quot;() size mismatch.&quot;); \
    if(!arraysOverlap(rhs)) \
    { \
        detail::name##MultiArrayData(rhs.traverser_begin(), shape(), traverser_begin(), MetaInt&lt;actual_dimension-1&gt;()); \
    } \
    else \
    { \
        MultiArray&lt;N, T&gt; tmp(rhs); \
        detail::name##MultiArrayData(tmp.traverser_begin(), shape(), traverser_begin(), MetaInt&lt;actual_dimension-1&gt;()); \
    } \
    return *this; \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" line="1979" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx" bodystart="1962" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/>Copyright<sp/>2003-2008<sp/>by<sp/>Gunnar<sp/>Kedenburg<sp/>and<sp/>Ullrich<sp/>Koethe<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>VIGRA<sp/>computer<sp/>vision<sp/>library.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>The<sp/>VIGRA<sp/>Website<sp/>is<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://hci.iwr.uni-heidelberg.de/vigra/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Please<sp/>direct<sp/>questions,<sp/>bug<sp/>reports,<sp/>and<sp/>contributions<sp/>to<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ullrich.koethe@iwr.uni-heidelberg.de<sp/><sp/><sp/><sp/>or<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra@informatik.uni-hamburg.de<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>conditions:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Software.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VIGRA_MULTI_ARRAY_HXX</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_MULTI_ARRAY_HXX</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;accessor.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tinyvector.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rgbvalue.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;basicimageview.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;imageiterator.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;numerictraits.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;multi_iterator.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;metaprogramming.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mathutil.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Bounds<sp/>checking<sp/>Macro<sp/>used<sp/>if<sp/>VIGRA_CHECK_BOUNDS<sp/>is<sp/>defined.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>VIGRA_CHECK_BOUNDS</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_ASSERT_INSIDE(diff)<sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"><sp/><sp/>vigra_precondition(this-&gt;isInside(diff),<sp/>&quot;Index<sp/>out<sp/>of<sp/>bounds&quot;)</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_ASSERT_INSIDE(diff)</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vigra</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defaultStride<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>generates<sp/>the<sp/>stride<sp/>for<sp/>a<sp/>gapless<sp/>shape.</highlight></codeline>
<codeline lineno="72"><highlight class="comment"></highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra::detail</highlight></codeline>
<codeline lineno="74"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>TinyVector<sp/>&lt;MultiArrayIndex,<sp/>N&gt;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">defaultStride(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TinyVector<sp/>&lt;MultiArrayIndex,<sp/>N&gt;<sp/>&amp;shape)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>TinyVector<sp/>&lt;MultiArrayIndex,<sp/>N&gt;<sp/>ret;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>(int)N;<sp/>++i)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>[i]<sp/>=<sp/>ret<sp/>[i-1]<sp/>*<sp/>shape<sp/>[i-1];</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScanOrderToOffset<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>transforms<sp/>an<sp/>index<sp/>in<sp/>scan<sp/>order<sp/>sense<sp/>to<sp/>a<sp/>pointer<sp/>offset<sp/>in<sp/>a<sp/>possibly</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/>strided,<sp/>multi-dimensional<sp/>array.</highlight></codeline>
<codeline lineno="94"><highlight class="comment"></highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra::detail</highlight></codeline>
<codeline lineno="96"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>K&gt;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ScanOrderToOffset</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>exec(<ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>d,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TinyVector<sp/>&lt;MultiArrayIndex,<sp/>N&gt;<sp/>&amp;shape,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TinyVector<sp/>&lt;MultiArrayIndex,<sp/>N&gt;<sp/>&amp;<sp/>stride)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stride[N-K]<sp/>*<sp/>(d<sp/>%<sp/>shape[N-K])<sp/>+</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScanOrderToOffset&lt;K-1&gt;::exec(d<sp/>/<sp/>shape[N-K],<sp/>shape,<sp/>stride);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal">};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ScanOrderToOffset&lt;1&gt;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>exec(<ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>d,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TinyVector<sp/>&lt;MultiArrayIndex,<sp/>N&gt;<sp/>&amp;<sp/></highlight><highlight class="comment">/*shape*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TinyVector<sp/>&lt;MultiArrayIndex,<sp/>N&gt;<sp/>&amp;<sp/>stride)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stride[N-1]<sp/>*<sp/>d;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal">};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>K&gt;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ScanOrderToCoordinate</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>exec(<ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>d,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TinyVector<sp/>&lt;MultiArrayIndex,<sp/>N&gt;<sp/>&amp;shape,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TinyVector<sp/>&lt;MultiArrayIndex,<sp/>N&gt;<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[N-K]<sp/>=<sp/>(d<sp/>%<sp/>shape[N-K]);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScanOrderToCoordinate&lt;K-1&gt;::exec(d<sp/>/<sp/>shape[N-K],<sp/>shape,<sp/>result);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal">};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ScanOrderToCoordinate&lt;1&gt;</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>exec(<ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>d,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TinyVector<sp/>&lt;MultiArrayIndex,<sp/>N&gt;<sp/>&amp;<sp/></highlight><highlight class="comment">/*shape*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TinyVector<sp/>&lt;MultiArrayIndex,<sp/>N&gt;<sp/>&amp;<sp/>result)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[N-1]<sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal">};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C&gt;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CoordinatesToOffest</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>exec(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TinyVector<sp/>&lt;MultiArrayIndex,<sp/>N&gt;<sp/>&amp;<sp/>stride,<sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>x)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stride[0]<sp/>*<sp/>x;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>exec(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TinyVector<sp/>&lt;MultiArrayIndex,<sp/>N&gt;<sp/>&amp;<sp/>stride,<sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>x,<sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>y)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stride[0]<sp/>*<sp/>x<sp/>+<sp/>stride[1]<sp/>*<sp/>y;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal">};</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CoordinatesToOffest&lt;UnstridedArrayTag&gt;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>exec(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TinyVector<sp/>&lt;MultiArrayIndex,<sp/>N&gt;<sp/>&amp;<sp/></highlight><highlight class="comment">/*stride*/</highlight><highlight class="normal">,<sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>x)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>exec(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TinyVector<sp/>&lt;MultiArrayIndex,<sp/>N&gt;<sp/>&amp;<sp/>stride,<sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>x,<sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>y)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>+<sp/>stride[1]<sp/>*<sp/>y;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal">};</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaybeStrided<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>metatag<sp/>implementing<sp/>a<sp/>test<sp/>for<sp/>marking<sp/>MultiArrays<sp/>that<sp/>were</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/><sp/><sp/>indexed<sp/>at<sp/>the<sp/>zero&apos;th<sp/>dimension<sp/>as<sp/>strided,<sp/>and<sp/>all<sp/>others<sp/>as</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/><sp/>unstrided.</highlight></codeline>
<codeline lineno="192"><highlight class="comment"></highlight></codeline>
<codeline lineno="193"><highlight class="comment">&lt;b&gt;\#include&lt;/b&gt;</highlight></codeline>
<codeline lineno="194"><highlight class="comment">\&lt;vigra/multi_array.hxx\&gt;</highlight></codeline>
<codeline lineno="195"><highlight class="comment"></highlight></codeline>
<codeline lineno="196"><highlight class="comment">Namespace:<sp/>vigra::detail</highlight></codeline>
<codeline lineno="197"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">MaybeStrided</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>StrideTag<sp/>type;</highlight></codeline>
<codeline lineno="202"><highlight class="normal">};</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">MaybeStrided<sp/>&lt;StrideTag,<sp/>0&gt;</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>StridedArrayTag<sp/>type;</highlight></codeline>
<codeline lineno="208"><highlight class="normal">};</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiIteratorChooser<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>metatag<sp/>implementing<sp/>a<sp/>test<sp/>(by<sp/>pattern<sp/>matching)<sp/>for<sp/>marking</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/><sp/>MultiArrays<sp/>that<sp/>were<sp/>indexed<sp/>at<sp/>the<sp/>zero&apos;th<sp/>dimension<sp/>as<sp/>strided.</highlight></codeline>
<codeline lineno="218"><highlight class="comment"></highlight></codeline>
<codeline lineno="219"><highlight class="comment">&lt;b&gt;\#include&lt;/b&gt;</highlight></codeline>
<codeline lineno="220"><highlight class="comment">\&lt;vigra/multi_array.hxx\&gt;</highlight></codeline>
<codeline lineno="221"><highlight class="comment"></highlight></codeline>
<codeline lineno="222"><highlight class="comment">Namespace:<sp/>vigra::detail</highlight></codeline>
<codeline lineno="223"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>O&gt;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">MultiIteratorChooser</highlight></codeline>
<codeline lineno="226"><highlight class="normal">{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Nil<sp/>{};</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>REFERENCE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>POINTER&gt;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Traverser</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Nil<sp/>type;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="234"><highlight class="normal">};</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiIteratorChooser<sp/>&lt;StridedArrayTag&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>specialization<sp/>of<sp/>the<sp/>MultiIteratorChooser<sp/>for<sp/>strided<sp/>arrays.</highlight></codeline>
<codeline lineno="243"><highlight class="comment"></highlight></codeline>
<codeline lineno="244"><highlight class="comment">&lt;b&gt;\#include&lt;/b&gt;</highlight></codeline>
<codeline lineno="245"><highlight class="comment">\&lt;vigra/multi_array.hxx\&gt;</highlight></codeline>
<codeline lineno="246"><highlight class="comment"></highlight></codeline>
<codeline lineno="247"><highlight class="comment">Namespace:<sp/>vigra::detail</highlight></codeline>
<codeline lineno="248"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">MultiIteratorChooser<sp/>&lt;StridedArrayTag&gt;</highlight></codeline>
<codeline lineno="251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>REFERENCE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>POINTER&gt;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Traverser</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>StridedMultiIterator<sp/>&lt;N,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;<sp/>type;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="257"><highlight class="normal">};</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/>MultiIteratorChooser<sp/>&lt;UnstridedArrayTag&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>specialization<sp/>of<sp/>the<sp/>MultiIteratorChooser<sp/>for<sp/>unstrided<sp/>arrays.</highlight></codeline>
<codeline lineno="266"><highlight class="comment"></highlight></codeline>
<codeline lineno="267"><highlight class="comment">&lt;b&gt;\#include&lt;/b&gt;</highlight></codeline>
<codeline lineno="268"><highlight class="comment">\&lt;vigra/multi_array.hxx\&gt;</highlight></codeline>
<codeline lineno="269"><highlight class="comment"></highlight></codeline>
<codeline lineno="270"><highlight class="comment">Namespace:<sp/>vigra::detail</highlight></codeline>
<codeline lineno="271"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">MultiIteratorChooser<sp/>&lt;UnstridedArrayTag&gt;</highlight></codeline>
<codeline lineno="274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>REFERENCE,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>POINTER&gt;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Traverser</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>MultiIterator<sp/>&lt;N,<sp/>T,<sp/>REFERENCE,<sp/>POINTER&gt;<sp/>type;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="280"><highlight class="normal">};</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>helper<sp/>functions<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DestIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Shape,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal">initMultiArrayData(DestIterator<sp/>d,<sp/>Shape<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>shape,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>init,<sp/>MetaInt&lt;0&gt;)</highlight></codeline>
<codeline lineno="291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>DestIterator<sp/>dend<sp/>=<sp/>d<sp/>+<sp/>shape[0];</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>d<sp/>&lt;<sp/>dend;<sp/>++d)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*d<sp/>=<sp/>init;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DestIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Shape,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal">initMultiArrayData(DestIterator<sp/>d,<sp/>Shape<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>shape,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>init,<sp/>MetaInt&lt;N&gt;)</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>DestIterator<sp/>dend<sp/>=<sp/>d<sp/>+<sp/>shape[N];</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>d<sp/>&lt;<sp/>dend;<sp/>++d)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initMultiArrayData(d.begin(),<sp/>shape,<sp/>init,<sp/>MetaInt&lt;N-1&gt;());</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/>the<sp/>explicit<sp/>overload<sp/>for<sp/>MultiIterator&lt;1,<sp/>UInt8,<sp/>...<sp/>&gt;<sp/>works<sp/>around<sp/>a<sp/>compiler<sp/>crash<sp/>in<sp/>VisualStudio<sp/>2010</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_COPY_MULTI_ARRAY_DATA(name,<sp/>op)<sp/>\</highlight></codeline>
<codeline lineno="312"><highlight class="preprocessor">template<sp/>&lt;class<sp/>SrcIterator,<sp/>class<sp/>Shape,<sp/>class<sp/>DestIterator&gt;<sp/>\</highlight></codeline>
<codeline lineno="313"><highlight class="preprocessor">inline<sp/>void<sp/>\</highlight></codeline>
<codeline lineno="314"><highlight class="preprocessor">name##MultiArrayData(SrcIterator<sp/>s,<sp/>Shape<sp/>const<sp/>&amp;<sp/>shape,<sp/>DestIterator<sp/>d,<sp/>MetaInt&lt;0&gt;)<sp/>\</highlight></codeline>
<codeline lineno="315"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="316"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>SrcIterator<sp/>send<sp/>=<sp/>s<sp/>+<sp/>shape[0];<sp/>\</highlight></codeline>
<codeline lineno="317"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for(;<sp/>s<sp/>&lt;<sp/>send;<sp/>++s,<sp/>++d)<sp/>\</highlight></codeline>
<codeline lineno="318"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="319"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*d<sp/>op<sp/>detail::RequiresExplicitCast&lt;typename<sp/>DestIterator::value_type&gt;::cast(*s);<sp/>\</highlight></codeline>
<codeline lineno="320"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="321"><highlight class="preprocessor">}<sp/>\</highlight></codeline>
<codeline lineno="322"><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="323"><highlight class="preprocessor">template<sp/>&lt;class<sp/>Ref,<sp/>class<sp/>Ptr,<sp/>class<sp/>Shape,<sp/>class<sp/>DestIterator&gt;<sp/>\</highlight></codeline>
<codeline lineno="324"><highlight class="preprocessor">inline<sp/>void<sp/>\</highlight></codeline>
<codeline lineno="325"><highlight class="preprocessor">name##MultiArrayData(MultiIterator&lt;1,<sp/>UInt8,<sp/>Ref,<sp/>Ptr&gt;<sp/>si,<sp/>Shape<sp/>const<sp/>&amp;<sp/>shape,<sp/>DestIterator<sp/>d,<sp/>MetaInt&lt;0&gt;)<sp/>\</highlight></codeline>
<codeline lineno="326"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="327"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Ptr<sp/>s<sp/>=<sp/>&amp;(*si),<sp/>send<sp/>=<sp/>s<sp/>+<sp/>shape[0];<sp/>\</highlight></codeline>
<codeline lineno="328"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for(;<sp/>s<sp/>&lt;<sp/>send;<sp/>++s,<sp/>++d)<sp/>\</highlight></codeline>
<codeline lineno="329"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="330"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*d<sp/>op<sp/>detail::RequiresExplicitCast&lt;typename<sp/>DestIterator::value_type&gt;::cast(*s);<sp/>\</highlight></codeline>
<codeline lineno="331"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="332"><highlight class="preprocessor">}<sp/>\</highlight></codeline>
<codeline lineno="333"><highlight class="preprocessor">\</highlight></codeline>
<codeline lineno="334"><highlight class="preprocessor">template<sp/>&lt;class<sp/>SrcIterator,<sp/>class<sp/>Shape,<sp/>class<sp/>DestIterator,<sp/>int<sp/>N&gt;<sp/>\</highlight></codeline>
<codeline lineno="335"><highlight class="preprocessor">void<sp/>\</highlight></codeline>
<codeline lineno="336"><highlight class="preprocessor">name##MultiArrayData(SrcIterator<sp/>s,<sp/>Shape<sp/>const<sp/>&amp;<sp/>shape,<sp/>DestIterator<sp/>d,<sp/>MetaInt&lt;N&gt;)<sp/>\</highlight></codeline>
<codeline lineno="337"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="338"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>SrcIterator<sp/>send<sp/>=<sp/>s<sp/>+<sp/>shape[N];<sp/>\</highlight></codeline>
<codeline lineno="339"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for(;<sp/>s<sp/>&lt;<sp/>send;<sp/>++s,<sp/>++d)<sp/>\</highlight></codeline>
<codeline lineno="340"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="341"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name##MultiArrayData(s.begin(),<sp/>shape,<sp/>d.begin(),<sp/>MetaInt&lt;N-1&gt;());<sp/>\</highlight></codeline>
<codeline lineno="342"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="343"><highlight class="preprocessor">}<sp/>\</highlight></codeline>
<codeline lineno="344"><highlight class="preprocessor">\</highlight></codeline>
<codeline lineno="345"><highlight class="preprocessor">template<sp/>&lt;class<sp/>DestIterator,<sp/>class<sp/>Shape,<sp/>class<sp/>T&gt;<sp/>\</highlight></codeline>
<codeline lineno="346"><highlight class="preprocessor">inline<sp/>void<sp/>\</highlight></codeline>
<codeline lineno="347"><highlight class="preprocessor">name##ScalarMultiArrayData(DestIterator<sp/>d,<sp/>Shape<sp/>const<sp/>&amp;<sp/>shape,<sp/>T<sp/>const<sp/>&amp;<sp/>init,<sp/>MetaInt&lt;0&gt;)<sp/>\</highlight></codeline>
<codeline lineno="348"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="349"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DestIterator<sp/>dend<sp/>=<sp/>d<sp/>+<sp/>shape[0];<sp/>\</highlight></codeline>
<codeline lineno="350"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for(;<sp/>d<sp/>&lt;<sp/>dend;<sp/>++d)<sp/>\</highlight></codeline>
<codeline lineno="351"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="352"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*d<sp/>op<sp/>detail::RequiresExplicitCast&lt;typename<sp/>DestIterator::value_type&gt;::cast(init);<sp/>\</highlight></codeline>
<codeline lineno="353"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="354"><highlight class="preprocessor">}<sp/>\</highlight></codeline>
<codeline lineno="355"><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="356"><highlight class="preprocessor">template<sp/>&lt;class<sp/>DestIterator,<sp/>class<sp/>Shape,<sp/>class<sp/>T,<sp/>int<sp/>N&gt;<sp/>\</highlight></codeline>
<codeline lineno="357"><highlight class="preprocessor">void<sp/>\</highlight></codeline>
<codeline lineno="358"><highlight class="preprocessor">name##ScalarMultiArrayData(DestIterator<sp/>d,<sp/>Shape<sp/>const<sp/>&amp;<sp/>shape,<sp/>T<sp/>const<sp/>&amp;<sp/>init,<sp/>MetaInt&lt;N&gt;)<sp/>\</highlight></codeline>
<codeline lineno="359"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="360"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DestIterator<sp/>dend<sp/>=<sp/>d<sp/>+<sp/>shape[N];<sp/>\</highlight></codeline>
<codeline lineno="361"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for(;<sp/>d<sp/>&lt;<sp/>dend;<sp/>++d)<sp/>\</highlight></codeline>
<codeline lineno="362"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="363"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name##ScalarMultiArrayData(d.begin(),<sp/>shape,<sp/>init,<sp/>MetaInt&lt;N-1&gt;());<sp/>\</highlight></codeline>
<codeline lineno="364"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="365"><highlight class="preprocessor">}</highlight></codeline>
<codeline lineno="366"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal">VIGRA_COPY_MULTI_ARRAY_DATA(copy,<sp/>=)</highlight></codeline>
<codeline lineno="368"><highlight class="normal">VIGRA_COPY_MULTI_ARRAY_DATA(copyAdd,<sp/>+=)</highlight></codeline>
<codeline lineno="369"><highlight class="normal">VIGRA_COPY_MULTI_ARRAY_DATA(copySub,<sp/>-=)</highlight></codeline>
<codeline lineno="370"><highlight class="normal">VIGRA_COPY_MULTI_ARRAY_DATA(copyMul,<sp/>*=)</highlight></codeline>
<codeline lineno="371"><highlight class="normal">VIGRA_COPY_MULTI_ARRAY_DATA(copyDiv,<sp/>/=)</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_COPY_MULTI_ARRAY_DATA</highlight></codeline>
<codeline lineno="374"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Shape,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ALLOC&gt;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal">uninitializedCopyMultiArrayData(SrcIterator<sp/>s,<sp/>Shape<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>shape,<sp/>T<sp/>*<sp/>&amp;<sp/>d,<sp/>ALLOC<sp/>&amp;<sp/>a,<sp/>MetaInt&lt;0&gt;)</highlight></codeline>
<codeline lineno="378"><highlight class="normal">{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>SrcIterator<sp/>send<sp/>=<sp/>s<sp/>+<sp/>shape[0];</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>s<sp/>&lt;<sp/>send;<sp/>++s,<sp/>++d)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.construct(d,<sp/>static_cast&lt;T<sp/>const<sp/>&amp;&gt;(*s));</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME:<sp/>this<sp/>overload<sp/>works<sp/>around<sp/>a<sp/>compiler<sp/>crash<sp/>in<sp/>VisualStudio<sp/>2010</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Ref,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Ptr,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Shape,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ALLOC&gt;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal">uninitializedCopyMultiArrayData(MultiIterator&lt;1,<sp/>UInt8,<sp/>Ref,<sp/>Ptr&gt;<sp/>si,<sp/>Shape<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>shape,<sp/>T<sp/>*<sp/>&amp;<sp/>d,<sp/>ALLOC<sp/>&amp;<sp/>a,<sp/>MetaInt&lt;0&gt;)</highlight></codeline>
<codeline lineno="390"><highlight class="normal">{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>Ptr<sp/>s<sp/>=<sp/>&amp;(*si),<sp/>send<sp/>=<sp/>s<sp/>+<sp/>shape[0];</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>s<sp/>&lt;<sp/>send;<sp/>++s,<sp/>++d)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.construct(d,<sp/>static_cast&lt;T<sp/>const<sp/>&amp;&gt;(*s));</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Shape,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ALLOC,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal">uninitializedCopyMultiArrayData(SrcIterator<sp/>s,<sp/>Shape<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>shape,<sp/>T<sp/>*<sp/>&amp;<sp/>d,<sp/>ALLOC<sp/>&amp;<sp/>a,<sp/>MetaInt&lt;N&gt;)</highlight></codeline>
<codeline lineno="401"><highlight class="normal">{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>SrcIterator<sp/>send<sp/>=<sp/>s<sp/>+<sp/>shape[N];</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>s<sp/>&lt;<sp/>send;<sp/>++s)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uninitializedCopyMultiArrayData(s.begin(),<sp/>shape,<sp/>d,<sp/>a,<sp/>MetaInt&lt;N-1&gt;());</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Shape,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Functor&gt;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal">reduceOverMultiArray(SrcIterator<sp/>s,<sp/>Shape<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>shape,<sp/>T<sp/>&amp;<sp/>result,<sp/>Functor<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>f,<sp/>MetaInt&lt;0&gt;)</highlight></codeline>
<codeline lineno="412"><highlight class="normal">{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>SrcIterator<sp/>send<sp/>=<sp/>s<sp/>+<sp/>shape[0];</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>s<sp/>&lt;<sp/>send;<sp/>++s)</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(result,<sp/>*s);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Shape,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Functor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal">reduceOverMultiArray(SrcIterator<sp/>s,<sp/>Shape<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>shape,<sp/>T<sp/>&amp;<sp/>result,<sp/>Functor<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>f,<sp/>MetaInt&lt;N&gt;)</highlight></codeline>
<codeline lineno="423"><highlight class="normal">{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>SrcIterator<sp/>send<sp/>=<sp/>s<sp/>+<sp/>shape[N];</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>s<sp/>&lt;<sp/>send;<sp/>++s)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reduceOverMultiArray(s.begin(),<sp/>shape,<sp/>result,<sp/>f,<sp/>MetaInt&lt;N-1&gt;());</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">MaxNormReduceFunctor</highlight></codeline>
<codeline lineno="432"><highlight class="normal">{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()(T<sp/>&amp;<sp/>result,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>u)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="435"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>v<sp/>=<sp/><ref refid="group__FFTWComplexOperators_1ga396baa79e8bd78a178597d32d5152041" kindref="member" tooltip="norm (= magnitude)">norm</ref>(u);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result<sp/>&lt;<sp/>v)</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal">};</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">L1NormReduceFunctor</highlight></codeline>
<codeline lineno="443"><highlight class="normal">{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()(T<sp/>&amp;<sp/>result,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>u)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="446"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="group__FFTWComplexOperators_1ga396baa79e8bd78a178597d32d5152041" kindref="member" tooltip="norm (= magnitude)">norm</ref>(u);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal">};</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SquaredL2NormReduceFunctor</highlight></codeline>
<codeline lineno="452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()(T<sp/>&amp;<sp/>result,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>u)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="455"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="group__FFTWComplexOperators_1ga484df995dad9821aac02ec42cd58f7eb" kindref="member" tooltip="squared norm (= squared magnitude)">squaredNorm</ref>(u);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal">};</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">WeightedL2NormReduceFunctor</highlight></codeline>
<codeline lineno="462"><highlight class="normal">{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>scale;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>WeightedL2NormReduceFunctor(T<sp/>s)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>scale(s)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()(T<sp/>&amp;<sp/>result,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>u)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="471"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="group__FFTWComplexOperators_1ga484df995dad9821aac02ec42cd58f7eb" kindref="member" tooltip="squared norm (= squared magnitude)">squaredNorm</ref>(u<sp/>*<sp/>scale);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal">};</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SumReduceFunctor</highlight></codeline>
<codeline lineno="477"><highlight class="normal">{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()(T<sp/>&amp;<sp/>result,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>u)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="480"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>u;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal">};</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ProdReduceFunctor</highlight></codeline>
<codeline lineno="486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()(T<sp/>&amp;<sp/>result,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>u)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="489"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>*=<sp/>u;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal">};</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">MinmaxReduceFunctor</highlight></codeline>
<codeline lineno="495"><highlight class="normal">{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()(T<sp/>&amp;<sp/>result,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>u)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="498"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(u<sp/>&lt;<sp/>result.first)</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.first<sp/>=<sp/>u;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result.second<sp/>&lt;<sp/>u)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.second<sp/>=<sp/>u;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal">};</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">MeanVarianceReduceFunctor</highlight></codeline>
<codeline lineno="507"><highlight class="normal">{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()(T<sp/>&amp;<sp/>result,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>u)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="510"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++result.first;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T::second_type<sp/>t1<sp/>=<sp/>u<sp/>-<sp/>result.second;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T::second_type<sp/>t2<sp/>=<sp/>t1<sp/>/<sp/>result.first;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.second<sp/>+=<sp/>t2;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.third<sp/>+=<sp/>(result.first-1.0)*t1*t2;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal">};</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">AllTrueReduceFunctor</highlight></codeline>
<codeline lineno="520"><highlight class="normal">{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()(T<sp/>&amp;<sp/>result,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>u)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="523"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>result<sp/>&amp;&amp;<sp/>(u<sp/>!=<sp/>NumericTraits&lt;U&gt;::zero());</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal">};</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">AnyTrueReduceFunctor</highlight></codeline>
<codeline lineno="529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()(T<sp/>&amp;<sp/>result,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>u)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="532"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>result<sp/>||<sp/>(u<sp/>!=<sp/>NumericTraits&lt;U&gt;::zero());</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal">};</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Shape,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DestIterator&gt;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal">equalityOfMultiArrays(SrcIterator<sp/>s,<sp/>Shape<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>shape,<sp/>DestIterator<sp/>d,<sp/>MetaInt&lt;0&gt;)</highlight></codeline>
<codeline lineno="540"><highlight class="normal">{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>SrcIterator<sp/>send<sp/>=<sp/>s<sp/>+<sp/>shape[0];</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>s<sp/>&lt;<sp/>send;<sp/>++s,<sp/>++d)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(*s<sp/>==<sp/>*d))</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="548"><highlight class="normal">}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Shape,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DestIterator,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal">equalityOfMultiArrays(SrcIterator<sp/>s,<sp/>Shape<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>shape,<sp/>DestIterator<sp/>d,<sp/>MetaInt&lt;N&gt;)</highlight></codeline>
<codeline lineno="553"><highlight class="normal">{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>SrcIterator<sp/>send<sp/>=<sp/>s<sp/>+<sp/>shape[N];</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>s<sp/>&lt;<sp/>send;<sp/>++s,<sp/>++d)</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!equalityOfMultiArrays(s.begin(),<sp/>shape,<sp/>d.begin(),<sp/>MetaInt&lt;N-1&gt;()))</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Shape,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DestIterator&gt;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal">swapDataImpl(SrcIterator<sp/>s,<sp/>Shape<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>shape,<sp/>DestIterator<sp/>d,<sp/>MetaInt&lt;0&gt;)</highlight></codeline>
<codeline lineno="567"><highlight class="normal">{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>SrcIterator<sp/>send<sp/>=<sp/>s<sp/>+<sp/>shape[0];</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>s<sp/>&lt;<sp/>send;<sp/>++s,<sp/>++d)</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(*s,<sp/>*d);</highlight></codeline>
<codeline lineno="571"><highlight class="normal">}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>SrcIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Shape,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DestIterator,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal">swapDataImpl(SrcIterator<sp/>s,<sp/>Shape<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>shape,<sp/>DestIterator<sp/>d,<sp/>MetaInt&lt;N&gt;)</highlight></codeline>
<codeline lineno="576"><highlight class="normal">{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>SrcIterator<sp/>send<sp/>=<sp/>s<sp/>+<sp/>shape[N];</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>s<sp/>&lt;<sp/>send;<sp/>++s,<sp/>++d)</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swapDataImpl(s.begin(),<sp/>shape,<sp/>d.begin(),<sp/>MetaInt&lt;N-1&gt;());</highlight></codeline>
<codeline lineno="580"><highlight class="normal">}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="comment">//<sp/>forward<sp/>declarations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C<sp/>=<sp/>Unstr</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">edArrayTag&gt;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MultiArrayView;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>A<sp/>=<sp/>std::allocator&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MultiArray;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">multi_math<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">MultiMathOperand;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>E&gt;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assign(MultiArrayView&lt;N,<sp/>T,<sp/>C&gt;,<sp/>MultiMathOperand&lt;E&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>E&gt;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>plusAssign(MultiArrayView&lt;N,<sp/>T,<sp/>C&gt;,<sp/>MultiMathOperand&lt;E&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>E&gt;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>minusAssign(MultiArrayView&lt;N,<sp/>T,<sp/>C&gt;,<sp/>MultiMathOperand&lt;E&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>E&gt;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>multiplyAssign(MultiArrayView&lt;N,<sp/>T,<sp/>C&gt;,<sp/>MultiMathOperand&lt;E&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>E&gt;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>divideAssign(MultiArrayView&lt;N,<sp/>T,<sp/>C&gt;,<sp/>MultiMathOperand&lt;E&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>A,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>E&gt;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assignOrResize(MultiArray&lt;N,<sp/>T,<sp/>A&gt;<sp/>&amp;,<sp/>MultiMathOperand&lt;E&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>A,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>E&gt;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>plusAssignOrResize(MultiArray&lt;N,<sp/>T,<sp/>A&gt;<sp/>&amp;,<sp/>MultiMathOperand&lt;E&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>A,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>E&gt;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>minusAssignOrResize(MultiArray&lt;N,<sp/>T,<sp/>A&gt;<sp/>&amp;,<sp/>MultiMathOperand&lt;E&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>A,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>E&gt;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>multiplyAssignOrResize(MultiArray&lt;N,<sp/>T,<sp/>A&gt;<sp/>&amp;,<sp/>MultiMathOperand&lt;E&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>A,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>E&gt;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>divideAssignOrResize(MultiArray&lt;N,<sp/>T,<sp/>A&gt;<sp/>&amp;,<sp/>MultiMathOperand&lt;E&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>multi_math</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FindSum;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">UnsuitableTypeForExpandElements<sp/>{};</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ExpandElementResult</highlight></codeline>
<codeline lineno="644"><highlight class="normal">{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>UnsuitableTypeForExpandElements<sp/>type;</highlight></codeline>
<codeline lineno="646"><highlight class="normal">};</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ExpandElementResult&lt;std::complex&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="650"><highlight class="normal">{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/>type;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>size<sp/>=<sp/>2<sp/>};</highlight></codeline>
<codeline lineno="653"><highlight class="normal">};</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FFTWComplex;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ExpandElementResult&lt;FFTWComplex&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="660"><highlight class="normal">{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/>type;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>size<sp/>=<sp/>2<sp/>};</highlight></codeline>
<codeline lineno="663"><highlight class="normal">};</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE&gt;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ExpandElementResult&lt;TinyVector&lt;T,<sp/>SIZE&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="667"><highlight class="normal">{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/>type;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>size<sp/>=<sp/>SIZE<sp/>};</highlight></codeline>
<codeline lineno="670"><highlight class="normal">};</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>G,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>B&gt;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ExpandElementResult&lt;RGBValue&lt;T,<sp/>R,<sp/>G,<sp/>B&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="674"><highlight class="normal">{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/>type;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>size<sp/>=<sp/>3<sp/>};</highlight></codeline>
<codeline lineno="677"><highlight class="normal">};</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_DEFINE_EXPAND_ELEMENT_RESULT(TYPE)<sp/>\</highlight></codeline>
<codeline lineno="680"><highlight class="preprocessor">template<sp/>&lt;&gt;<sp/><sp/>\</highlight></codeline>
<codeline lineno="681"><highlight class="preprocessor">struct<sp/>ExpandElementResult&lt;TYPE&gt;<sp/>\</highlight></codeline>
<codeline lineno="682"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="683"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typedef<sp/>TYPE<sp/>type;<sp/>\</highlight></codeline>
<codeline lineno="684"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>enum<sp/>{<sp/>size<sp/>=<sp/>1<sp/>};<sp/>\</highlight></codeline>
<codeline lineno="685"><highlight class="preprocessor">};<sp/>\</highlight></codeline>
<codeline lineno="686"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="687"><highlight class="preprocessor"></highlight><highlight class="normal">VIGRA_DEFINE_EXPAND_ELEMENT_RESULT(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="688"><highlight class="normal">VIGRA_DEFINE_EXPAND_ELEMENT_RESULT(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="689"><highlight class="normal">VIGRA_DEFINE_EXPAND_ELEMENT_RESULT(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="690"><highlight class="normal">VIGRA_DEFINE_EXPAND_ELEMENT_RESULT(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="691"><highlight class="normal">VIGRA_DEFINE_EXPAND_ELEMENT_RESULT(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="692"><highlight class="normal">VIGRA_DEFINE_EXPAND_ELEMENT_RESULT(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="693"><highlight class="normal">VIGRA_DEFINE_EXPAND_ELEMENT_RESULT(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="694"><highlight class="normal">VIGRA_DEFINE_EXPAND_ELEMENT_RESULT(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="695"><highlight class="normal">VIGRA_DEFINE_EXPAND_ELEMENT_RESULT(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="696"><highlight class="normal">VIGRA_DEFINE_EXPAND_ELEMENT_RESULT(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="697"><highlight class="normal">VIGRA_DEFINE_EXPAND_ELEMENT_RESULT(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="698"><highlight class="normal">VIGRA_DEFINE_EXPAND_ELEMENT_RESULT(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="699"><highlight class="normal">VIGRA_DEFINE_EXPAND_ELEMENT_RESULT(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="700"><highlight class="normal">VIGRA_DEFINE_EXPAND_ELEMENT_RESULT(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="701"><highlight class="normal">VIGRA_DEFINE_EXPAND_ELEMENT_RESULT(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_DEFINE_EXPAND_ELEMENT_RESULT</highlight></codeline>
<codeline lineno="704"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NormTraits<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C&gt;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">NormTraits&lt;MultiArrayView&lt;N,<sp/>T,<sp/>C&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="714"><highlight class="normal">{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>MultiArrayView&lt;N,<sp/>T,<sp/>C&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Type;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NormTraits&lt;T&gt;::SquaredNormType<sp/>SquaredNormType;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SquareRootTraits&lt;SquaredNormType&gt;::SquareRootResult<sp/>NormType;</highlight></codeline>
<codeline lineno="718"><highlight class="normal">};</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">NormTraits&lt;MultiArray&lt;N,<sp/>T,<sp/>A&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="722"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>NormTraits&lt;MultiArrayView&lt;N,<sp/>T,<sp/>UnstridedArrayTag&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="723"><highlight class="normal">{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>NormTraits&lt;MultiArrayView&lt;N,<sp/>T,<sp/>UnstridedArrayTag&gt;<sp/>&gt;<sp/>BaseType;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>MultiArray&lt;N,<sp/>T,<sp/>A&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Type;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BaseType::SquaredNormType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SquaredNormType;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BaseType::NormType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NormType;</highlight></codeline>
<codeline lineno="728"><highlight class="normal">};</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="730"><highlight class="comment">/**<sp/>\brief<sp/>Base<sp/>class<sp/>for,<sp/>and<sp/>view<sp/>to,<sp/>\ref<sp/>vigra::MultiArray.</highlight></codeline>
<codeline lineno="731"><highlight class="comment"></highlight></codeline>
<codeline lineno="732"><highlight class="comment">This<sp/>class<sp/>implements<sp/>the<sp/>interface<sp/>of<sp/>both<sp/>MultiArray<sp/>and</highlight></codeline>
<codeline lineno="733"><highlight class="comment">MultiArrayView.<sp/><sp/>By<sp/>default,<sp/>MultiArrayViews<sp/>are<sp/>tagged<sp/>as</highlight></codeline>
<codeline lineno="734"><highlight class="comment">unstrided.<sp/>If<sp/>necessary,<sp/>strided<sp/>arrays<sp/>are<sp/>constructed<sp/>automatically</highlight></codeline>
<codeline lineno="735"><highlight class="comment">by<sp/>calls<sp/>to<sp/>a<sp/>variant<sp/>of<sp/>the<sp/>bind...()<sp/>function.</highlight></codeline>
<codeline lineno="736"><highlight class="comment"></highlight></codeline>
<codeline lineno="737"><highlight class="comment">In<sp/>addition<sp/>to<sp/>the<sp/>member<sp/>functions<sp/>described<sp/>here,<sp/>&lt;tt&gt;MultiArrayView&lt;/tt&gt;</highlight></codeline>
<codeline lineno="738"><highlight class="comment">and<sp/>its<sp/>subclasses<sp/>support<sp/>arithmetic<sp/>and<sp/>algebraic<sp/>functions<sp/>via<sp/>the<sp/></highlight></codeline>
<codeline lineno="739"><highlight class="comment">module<sp/>\ref<sp/>MultiMathModule.</highlight></codeline>
<codeline lineno="740"><highlight class="comment"></highlight></codeline>
<codeline lineno="741"><highlight class="comment">If<sp/>you<sp/>want<sp/>to<sp/>apply<sp/>an<sp/>algorithm<sp/>requiring<sp/>an<sp/>image<sp/>to<sp/>a</highlight></codeline>
<codeline lineno="742"><highlight class="comment">&lt;tt&gt;MultiArrayView&lt;/tt&gt;<sp/>of<sp/>appropriate<sp/>(2-dimensional)<sp/>shape,<sp/>you<sp/>can</highlight></codeline>
<codeline lineno="743"><highlight class="comment">create<sp/>a<sp/>\ref<sp/>vigra::BasicImageView<sp/>that<sp/>acts<sp/>as<sp/>a<sp/>wrapper<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="744"><highlight class="comment">necessary<sp/>interface<sp/>--<sp/>see<sp/>\ref<sp/>MultiArrayToImage.</highlight></codeline>
<codeline lineno="745"><highlight class="comment"></highlight></codeline>
<codeline lineno="746"><highlight class="comment">The<sp/>template<sp/>parameter<sp/>are<sp/>as<sp/>follows</highlight></codeline>
<codeline lineno="747"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="748"><highlight class="comment"><sp/><sp/><sp/><sp/>N:<sp/>the<sp/>array<sp/>dimension</highlight></codeline>
<codeline lineno="749"><highlight class="comment"></highlight></codeline>
<codeline lineno="750"><highlight class="comment"><sp/><sp/><sp/><sp/>T:<sp/>the<sp/>type<sp/>of<sp/>the<sp/>array<sp/>elements</highlight></codeline>
<codeline lineno="751"><highlight class="comment"></highlight></codeline>
<codeline lineno="752"><highlight class="comment"><sp/><sp/><sp/><sp/>C:<sp/>a<sp/>tag<sp/>determining<sp/>whether<sp/>the<sp/>array&apos;s<sp/>inner<sp/>dimension<sp/>is<sp/>strided</highlight></codeline>
<codeline lineno="753"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>not.<sp/>An<sp/>array<sp/>is<sp/>unstrided<sp/>if<sp/>the<sp/>array<sp/>elements<sp/>occupy<sp/>consecutive</highlight></codeline>
<codeline lineno="754"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memory<sp/>location,<sp/>strided<sp/>if<sp/>there<sp/>is<sp/>an<sp/>offset<sp/>in<sp/>between<sp/>(e.g.</highlight></codeline>
<codeline lineno="755"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>a<sp/>view<sp/>is<sp/>created<sp/>that<sp/>skips<sp/>every<sp/>other<sp/>array<sp/>element).</highlight></codeline>
<codeline lineno="756"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>compiler<sp/>can<sp/>generate<sp/>faster<sp/>code<sp/>for<sp/>unstrided<sp/>arrays.</highlight></codeline>
<codeline lineno="757"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Possible<sp/>values:<sp/>UnstridedArrayTag<sp/>(default),<sp/>StridedArrayTag</highlight></codeline>
<codeline lineno="758"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="759"><highlight class="comment"></highlight></codeline>
<codeline lineno="760"><highlight class="comment">&lt;b&gt;\#include&lt;/b&gt;</highlight></codeline>
<codeline lineno="761"><highlight class="comment">\&lt;vigra/multi_array.hxx\&gt;</highlight></codeline>
<codeline lineno="762"><highlight class="comment"></highlight></codeline>
<codeline lineno="763"><highlight class="comment">Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="764"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="766" refid="classvigra_1_1MultiArrayView" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref></highlight></codeline>
<codeline lineno="767"><highlight class="normal">{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="770"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>array&apos;s<sp/>actual<sp/>dimensionality.</highlight></codeline>
<codeline lineno="771"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>ensures<sp/>that<sp/>MultiArrayView<sp/>can<sp/>also<sp/>be<sp/>used<sp/>for</highlight></codeline>
<codeline lineno="772"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalars<sp/>(that<sp/>is,<sp/>when<sp/>&lt;tt&gt;N<sp/>==<sp/>0&lt;/tt&gt;).<sp/>Calculated<sp/>as:&lt;br&gt;</highlight></codeline>
<codeline lineno="773"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="774"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actual_dimension<sp/>=<sp/>(N==0)<sp/>?<sp/>1<sp/>:<sp/>N</highlight></codeline>
<codeline lineno="775"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="776"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777" refid="classvigra_1_1MultiArrayView_1ad1ff5270f93b932185051401f1bdc351" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1ad1ff5270f93b932185051401f1bdc351" kindref="member">ActualDimension</ref><sp/>{<sp/>actual_dimension<sp/>=<sp/>(N==0)<sp/>?<sp/>1<sp/>:<sp/>N<sp/>};</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="779"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>array&apos;s<sp/>value<sp/>type</highlight></codeline>
<codeline lineno="780"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781" refid="classvigra_1_1MultiArrayView_1a265a253612b46abed17c61b0a5e5ce30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="classvigra_1_1MultiArrayView_1a265a253612b46abed17c61b0a5e5ce30" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="783"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>reference<sp/>type<sp/>(result<sp/>of<sp/>operator[])</highlight></codeline>
<codeline lineno="784"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785" refid="classvigra_1_1MultiArrayView_1abe8933d436779a43cb5c1896ff5f2918" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>value_type<sp/>&amp;<ref refid="classvigra_1_1MultiArrayView_1abe8933d436779a43cb5c1896ff5f2918" kindref="member">reference</ref>;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="787"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>const<sp/>reference<sp/>type<sp/>(result<sp/>of<sp/>operator[]<sp/>const)</highlight></codeline>
<codeline lineno="788"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789" refid="classvigra_1_1MultiArrayView_1afdb67657e63a66ed3fae7b0c9fd81b48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value_type<sp/>&amp;<ref refid="classvigra_1_1MultiArrayView_1afdb67657e63a66ed3fae7b0c9fd81b48" kindref="member">const_reference</ref>;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="791"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>pointer<sp/>type</highlight></codeline>
<codeline lineno="792"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793" refid="classvigra_1_1MultiArrayView_1ad25b518036b886d8f35a3c059301d007" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>value_type<sp/>*<ref refid="classvigra_1_1MultiArrayView_1ad25b518036b886d8f35a3c059301d007" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="795"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>const<sp/>pointer<sp/>type</highlight></codeline>
<codeline lineno="796"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797" refid="classvigra_1_1MultiArrayView_1a13c57dab17e2c903cadfa5e35ba84064" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value_type<sp/>*<ref refid="classvigra_1_1MultiArrayView_1a13c57dab17e2c903cadfa5e35ba84064" kindref="member">const_pointer</ref>;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="799"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>difference<sp/>type<sp/>(used<sp/>for<sp/>multi-dimensional<sp/>offsets<sp/>and<sp/>indices)</highlight></codeline>
<codeline lineno="800"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801" refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayShape" kindref="compound">MultiArrayShape&lt;actual_dimension&gt;::type</ref><sp/><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref>;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="803"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>size<sp/>type</highlight></codeline>
<codeline lineno="804"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805" refid="classvigra_1_1MultiArrayView_1aa0f974ecbf50663cc55fb80dc82af95b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>difference_type<sp/><ref refid="classvigra_1_1MultiArrayView_1aa0f974ecbf50663cc55fb80dc82af95b" kindref="member">size_type</ref>;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="807"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>difference<sp/>and<sp/>index<sp/>type<sp/>for<sp/>a<sp/>single<sp/>dimension</highlight></codeline>
<codeline lineno="808"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809" refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref>;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="811"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>scan-order<sp/>iterator<sp/>(StridedScanOrderIterator)<sp/>type</highlight></codeline>
<codeline lineno="812"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813" refid="classvigra_1_1MultiArrayView_1aeee42f6d6232520f1f2342866a2ddefb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedScanOrderIterator" kindref="compound" tooltip="Sequential iterator for MultiArrayView.">StridedScanOrderIterator&lt;actual_dimension, T, T &amp;, T *&gt;</ref><sp/><ref refid="classvigra_1_1MultiArrayView_1aeee42f6d6232520f1f2342866a2ddefb" kindref="member">iterator</ref>;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="815"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>const<sp/>scan-order<sp/>iterator<sp/>(StridedScanOrderIterator)<sp/>type</highlight></codeline>
<codeline lineno="816"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817" refid="classvigra_1_1MultiArrayView_1a7ccba9db082c23d8d019296dcd9ff735" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StridedScanOrderIterator" kindref="compound" tooltip="Sequential iterator for MultiArrayView.">StridedScanOrderIterator&lt;actual_dimension, T, T const &amp;, T const *&gt;</ref><sp/><ref refid="classvigra_1_1MultiArrayView_1a7ccba9db082c23d8d019296dcd9ff735" kindref="member">const_iterator</ref>;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="819"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>traverser<sp/>(MultiIterator)<sp/>type</highlight></codeline>
<codeline lineno="820"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vigra::detail::MultiIteratorChooser<sp/>&lt;</highlight></codeline>
<codeline lineno="822" refid="classvigra_1_1MultiArrayView_1a004f010b30c35872abd72cd8bc9a0d19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StrideTag&gt;::template<sp/>Traverser<sp/>&lt;actual_dimension,<sp/>T,<sp/>T<sp/>&amp;,<sp/>T<sp/>*&gt;::type<sp/><ref refid="classvigra_1_1MultiArrayView_1a004f010b30c35872abd72cd8bc9a0d19" kindref="member">traverser</ref>;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="824"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>const<sp/>traverser<sp/>(MultiIterator)<sp/>type</highlight></codeline>
<codeline lineno="825"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vigra::detail::MultiIteratorChooser<sp/>&lt;</highlight></codeline>
<codeline lineno="827" refid="classvigra_1_1MultiArrayView_1a58290f6e0cbd34a15d2e5024bd69d567" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StrideTag&gt;::template<sp/>Traverser<sp/>&lt;actual_dimension,<sp/>T,<sp/>T<sp/>const<sp/>&amp;,<sp/>T<sp/>const<sp/>*&gt;::type<sp/><ref refid="classvigra_1_1MultiArrayView_1a58290f6e0cbd34a15d2e5024bd69d567" kindref="member">const_traverser</ref>;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="829"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>view<sp/>type<sp/>associated<sp/>with<sp/>this<sp/>array.</highlight></codeline>
<codeline lineno="830"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831" refid="classvigra_1_1MultiArrayView_1a130f62c61e834658de66d05ed4e2ae02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, T, StrideTag&gt;</ref><sp/><ref refid="classvigra_1_1MultiArrayView_1a130f62c61e834658de66d05ed4e2ae02" kindref="member">view_type</ref>;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="833"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>matrix<sp/>type<sp/>associated<sp/>with<sp/>this<sp/>array.</highlight></codeline>
<codeline lineno="834"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835" refid="classvigra_1_1MultiArrayView_1ae77ee86b1b883625be8f0092c104ae75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray &lt;N, T&gt;</ref><sp/><ref refid="classvigra_1_1MultiArrayView_1ae77ee86b1b883625be8f0092c104ae75" kindref="member">matrix_type</ref>;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>difference_type::value_type<sp/>diff_zero_t;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="841"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>shape<sp/>of<sp/>the<sp/>image<sp/>pointed<sp/>to<sp/>is<sp/>stored<sp/>here.</highlight></codeline>
<codeline lineno="842"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843" refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>difference_type<sp/><ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref>;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="845"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>strides<sp/>(offset<sp/>of<sp/>a<sp/>sample<sp/>to<sp/>the<sp/>next)<sp/>for<sp/>every<sp/>dimension</highlight></codeline>
<codeline lineno="846"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>are<sp/>stored<sp/>here.</highlight></codeline>
<codeline lineno="847"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848" refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>difference_type<sp/><ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="850"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>pointer<sp/>to<sp/>the<sp/>image.</highlight></codeline>
<codeline lineno="851"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852" refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pointer<sp/><ref refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" kindref="member">m_ptr</ref>;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CN&gt;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copyImpl(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, U, CN&gt;</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CN&gt;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swapDataImpl(<ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, U, CN&gt;</ref><sp/>rhs);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CN&gt;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>arraysOverlap(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, T, CN&gt;</ref>&amp;<sp/>rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CN&gt;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>arraysOverlap(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, U, CN&gt;</ref>&amp;)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="865"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkInnerStride(<ref refid="structvigra_1_1UnstridedArrayTag" kindref="compound">UnstridedArrayTag</ref>)</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_stride[0]<sp/>&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkInnerStride(StridedArrayTag)</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="881"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>default<sp/>constructor:<sp/>create<sp/>an<sp/>invalid<sp/>view,</highlight></codeline>
<codeline lineno="882"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>i.e.<sp/>hasData()<sp/>returns<sp/>false<sp/>and<sp/>size()<sp/>is<sp/>zero.</highlight></codeline>
<codeline lineno="883"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884" refid="classvigra_1_1MultiArrayView_1acddece61538d74dc1d7f71ea7c581e67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1acddece61538d74dc1d7f71ea7c581e67" kindref="member">MultiArrayView</ref><sp/>()</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_shape<sp/>(diff_zero_t(0)),<sp/>m_stride<sp/>(diff_zero_t(0)),<sp/>m_ptr<sp/>(0)</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="888"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>construct<sp/>from<sp/>shape<sp/>and<sp/>pointer</highlight></codeline>
<codeline lineno="889"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890" refid="classvigra_1_1MultiArrayView_1a2d2c039824d104f03d97d00a5b87d914" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1acddece61538d74dc1d7f71ea7c581e67" kindref="member">MultiArrayView</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>difference_type<sp/>&amp;shape,<sp/>pointer<sp/>ptr)</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_shape<sp/>(shape),</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_stride<sp/>(detail::defaultStride<sp/>&lt;<ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref>&lt;N,T&gt;::actual_dimension&gt;<sp/>(shape)),</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_ptr<sp/>(ptr)</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="896"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Construct<sp/>from<sp/>shape,<sp/>strides<sp/>(offset<sp/>of<sp/>a<sp/>sample<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="897"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next)<sp/>for<sp/>every<sp/>dimension,<sp/>and<sp/>pointer.<sp/><sp/>(Note<sp/>that</highlight></codeline>
<codeline lineno="898"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strides<sp/>are<sp/>not<sp/>given<sp/>in<sp/>bytes,<sp/>but<sp/>in<sp/>offset<sp/>steps<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="899"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>respective<sp/>pointer<sp/>type.)</highlight></codeline>
<codeline lineno="900"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901" refid="classvigra_1_1MultiArrayView_1ac8e675f45de1e53c3cc147375a920ea4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1acddece61538d74dc1d7f71ea7c581e67" kindref="member">MultiArrayView</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>difference_type<sp/>&amp;shape,</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>difference_type<sp/>&amp;<ref refid="classvigra_1_1MultiArrayView_1a3fee5f2594095fe1e747155d6bad57b0" kindref="member">stride</ref>,</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>ptr)</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_shape<sp/>(shape),</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_stride<sp/>(stride),</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_ptr<sp/>(ptr)</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra_precondition(checkInnerStride(StrideTag()),</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MultiArrayView&lt;...,<sp/>UnstridedArrayTag&gt;::MultiArrayView():<sp/>First<sp/>dimension<sp/>of<sp/>given<sp/>array<sp/>is<sp/>not<sp/>unstrided.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="912"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Conversion<sp/>to<sp/>a<sp/>strided<sp/>view.</highlight></codeline>
<codeline lineno="913"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914" refid="classvigra_1_1MultiArrayView_1ae01c274541e9b1d39eab573df7344fd1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;N, T, StridedArrayTag&gt;</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;N, T, StridedArrayTag&gt;</ref>(<ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref>,<sp/><ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>,<sp/><ref refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" kindref="member">m_ptr</ref>);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="919"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Assignment.<sp/>There<sp/>are<sp/>3<sp/>cases:</highlight></codeline>
<codeline lineno="920"><highlight class="comment"></highlight></codeline>
<codeline lineno="921"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="922"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;li&gt;<sp/>When<sp/>this<sp/>&lt;tt&gt;MultiArrayView&lt;/tt&gt;<sp/>does<sp/>not<sp/>point<sp/>to<sp/>valid<sp/>data</highlight></codeline>
<codeline lineno="923"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(e.g.<sp/>after<sp/>default<sp/>construction),<sp/>it<sp/>becomes<sp/>a<sp/>copy<sp/>of<sp/>\a<sp/>rhs.</highlight></codeline>
<codeline lineno="924"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;li&gt;<sp/>When<sp/>the<sp/>shapes<sp/>of<sp/>the<sp/>two<sp/>arrays<sp/>match,<sp/>the<sp/>array<sp/>contents<sp/>are<sp/>copied.</highlight></codeline>
<codeline lineno="925"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;li&gt;<sp/>Otherwise,<sp/>a<sp/>&lt;tt&gt;PreconditionViolation&lt;/tt&gt;<sp/>exception<sp/>is<sp/>thrown.</highlight></codeline>
<codeline lineno="926"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="927"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiArrayView_1aaf7167061b3a03a33146694f32aa380f" kindref="member">operator=</ref>(<ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="930"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Assignment<sp/>of<sp/>a<sp/>differently<sp/>typed<sp/>MultiArrayView.<sp/>Fails<sp/>with</highlight></codeline>
<codeline lineno="931"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;PreconditionViolation&lt;/tt&gt;<sp/>exception<sp/>when<sp/>the<sp/>shapes<sp/>do<sp/>not<sp/>match.</highlight></codeline>
<codeline lineno="932"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C1&gt;</highlight></codeline>
<codeline lineno="934" refid="classvigra_1_1MultiArrayView_1a47317f3dddbd8b1d447eee03040ae00b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiArrayView_1aaf7167061b3a03a33146694f32aa380f" kindref="member">operator=</ref>(<ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;N, U, C1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra_precondition(this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>()<sp/>==<sp/>rhs.<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(),</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MultiArrayView::operator=()<sp/>size<sp/>mismatch.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;copyImpl(rhs);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="942"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Add-assignment<sp/>of<sp/>a<sp/>compatible<sp/>MultiArrayView.<sp/>Fails<sp/>with</highlight></codeline>
<codeline lineno="943"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;PreconditionViolation&lt;/tt&gt;<sp/>exception<sp/>when<sp/>the<sp/>shapes<sp/>do<sp/>not<sp/>match.</highlight></codeline>
<codeline lineno="944"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C1&gt;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiArrayView_1a0db6c678b054c0cfba823c0fd355cc92" kindref="member">operator+=</ref>(<ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;N, U, C1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="948"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Subtract-assignment<sp/>of<sp/>a<sp/>compatible<sp/>MultiArrayView.<sp/>Fails<sp/>with</highlight></codeline>
<codeline lineno="949"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;PreconditionViolation&lt;/tt&gt;<sp/>exception<sp/>when<sp/>the<sp/>shapes<sp/>do<sp/>not<sp/>match.</highlight></codeline>
<codeline lineno="950"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C1&gt;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiArrayView_1ac9d3cda29b22226f730c4520bcb2c1ad" kindref="member">operator-=</ref>(<ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;N, U, C1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="954"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Multiply-assignment<sp/>of<sp/>a<sp/>compatible<sp/>MultiArrayView.<sp/>Fails<sp/>with</highlight></codeline>
<codeline lineno="955"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;PreconditionViolation&lt;/tt&gt;<sp/>exception<sp/>when<sp/>the<sp/>shapes<sp/>do<sp/>not<sp/>match.</highlight></codeline>
<codeline lineno="956"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C1&gt;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiArrayView_1a2246e065e45bd9bd792efabac9fab724" kindref="member">operator*=</ref>(<ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;N, U, C1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="960"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Divide-assignment<sp/>of<sp/>a<sp/>compatible<sp/>MultiArrayView.<sp/>Fails<sp/>with</highlight></codeline>
<codeline lineno="961"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;PreconditionViolation&lt;/tt&gt;<sp/>exception<sp/>when<sp/>the<sp/>shapes<sp/>do<sp/>not<sp/>match.</highlight></codeline>
<codeline lineno="962"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C1&gt;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiArrayView_1ae4dd7bff037e05a3580cd66ca857c3f2" kindref="member">operator/=</ref>(<ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;N, U, C1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="966"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Add-assignment<sp/>of<sp/>a<sp/>scalar.</highlight></codeline>
<codeline lineno="967"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968" refid="classvigra_1_1MultiArrayView_1af80e0592a63a35af2748ba5c54bf51ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiArrayView_1a0db6c678b054c0cfba823c0fd355cc92" kindref="member">operator+=</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::copyAddScalarMultiArrayData(<ref refid="classvigra_1_1MultiArrayView_1a6da88764aadffdf26736523ba73a53b2" kindref="member">traverser_begin</ref>(),<sp/><ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(),<sp/>rhs,<sp/>MetaInt&lt;actual_dimension-1&gt;());</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="974"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Subtract-assignment<sp/>of<sp/>a<sp/>scalar.</highlight></codeline>
<codeline lineno="975"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976" refid="classvigra_1_1MultiArrayView_1aa8b0daf746d75139531bff75b1f43fa9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiArrayView_1ac9d3cda29b22226f730c4520bcb2c1ad" kindref="member">operator-=</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::copySubScalarMultiArrayData(<ref refid="classvigra_1_1MultiArrayView_1a6da88764aadffdf26736523ba73a53b2" kindref="member">traverser_begin</ref>(),<sp/><ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(),<sp/>rhs,<sp/>MetaInt&lt;actual_dimension-1&gt;());</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="982"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Multiply-assignment<sp/>of<sp/>a<sp/>scalar.</highlight></codeline>
<codeline lineno="983"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984" refid="classvigra_1_1MultiArrayView_1a6cc7ac8b9105a0d95b2c7750252d32ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiArrayView_1a2246e065e45bd9bd792efabac9fab724" kindref="member">operator*=</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::copyMulScalarMultiArrayData(<ref refid="classvigra_1_1MultiArrayView_1a6da88764aadffdf26736523ba73a53b2" kindref="member">traverser_begin</ref>(),<sp/><ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(),<sp/>rhs,<sp/>MetaInt&lt;actual_dimension-1&gt;());</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="990"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Divide-assignment<sp/>of<sp/>a<sp/>scalar.</highlight></codeline>
<codeline lineno="991"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992" refid="classvigra_1_1MultiArrayView_1aad41190865f1ff0b93dcef5d07938a0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiArrayView_1ae4dd7bff037e05a3580cd66ca857c3f2" kindref="member">operator/=</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::copyDivScalarMultiArrayData(<ref refid="classvigra_1_1MultiArrayView_1a6da88764aadffdf26736523ba73a53b2" kindref="member">traverser_begin</ref>(),<sp/><ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(),<sp/>rhs,<sp/>MetaInt&lt;actual_dimension-1&gt;());</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="998"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Assignment<sp/>of<sp/>an<sp/>array<sp/>expression.<sp/>Fails<sp/>with</highlight></codeline>
<codeline lineno="999"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;PreconditionViolation&lt;/tt&gt;<sp/>exception<sp/>when<sp/>the<sp/>shapes<sp/>do<sp/>not<sp/>match.</highlight></codeline>
<codeline lineno="1000"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Expression&gt;</highlight></codeline>
<codeline lineno="1002" refid="classvigra_1_1MultiArrayView_1aba1db9e0b6bddad5e85929219950e98d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiArrayView_1aaf7167061b3a03a33146694f32aa380f" kindref="member">operator=</ref>(multi_math::MultiMathOperand&lt;Expression&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multi_math::detail::assign(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>rhs);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1008"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Add-assignment<sp/>of<sp/>an<sp/>array<sp/>expression.<sp/>Fails<sp/>with</highlight></codeline>
<codeline lineno="1009"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;PreconditionViolation&lt;/tt&gt;<sp/>exception<sp/>when<sp/>the<sp/>shapes<sp/>do<sp/>not<sp/>match.</highlight></codeline>
<codeline lineno="1010"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Expression&gt;</highlight></codeline>
<codeline lineno="1012" refid="classvigra_1_1MultiArrayView_1a927f4e96d6f5b28c7c7cbc7e6ca978bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiArrayView_1a0db6c678b054c0cfba823c0fd355cc92" kindref="member">operator+=</ref>(multi_math::MultiMathOperand&lt;Expression&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multi_math::detail::plusAssign(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>rhs);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1018"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Subtract-assignment<sp/>of<sp/>an<sp/>array<sp/>expression.<sp/>Fails<sp/>with</highlight></codeline>
<codeline lineno="1019"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;PreconditionViolation&lt;/tt&gt;<sp/>exception<sp/>when<sp/>the<sp/>shapes<sp/>do<sp/>not<sp/>match.</highlight></codeline>
<codeline lineno="1020"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Expression&gt;</highlight></codeline>
<codeline lineno="1022" refid="classvigra_1_1MultiArrayView_1af514e5535c2682fcc0970b133a25b158" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiArrayView_1ac9d3cda29b22226f730c4520bcb2c1ad" kindref="member">operator-=</ref>(multi_math::MultiMathOperand&lt;Expression&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multi_math::detail::minusAssign(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>rhs);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1028"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Multiply-assignment<sp/>of<sp/>an<sp/>array<sp/>expression.<sp/>Fails<sp/>with</highlight></codeline>
<codeline lineno="1029"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;PreconditionViolation&lt;/tt&gt;<sp/>exception<sp/>when<sp/>the<sp/>shapes<sp/>do<sp/>not<sp/>match.</highlight></codeline>
<codeline lineno="1030"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Expression&gt;</highlight></codeline>
<codeline lineno="1032" refid="classvigra_1_1MultiArrayView_1a35f6aab0e7f37cbf1de49abe62901ec5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiArrayView_1a2246e065e45bd9bd792efabac9fab724" kindref="member">operator*=</ref>(multi_math::MultiMathOperand&lt;Expression&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multi_math::detail::multiplyAssign(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>rhs);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1038"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Divide-assignment<sp/>of<sp/>an<sp/>array<sp/>expression.<sp/>Fails<sp/>with</highlight></codeline>
<codeline lineno="1039"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;PreconditionViolation&lt;/tt&gt;<sp/>exception<sp/>when<sp/>the<sp/>shapes<sp/>do<sp/>not<sp/>match.</highlight></codeline>
<codeline lineno="1040"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Expression&gt;</highlight></codeline>
<codeline lineno="1042" refid="classvigra_1_1MultiArrayView_1a644075b68b6b01524b1b8620dbd79758" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiArrayView_1ae4dd7bff037e05a3580cd66ca857c3f2" kindref="member">operator/=</ref>(multi_math::MultiMathOperand&lt;Expression&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multi_math::detail::divideAssign(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>rhs);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1048"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>array<sp/>access.</highlight></codeline>
<codeline lineno="1049"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050" refid="classvigra_1_1MultiArrayView_1aebc939b0cbcef6234def78f6fcb50bf2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>reference<sp/><ref refid="classvigra_1_1MultiArrayView_1aebc939b0cbcef6234def78f6fcb50bf2" kindref="member">operator[] </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>difference_type<sp/>&amp;d)</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VIGRA_ASSERT_INSIDE(d);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr<sp/>[<ref refid="group__RGBValueOperators_1gaabe9d910ba7a54cbf606254a81e409e6" kindref="member" tooltip="dot product">dot</ref><sp/>(d,<sp/>m_stride)];</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1056"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>array<sp/>access.</highlight></codeline>
<codeline lineno="1057"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058" refid="classvigra_1_1MultiArrayView_1a77fdced99246dc012c098ffdd020e336" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>const_reference<sp/><ref refid="classvigra_1_1MultiArrayView_1aebc939b0cbcef6234def78f6fcb50bf2" kindref="member">operator[] </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>difference_type<sp/>&amp;d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1059"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VIGRA_ASSERT_INSIDE(d);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr<sp/>[<ref refid="group__RGBValueOperators_1gaabe9d910ba7a54cbf606254a81e409e6" kindref="member" tooltip="dot product">dot</ref><sp/>(d,<sp/>m_stride)];</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1064"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>equivalent<sp/>to<sp/>bindInner(),<sp/>when<sp/>M<sp/>&lt;<sp/>N.</highlight></codeline>
<codeline lineno="1065"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M&gt;</highlight></codeline>
<codeline lineno="1067" refid="classvigra_1_1MultiArrayView_1ace2c9cd7baee89bc7f005e3664693235" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&lt;N-M,<sp/>T,<sp/><ref refid="structvigra_1_1StridedArrayTag" kindref="compound">StridedArrayTag</ref>&gt;<sp/><ref refid="classvigra_1_1MultiArrayView_1aebc939b0cbcef6234def78f6fcb50bf2" kindref="member">operator[] </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector&lt;MultiArrayIndex, M&gt;</ref><sp/>&amp;d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1068"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a262f8f52cd526b497522b444a53aeb1c" kindref="member">bindInner</ref>(d);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1072"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Array<sp/>access<sp/>in<sp/>scan-order<sp/>sense.</highlight></codeline>
<codeline lineno="1073"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mostly<sp/>useful<sp/>to<sp/>support<sp/>standard<sp/>indexing<sp/>for<sp/>1-dimensional<sp/>multi-arrays,</highlight></codeline>
<codeline lineno="1074"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>but<sp/>works<sp/>for<sp/>any<sp/>N.<sp/>Use<sp/>scanOrderIndexToCoordinate()<sp/>and</highlight></codeline>
<codeline lineno="1075"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coordinateToScanOrderIndex()<sp/>for<sp/>conversion<sp/>between<sp/>indices<sp/>and<sp/>coordinates.</highlight></codeline>
<codeline lineno="1076"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1077"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;Note:&lt;/b&gt;<sp/>This<sp/>function<sp/>should<sp/>not<sp/>be<sp/>used<sp/>in<sp/>the<sp/>inner<sp/>loop,<sp/>because<sp/>the</highlight></codeline>
<codeline lineno="1078"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conversion<sp/>of<sp/>the<sp/>scan<sp/>order<sp/>index<sp/>into<sp/>a<sp/>memory<sp/>address<sp/>is<sp/>expensive</highlight></codeline>
<codeline lineno="1079"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(it<sp/>must<sp/>take<sp/>into<sp/>account<sp/>that<sp/>memory<sp/>may<sp/>not<sp/>be<sp/>consecutive<sp/>for<sp/>subarrays</highlight></codeline>
<codeline lineno="1080"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and/or<sp/>strided<sp/>arrays).<sp/>Always<sp/>prefer<sp/>operator()<sp/>if<sp/>possible.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1081"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082" refid="classvigra_1_1MultiArrayView_1a994b70e9a282ffd06e7fc7df7308e4c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>reference<sp/><ref refid="classvigra_1_1MultiArrayView_1aebc939b0cbcef6234def78f6fcb50bf2" kindref="member">operator[]</ref>(difference_type_1<sp/>d)</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VIGRA_ASSERT_INSIDE(<ref refid="classvigra_1_1MultiArrayView_1aa2a1a7741de3368ab949dff7b574680c" kindref="member">scanOrderIndexToCoordinate</ref>(d));</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr<sp/>[detail::ScanOrderToOffset&lt;actual_dimension&gt;::exec(d,<sp/>m_shape,<sp/>m_stride)];</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1088"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Array<sp/>access<sp/>in<sp/>scan-order<sp/>sense.</highlight></codeline>
<codeline lineno="1089"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mostly<sp/>useful<sp/>to<sp/>support<sp/>standard<sp/>indexing<sp/>for<sp/>1-dimensional<sp/>multi-arrays,</highlight></codeline>
<codeline lineno="1090"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>but<sp/>works<sp/>for<sp/>any<sp/>N.<sp/>Use<sp/>scanOrderIndexToCoordinate()<sp/>and</highlight></codeline>
<codeline lineno="1091"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coordinateToScanOrderIndex()<sp/>for<sp/>conversion<sp/>between<sp/>indices<sp/>and<sp/>coordinates.</highlight></codeline>
<codeline lineno="1092"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1093"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;Note:&lt;/b&gt;<sp/>This<sp/>function<sp/>should<sp/>not<sp/>be<sp/>used<sp/>in<sp/>the<sp/>inner<sp/>loop,<sp/>because<sp/>the</highlight></codeline>
<codeline lineno="1094"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conversion<sp/>of<sp/>the<sp/>scan<sp/>order<sp/>index<sp/>into<sp/>a<sp/>memory<sp/>address<sp/>is<sp/>expensive</highlight></codeline>
<codeline lineno="1095"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(it<sp/>must<sp/>take<sp/>into<sp/>account<sp/>that<sp/>memory<sp/>may<sp/>not<sp/>be<sp/>consecutive<sp/>for<sp/>subarrays</highlight></codeline>
<codeline lineno="1096"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and/or<sp/>strided<sp/>arrays).<sp/>Always<sp/>prefer<sp/>operator()<sp/>if<sp/>possible.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1097"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098" refid="classvigra_1_1MultiArrayView_1a7ec14f3bf1d4cdfc41d8630176a82a07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>const_reference<sp/><ref refid="classvigra_1_1MultiArrayView_1aebc939b0cbcef6234def78f6fcb50bf2" kindref="member">operator[]</ref>(difference_type_1<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1099"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VIGRA_ASSERT_INSIDE(<ref refid="classvigra_1_1MultiArrayView_1aa2a1a7741de3368ab949dff7b574680c" kindref="member">scanOrderIndexToCoordinate</ref>(d));</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr<sp/>[detail::ScanOrderToOffset&lt;actual_dimension&gt;::exec(d,<sp/>m_shape,<sp/>m_stride)];</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>convert<sp/>scan-order<sp/>index<sp/>to<sp/>coordinate.</highlight></codeline>
<codeline lineno="1105"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106" refid="classvigra_1_1MultiArrayView_1aa2a1a7741de3368ab949dff7b574680c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>difference_type<sp/><ref refid="classvigra_1_1MultiArrayView_1aa2a1a7741de3368ab949dff7b574680c" kindref="member">scanOrderIndexToCoordinate</ref>(difference_type_1<sp/>d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1107"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>difference_type<sp/>result;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::ScanOrderToCoordinate&lt;actual_dimension&gt;::exec(d,<sp/>m_shape,<sp/>result);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1113"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>convert<sp/>coordinate<sp/>to<sp/>scan-order<sp/>index.</highlight></codeline>
<codeline lineno="1114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115" refid="classvigra_1_1MultiArrayView_1a55d0184c5fbde73165533111441bb8ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>difference_type_1<sp/><ref refid="classvigra_1_1MultiArrayView_1a55d0184c5fbde73165533111441bb8ff" kindref="member">coordinateToScanOrderIndex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>difference_type<sp/>&amp;d)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1116"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::CoordinateToScanOrder&lt;actual_dimension&gt;::exec(m_shape,<sp/>d);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1120"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>1D<sp/>array<sp/>access.<sp/>Use<sp/>only<sp/>if<sp/>N<sp/>==<sp/>1.</highlight></codeline>
<codeline lineno="1121"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122" refid="classvigra_1_1MultiArrayView_1a902647635a189183308cb1fa8457f54a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>reference<sp/><ref refid="classvigra_1_1MultiArrayView_1a902647635a189183308cb1fa8457f54a" kindref="member">operator() </ref>(difference_type_1<sp/>x)</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VIGRA_ASSERT_INSIDE(<ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref>(x));</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr<sp/>[detail::CoordinatesToOffest&lt;StrideTag&gt;::exec(m_stride,<sp/>x)];</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1128"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>2D<sp/>array<sp/>access.<sp/>Use<sp/>only<sp/>if<sp/>N<sp/>==<sp/>2.</highlight></codeline>
<codeline lineno="1129"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1130" refid="classvigra_1_1MultiArrayView_1a3fe9a64fd6323465b3bf17ef76de53b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>reference<sp/><ref refid="classvigra_1_1MultiArrayView_1a902647635a189183308cb1fa8457f54a" kindref="member">operator() </ref>(difference_type_1<sp/>x,<sp/>difference_type_1<sp/>y)</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VIGRA_ASSERT_INSIDE(<ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref>(x,<sp/>y));</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr<sp/>[detail::CoordinatesToOffest&lt;StrideTag&gt;::exec(m_stride,<sp/>x,<sp/>y)];</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1136"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>3D<sp/>array<sp/>access.<sp/>Use<sp/>only<sp/>if<sp/>N<sp/>==<sp/>3.</highlight></codeline>
<codeline lineno="1137"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138" refid="classvigra_1_1MultiArrayView_1a95f6b94c53d6aa8ba4a9c4671a9daa65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>reference<sp/><ref refid="classvigra_1_1MultiArrayView_1a902647635a189183308cb1fa8457f54a" kindref="member">operator() </ref>(difference_type_1<sp/>x,<sp/>difference_type_1<sp/>y,<sp/>difference_type_1<sp/>z)</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VIGRA_ASSERT_INSIDE(<ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref>(x,<sp/>y,<sp/>z));</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr<sp/>[m_stride[0]*x<sp/>+<sp/>m_stride[1]*y<sp/>+<sp/>m_stride[2]*z];</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1144"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>4D<sp/>array<sp/>access.<sp/>Use<sp/>only<sp/>if<sp/>N<sp/>==<sp/>4.</highlight></codeline>
<codeline lineno="1145"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146" refid="classvigra_1_1MultiArrayView_1af2c5eb62f1650fb7a3735990346478ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>reference<sp/><ref refid="classvigra_1_1MultiArrayView_1a902647635a189183308cb1fa8457f54a" kindref="member">operator() </ref>(difference_type_1<sp/>x,<sp/>difference_type_1<sp/>y,</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>difference_type_1<sp/>z,<sp/>difference_type_1<sp/>u)</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VIGRA_ASSERT_INSIDE(<ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref>(x,<sp/>y,<sp/>z,<sp/>u));</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr<sp/>[m_stride[0]*x<sp/>+<sp/>m_stride[1]*y<sp/>+<sp/>m_stride[2]*z<sp/>+<sp/>m_stride[3]*u];</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1153"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>5D<sp/>array<sp/>access.<sp/>Use<sp/>only<sp/>if<sp/>N<sp/>==<sp/>5.</highlight></codeline>
<codeline lineno="1154"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1155" refid="classvigra_1_1MultiArrayView_1a05f95d6148a375885a7be85819dcbc02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>reference<sp/><ref refid="classvigra_1_1MultiArrayView_1a902647635a189183308cb1fa8457f54a" kindref="member">operator() </ref>(difference_type_1<sp/>x,<sp/>difference_type_1<sp/>y,<sp/>difference_type_1<sp/>z,</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>difference_type_1<sp/>u,<sp/>difference_type_1<sp/>v)</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VIGRA_ASSERT_INSIDE(<ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref>(x,<sp/>y,z,<sp/>u,v));</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr<sp/>[m_stride[0]*x<sp/>+<sp/>m_stride[1]*y<sp/>+<sp/>m_stride[2]*z<sp/>+<sp/>m_stride[3]*u<sp/>+<sp/>m_stride[4]*v];</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1162"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>1D<sp/>const<sp/>array<sp/>access.<sp/>Use<sp/>only<sp/>if<sp/>N<sp/>==<sp/>1.</highlight></codeline>
<codeline lineno="1163"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164" refid="classvigra_1_1MultiArrayView_1a2fa26a6082ac991137129dcbc4257ae0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>const_reference<sp/><ref refid="classvigra_1_1MultiArrayView_1a902647635a189183308cb1fa8457f54a" kindref="member">operator() </ref>(difference_type_1<sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1165"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VIGRA_ASSERT_INSIDE(<ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref>(x));</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr<sp/>[detail::CoordinatesToOffest&lt;StrideTag&gt;::exec(m_stride,<sp/>x)];</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>2D<sp/>const<sp/>array<sp/>access.<sp/>Use<sp/>only<sp/>if<sp/>N<sp/>==<sp/>2.</highlight></codeline>
<codeline lineno="1171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172" refid="classvigra_1_1MultiArrayView_1a5fbf52c1c9127b0e97f2cd1c263f9c5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>const_reference<sp/><ref refid="classvigra_1_1MultiArrayView_1a902647635a189183308cb1fa8457f54a" kindref="member">operator() </ref>(difference_type_1<sp/>x,<sp/>difference_type_1<sp/>y)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1173"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VIGRA_ASSERT_INSIDE(<ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref>(x,<sp/>y));</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr<sp/>[detail::CoordinatesToOffest&lt;StrideTag&gt;::exec(m_stride,<sp/>x,<sp/>y)];</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1178"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>3D<sp/>const<sp/>array<sp/>access.<sp/>Use<sp/>only<sp/>if<sp/>N<sp/>==<sp/>3.</highlight></codeline>
<codeline lineno="1179"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180" refid="classvigra_1_1MultiArrayView_1ad157dd636e184ad7a235158bab39c5d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>const_reference<sp/><ref refid="classvigra_1_1MultiArrayView_1a902647635a189183308cb1fa8457f54a" kindref="member">operator() </ref>(difference_type_1<sp/>x,<sp/>difference_type_1<sp/>y,<sp/>difference_type_1<sp/>z)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1181"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VIGRA_ASSERT_INSIDE(<ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref>(x,y,z));</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr<sp/>[m_stride[0]*x<sp/>+<sp/>m_stride[1]*y<sp/>+<sp/>m_stride[2]*z];</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1186"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>4D<sp/>const<sp/>array<sp/>access.<sp/>Use<sp/>only<sp/>if<sp/>N<sp/>==<sp/>4.</highlight></codeline>
<codeline lineno="1187"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1188" refid="classvigra_1_1MultiArrayView_1abcbc55ed1f30019f85a6f25bf376ef2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>const_reference<sp/><ref refid="classvigra_1_1MultiArrayView_1a902647635a189183308cb1fa8457f54a" kindref="member">operator() </ref>(difference_type_1<sp/>x,<sp/>difference_type_1<sp/>y,</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>difference_type_1<sp/>z,<sp/>difference_type_1<sp/>u)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1190"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VIGRA_ASSERT_INSIDE(<ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref>(x,y,z,u));</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr<sp/>[m_stride[0]*x<sp/>+<sp/>m_stride[1]*y<sp/>+<sp/>m_stride[2]*z<sp/>+<sp/>m_stride[3]*u];</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1195"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>5D<sp/>const<sp/>array<sp/>access.<sp/>Use<sp/>only<sp/>if<sp/>N<sp/>==<sp/>5.</highlight></codeline>
<codeline lineno="1196"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1197" refid="classvigra_1_1MultiArrayView_1a7792042817681cc6d8f5674b168419c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>const_reference<sp/><ref refid="classvigra_1_1MultiArrayView_1a902647635a189183308cb1fa8457f54a" kindref="member">operator() </ref>(difference_type_1<sp/>x,<sp/>difference_type_1<sp/>y,<sp/>difference_type_1<sp/>z,</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>difference_type_1<sp/>u,<sp/>difference_type_1<sp/>v)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1199"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VIGRA_ASSERT_INSIDE(<ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref>(x,y,z,u,v));</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr<sp/>[m_stride[0]*x<sp/>+<sp/>m_stride[1]*y<sp/>+<sp/>m_stride[2]*z<sp/>+<sp/>m_stride[3]*u<sp/>+<sp/>m_stride[4]*v];</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1204"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Init<sp/>with<sp/>a<sp/>constant.</highlight></codeline>
<codeline lineno="1205"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="1207" refid="classvigra_1_1MultiArrayView_1ae8d75c08347781b9854c8aea98c34610" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiArrayView_1ae8d75c08347781b9854c8aea98c34610" kindref="member">init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U<sp/>&amp;<sp/>init)</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::copyScalarMultiArrayData(<ref refid="classvigra_1_1MultiArrayView_1a6da88764aadffdf26736523ba73a53b2" kindref="member">traverser_begin</ref>(),<sp/><ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(),<sp/>init,<sp/>MetaInt&lt;actual_dimension-1&gt;());</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1214"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Copy<sp/>the<sp/>data<sp/>of<sp/>the<sp/>right-hand<sp/>array<sp/>(array<sp/>shapes<sp/>must<sp/>match).</highlight></codeline>
<codeline lineno="1215"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1216" refid="classvigra_1_1MultiArrayView_1a93b4cd51930b5c3f49081829c06a10da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a93b4cd51930b5c3f49081829c06a10da" kindref="member">copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>&amp;rhs)</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;copyImpl(rhs);</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1223"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Copy<sp/>the<sp/>data<sp/>of<sp/>the<sp/>right-hand<sp/>array<sp/>(array<sp/>shapes<sp/>must<sp/>match).</highlight></codeline>
<codeline lineno="1224"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CN&gt;</highlight></codeline>
<codeline lineno="1226" refid="classvigra_1_1MultiArrayView_1a93cc8e36bc3893691f7c34f6f2b742ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a93b4cd51930b5c3f49081829c06a10da" kindref="member">copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, U, CN&gt;</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;copyImpl(rhs);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1231"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>swap<sp/>the<sp/>data<sp/>between<sp/>two<sp/>MultiArrayView<sp/>objects.</highlight></codeline>
<codeline lineno="1232"><highlight class="comment"></highlight></codeline>
<codeline lineno="1233"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>shapes<sp/>of<sp/>the<sp/>two<sp/>array<sp/>must<sp/>match.</highlight></codeline>
<codeline lineno="1234"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235" refid="classvigra_1_1MultiArrayView_1a1d0311cdc0759be49f6e54595b88c5c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a1d0311cdc0759be49f6e54595b88c5c5" kindref="member">swapData</ref>(<ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>rhs)</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;rhs)</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swapDataImpl(rhs);</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1241"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>swap<sp/>the<sp/>data<sp/>between<sp/>two<sp/>MultiArrayView<sp/>objects.</highlight></codeline>
<codeline lineno="1242"><highlight class="comment"></highlight></codeline>
<codeline lineno="1243"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>shapes<sp/>of<sp/>the<sp/>two<sp/>array<sp/>must<sp/>match.</highlight></codeline>
<codeline lineno="1244"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C2&gt;</highlight></codeline>
<codeline lineno="1246" refid="classvigra_1_1MultiArrayView_1a37c3d67af76aa3ab3c6ceecd01efe841" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a1d0311cdc0759be49f6e54595b88c5c5" kindref="member">swapData</ref>(<ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, T2, C2&gt;</ref><sp/>rhs)</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swapDataImpl(rhs);</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1251"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>check<sp/>whether<sp/>the<sp/>array<sp/>is<sp/>unstrided<sp/>(i.e.<sp/>has<sp/>consecutive<sp/>memory)<sp/>up<sp/></highlight></codeline>
<codeline lineno="1252"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>the<sp/>given<sp/>dimension.</highlight></codeline>
<codeline lineno="1253"><highlight class="comment"></highlight></codeline>
<codeline lineno="1254"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\a<sp/>dimension<sp/>can<sp/>range<sp/>from<sp/>0<sp/>...<sp/>N-1.<sp/>If<sp/>a<sp/>certain<sp/>dimension<sp/>is<sp/>unstrided,<sp/></highlight></codeline>
<codeline lineno="1255"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all<sp/>lower<sp/>dimensions<sp/>are<sp/>also<sp/>unstrided.</highlight></codeline>
<codeline lineno="1256"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257" refid="classvigra_1_1MultiArrayView_1a3e1a9e07d9bc055f20a1b216370afd2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a3e1a9e07d9bc055f20a1b216370afd2f" kindref="member">isUnstrided</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dimension<sp/>=<sp/>N-1)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1258"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>difference_type<sp/>p<sp/>=<sp/><ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>()<sp/>-<sp/><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref>(1);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>dimension+1;<sp/>k<sp/>&lt;<sp/>N;<sp/>++k)</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[k]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(&amp;</highlight><highlight class="keyword">operator</highlight><highlight class="normal">[](p)<sp/>-<sp/>m_ptr)<sp/>==<sp/><ref refid="classvigra_1_1MultiArrayView_1a55d0184c5fbde73165533111441bb8ff" kindref="member">coordinateToScanOrderIndex</ref>(p);</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1265"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>bind<sp/>the<sp/>M<sp/>outmost<sp/>dimensions<sp/>to<sp/>certain<sp/>indices.</highlight></codeline>
<codeline lineno="1266"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>reduces<sp/>the<sp/>dimensionality<sp/>of<sp/>the<sp/>image<sp/>to</highlight></codeline>
<codeline lineno="1267"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>{<sp/>1,<sp/>N-M<sp/>}.</highlight></codeline>
<codeline lineno="1268"><highlight class="comment"></highlight></codeline>
<codeline lineno="1269"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1270"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1271"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>create<sp/>a<sp/>3D<sp/>array<sp/>of<sp/>size<sp/>40x30x20</highlight></codeline>
<codeline lineno="1272"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>MultiArray&lt;3,<sp/>double&gt;::difference_type<sp/>Shape;</highlight></codeline>
<codeline lineno="1273"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArray&lt;3,<sp/>double&gt;<sp/>array3(Shape(40,<sp/>30,<sp/>20));</highlight></codeline>
<codeline lineno="1274"><highlight class="comment"></highlight></codeline>
<codeline lineno="1275"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>get<sp/>a<sp/>1D<sp/>array<sp/>by<sp/>fixing<sp/>index<sp/>1<sp/>to<sp/>12,<sp/>and<sp/>index<sp/>2<sp/>to<sp/>10</highlight></codeline>
<codeline lineno="1276"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView<sp/>&lt;1,<sp/>double&gt;<sp/>array1<sp/>=<sp/>array3.bindOuter(TinyVector&lt;MultiArrayIndex,<sp/>2&gt;(12,<sp/>10));</highlight></codeline>
<codeline lineno="1277"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1278"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M&gt;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&lt;N-M,<sp/>T,<sp/>StrideTag&gt;<sp/><ref refid="classvigra_1_1MultiArrayView_1acaca6e5790fa86120c4df40c3385d324" kindref="member">bindOuter</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector &lt;MultiArrayIndex, M&gt;</ref><sp/>&amp;d)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1282"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>bind<sp/>the<sp/>M<sp/>innermost<sp/>dimensions<sp/>to<sp/>certain<sp/>indices.</highlight></codeline>
<codeline lineno="1283"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>reduces<sp/>the<sp/>dimensionality<sp/>of<sp/>the<sp/>image<sp/>to</highlight></codeline>
<codeline lineno="1284"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>{<sp/>1,<sp/>N-M<sp/>}.</highlight></codeline>
<codeline lineno="1285"><highlight class="comment"></highlight></codeline>
<codeline lineno="1286"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1287"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1288"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>create<sp/>a<sp/>3D<sp/>array<sp/>of<sp/>size<sp/>40x30x20</highlight></codeline>
<codeline lineno="1289"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>MultiArray&lt;3,<sp/>double&gt;::difference_type<sp/>Shape;</highlight></codeline>
<codeline lineno="1290"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArray&lt;3,<sp/>double&gt;<sp/>array3(Shape(40,<sp/>30,<sp/>20));</highlight></codeline>
<codeline lineno="1291"><highlight class="comment"></highlight></codeline>
<codeline lineno="1292"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>get<sp/>a<sp/>1D<sp/>array<sp/>by<sp/>fixing<sp/>index<sp/>0<sp/>to<sp/>12,<sp/>and<sp/>index<sp/>1<sp/>to<sp/>10</highlight></codeline>
<codeline lineno="1293"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView<sp/>&lt;1,<sp/>double,<sp/>StridedArrayTag&gt;<sp/>array1<sp/>=<sp/>array3.bindInner(TinyVector&lt;MultiArrayIndex,<sp/>2&gt;(12,<sp/>10));</highlight></codeline>
<codeline lineno="1294"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1295"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M&gt;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&lt;N-M,<sp/>T,<sp/><ref refid="structvigra_1_1StridedArrayTag" kindref="compound">StridedArrayTag</ref>&gt;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a262f8f52cd526b497522b444a53aeb1c" kindref="member">bindInner</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector &lt;MultiArrayIndex, M&gt;</ref><sp/>&amp;d)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1300"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>bind<sp/>dimension<sp/>M<sp/>to<sp/>index<sp/>d.</highlight></codeline>
<codeline lineno="1301"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>reduces<sp/>the<sp/>dimensionality<sp/>of<sp/>the<sp/>image<sp/>to</highlight></codeline>
<codeline lineno="1302"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>{<sp/>1,<sp/>N-1<sp/>}.</highlight></codeline>
<codeline lineno="1303"><highlight class="comment"></highlight></codeline>
<codeline lineno="1304"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1305"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1306"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>create<sp/>a<sp/>3D<sp/>array<sp/>of<sp/>size<sp/>40x30x20</highlight></codeline>
<codeline lineno="1307"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>MultiArray&lt;3,<sp/>double&gt;::difference_type<sp/>Shape;</highlight></codeline>
<codeline lineno="1308"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArray&lt;3,<sp/>double&gt;<sp/>array3(Shape(40,<sp/>30,<sp/>20));</highlight></codeline>
<codeline lineno="1309"><highlight class="comment"></highlight></codeline>
<codeline lineno="1310"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>get<sp/>a<sp/>2D<sp/>array<sp/>by<sp/>fixing<sp/>index<sp/>1<sp/>to<sp/>12</highlight></codeline>
<codeline lineno="1311"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView<sp/>&lt;2,<sp/>double&gt;<sp/>array2<sp/>=<sp/>array3.bind&lt;1&gt;(12);</highlight></codeline>
<codeline lineno="1312"><highlight class="comment"></highlight></codeline>
<codeline lineno="1313"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>get<sp/>a<sp/>2D<sp/>array<sp/>by<sp/>fixing<sp/>index<sp/>0<sp/>to<sp/>23</highlight></codeline>
<codeline lineno="1314"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView<sp/>&lt;2,<sp/>double,<sp/>StridedArrayTag&gt;<sp/>array2a<sp/>=<sp/>array3.bind&lt;0&gt;(23);</highlight></codeline>
<codeline lineno="1315"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1316"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M&gt;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&lt;N-1,<sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vigra::detail::MaybeStrided&lt;StrideTag,<sp/>M&gt;::type<sp/>&gt;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a5620a71abd33556ab702350b31b123da" kindref="member">bind</ref><sp/>(difference_type_1<sp/>d)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1321"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>bind<sp/>the<sp/>outmost<sp/>dimension<sp/>to<sp/>a<sp/>certain<sp/>index.</highlight></codeline>
<codeline lineno="1322"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>reduces<sp/>the<sp/>dimensionality<sp/>of<sp/>the<sp/>image<sp/>to</highlight></codeline>
<codeline lineno="1323"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>{<sp/>1,<sp/>N-1<sp/>}.</highlight></codeline>
<codeline lineno="1324"><highlight class="comment"></highlight></codeline>
<codeline lineno="1325"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1326"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1327"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>create<sp/>a<sp/>3D<sp/>array<sp/>of<sp/>size<sp/>40x30x20</highlight></codeline>
<codeline lineno="1328"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>MultiArray&lt;3,<sp/>double&gt;::difference_type<sp/>Shape;</highlight></codeline>
<codeline lineno="1329"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArray&lt;3,<sp/>double&gt;<sp/>array3(Shape(40,<sp/>30,<sp/>20));</highlight></codeline>
<codeline lineno="1330"><highlight class="comment"></highlight></codeline>
<codeline lineno="1331"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>get<sp/>a<sp/>2D<sp/>array<sp/>by<sp/>fixing<sp/>the<sp/>outermost<sp/>index<sp/>(i.e.<sp/>index<sp/>2)<sp/>to<sp/>12</highlight></codeline>
<codeline lineno="1332"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView<sp/>&lt;2,<sp/>double&gt;<sp/>array2<sp/>=<sp/>array3.bindOuter(12);</highlight></codeline>
<codeline lineno="1333"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1334"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&lt;N-1,<sp/>T,<sp/>StrideTag&gt;<sp/><ref refid="classvigra_1_1MultiArrayView_1acaca6e5790fa86120c4df40c3385d324" kindref="member">bindOuter</ref><sp/>(difference_type_1<sp/>d)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1337"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>bind<sp/>the<sp/>innermost<sp/>dimension<sp/>to<sp/>a<sp/>certain<sp/>index.</highlight></codeline>
<codeline lineno="1338"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>reduces<sp/>the<sp/>dimensionality<sp/>of<sp/>the<sp/>image<sp/>to</highlight></codeline>
<codeline lineno="1339"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>{<sp/>1,<sp/>N-1<sp/>}.</highlight></codeline>
<codeline lineno="1340"><highlight class="comment"></highlight></codeline>
<codeline lineno="1341"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1342"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1343"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>create<sp/>a<sp/>3D<sp/>array<sp/>of<sp/>size<sp/>40x30x20</highlight></codeline>
<codeline lineno="1344"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>MultiArray&lt;3,<sp/>double&gt;::difference_type<sp/>Shape;</highlight></codeline>
<codeline lineno="1345"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArray&lt;3,<sp/>double&gt;<sp/>array3(Shape(40,<sp/>30,<sp/>20));</highlight></codeline>
<codeline lineno="1346"><highlight class="comment"></highlight></codeline>
<codeline lineno="1347"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>get<sp/>a<sp/>2D<sp/>array<sp/>by<sp/>fixing<sp/>the<sp/>innermost<sp/>index<sp/>(i.e.<sp/>index<sp/>0)<sp/>to<sp/>23</highlight></codeline>
<codeline lineno="1348"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView<sp/>&lt;2,<sp/>double,<sp/>StridedArrayTag&gt;<sp/>array2<sp/>=<sp/>array3.bindInner(23);</highlight></codeline>
<codeline lineno="1349"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1350"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&lt;N-1,<sp/>T,<sp/><ref refid="structvigra_1_1StridedArrayTag" kindref="compound">StridedArrayTag</ref>&gt;<sp/><ref refid="classvigra_1_1MultiArrayView_1a262f8f52cd526b497522b444a53aeb1c" kindref="member">bindInner</ref><sp/>(difference_type_1<sp/>d)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1353"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>bind<sp/>dimension<sp/>m<sp/>to<sp/>index<sp/>d.</highlight></codeline>
<codeline lineno="1354"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>reduces<sp/>the<sp/>dimensionality<sp/>of<sp/>the<sp/>image<sp/>to</highlight></codeline>
<codeline lineno="1355"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>{<sp/>1,<sp/>N-1<sp/>}.</highlight></codeline>
<codeline lineno="1356"><highlight class="comment"></highlight></codeline>
<codeline lineno="1357"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1358"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1359"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>create<sp/>a<sp/>3D<sp/>array<sp/>of<sp/>size<sp/>40x30x20</highlight></codeline>
<codeline lineno="1360"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>MultiArray&lt;3,<sp/>double&gt;::difference_type<sp/>Shape;</highlight></codeline>
<codeline lineno="1361"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArray&lt;3,<sp/>double&gt;<sp/>array3(Shape(40,<sp/>30,<sp/>20));</highlight></codeline>
<codeline lineno="1362"><highlight class="comment"></highlight></codeline>
<codeline lineno="1363"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>get<sp/>a<sp/>2D<sp/>array<sp/>by<sp/>fixing<sp/>index<sp/>2<sp/>to<sp/>15</highlight></codeline>
<codeline lineno="1364"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView<sp/>&lt;2,<sp/>double,<sp/>StridedArrayTag&gt;<sp/>array2<sp/>=<sp/>array3.bindAt(2,<sp/>15);</highlight></codeline>
<codeline lineno="1365"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1366"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&lt;N-1,<sp/>T,<sp/><ref refid="structvigra_1_1StridedArrayTag" kindref="compound">StridedArrayTag</ref>&gt;</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a1e24fcdbd0c298cbbb07fe21368d5abc" kindref="member">bindAt</ref><sp/>(difference_type_1<sp/>m,<sp/>difference_type_1<sp/>d)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1371"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Create<sp/>a<sp/>view<sp/>to<sp/>channel<sp/>&apos;i&apos;<sp/>of<sp/>a<sp/>vector-like<sp/>value<sp/>type.<sp/>Possible<sp/>value<sp/>types</highlight></codeline>
<codeline lineno="1372"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(of<sp/>the<sp/>original<sp/>array)<sp/>are:<sp/>\ref<sp/>TinyVector,<sp/>\ref<sp/>RGBValue,<sp/>\ref<sp/>FFTWComplex,<sp/></highlight></codeline>
<codeline lineno="1373"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>&lt;tt&gt;std::complex&lt;/tt&gt;.<sp/>The<sp/>list<sp/>can<sp/>be<sp/>extended<sp/>to<sp/>any<sp/>type<sp/>whose<sp/>memory</highlight></codeline>
<codeline lineno="1374"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout<sp/>is<sp/>equivalent<sp/>to<sp/>a<sp/>fixed-size<sp/>C<sp/>array,<sp/>by<sp/>specializing<sp/></highlight></codeline>
<codeline lineno="1375"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;ExpandElementResult&lt;/tt&gt;.</highlight></codeline>
<codeline lineno="1376"><highlight class="comment"></highlight></codeline>
<codeline lineno="1377"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1378"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1379"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArray&lt;2,<sp/>RGBValue&lt;float&gt;<sp/>&gt;<sp/>rgb_image(Shape2(w,<sp/>h));</highlight></codeline>
<codeline lineno="1380"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1381"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,<sp/>float,<sp/>StridedArrayTag&gt;<sp/>red<sp/><sp/><sp/>=<sp/>rgb_image.bindElementChannel(0);</highlight></codeline>
<codeline lineno="1382"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,<sp/>float,<sp/>StridedArrayTag&gt;<sp/>green<sp/>=<sp/>rgb_image.bindElementChannel(1);</highlight></codeline>
<codeline lineno="1383"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,<sp/>float,<sp/>StridedArrayTag&gt;<sp/>blue<sp/><sp/>=<sp/>rgb_image.bindElementChannel(2);</highlight></codeline>
<codeline lineno="1384"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1385"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, typename ExpandElementResult&lt;T&gt;::type</ref>,<sp/><ref refid="structvigra_1_1StridedArrayTag" kindref="compound">StridedArrayTag</ref>&gt;<sp/></highlight></codeline>
<codeline lineno="1387" refid="classvigra_1_1MultiArrayView_1a59031884a541eed08347b5b626ba5613" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a59031884a541eed08347b5b626ba5613" kindref="member">bindElementChannel</ref>(difference_type_1<sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1388"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra_precondition(0<sp/>&lt;=<sp/>i<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>ExpandElementResult&lt;T&gt;::size,</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MultiArrayView::bindElementChannel(i):<sp/>&apos;i&apos;<sp/>out<sp/>of<sp/>range.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1ab005801d6e252c3ae75ce9da36d1a600" kindref="member">expandElements</ref>(0).bindInner(i);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1394"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Create<sp/>a<sp/>view<sp/>where<sp/>a<sp/>vector-like<sp/>element<sp/>type<sp/>is<sp/>expanded<sp/>into<sp/>a<sp/>new<sp/></highlight></codeline>
<codeline lineno="1395"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array<sp/>dimension.<sp/>The<sp/>new<sp/>dimension<sp/>is<sp/>inserted<sp/>at<sp/>index<sp/>position<sp/>&apos;d&apos;,</highlight></codeline>
<codeline lineno="1396"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>which<sp/>must<sp/>be<sp/>between<sp/>0<sp/>and<sp/>N<sp/>inclusive.</highlight></codeline>
<codeline lineno="1397"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1398"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Possible<sp/>value<sp/>types<sp/>of<sp/>the<sp/>original<sp/>array<sp/>are:<sp/>\ref<sp/>TinyVector,<sp/>\ref<sp/>RGBValue,<sp/></highlight></codeline>
<codeline lineno="1399"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\ref<sp/>FFTWComplex,<sp/>&lt;tt&gt;std::complex&lt;/tt&gt;,<sp/>and<sp/>the<sp/>built-in<sp/>number<sp/>types<sp/>(in<sp/>this<sp/></highlight></codeline>
<codeline lineno="1400"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case,<sp/>&lt;tt&gt;expandElements&lt;/tt&gt;<sp/>is<sp/>equivalent<sp/>to<sp/>&lt;tt&gt;insertSingletonDimension&lt;/tt&gt;).<sp/></highlight></codeline>
<codeline lineno="1401"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>list<sp/>of<sp/>supported<sp/>types<sp/>can<sp/>be<sp/>extended<sp/>to<sp/>any<sp/>type<sp/>whose<sp/>memory</highlight></codeline>
<codeline lineno="1402"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layout<sp/>is<sp/>equivalent<sp/>to<sp/>a<sp/>fixed-size<sp/>C<sp/>array,<sp/>by<sp/>specializing<sp/></highlight></codeline>
<codeline lineno="1403"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;ExpandElementResult&lt;/tt&gt;.</highlight></codeline>
<codeline lineno="1404"><highlight class="comment"></highlight></codeline>
<codeline lineno="1405"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1406"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1407"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArray&lt;2,<sp/>RGBValue&lt;float&gt;<sp/>&gt;<sp/>rgb_image(Shape2(w,<sp/>h));</highlight></codeline>
<codeline lineno="1408"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1409"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;3,<sp/>float,<sp/>StridedArrayTag&gt;<sp/>multiband_image<sp/>=<sp/>rgb_image.expandElements(2);</highlight></codeline>
<codeline lineno="1410"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1411"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N+1, typename ExpandElementResult&lt;T&gt;::type</ref>,<sp/><ref refid="structvigra_1_1StridedArrayTag" kindref="compound">StridedArrayTag</ref>&gt;<sp/></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1ab005801d6e252c3ae75ce9da36d1a600" kindref="member">expandElements</ref>(difference_type_1<sp/>d)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1415"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Add<sp/>a<sp/>singleton<sp/>dimension<sp/>(dimension<sp/>of<sp/>length<sp/>1).</highlight></codeline>
<codeline lineno="1416"><highlight class="comment"></highlight></codeline>
<codeline lineno="1417"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Singleton<sp/>dimensions<sp/>don&apos;t<sp/>change<sp/>the<sp/>size<sp/>of<sp/>the<sp/>data,<sp/>but<sp/>introduce</highlight></codeline>
<codeline lineno="1418"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>new<sp/>index<sp/>that<sp/>can<sp/>only<sp/>take<sp/>the<sp/>value<sp/>0.<sp/>This<sp/>is<sp/>mainly<sp/>useful<sp/>for</highlight></codeline>
<codeline lineno="1419"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>&apos;reduce<sp/>mode&apos;<sp/>of<sp/>transformMultiArray()<sp/>and<sp/>combineTwoMultiArrays(),</highlight></codeline>
<codeline lineno="1420"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>because<sp/>these<sp/>functions<sp/>require<sp/>the<sp/>source<sp/>and<sp/>destination<sp/>arrays<sp/>to</highlight></codeline>
<codeline lineno="1421"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>have<sp/>the<sp/>same<sp/>number<sp/>of<sp/>dimensions.</highlight></codeline>
<codeline lineno="1422"><highlight class="comment"></highlight></codeline>
<codeline lineno="1423"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>range<sp/>of<sp/>\a<sp/>i<sp/>must<sp/>be<sp/>&lt;tt&gt;0<sp/>&lt;=<sp/>i<sp/>&lt;=<sp/>N&lt;/tt&gt;.<sp/>The<sp/>new<sp/>dimension<sp/>will<sp/>become</highlight></codeline>
<codeline lineno="1424"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>i&apos;th<sp/>index,<sp/>and<sp/>the<sp/>old<sp/>indices<sp/>from<sp/>i<sp/>upwards<sp/>will<sp/>shift<sp/>one</highlight></codeline>
<codeline lineno="1425"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>place<sp/>to<sp/>the<sp/>right.</highlight></codeline>
<codeline lineno="1426"><highlight class="comment"></highlight></codeline>
<codeline lineno="1427"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1428"><highlight class="comment"></highlight></codeline>
<codeline lineno="1429"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Suppose<sp/>we<sp/>want<sp/>have<sp/>a<sp/>2D<sp/>array<sp/>and<sp/>want<sp/>to<sp/>create<sp/>a<sp/>1D<sp/>array<sp/>that<sp/>contains</highlight></codeline>
<codeline lineno="1430"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>row<sp/>average<sp/>of<sp/>the<sp/>first<sp/>array.</highlight></codeline>
<codeline lineno="1431"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1432"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>MultiArrayShape&lt;2&gt;::type<sp/>Shape2;</highlight></codeline>
<codeline lineno="1433"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArray&lt;2,<sp/>double&gt;<sp/>original(Shape2(40,<sp/>30));</highlight></codeline>
<codeline lineno="1434"><highlight class="comment"></highlight></codeline>
<codeline lineno="1435"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>MultiArrayShape&lt;1&gt;::type<sp/>Shape1;</highlight></codeline>
<codeline lineno="1436"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArray&lt;1,<sp/>double&gt;<sp/>rowAverages(Shape1(30));</highlight></codeline>
<codeline lineno="1437"><highlight class="comment"></highlight></codeline>
<codeline lineno="1438"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>temporarily<sp/>add<sp/>a<sp/>singleton<sp/>dimension<sp/>to<sp/>the<sp/>destination<sp/>array</highlight></codeline>
<codeline lineno="1439"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transformMultiArray(srcMultiArrayRange(original),</highlight></codeline>
<codeline lineno="1440"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destMultiArrayRange(rowAverages.insertSingletonDimension(0)),</highlight></codeline>
<codeline lineno="1441"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FindAverage&lt;double&gt;());</highlight></codeline>
<codeline lineno="1442"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1443"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N+1, T, StrideTag&gt;</ref></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a70170072585722399abd07c46f168909" kindref="member">insertSingletonDimension</ref><sp/>(difference_type_1<sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1447"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Create<sp/>a<sp/>view<sp/>to<sp/>the<sp/>diagonal<sp/>elements<sp/>of<sp/>the<sp/>array.</highlight></codeline>
<codeline lineno="1448"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1449"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>produces<sp/>a<sp/>1D<sp/>array<sp/>view<sp/>whose<sp/>size<sp/>equals<sp/>the<sp/>size</highlight></codeline>
<codeline lineno="1450"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>shortest<sp/>dimension<sp/>of<sp/>the<sp/>original<sp/>array.</highlight></codeline>
<codeline lineno="1451"><highlight class="comment"></highlight></codeline>
<codeline lineno="1452"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1453"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1454"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>create<sp/>a<sp/>3D<sp/>array<sp/>of<sp/>size<sp/>40x30x20</highlight></codeline>
<codeline lineno="1455"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>MultiArray&lt;3,<sp/>double&gt;::difference_type<sp/>Shape;</highlight></codeline>
<codeline lineno="1456"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArray&lt;3,<sp/>double&gt;<sp/>array3(Shape(40,<sp/>30,<sp/>20));</highlight></codeline>
<codeline lineno="1457"><highlight class="comment"></highlight></codeline>
<codeline lineno="1458"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>get<sp/>a<sp/>view<sp/>to<sp/>the<sp/>diagonal<sp/>elements</highlight></codeline>
<codeline lineno="1459"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView<sp/>&lt;1,<sp/>double,<sp/>StridedArrayTag&gt;<sp/>diagonal<sp/>=<sp/>array3.diagonal();</highlight></codeline>
<codeline lineno="1460"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(diagonal.shape(0)<sp/>==<sp/>20);</highlight></codeline>
<codeline lineno="1461"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1462"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1463" refid="classvigra_1_1MultiArrayView_1a94fcd2d26ff25d3e428031416b75054d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;1, T, StridedArrayTag&gt;</ref><sp/><ref refid="classvigra_1_1MultiArrayView_1a94fcd2d26ff25d3e428031416b75054d" kindref="member">diagonal</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1464"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;1, T, StridedArrayTag&gt;</ref>(<ref refid="group__MultiIteratorGroup_1gaf6799170bf47f30c42a3f164f6ccf8ce" kindref="member" tooltip="shape type for MultiArray&amp;lt;1, T&amp;gt;">Shape1</ref>(<ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">vigra::min</ref>(m_shape)),<sp/></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MultiIteratorGroup_1gaf6799170bf47f30c42a3f164f6ccf8ce" kindref="member" tooltip="shape type for MultiArray&amp;lt;1, T&amp;gt;">Shape1</ref>(<ref refid="group__TinyVectorOperators_1ga202143b556e7388b4895f457317eb086" kindref="member" tooltip="sum of the vector&amp;#39;s elements">vigra::sum</ref>(m_stride)),<sp/><ref refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" kindref="member">m_ptr</ref>);</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1469"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>create<sp/>a<sp/>rectangular<sp/>subarray<sp/>that<sp/>spans<sp/>between<sp/>the</highlight></codeline>
<codeline lineno="1470"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>p<sp/>and<sp/>q,<sp/>where<sp/>p<sp/>is<sp/>in<sp/>the<sp/>subarray,<sp/>q<sp/>not.</highlight></codeline>
<codeline lineno="1471"><highlight class="comment"></highlight></codeline>
<codeline lineno="1472"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1473"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1474"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>create<sp/>a<sp/>3D<sp/>array<sp/>of<sp/>size<sp/>40x30x20</highlight></codeline>
<codeline lineno="1475"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>MultiArray&lt;3,<sp/>double&gt;::difference_type<sp/>Shape;</highlight></codeline>
<codeline lineno="1476"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArray&lt;3,<sp/>double&gt;<sp/>array3(Shape(40,<sp/>30,<sp/>20));</highlight></codeline>
<codeline lineno="1477"><highlight class="comment"></highlight></codeline>
<codeline lineno="1478"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>get<sp/>a<sp/>subarray<sp/>set<sp/>is<sp/>smaller<sp/>by<sp/>one<sp/>element<sp/>at<sp/>all<sp/>sides</highlight></codeline>
<codeline lineno="1479"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView<sp/>&lt;3,<sp/>double&gt;<sp/>subarray<sp/>=<sp/>array3.subarray(Shape(1,1,1),<sp/>Shape(39,<sp/>29,<sp/>19));</highlight></codeline>
<codeline lineno="1480"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1481"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1482" refid="classvigra_1_1MultiArrayView_1a2271545a765e00427cb6c59f6c4d78e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/><ref refid="classvigra_1_1MultiArrayView_1a2271545a765e00427cb6c59f6c4d78e0" kindref="member">subarray</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>difference_type<sp/>&amp;p,</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>difference_type<sp/>&amp;q)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1484"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>difference_type_1<sp/>offset<sp/>=<sp/><ref refid="group__RGBValueOperators_1gaabe9d910ba7a54cbf606254a81e409e6" kindref="member" tooltip="dot product">dot</ref><sp/>(m_stride,<sp/>p);</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1acddece61538d74dc1d7f71ea7c581e67" kindref="member">MultiArrayView</ref><sp/>(q<sp/>-<sp/>p,<sp/>m_stride,<sp/>m_ptr<sp/>+<sp/>offset);</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1489"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>apply<sp/>an<sp/>additional<sp/>striding<sp/>to<sp/>the<sp/>image,<sp/>thereby<sp/>reducing</highlight></codeline>
<codeline lineno="1490"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>shape<sp/>of<sp/>the<sp/>array.</highlight></codeline>
<codeline lineno="1491"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>example,<sp/>multiplying<sp/>the<sp/>stride<sp/>of<sp/>dimension<sp/>one<sp/>by<sp/>three</highlight></codeline>
<codeline lineno="1492"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>turns<sp/>an<sp/>appropriately<sp/>laid<sp/>out<sp/>(interleaved)<sp/>rgb<sp/>image<sp/>into</highlight></codeline>
<codeline lineno="1493"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>single<sp/>band<sp/>image.</highlight></codeline>
<codeline lineno="1494"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, T, StridedArrayTag&gt;</ref></highlight></codeline>
<codeline lineno="1496" refid="classvigra_1_1MultiArrayView_1ac5561077d69e2d8b92a62bc5206664e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1ac5561077d69e2d8b92a62bc5206664e4" kindref="member">stridearray</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>difference_type<sp/>&amp;s)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1497"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>difference_type<sp/>shape<sp/>=<sp/><ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref>;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>actual_dimension;<sp/>++i)</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape<sp/>[i]<sp/>/=<sp/>s<sp/>[i];</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, T, StridedArrayTag&gt;</ref>(<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>,<sp/>m_stride<sp/>*<sp/>s,<sp/><ref refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" kindref="member">m_ptr</ref>);</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1504"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Transpose<sp/>an<sp/>array.<sp/>If<sp/>N==2,<sp/>this<sp/>implements<sp/>the<sp/>usual<sp/>matrix<sp/>transposition.</highlight></codeline>
<codeline lineno="1505"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>N<sp/>&gt;<sp/>2,<sp/>it<sp/>reverses<sp/>the<sp/>order<sp/>of<sp/>the<sp/>indices.</highlight></codeline>
<codeline lineno="1506"><highlight class="comment"></highlight></codeline>
<codeline lineno="1507"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;Usage:&lt;/b&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="1508"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1509"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>MultiArray&lt;2,<sp/>double&gt;::difference_type<sp/>Shape;</highlight></codeline>
<codeline lineno="1510"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArray&lt;2,<sp/>double&gt;<sp/>array(10,<sp/>20);</highlight></codeline>
<codeline lineno="1511"><highlight class="comment"></highlight></codeline>
<codeline lineno="1512"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArray&lt;2,<sp/>double,<sp/>StridedArrayTag&gt;<sp/>transposed<sp/>=<sp/>array.transpose();</highlight></codeline>
<codeline lineno="1513"><highlight class="comment"></highlight></codeline>
<codeline lineno="1514"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>i=0;<sp/>i&lt;array.shape(0),<sp/>++i)</highlight></codeline>
<codeline lineno="1515"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>j=0;<sp/>j&lt;array.shape(1);<sp/>++j)</highlight></codeline>
<codeline lineno="1516"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(array(i,<sp/>j)<sp/>==<sp/>transposed(j,<sp/>i));</highlight></codeline>
<codeline lineno="1517"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1518"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, T, StridedArrayTag&gt;</ref></highlight></codeline>
<codeline lineno="1520" refid="classvigra_1_1MultiArrayView_1af54479ad2ee57be8181f50013864cc33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1af54479ad2ee57be8181f50013864cc33" kindref="member">transpose</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1521"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>difference_type<sp/><ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(m_shape.begin(),<sp/>difference_type::ReverseCopy),</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a3fee5f2594095fe1e747155d6bad57b0" kindref="member">stride</ref>(m_stride.begin(),<sp/>difference_type::ReverseCopy);</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, T, StridedArrayTag&gt;</ref>(<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>,<sp/><ref refid="classvigra_1_1MultiArrayView_1a3fee5f2594095fe1e747155d6bad57b0" kindref="member">stride</ref>,<sp/><ref refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" kindref="member">m_ptr</ref>);</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1527"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>permute<sp/>the<sp/>dimensions<sp/>of<sp/>the<sp/>array.</highlight></codeline>
<codeline lineno="1528"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>function<sp/>exchanges<sp/>the<sp/>meaning<sp/>of<sp/>the<sp/>dimensions<sp/>without<sp/>copying<sp/>the<sp/>data.</highlight></codeline>
<codeline lineno="1529"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>case<sp/>of<sp/>a<sp/>2-dimensional<sp/>array,<sp/>this<sp/>is<sp/>simply<sp/>array<sp/>transposition.<sp/>In<sp/>higher<sp/>dimensions,</highlight></codeline>
<codeline lineno="1530"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>there<sp/>are<sp/>more<sp/>possibilities.</highlight></codeline>
<codeline lineno="1531"><highlight class="comment"></highlight></codeline>
<codeline lineno="1532"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;Usage:&lt;/b&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="1533"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1534"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>MultiArray&lt;2,<sp/>double&gt;::difference_type<sp/>Shape;</highlight></codeline>
<codeline lineno="1535"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArray&lt;2,<sp/>double&gt;<sp/>array(10,<sp/>20);</highlight></codeline>
<codeline lineno="1536"><highlight class="comment"></highlight></codeline>
<codeline lineno="1537"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArray&lt;2,<sp/>double,<sp/>StridedArrayTag&gt;<sp/>transposed<sp/>=<sp/>array.permuteDimensions(Shape(1,0));</highlight></codeline>
<codeline lineno="1538"><highlight class="comment"></highlight></codeline>
<codeline lineno="1539"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>i=0;<sp/>i&lt;array.shape(0),<sp/>++i)</highlight></codeline>
<codeline lineno="1540"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>j=0;<sp/>j&lt;array.shape(1);<sp/>++j)</highlight></codeline>
<codeline lineno="1541"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(array(i,<sp/>j)<sp/>==<sp/>transposed(j,<sp/>i));</highlight></codeline>
<codeline lineno="1542"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1543"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, T, StridedArrayTag&gt;</ref></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a62a571ba62a9cc4b4f27af78b20a6d0e" kindref="member">permuteDimensions</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>difference_type<sp/>&amp;s)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1547"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Permute<sp/>the<sp/>dimensions<sp/>of<sp/>the<sp/>array<sp/>so<sp/>that<sp/>the<sp/>strides<sp/>are<sp/>in<sp/>ascending<sp/>order.</highlight></codeline>
<codeline lineno="1548"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Determines<sp/>the<sp/>appropriate<sp/>permutation<sp/>and<sp/>then<sp/>calls<sp/>permuteDimensions().</highlight></codeline>
<codeline lineno="1549"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, T, StridedArrayTag&gt;</ref></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a4f32a16f89e9ff9927a20dc3c7abee6b" kindref="member">permuteStridesAscending</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1553"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Permute<sp/>the<sp/>dimensions<sp/>of<sp/>the<sp/>array<sp/>so<sp/>that<sp/>the<sp/>strides<sp/>are<sp/>in<sp/>descending<sp/>order.</highlight></codeline>
<codeline lineno="1554"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Determines<sp/>the<sp/>appropriate<sp/>permutation<sp/>and<sp/>then<sp/>calls<sp/>permuteDimensions().</highlight></codeline>
<codeline lineno="1555"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, T, StridedArrayTag&gt;</ref></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a421ac71c17f86f900041784e3c77857a" kindref="member">permuteStridesDescending</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1559"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Compute<sp/>the<sp/>ordering<sp/>of<sp/>the<sp/>strides<sp/>in<sp/>this<sp/>array.</highlight></codeline>
<codeline lineno="1560"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>result<sp/>is<sp/>describes<sp/>the<sp/>current<sp/>permutation<sp/>of<sp/>the<sp/>axes<sp/>relative<sp/></highlight></codeline>
<codeline lineno="1561"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>the<sp/>standard<sp/>ascending<sp/>stride<sp/>order.</highlight></codeline>
<codeline lineno="1562"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1563" refid="classvigra_1_1MultiArrayView_1a614a382ab304114f19a2c1168502647d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>difference_type<sp/><ref refid="classvigra_1_1MultiArrayView_1a614a382ab304114f19a2c1168502647d" kindref="member">strideOrdering</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1564"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a614a382ab304114f19a2c1168502647d" kindref="member">strideOrdering</ref>(m_stride);</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1568"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Compute<sp/>the<sp/>ordering<sp/>of<sp/>the<sp/>given<sp/>strides.</highlight></codeline>
<codeline lineno="1569"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>result<sp/>is<sp/>describes<sp/>the<sp/>current<sp/>permutation<sp/>of<sp/>the<sp/>axes<sp/>relative<sp/></highlight></codeline>
<codeline lineno="1570"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>the<sp/>standard<sp/>ascending<sp/>stride<sp/>order.</highlight></codeline>
<codeline lineno="1571"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>difference_type<sp/><ref refid="classvigra_1_1MultiArrayView_1a614a382ab304114f19a2c1168502647d" kindref="member">strideOrdering</ref>(difference_type<sp/>strides);</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1574"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>number<sp/>of<sp/>the<sp/>elements<sp/>in<sp/>the<sp/>array.</highlight></codeline>
<codeline lineno="1575"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576" refid="classvigra_1_1MultiArrayView_1a76f6c30e31c82e61b8b7e09ce3d8871d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>difference_type_1<sp/><ref refid="classvigra_1_1MultiArrayView_1a76f6c30e31c82e61b8b7e09ce3d8871d" kindref="member">elementCount</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1577"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>difference_type_1<sp/>ret<sp/>=<sp/>m_shape[0];</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>actual_dimension;<sp/>++i)</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>*=<sp/>m_shape[i];</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1584"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>number<sp/>of<sp/>the<sp/>elements<sp/>in<sp/>the<sp/>array.</highlight></codeline>
<codeline lineno="1585"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Same<sp/>as<sp/>&lt;tt&gt;elementCount()&lt;/tt&gt;.<sp/>Mostly<sp/>useful<sp/>to<sp/>support<sp/>the<sp/>std::vector<sp/>interface.</highlight></codeline>
<codeline lineno="1586"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1587" refid="classvigra_1_1MultiArrayView_1a14c1df938ca1578ffc71bc9728b4e401" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>difference_type_1<sp/><ref refid="classvigra_1_1MultiArrayView_1a14c1df938ca1578ffc71bc9728b4e401" kindref="member">size</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1588"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a76f6c30e31c82e61b8b7e09ce3d8871d" kindref="member">elementCount</ref>();</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1592"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>return<sp/>the<sp/>array&apos;s<sp/>shape.</highlight></codeline>
<codeline lineno="1593"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1594" refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>difference_type<sp/>&amp;<sp/><ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1595"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref>;</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1599"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>return<sp/>the<sp/>array&apos;s<sp/>size<sp/>at<sp/>a<sp/>certain<sp/>dimension.</highlight></codeline>
<codeline lineno="1600"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1601" refid="classvigra_1_1MultiArrayView_1abfcdc6d232e4633fe63ba5f0881e0998" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>difference_type_1<sp/><ref refid="classvigra_1_1MultiArrayView_1a14c1df938ca1578ffc71bc9728b4e401" kindref="member">size</ref><sp/>(difference_type_1<sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1602"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_shape<sp/>[n];</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1606"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>return<sp/>the<sp/>array&apos;s<sp/>shape<sp/>at<sp/>a<sp/>certain<sp/>dimension</highlight></codeline>
<codeline lineno="1607"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(same<sp/>as<sp/>&lt;tt&gt;size(n)&lt;/tt&gt;).</highlight></codeline>
<codeline lineno="1608"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1609" refid="classvigra_1_1MultiArrayView_1a33c2d2f3676a54c9393d06fbda8bd190" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>difference_type_1<sp/><ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref><sp/>(difference_type_1<sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1610"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_shape<sp/>[n];</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1614"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>return<sp/>the<sp/>array&apos;s<sp/>stride<sp/>for<sp/>every<sp/>dimension.</highlight></codeline>
<codeline lineno="1615"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1616" refid="classvigra_1_1MultiArrayView_1a3fee5f2594095fe1e747155d6bad57b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>difference_type<sp/>&amp;<sp/><ref refid="classvigra_1_1MultiArrayView_1a3fee5f2594095fe1e747155d6bad57b0" kindref="member">stride</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1617"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>;</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1621"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>return<sp/>the<sp/>array&apos;s<sp/>stride<sp/>at<sp/>a<sp/>certain<sp/>dimension.</highlight></codeline>
<codeline lineno="1622"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1623" refid="classvigra_1_1MultiArrayView_1a38ba1f2e9f964bc1e2f8531bd030c84e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>difference_type_1<sp/><ref refid="classvigra_1_1MultiArrayView_1a3fee5f2594095fe1e747155d6bad57b0" kindref="member">stride</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1624"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_stride<sp/>[n];</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1628"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>check<sp/>whether<sp/>two<sp/>arrays<sp/>are<sp/>elementwise<sp/>equal.</highlight></codeline>
<codeline lineno="1629"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C1&gt;</highlight></codeline>
<codeline lineno="1631" refid="classvigra_1_1MultiArrayView_1af2799b196fd761fc6d5313cf374f2b5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1af2799b196fd761fc6d5313cf374f2b5a" kindref="member">operator==</ref>(<ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;N, U, C1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1632"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>()<sp/>!=<sp/>rhs.<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>())</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::equalityOfMultiArrays(<ref refid="classvigra_1_1MultiArrayView_1a6da88764aadffdf26736523ba73a53b2" kindref="member">traverser_begin</ref>(),<sp/><ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(),<sp/>rhs.<ref refid="classvigra_1_1MultiArrayView_1a6da88764aadffdf26736523ba73a53b2" kindref="member">traverser_begin</ref>(),<sp/>MetaInt&lt;actual_dimension-1&gt;());</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1638"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>check<sp/>whether<sp/>two<sp/>arrays<sp/>are<sp/>not<sp/>elementwise<sp/>equal.</highlight></codeline>
<codeline lineno="1639"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Also<sp/>true<sp/>when<sp/>the<sp/>two<sp/>arrays<sp/>have<sp/>different<sp/>shapes.</highlight></codeline>
<codeline lineno="1640"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C1&gt;</highlight></codeline>
<codeline lineno="1642" refid="classvigra_1_1MultiArrayView_1a018c002f23f0985c9ca89cd0a244f59d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a018c002f23f0985c9ca89cd0a244f59d" kindref="member">operator!=</ref>(<ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;N, U, C1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1643"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="classvigra_1_1MultiArrayView_1af2799b196fd761fc6d5313cf374f2b5a" kindref="member">operator==</ref>(rhs);</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1647"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>check<sp/>whether<sp/>the<sp/>given<sp/>point<sp/>is<sp/>in<sp/>the<sp/>array<sp/>range.</highlight></codeline>
<codeline lineno="1648"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1649" refid="classvigra_1_1MultiArrayView_1acc16a9ac0801c380fcfe1841566efb99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1acc16a9ac0801c380fcfe1841566efb99" kindref="member">isInside</ref><sp/>(difference_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>p)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1650"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d=0;<sp/>d&lt;actual_dimension;<sp/>++d)</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p[d]<sp/>&lt;<sp/>0<sp/>||<sp/>p[d]<sp/>&gt;=<sp/><ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(d))</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1657"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Check<sp/>if<sp/>the<sp/>array<sp/>contains<sp/>only<sp/>non-zero<sp/>elements<sp/>(or<sp/>if<sp/>all<sp/>elements</highlight></codeline>
<codeline lineno="1658"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>are<sp/>&apos;true&apos;<sp/>if<sp/>the<sp/>value<sp/>type<sp/>is<sp/>&apos;bool&apos;).</highlight></codeline>
<codeline lineno="1659"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1660" refid="classvigra_1_1MultiArrayView_1a8df8a389781b95596f98ef919b00d5f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a8df8a389781b95596f98ef919b00d5f0" kindref="member">all</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1661"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>res<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::reduceOverMultiArray(<ref refid="classvigra_1_1MultiArrayView_1a6da88764aadffdf26736523ba73a53b2" kindref="member">traverser_begin</ref>(),<sp/><ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(),</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res,<sp/></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::AllTrueReduceFunctor(),</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MetaInt&lt;actual_dimension-1&gt;());</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1670"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Check<sp/>if<sp/>the<sp/>array<sp/>contains<sp/>a<sp/>non-zero<sp/>element<sp/>(or<sp/>an<sp/>element</highlight></codeline>
<codeline lineno="1671"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>is<sp/>&apos;true&apos;<sp/>if<sp/>the<sp/>value<sp/>type<sp/>is<sp/>&apos;bool&apos;).</highlight></codeline>
<codeline lineno="1672"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1673" refid="classvigra_1_1MultiArrayView_1a8be230fdd50e0ce842dd3b0a3012821b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a8be230fdd50e0ce842dd3b0a3012821b" kindref="member">any</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1674"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>res<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::reduceOverMultiArray(<ref refid="classvigra_1_1MultiArrayView_1a6da88764aadffdf26736523ba73a53b2" kindref="member">traverser_begin</ref>(),<sp/><ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(),</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res,<sp/></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::AnyTrueReduceFunctor(),</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MetaInt&lt;actual_dimension-1&gt;());</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1683"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Find<sp/>the<sp/>minimum<sp/>and<sp/>maximum<sp/>element<sp/>in<sp/>this<sp/>array.</highlight></codeline>
<codeline lineno="1684"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1685" refid="classvigra_1_1MultiArrayView_1a6d8831009ea104ac1d9f36a2af5b0176" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a6d8831009ea104ac1d9f36a2af5b0176" kindref="member">minmax</ref>(T<sp/>*<sp/>minimum,<sp/>T<sp/>*<sp/>maximum)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1686"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::pair&lt;T,<sp/>T&gt;<sp/>res(<ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">NumericTraits&lt;T&gt;::max</ref>(),<sp/><ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">NumericTraits&lt;T&gt;::min</ref>());</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::reduceOverMultiArray(<ref refid="classvigra_1_1MultiArrayView_1a6da88764aadffdf26736523ba73a53b2" kindref="member">traverser_begin</ref>(),<sp/><ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(),</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res,<sp/></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::MinmaxReduceFunctor(),</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MetaInt&lt;actual_dimension-1&gt;());</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*minimum<sp/>=<sp/>res.first;</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*maximum<sp/>=<sp/>res.second;</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1696"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Compute<sp/>the<sp/>mean<sp/>and<sp/>variance<sp/>of<sp/>the<sp/>values<sp/>in<sp/>this<sp/>array.</highlight></codeline>
<codeline lineno="1697"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="1699" refid="classvigra_1_1MultiArrayView_1acd4c954a3c2fe5db856c4608f773eb45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1acd4c954a3c2fe5db856c4608f773eb45" kindref="member">meanVariance</ref>(U<sp/>*<sp/>mean,<sp/>U<sp/>*<sp/>variance)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1700"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;U&gt;::RealPromote<sp/>R;</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>triple&lt;R,<sp/>R,<sp/>R&gt;<sp/>res(0.0,<sp/>0.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::reduceOverMultiArray(<ref refid="classvigra_1_1MultiArrayView_1a6da88764aadffdf26736523ba73a53b2" kindref="member">traverser_begin</ref>(),<sp/><ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(),</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res,<sp/></highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::MeanVarianceReduceFunctor(),</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MetaInt&lt;actual_dimension-1&gt;());</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*mean<sp/><sp/><sp/><sp/><sp/>=<sp/>res.second;</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*variance<sp/>=<sp/>res.third<sp/>/<sp/>res.first;</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1711"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Compute<sp/>the<sp/>sum<sp/>of<sp/>the<sp/>array<sp/>elements.</highlight></codeline>
<codeline lineno="1712"><highlight class="comment"></highlight></codeline>
<codeline lineno="1713"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>You<sp/>must<sp/>provide<sp/>the<sp/>type<sp/>of<sp/>the<sp/>result<sp/>by<sp/>an<sp/>explicit<sp/>template<sp/>parameter:</highlight></codeline>
<codeline lineno="1714"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1715"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArray&lt;2,<sp/>UInt8&gt;<sp/>A(width,<sp/>height);</highlight></codeline>
<codeline lineno="1716"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1717"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>sum<sp/>=<sp/>A.sum&lt;double&gt;();</highlight></codeline>
<codeline lineno="1718"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1719"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="1721" refid="classvigra_1_1MultiArrayView_1a2863f8aff8f52d7471f7b8f6f3b41390" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>U<sp/><ref refid="classvigra_1_1MultiArrayView_1a2863f8aff8f52d7471f7b8f6f3b41390" kindref="member">sum</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1722"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>U<sp/>res<sp/>=<sp/>NumericTraits&lt;U&gt;::zero();</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::reduceOverMultiArray(<ref refid="classvigra_1_1MultiArrayView_1a6da88764aadffdf26736523ba73a53b2" kindref="member">traverser_begin</ref>(),<sp/><ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(),</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res,<sp/></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::SumReduceFunctor(),</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MetaInt&lt;actual_dimension-1&gt;());</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1731"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Compute<sp/>the<sp/>sum<sp/>of<sp/>the<sp/>array<sp/>elements<sp/>over<sp/>selected<sp/>axes.</highlight></codeline>
<codeline lineno="1732"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1733"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\arg<sp/>sums<sp/>must<sp/>have<sp/>the<sp/>same<sp/>shape<sp/>as<sp/>this<sp/>array,<sp/>except<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="1734"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axes<sp/>along<sp/>which<sp/>the<sp/>sum<sp/>is<sp/>to<sp/>be<sp/>accumulated.<sp/>These<sp/>axes<sp/>must<sp/>be<sp/></highlight></codeline>
<codeline lineno="1735"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>singletons.<sp/>Note<sp/>that<sp/>you<sp/>must<sp/>include<sp/>&lt;tt&gt;multi_pointoperators.hxx&lt;/tt&gt;</highlight></codeline>
<codeline lineno="1736"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>this<sp/>function<sp/>to<sp/>work.</highlight></codeline>
<codeline lineno="1737"><highlight class="comment"></highlight></codeline>
<codeline lineno="1738"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="1739"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1740"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#include<sp/>&lt;vigra/multi_array.hxx&gt;</highlight></codeline>
<codeline lineno="1741"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#include<sp/>&lt;vigra/multi_pointoperators.hxx&gt;</highlight></codeline>
<codeline lineno="1742"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1743"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArray&lt;2,<sp/>double&gt;<sp/>A(rows,<sp/>cols);</highlight></codeline>
<codeline lineno="1744"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...<sp/>//<sp/>fill<sp/>A</highlight></codeline>
<codeline lineno="1745"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1746"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>make<sp/>the<sp/>first<sp/>axis<sp/>a<sp/>singleton<sp/>to<sp/>sum<sp/>over<sp/>the<sp/>first<sp/>index</highlight></codeline>
<codeline lineno="1747"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArray&lt;2,<sp/>double&gt;<sp/>rowSums(1,<sp/>cols);</highlight></codeline>
<codeline lineno="1748"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A.sum(rowSums);</highlight></codeline>
<codeline lineno="1749"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1750"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>this<sp/>is<sp/>equivalent<sp/>to</highlight></codeline>
<codeline lineno="1751"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transformMultiArray(srcMultiArrayRange(A),</highlight></codeline>
<codeline lineno="1752"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destMultiArrayRange(rowSums),</highlight></codeline>
<codeline lineno="1753"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FindSum&lt;double&gt;());</highlight></codeline>
<codeline lineno="1754"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1755"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>S&gt;</highlight></codeline>
<codeline lineno="1757" refid="classvigra_1_1MultiArrayView_1a3b2d9689550ecef9ddc5b225f253b7d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a2863f8aff8f52d7471f7b8f6f3b41390" kindref="member">sum</ref>(<ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;N, U, S&gt;</ref><sp/>sums)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1758"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__MultiPointoperators_1ga4e3f906de480f4a867340968da8a98dd" kindref="member" tooltip="Transform a multi-dimensional array with a unary function or functor.">transformMultiArray</ref>(srcMultiArrayRange(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destMultiArrayRange(sums),</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1FindSum" kindref="compound" tooltip="Find the sum of the pixel values in an image or ROI.">FindSum&lt;U&gt;</ref>());</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1764"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Compute<sp/>the<sp/>product<sp/>of<sp/>the<sp/>array<sp/>elements.</highlight></codeline>
<codeline lineno="1765"><highlight class="comment"></highlight></codeline>
<codeline lineno="1766"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>You<sp/>must<sp/>provide<sp/>the<sp/>type<sp/>of<sp/>the<sp/>result<sp/>by<sp/>an<sp/>explicit<sp/>template<sp/>parameter:</highlight></codeline>
<codeline lineno="1767"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="1768"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArray&lt;2,<sp/>UInt8&gt;<sp/>A(width,<sp/>height);</highlight></codeline>
<codeline lineno="1769"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1770"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>prod<sp/>=<sp/>A.product&lt;double&gt;();</highlight></codeline>
<codeline lineno="1771"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="1772"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="1774" refid="classvigra_1_1MultiArrayView_1a5b3042c71814da638e52b4d547771cf4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>U<sp/><ref refid="classvigra_1_1MultiArrayView_1a5b3042c71814da638e52b4d547771cf4" kindref="member">product</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1775"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>U<sp/>res<sp/>=<sp/>NumericTraits&lt;U&gt;::one();</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::reduceOverMultiArray(<ref refid="classvigra_1_1MultiArrayView_1a6da88764aadffdf26736523ba73a53b2" kindref="member">traverser_begin</ref>(),<sp/><ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(),</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res,<sp/></highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::ProdReduceFunctor(),</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MetaInt&lt;actual_dimension-1&gt;());</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1784"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Compute<sp/>the<sp/>squared<sp/>Euclidean<sp/>norm<sp/>of<sp/>the<sp/>array<sp/>(sum<sp/>of<sp/>squares<sp/>of<sp/>the<sp/>array<sp/>elements).</highlight></codeline>
<codeline lineno="1785"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NormTraits&lt;MultiArrayView&gt;::SquaredNormType<sp/></highlight></codeline>
<codeline lineno="1787" refid="classvigra_1_1MultiArrayView_1a6ada450d8e72c934a5406d1c2b5cf033" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a6ada450d8e72c934a5406d1c2b5cf033" kindref="member">squaredNorm</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1788"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NormTraits&lt;MultiArrayView&gt;::SquaredNormType<sp/>SquaredNormType;</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SquaredNormType<sp/>res<sp/>=<sp/>NumericTraits&lt;SquaredNormType&gt;::zero();</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::reduceOverMultiArray(<ref refid="classvigra_1_1MultiArrayView_1a6da88764aadffdf26736523ba73a53b2" kindref="member">traverser_begin</ref>(),<sp/><ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(),</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res,<sp/></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::SquaredL2NormReduceFunctor(),</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MetaInt&lt;actual_dimension-1&gt;());</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1798"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Compute<sp/>various<sp/>norms<sp/>of<sp/>the<sp/>array.</highlight></codeline>
<codeline lineno="1799"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>norm<sp/>is<sp/>determined<sp/>by<sp/>parameter<sp/>\a<sp/>type:</highlight></codeline>
<codeline lineno="1800"><highlight class="comment"></highlight></codeline>
<codeline lineno="1801"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;ul&gt;</highlight></codeline>
<codeline lineno="1802"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;li&gt;<sp/>type<sp/>==<sp/>0:<sp/>maximum<sp/>norm<sp/>(L-infinity):<sp/>maximum<sp/>of<sp/>absolute<sp/>values<sp/>of<sp/>the<sp/>array<sp/>elements</highlight></codeline>
<codeline lineno="1803"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;li&gt;<sp/>type<sp/>==<sp/>1:<sp/>Manhattan<sp/>norm<sp/>(L1):<sp/>sum<sp/>of<sp/>absolute<sp/>values<sp/>of<sp/>the<sp/>array<sp/>elements</highlight></codeline>
<codeline lineno="1804"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;li&gt;<sp/>type<sp/>==<sp/>2:<sp/>Euclidean<sp/>norm<sp/>(L2):<sp/>square<sp/>root<sp/>of<sp/>&lt;tt&gt;squaredNorm()&lt;/tt&gt;<sp/>when<sp/>\a<sp/>useSquaredNorm<sp/>is<sp/>&lt;tt&gt;true&lt;/tt&gt;,&lt;br&gt;</highlight></codeline>
<codeline lineno="1805"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>direct<sp/>algorithm<sp/>that<sp/>avoids<sp/>underflow/overflow<sp/>otherwise.</highlight></codeline>
<codeline lineno="1806"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/ul&gt;</highlight></codeline>
<codeline lineno="1807"><highlight class="comment"></highlight></codeline>
<codeline lineno="1808"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameter<sp/>\a<sp/>useSquaredNorm<sp/>has<sp/>no<sp/>effect<sp/>when<sp/>\a<sp/>type<sp/>!=<sp/>2.<sp/>Defaults:<sp/>compute<sp/>L2<sp/>norm<sp/>as<sp/>square<sp/>root<sp/>of</highlight></codeline>
<codeline lineno="1809"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;squaredNorm()&lt;/tt&gt;.</highlight></codeline>
<codeline lineno="1810"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NormTraits&lt;MultiArrayView&gt;::NormType<sp/></highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a0816d7af1f17517f39dbef405d2e4a47" kindref="member">norm</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>2,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useSquaredNorm<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1814"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>return<sp/>the<sp/>pointer<sp/>to<sp/>the<sp/>image<sp/>data</highlight></codeline>
<codeline lineno="1815"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1816" refid="classvigra_1_1MultiArrayView_1a9711a38a3b5f2d85c44505938499a0e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pointer<sp/><ref refid="classvigra_1_1MultiArrayView_1a9711a38a3b5f2d85c44505938499a0e2" kindref="member">data</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1817"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" kindref="member">m_ptr</ref>;</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1821"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="1822"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>returns<sp/>true<sp/>iff<sp/>this<sp/>view<sp/>refers<sp/>to<sp/>valid<sp/>data,</highlight></codeline>
<codeline lineno="1823"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>i.e.<sp/>data()<sp/>is<sp/>not<sp/>a<sp/>NULL<sp/>pointer.<sp/><sp/>(this<sp/>is<sp/>false<sp/>after</highlight></codeline>
<codeline lineno="1824"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>default<sp/>construction.)</highlight></codeline>
<codeline lineno="1825"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1826" refid="classvigra_1_1MultiArrayView_1a0effbd4cf91891700ac41e86defe4aa6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a0effbd4cf91891700ac41e86defe4aa6" kindref="member">hasData</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1827"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ptr<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1831"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>returns<sp/>a<sp/>scan-order<sp/>iterator<sp/>pointing</highlight></codeline>
<codeline lineno="1832"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>the<sp/>first<sp/>array<sp/>element.</highlight></codeline>
<codeline lineno="1833"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1834" refid="classvigra_1_1MultiArrayView_1ad69bd11391be1a1dba5c8202259664f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>iterator<sp/><ref refid="classvigra_1_1MultiArrayView_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>()</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1aeee42f6d6232520f1f2342866a2ddefb" kindref="member">iterator</ref>(m_ptr,<sp/>m_shape,<sp/>m_stride);</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1839"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>returns<sp/>a<sp/>const<sp/>scan-order<sp/>iterator<sp/>pointing</highlight></codeline>
<codeline lineno="1840"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>the<sp/>first<sp/>array<sp/>element.</highlight></codeline>
<codeline lineno="1841"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1842" refid="classvigra_1_1MultiArrayView_1aa4b02d4f1a8500fb07a551069060709f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>const_iterator<sp/><ref refid="classvigra_1_1MultiArrayView_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1843"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a7ccba9db082c23d8d019296dcd9ff735" kindref="member">const_iterator</ref>(m_ptr,<sp/>m_shape,<sp/>m_stride);</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1847"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>returns<sp/>a<sp/>scan-order<sp/>iterator<sp/>pointing</highlight></codeline>
<codeline lineno="1848"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beyond<sp/>the<sp/>last<sp/>array<sp/>element.</highlight></codeline>
<codeline lineno="1849"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1850" refid="classvigra_1_1MultiArrayView_1acad38d52497a975bfb6f2f6acd76631f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>iterator<sp/><ref refid="classvigra_1_1MultiArrayView_1acad38d52497a975bfb6f2f6acd76631f" kindref="member">end</ref>()</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>().getEndIterator();</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1855"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>returns<sp/>a<sp/>const<sp/>scan-order<sp/>iterator<sp/>pointing</highlight></codeline>
<codeline lineno="1856"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beyond<sp/>the<sp/>last<sp/>array<sp/>element.</highlight></codeline>
<codeline lineno="1857"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1858" refid="classvigra_1_1MultiArrayView_1a350132543d80a1c1e5be844e6d2878ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>const_iterator<sp/><ref refid="classvigra_1_1MultiArrayView_1acad38d52497a975bfb6f2f6acd76631f" kindref="member">end</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1859"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref>().getEndIterator();</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1863"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>returns<sp/>the<sp/>N-dimensional<sp/>MultiIterator<sp/>pointing</highlight></codeline>
<codeline lineno="1864"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>the<sp/>first<sp/>element<sp/>in<sp/>every<sp/>dimension.</highlight></codeline>
<codeline lineno="1865"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1866" refid="classvigra_1_1MultiArrayView_1a6da88764aadffdf26736523ba73a53b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>traverser<sp/><ref refid="classvigra_1_1MultiArrayView_1a6da88764aadffdf26736523ba73a53b2" kindref="member">traverser_begin</ref><sp/>()</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>traverser<sp/>ret<sp/>(m_ptr,<sp/>m_stride.begin<sp/>(),<sp/>m_shape.begin<sp/>());</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1872"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>returns<sp/>the<sp/>N-dimensional<sp/>MultiIterator<sp/>pointing</highlight></codeline>
<codeline lineno="1873"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>the<sp/>const<sp/>first<sp/>element<sp/>in<sp/>every<sp/>dimension.</highlight></codeline>
<codeline lineno="1874"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1875" refid="classvigra_1_1MultiArrayView_1af5bd133df88785669c1f7058fd6ee4b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>const_traverser<sp/><ref refid="classvigra_1_1MultiArrayView_1a6da88764aadffdf26736523ba73a53b2" kindref="member">traverser_begin</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1876"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_traverser<sp/>ret<sp/>(m_ptr,<sp/>m_stride.begin<sp/>(),<sp/>m_shape.begin<sp/>());</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1881"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>returns<sp/>the<sp/>N-dimensional<sp/>MultiIterator<sp/>pointing</highlight></codeline>
<codeline lineno="1882"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beyond<sp/>the<sp/>last<sp/>element<sp/>in<sp/>dimension<sp/>N,<sp/>and<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="1883"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>element<sp/>in<sp/>every<sp/>other<sp/>dimension.</highlight></codeline>
<codeline lineno="1884"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1885" refid="classvigra_1_1MultiArrayView_1a8e25dc1fff81a9ff3776106365bbd73f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>traverser<sp/><ref refid="classvigra_1_1MultiArrayView_1a8e25dc1fff81a9ff3776106365bbd73f" kindref="member">traverser_end</ref><sp/>()</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>traverser<sp/>ret<sp/>(m_ptr,<sp/>m_stride.begin<sp/>(),<sp/>m_shape.begin<sp/>());</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/>m_shape<sp/>[actual_dimension-1];</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1892"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>returns<sp/>the<sp/>N-dimensional<sp/>const<sp/>MultiIterator<sp/>pointing</highlight></codeline>
<codeline lineno="1893"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beyond<sp/>the<sp/>last<sp/>element<sp/>in<sp/>dimension<sp/>N,<sp/>and<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="1894"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>element<sp/>in<sp/>every<sp/>other<sp/>dimension.</highlight></codeline>
<codeline lineno="1895"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1896" refid="classvigra_1_1MultiArrayView_1a8eeb5d1af1828e5f7f99548c03f51640" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>const_traverser<sp/><ref refid="classvigra_1_1MultiArrayView_1a8e25dc1fff81a9ff3776106365bbd73f" kindref="member">traverser_end</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1897"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_traverser<sp/>ret<sp/>(m_ptr,<sp/>m_stride.begin<sp/>(),<sp/>m_shape.begin<sp/>());</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>+=<sp/>m_shape<sp/>[actual_dimension-1];</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/>view_type<sp/>view<sp/>()</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1907"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"></highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="1910"><highlight class="normal">MultiArrayView&lt;N,<sp/>T,<sp/>StrideTag&gt;<sp/>&amp;</highlight></codeline>
<codeline lineno="1911" refid="classvigra_1_1MultiArrayView_1aaf7167061b3a03a33146694f32aa380f" refkind="member"><highlight class="normal"><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, T, StrideTag&gt;::operator</ref>=(<ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="1912"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>&amp;rhs)</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/>vigra_precondition(this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>()<sp/>==<sp/>rhs.shape()<sp/>||<sp/><ref refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" kindref="member">m_ptr</ref><sp/>==<sp/>0,</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MultiArrayView::operator=(MultiArrayView<sp/>const<sp/>&amp;)<sp/>size<sp/>mismatch.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" kindref="member">m_ptr</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref><sp/><sp/>=<sp/>rhs.m_shape;</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref><sp/>=<sp/>rhs.m_stride;</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" kindref="member">m_ptr</ref><sp/><sp/><sp/><sp/>=<sp/>rhs.m_ptr;</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;copyImpl(rhs);</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1926"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"></highlight></codeline>
<codeline lineno="1928"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CN&gt;</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, T, StrideTag&gt;::arraysOverlap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, T, CN&gt;</ref>&amp;<sp/>rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1932"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/>vigra_precondition<sp/>(shape<sp/>()<sp/>==<sp/>rhs.shape<sp/>(),</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MultiArrayView::arraysOverlap():<sp/>shape<sp/>mismatch.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a13c57dab17e2c903cadfa5e35ba84064" kindref="member">const_pointer</ref><sp/>first_element<sp/>=<sp/>this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" kindref="member">m_ptr</ref>,</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_element<sp/>=<sp/>first_element<sp/>+<sp/><ref refid="group__RGBValueOperators_1gaabe9d910ba7a54cbf606254a81e409e6" kindref="member" tooltip="dot product">dot</ref>(this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref><sp/>-<sp/><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref>(1),<sp/>this-&gt;<ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>);</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a13c57dab17e2c903cadfa5e35ba84064" kindref="member">MultiArrayView &lt;N, T, CN&gt;::const_pointer</ref></highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs_first_element<sp/>=<sp/>rhs.data(),</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs_last_element<sp/>=<sp/>rhs_first_element<sp/>+<sp/><ref refid="group__RGBValueOperators_1gaabe9d910ba7a54cbf606254a81e409e6" kindref="member" tooltip="dot product">dot</ref>(rhs.shape()<sp/>-<sp/><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref>(1),<sp/>rhs.stride());</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(last_element<sp/>&lt;<sp/>rhs_first_element<sp/>||<sp/>rhs_last_element<sp/>&lt;<sp/>first_element);</highlight></codeline>
<codeline lineno="1941"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"></highlight></codeline>
<codeline lineno="1943"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CN&gt;</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1946"><highlight class="normal">MultiArrayView<sp/>&lt;N,<sp/>T,<sp/>StrideTag&gt;::copyImpl(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiArrayView<sp/>&lt;N,<sp/>U,<sp/>CN&gt;&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="1947"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!arraysOverlap(rhs))</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>overlap<sp/>--<sp/>can<sp/>copy<sp/>directly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::copyMultiArrayData(rhs.traverser_begin(),<sp/><ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(),<sp/><ref refid="classvigra_1_1MultiArrayView_1a6da88764aadffdf26736523ba73a53b2" kindref="member">traverser_begin</ref>(),<sp/>MetaInt&lt;actual_dimension-1&gt;());</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overlap:<sp/>we<sp/>got<sp/>different<sp/>views<sp/>to<sp/>the<sp/>same<sp/>data<sp/>--<sp/>copy<sp/>to<sp/>intermediate<sp/>memory<sp/>in<sp/>order<sp/>to<sp/>avoid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overwriting<sp/>elements<sp/>that<sp/>are<sp/>still<sp/>needed<sp/>on<sp/>the<sp/>rhs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArray&lt;N,<sp/>T&gt;<sp/>tmp(rhs);</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::copyMultiArrayData(tmp.traverser_begin(),<sp/><ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(),<sp/><ref refid="classvigra_1_1MultiArrayView_1a6da88764aadffdf26736523ba73a53b2" kindref="member">traverser_begin</ref>(),<sp/>MetaInt&lt;actual_dimension-1&gt;());</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1960"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_MULTI_ARRAY_COMPUTED_ASSIGNMENT(name,<sp/>op)<sp/>\</highlight></codeline>
<codeline lineno="1963"><highlight class="preprocessor">template<sp/>&lt;unsigned<sp/>int<sp/>N,<sp/>class<sp/>T,<sp/>class<sp/>StrideTag&gt;<sp/>\</highlight></codeline>
<codeline lineno="1964"><highlight class="preprocessor">template&lt;class<sp/>U,<sp/>class<sp/>C1&gt;<sp/>\</highlight></codeline>
<codeline lineno="1965"><highlight class="preprocessor">MultiArrayView&lt;N,<sp/>T,<sp/>StrideTag&gt;<sp/>&amp;<sp/><sp/>\</highlight></codeline>
<codeline lineno="1966"><highlight class="preprocessor">MultiArrayView<sp/>&lt;N,<sp/>T,<sp/>StrideTag&gt;::operator<sp/>op(MultiArrayView&lt;N,<sp/>U,<sp/>C1&gt;<sp/>const<sp/>&amp;<sp/>rhs)<sp/>\</highlight></codeline>
<codeline lineno="1967"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="1968"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>vigra_precondition(this-&gt;shape()<sp/>==<sp/>rhs.shape(),<sp/>&quot;MultiArrayView::operator&quot;<sp/>#op<sp/>&quot;()<sp/>size<sp/>mismatch.&quot;);<sp/>\</highlight></codeline>
<codeline lineno="1969"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if(!arraysOverlap(rhs))<sp/>\</highlight></codeline>
<codeline lineno="1970"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="1971"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::name##MultiArrayData(rhs.traverser_begin(),<sp/>shape(),<sp/>traverser_begin(),<sp/>MetaInt&lt;actual_dimension-1&gt;());<sp/>\</highlight></codeline>
<codeline lineno="1972"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="1973"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/>\</highlight></codeline>
<codeline lineno="1974"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="1975"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArray&lt;N,<sp/>T&gt;<sp/>tmp(rhs);<sp/>\</highlight></codeline>
<codeline lineno="1976"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::name##MultiArrayData(tmp.traverser_begin(),<sp/>shape(),<sp/>traverser_begin(),<sp/>MetaInt&lt;actual_dimension-1&gt;());<sp/>\</highlight></codeline>
<codeline lineno="1977"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="1978"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>*this;<sp/>\</highlight></codeline>
<codeline lineno="1979"><highlight class="preprocessor">}</highlight></codeline>
<codeline lineno="1980"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="normal">VIGRA_MULTI_ARRAY_COMPUTED_ASSIGNMENT(copyAdd,<sp/>+=)</highlight></codeline>
<codeline lineno="1982"><highlight class="normal">VIGRA_MULTI_ARRAY_COMPUTED_ASSIGNMENT(copySub,<sp/>-=)</highlight></codeline>
<codeline lineno="1983"><highlight class="normal">VIGRA_MULTI_ARRAY_COMPUTED_ASSIGNMENT(copyMul,<sp/>*=)</highlight></codeline>
<codeline lineno="1984"><highlight class="normal">VIGRA_MULTI_ARRAY_COMPUTED_ASSIGNMENT(copyDiv,<sp/>/=)</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_MULTI_ARRAY_COMPUTED_ASSIGNMENT</highlight></codeline>
<codeline lineno="1987"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1988"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CN&gt;</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1991"><highlight class="normal">MultiArrayView<sp/>&lt;N,<sp/>T,<sp/>StrideTag&gt;::swapDataImpl(MultiArrayView<sp/>&lt;N,<sp/>U,<sp/>CN&gt;<sp/>rhs)</highlight></codeline>
<codeline lineno="1992"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/>vigra_precondition<sp/>(shape<sp/>()<sp/>==<sp/>rhs.shape<sp/>(),</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MultiArrayView::swapData():<sp/>shape<sp/>mismatch.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"></highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>overlap<sp/>of<sp/>this<sp/>and<sp/>rhs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a13c57dab17e2c903cadfa5e35ba84064" kindref="member">const_pointer</ref><sp/>first_element<sp/>=<sp/>this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" kindref="member">m_ptr</ref>,</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_element<sp/>=<sp/>first_element<sp/>+<sp/><ref refid="group__RGBValueOperators_1gaabe9d910ba7a54cbf606254a81e409e6" kindref="member" tooltip="dot product">dot</ref>(this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref><sp/>-<sp/><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref>(1),<sp/>this-&gt;<ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>);</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MultiArrayView<sp/>&lt;N,<sp/>U,<sp/>CN&gt;::const_pointer</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs_first_element<sp/>=<sp/>rhs.<ref refid="classvigra_1_1MultiArrayView_1a9711a38a3b5f2d85c44505938499a0e2" kindref="member">data</ref>(),</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs_last_element<sp/>=<sp/>rhs_first_element<sp/>+<sp/><ref refid="group__RGBValueOperators_1gaabe9d910ba7a54cbf606254a81e409e6" kindref="member" tooltip="dot product">dot</ref>(rhs.shape()<sp/>-<sp/><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref>(1),<sp/>rhs.stride());</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(last_element<sp/>&lt;<sp/>rhs_first_element<sp/>||<sp/>rhs_last_element<sp/>&lt;<sp/>first_element)</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>overlap<sp/>--<sp/>can<sp/>swap<sp/>directly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::swapDataImpl(<ref refid="classvigra_1_1MultiArrayView_1a6da88764aadffdf26736523ba73a53b2" kindref="member">traverser_begin</ref>(),<sp/><ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(),<sp/>rhs.traverser_begin(),<sp/>MetaInt&lt;actual_dimension-1&gt;());</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overlap:<sp/>we<sp/>got<sp/>different<sp/>views<sp/>to<sp/>the<sp/>same<sp/>data<sp/>--<sp/>copy<sp/>to<sp/>intermediate<sp/>memory<sp/>in<sp/>order<sp/>to<sp/>avoid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overwriting<sp/>elements<sp/>that<sp/>are<sp/>still<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArray&lt;N,<sp/>T&gt;<sp/>tmp(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a93b4cd51930b5c3f49081829c06a10da" kindref="member">copy</ref>(rhs);</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.copy(tmp);</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2015"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"></highlight></codeline>
<codeline lineno="2017"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="2018"><highlight class="normal">MultiArrayView<sp/>&lt;N,<sp/>T,<sp/>StridedArrayTag&gt;</highlight></codeline>
<codeline lineno="2019" refid="classvigra_1_1MultiArrayView_1a62a571ba62a9cc4b4f27af78b20a6d0e" refkind="member"><highlight class="normal"><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, T, StrideTag&gt;::permuteDimensions</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref><sp/>&amp;s)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2020"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref><sp/><ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>,<sp/><ref refid="classvigra_1_1MultiArrayView_1a3fee5f2594095fe1e747155d6bad57b0" kindref="member">stride</ref>,<sp/>check((</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>difference_type::value_type)0);</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>actual_dimension;<sp/>++i)</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape[i]<sp/><sp/>=<sp/><ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref>[s[i]];</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride[i]<sp/>=<sp/><ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>[s[i]];</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++check[s[i]];</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/>vigra_precondition(check<sp/>==<sp/><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref>(1),</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MultiArrayView::permuteDimensions():<sp/>every<sp/>dimension<sp/>must<sp/>occur<sp/>exactly<sp/>once.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, T, StridedArrayTag&gt;</ref>(<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>,<sp/><ref refid="classvigra_1_1MultiArrayView_1a3fee5f2594095fe1e747155d6bad57b0" kindref="member">stride</ref>,<sp/><ref refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" kindref="member">m_ptr</ref>);</highlight></codeline>
<codeline lineno="2031"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"></highlight></codeline>
<codeline lineno="2033"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">MultiArrayView &lt;N, T, StrideTag&gt;::difference_type</ref><sp/></highlight></codeline>
<codeline lineno="2035" refid="classvigra_1_1MultiArrayView_1a78785a3e970fb24bb63462af833934d8" refkind="member"><highlight class="normal"><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, T, StrideTag&gt;::strideOrdering</ref>(<ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref><sp/><ref refid="classvigra_1_1MultiArrayView_1a3fee5f2594095fe1e747155d6bad57b0" kindref="member">stride</ref>)</highlight></codeline>
<codeline lineno="2036"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref><sp/>permutation;</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k&lt;(int)N;<sp/>++k)</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>permutation[k]<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k&lt;(int)N-1;<sp/>++k)</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>smallest<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=k+1;<sp/>j&lt;(int)N;<sp/>++j)</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classvigra_1_1MultiArrayView_1a3fee5f2594095fe1e747155d6bad57b0" kindref="member">stride</ref>[j]<sp/>&lt;<sp/><ref refid="classvigra_1_1MultiArrayView_1a3fee5f2594095fe1e747155d6bad57b0" kindref="member">stride</ref>[smallest])</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smallest<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(smallest<sp/>!=<sp/>k)</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(<ref refid="classvigra_1_1MultiArrayView_1a3fee5f2594095fe1e747155d6bad57b0" kindref="member">stride</ref>[k],<sp/><ref refid="classvigra_1_1MultiArrayView_1a3fee5f2594095fe1e747155d6bad57b0" kindref="member">stride</ref>[smallest]);</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(permutation[k],<sp/>permutation[smallest]);</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref><sp/>ordering;</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k&lt;N;<sp/>++k)</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ordering[permutation[k]]<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ordering;</highlight></codeline>
<codeline lineno="2058"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, T, StridedArrayTag&gt;</ref></highlight></codeline>
<codeline lineno="2062" refid="classvigra_1_1MultiArrayView_1a4f32a16f89e9ff9927a20dc3c7abee6b" refkind="member"><highlight class="normal"><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, T, StrideTag&gt;::permuteStridesAscending</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2063"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref><sp/>ordering(<ref refid="classvigra_1_1MultiArrayView_1a614a382ab304114f19a2c1168502647d" kindref="member">strideOrdering</ref>(<ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>)),<sp/>permutation;</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>k=0;<sp/>k&lt;N;<sp/>++k)</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>permutation[ordering[k]]<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a62a571ba62a9cc4b4f27af78b20a6d0e" kindref="member">permuteDimensions</ref>(permutation);</highlight></codeline>
<codeline lineno="2068"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, T, StridedArrayTag&gt;</ref></highlight></codeline>
<codeline lineno="2072" refid="classvigra_1_1MultiArrayView_1a421ac71c17f86f900041784e3c77857a" refkind="member"><highlight class="normal"><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, T, StrideTag&gt;::permuteStridesDescending</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref><sp/>ordering(<ref refid="classvigra_1_1MultiArrayView_1a614a382ab304114f19a2c1168502647d" kindref="member">strideOrdering</ref>(<ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>)),<sp/>permutation;</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="group__MultiIteratorGroup_1gac436173a0374e960a463a9186496ab70" kindref="member">MultiArrayIndex</ref><sp/>k=0;<sp/>k&lt;N;<sp/>++k)</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>permutation[ordering[N-1-k]]<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a62a571ba62a9cc4b4f27af78b20a6d0e" kindref="member">permuteDimensions</ref>(permutation);</highlight></codeline>
<codeline lineno="2078"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"></highlight></codeline>
<codeline lineno="2080"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M&gt;</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&lt;N-M,<sp/>T,<sp/>StrideTag&gt;</highlight></codeline>
<codeline lineno="2083" refid="classvigra_1_1MultiArrayView_1acaca6e5790fa86120c4df40c3385d324" refkind="member"><highlight class="normal"><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, T, StrideTag&gt;::bindOuter</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector &lt;MultiArrayIndex, M&gt;</ref><sp/>&amp;d)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector &lt;MultiArrayIndex, M&gt;</ref><sp/><ref refid="classvigra_1_1MultiArrayView_1a3fee5f2594095fe1e747155d6bad57b0" kindref="member">stride</ref>;</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/>stride.<ref refid="classvigra_1_1TinyVectorBase_1a5cdf4fd70a8962218c77deb30edce0b5" kindref="member">init</ref><sp/>(<ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>.begin<sp/>()<sp/>+<sp/>N-M,<sp/><ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>.end<sp/>());</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1ad25b518036b886d8f35a3c059301d007" kindref="member">pointer</ref><sp/>ptr<sp/>=<sp/><ref refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" kindref="member">m_ptr</ref><sp/>+<sp/><ref refid="group__RGBValueOperators_1gaabe9d910ba7a54cbf606254a81e409e6" kindref="member" tooltip="dot product">dot</ref><sp/>(d,<sp/>stride);</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NNew<sp/>=<sp/>(N-M<sp/>==<sp/>0)<sp/>?<sp/>1<sp/>:<sp/>N-M;</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector &lt;MultiArrayIndex, NNew&gt;</ref><sp/>inner_shape,<sp/>inner_stride;</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(N-M<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inner_shape<sp/>[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inner_stride<sp/>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inner_shape.<ref refid="classvigra_1_1TinyVectorBase_1a5cdf4fd70a8962218c77deb30edce0b5" kindref="member">init</ref><sp/>(<ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref>.begin<sp/>(),<sp/><ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref>.end<sp/>()<sp/>-<sp/>M);</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inner_stride.<ref refid="classvigra_1_1TinyVectorBase_1a5cdf4fd70a8962218c77deb30edce0b5" kindref="member">init</ref><sp/>(<ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>.begin<sp/>(),<sp/><ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>.end<sp/>()<sp/>-<sp/>M);</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&lt;N-M,<sp/>T,<sp/>StrideTag&gt;<sp/>(inner_shape,<sp/>inner_stride,<sp/>ptr);</highlight></codeline>
<codeline lineno="2101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"></highlight></codeline>
<codeline lineno="2103"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M&gt;</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&lt;N<sp/>-<sp/>M,<sp/>T,<sp/><ref refid="structvigra_1_1StridedArrayTag" kindref="compound">StridedArrayTag</ref>&gt;</highlight></codeline>
<codeline lineno="2106" refid="classvigra_1_1MultiArrayView_1a262f8f52cd526b497522b444a53aeb1c" refkind="member"><highlight class="normal"><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, T, StrideTag&gt;::bindInner</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector &lt;MultiArrayIndex, M&gt;</ref><sp/>&amp;d)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector &lt;MultiArrayIndex, M&gt;</ref><sp/><ref refid="classvigra_1_1MultiArrayView_1a3fee5f2594095fe1e747155d6bad57b0" kindref="member">stride</ref>;</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/>stride.<ref refid="classvigra_1_1TinyVectorBase_1a5cdf4fd70a8962218c77deb30edce0b5" kindref="member">init</ref><sp/>(<ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>.begin<sp/>(),<sp/><ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>.end<sp/>()<sp/>-<sp/>N<sp/>+<sp/>M);</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1ad25b518036b886d8f35a3c059301d007" kindref="member">pointer</ref><sp/>ptr<sp/>=<sp/><ref refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" kindref="member">m_ptr</ref><sp/>+<sp/><ref refid="group__RGBValueOperators_1gaabe9d910ba7a54cbf606254a81e409e6" kindref="member" tooltip="dot product">dot</ref><sp/>(d,<sp/>stride);</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NNew<sp/>=<sp/>(N-M<sp/>==<sp/>0)<sp/>?<sp/>1<sp/>:<sp/>N-M;</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector &lt;MultiArrayIndex, NNew&gt;</ref><sp/>outer_shape,<sp/>outer_stride;</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(N-M<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outer_shape<sp/>[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outer_stride<sp/>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outer_shape.<ref refid="classvigra_1_1TinyVectorBase_1a5cdf4fd70a8962218c77deb30edce0b5" kindref="member">init</ref><sp/>(<ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref>.begin<sp/>()<sp/>+<sp/>M,<sp/><ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref>.end<sp/>());</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outer_stride.<ref refid="classvigra_1_1TinyVectorBase_1a5cdf4fd70a8962218c77deb30edce0b5" kindref="member">init</ref><sp/>(<ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>.begin<sp/>()<sp/>+<sp/>M,<sp/><ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>.end<sp/>());</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&lt;N-M,<sp/>T,<sp/><ref refid="structvigra_1_1StridedArrayTag" kindref="compound">StridedArrayTag</ref>&gt;</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(outer_shape,<sp/>outer_stride,<sp/>ptr);</highlight></codeline>
<codeline lineno="2125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"></highlight></codeline>
<codeline lineno="2127"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M&gt;</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&lt;N-1,<sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>detail::MaybeStrided&lt;StrideTag,<sp/>M&gt;::type<sp/>&gt;</highlight></codeline>
<codeline lineno="2130" refid="classvigra_1_1MultiArrayView_1a5620a71abd33556ab702350b31b123da" refkind="member"><highlight class="normal"><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, T, StrideTag&gt;::bind</ref><sp/>(<ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref><sp/>d)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NNew<sp/>=<sp/>(N-1<sp/>==<sp/>0)<sp/>?<sp/>1<sp/>:<sp/>N-1;</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector &lt;MultiArrayIndex, NNew&gt;</ref><sp/><ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>,<sp/><ref refid="classvigra_1_1MultiArrayView_1a3fee5f2594095fe1e747155d6bad57b0" kindref="member">stride</ref>;</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>remaining<sp/>dimensions<sp/>are<sp/>0..n-1,n+1..N-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(N-1<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a93b4cd51930b5c3f49081829c06a10da" kindref="member">std::copy</ref><sp/>(<ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref>.begin<sp/>(),<sp/><ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref>.begin<sp/>()<sp/>+<sp/>M,<sp/>shape.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref><sp/>());</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a93b4cd51930b5c3f49081829c06a10da" kindref="member">std::copy</ref><sp/>(<ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref>.begin<sp/>()<sp/>+<sp/>M+1,<sp/><ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref>.end<sp/>(),</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref><sp/>()<sp/>+<sp/>M);</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a93b4cd51930b5c3f49081829c06a10da" kindref="member">std::copy</ref><sp/>(<ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>.begin<sp/>(),<sp/><ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>.begin<sp/>()<sp/>+<sp/>M,<sp/>stride.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref><sp/>());</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a93b4cd51930b5c3f49081829c06a10da" kindref="member">std::copy</ref><sp/>(<ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>.begin<sp/>()<sp/>+<sp/>M+1,<sp/><ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>.end<sp/>(),</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref><sp/>()<sp/>+<sp/>M);</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&lt;N-1,<sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>detail::MaybeStrided&lt;StrideTag,<sp/>M&gt;::type&gt;</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>,<sp/><ref refid="classvigra_1_1MultiArrayView_1a3fee5f2594095fe1e747155d6bad57b0" kindref="member">stride</ref>,<sp/><ref refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" kindref="member">m_ptr</ref><sp/>+<sp/>d<sp/>*<sp/><ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>[M]);</highlight></codeline>
<codeline lineno="2151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&lt;N<sp/>-<sp/>1,<sp/>T,<sp/>StrideTag&gt;</highlight></codeline>
<codeline lineno="2155" refid="classvigra_1_1MultiArrayView_1a8ca5e1bbe796369b97ee1711671b9ca7" refkind="member"><highlight class="normal"><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, T, StrideTag&gt;::bindOuter</ref><sp/>(<ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref><sp/>d)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NNew<sp/>=<sp/>(N-1<sp/>==<sp/>0)<sp/>?<sp/>1<sp/>:<sp/>N-1;</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector &lt;MultiArrayIndex, NNew&gt;</ref><sp/>inner_shape,<sp/>inner_stride;</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(N-1<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inner_shape<sp/>[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inner_stride<sp/>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inner_shape.<ref refid="classvigra_1_1TinyVectorBase_1a5cdf4fd70a8962218c77deb30edce0b5" kindref="member">init</ref><sp/>(<ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref>.begin<sp/>(),<sp/><ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref>.end<sp/>()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inner_stride.<ref refid="classvigra_1_1TinyVectorBase_1a5cdf4fd70a8962218c77deb30edce0b5" kindref="member">init</ref><sp/>(<ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>.begin<sp/>(),<sp/><ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>.end<sp/>()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&lt;N-1,<sp/>T,<sp/>StrideTag&gt;<sp/>(inner_shape,<sp/>inner_stride,</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" kindref="member">m_ptr</ref><sp/>+<sp/>d<sp/>*<sp/><ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref><sp/>[N-1]);</highlight></codeline>
<codeline lineno="2171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"></highlight></codeline>
<codeline lineno="2173"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&lt;N<sp/>-<sp/>1,<sp/>T,<sp/><ref refid="structvigra_1_1StridedArrayTag" kindref="compound">StridedArrayTag</ref>&gt;</highlight></codeline>
<codeline lineno="2175" refid="classvigra_1_1MultiArrayView_1acf6b7dc4ce0db4457beed5f3d90b5e7e" refkind="member"><highlight class="normal"><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, T, StrideTag&gt;::bindInner</ref><sp/>(<ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref><sp/>d)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NNew<sp/>=<sp/>(N-1<sp/>==<sp/>0)<sp/>?<sp/>1<sp/>:<sp/>N-1;</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector &lt;MultiArrayIndex, NNew&gt;</ref><sp/>outer_shape,<sp/>outer_stride;</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(N-1<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outer_shape<sp/>[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outer_stride<sp/>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outer_shape.<ref refid="classvigra_1_1TinyVectorBase_1a5cdf4fd70a8962218c77deb30edce0b5" kindref="member">init</ref><sp/>(<ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref>.begin<sp/>()<sp/>+<sp/>1,<sp/><ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref>.end<sp/>());</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outer_stride.<ref refid="classvigra_1_1TinyVectorBase_1a5cdf4fd70a8962218c77deb30edce0b5" kindref="member">init</ref><sp/>(<ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>.begin<sp/>()<sp/>+<sp/>1,<sp/><ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>.end<sp/>());</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&lt;N-1,<sp/>T,<sp/><ref refid="structvigra_1_1StridedArrayTag" kindref="compound">StridedArrayTag</ref>&gt;</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(outer_shape,<sp/>outer_stride,<sp/><ref refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" kindref="member">m_ptr</ref><sp/>+<sp/>d<sp/>*<sp/><ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref><sp/>[0]);</highlight></codeline>
<codeline lineno="2191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"></highlight></codeline>
<codeline lineno="2193"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&lt;N<sp/>-<sp/>1,<sp/>T,<sp/><ref refid="structvigra_1_1StridedArrayTag" kindref="compound">StridedArrayTag</ref>&gt;</highlight></codeline>
<codeline lineno="2195" refid="classvigra_1_1MultiArrayView_1a1e24fcdbd0c298cbbb07fe21368d5abc" refkind="member"><highlight class="normal"><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, T, StrideTag&gt;::bindAt</ref><sp/>(<ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref><sp/>n,<sp/><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref><sp/>d)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/>vigra_precondition<sp/>(</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>&lt;<sp/>static_cast<sp/>&lt;int&gt;<sp/>(N),</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MultiArrayView<sp/>&lt;N,<sp/>T,<sp/>StrideTag&gt;::bindAt():<sp/>dimension<sp/>out<sp/>of<sp/>range.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NNew<sp/>=<sp/>(N-1<sp/>==<sp/>0)<sp/>?<sp/>1<sp/>:<sp/>N-1;</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector &lt;MultiArrayIndex, NNew&gt;</ref><sp/><ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>,<sp/><ref refid="classvigra_1_1MultiArrayView_1a3fee5f2594095fe1e747155d6bad57b0" kindref="member">stride</ref>;</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>remaining<sp/>dimensions<sp/>are<sp/>0..n-1,n+1..N-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(N-1<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape<sp/>[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride<sp/>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a93b4cd51930b5c3f49081829c06a10da" kindref="member">std::copy</ref><sp/>(<ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref>.begin<sp/>(),<sp/><ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref>.begin<sp/>()<sp/>+<sp/>n,<sp/>shape.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref><sp/>());</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a93b4cd51930b5c3f49081829c06a10da" kindref="member">std::copy</ref><sp/>(<ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref>.begin<sp/>()<sp/>+<sp/>n+1,<sp/><ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref>.end<sp/>(),</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref><sp/>()<sp/>+<sp/>n);</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a93b4cd51930b5c3f49081829c06a10da" kindref="member">std::copy</ref><sp/>(<ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>.begin<sp/>(),<sp/><ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>.begin<sp/>()<sp/>+<sp/>n,<sp/>stride.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref><sp/>());</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a93b4cd51930b5c3f49081829c06a10da" kindref="member">std::copy</ref><sp/>(<ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>.begin<sp/>()<sp/>+<sp/>n+1,<sp/><ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>.end<sp/>(),</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stride.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref><sp/>()<sp/>+<sp/>n);</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&lt;N-1,<sp/>T,<sp/><ref refid="structvigra_1_1StridedArrayTag" kindref="compound">StridedArrayTag</ref>&gt;</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>,<sp/><ref refid="classvigra_1_1MultiArrayView_1a3fee5f2594095fe1e747155d6bad57b0" kindref="member">stride</ref>,<sp/><ref refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" kindref="member">m_ptr</ref><sp/>+<sp/>d<sp/>*<sp/><ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>[n]);</highlight></codeline>
<codeline lineno="2219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"></highlight></codeline>
<codeline lineno="2221"><highlight class="normal"></highlight></codeline>
<codeline lineno="2222"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N+1, typename ExpandElementResult&lt;T&gt;::type</ref>,<sp/><ref refid="structvigra_1_1StridedArrayTag" kindref="compound">StridedArrayTag</ref>&gt;</highlight></codeline>
<codeline lineno="2224" refid="classvigra_1_1MultiArrayView_1ab005801d6e252c3ae75ce9da36d1a600" refkind="member"><highlight class="normal"><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, T, StrideTag&gt;::expandElements</ref>(<ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref><sp/>d)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/>vigra_precondition(0<sp/>&lt;=<sp/>d<sp/>&amp;&amp;<sp/>d<sp/>&lt;=<sp/>static_cast<sp/>&lt;difference_type_1&gt;<sp/>(N),</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MultiArrayView&lt;N,<sp/>...&gt;::expandElements(d):<sp/>0<sp/>&lt;=<sp/>&apos;d&apos;<sp/>&lt;=<sp/>N<sp/>required.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>elementSize<sp/>=<sp/>ExpandElementResult&lt;T&gt;::size;</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">MultiArrayShape&lt;N+1&gt;::type</ref><sp/>newShape,<sp/>newStrides;</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k&lt;d;<sp/>++k)</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newShape[k]<sp/>=<sp/><ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref>[k];</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newStrides[k]<sp/>=<sp/><ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>[k]*elementSize;</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/>newShape[d]<sp/>=<sp/>elementSize;</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/>newStrides[d]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=d;<sp/>k&lt;N;<sp/>++k)</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newShape[k+1]<sp/>=<sp/><ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref>[k];</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newStrides[k+1]<sp/>=<sp/><ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>[k]*elementSize;</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ExpandElementResult&lt;T&gt;::type<sp/>U;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;N+1, U, StridedArrayTag&gt;</ref>(</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newShape,<sp/>newStrides,<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">U*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" kindref="member">m_ptr</ref>));</highlight></codeline>
<codeline lineno="2249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"></highlight></codeline>
<codeline lineno="2251"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N+1, T, StrideTag&gt;</ref></highlight></codeline>
<codeline lineno="2253" refid="classvigra_1_1MultiArrayView_1a70170072585722399abd07c46f168909" refkind="member"><highlight class="normal"><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, T, StrideTag&gt;::insertSingletonDimension</ref><sp/>(<ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/>vigra_precondition<sp/>(</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>&lt;=<sp/>i<sp/>&amp;&amp;<sp/>i<sp/>&lt;=<sp/>static_cast<sp/>&lt;difference_type_1&gt;<sp/>(N),</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MultiArrayView<sp/>&lt;N,<sp/>T,<sp/>StrideTag&gt;::insertSingletonDimension():<sp/>index<sp/>out<sp/>of<sp/>range.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1TinyVector" kindref="compound" tooltip="Class for fixed size vectors.This class contains an array of size SIZE of the specified VALUETYPE...">TinyVector &lt;MultiArrayIndex, N+1&gt;</ref><sp/><ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>,<sp/><ref refid="classvigra_1_1MultiArrayView_1a3fee5f2594095fe1e747155d6bad57b0" kindref="member">stride</ref>;</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a93b4cd51930b5c3f49081829c06a10da" kindref="member">std::copy</ref><sp/>(<ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref>.begin<sp/>(),<sp/><ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref>.begin<sp/>()<sp/>+<sp/>i,<sp/>shape.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref><sp/>());</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a93b4cd51930b5c3f49081829c06a10da" kindref="member">std::copy</ref><sp/>(<ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref>.begin<sp/>()<sp/>+<sp/>i,<sp/><ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref>.end<sp/>(),<sp/>shape.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref><sp/>()<sp/>+<sp/>i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a93b4cd51930b5c3f49081829c06a10da" kindref="member">std::copy</ref><sp/>(<ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>.begin<sp/>(),<sp/><ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>.begin<sp/>()<sp/>+<sp/>i,<sp/>stride.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref><sp/>());</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a93b4cd51930b5c3f49081829c06a10da" kindref="member">std::copy</ref><sp/>(<ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>.begin<sp/>()<sp/>+<sp/>i,<sp/><ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>.end<sp/>(),<sp/>stride.<ref refid="classvigra_1_1TinyVectorBase_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref><sp/>()<sp/>+<sp/>i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/>shape[i]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/>stride[i]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"></highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N+1, T, StrideTag&gt;</ref>(<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>,<sp/><ref refid="classvigra_1_1MultiArrayView_1a3fee5f2594095fe1e747155d6bad57b0" kindref="member">stride</ref>,<sp/><ref refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" kindref="member">m_ptr</ref>);</highlight></codeline>
<codeline lineno="2267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"></highlight></codeline>
<codeline lineno="2269"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NormTraits&lt;MultiArrayView<sp/>&lt;N,<sp/>T,<sp/>StrideTag&gt;<sp/>&gt;::NormType</highlight></codeline>
<codeline lineno="2271" refid="classvigra_1_1MultiArrayView_1a0816d7af1f17517f39dbef405d2e4a47" refkind="member"><highlight class="normal"><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, T, StrideTag&gt;::norm</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useSquaredNorm)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NormTraits&lt;MultiArrayView&gt;::NormType<sp/>NormType;</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"></highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(type)</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NormType<sp/>res<sp/>=<sp/>NumericTraits&lt;NormType&gt;::zero();</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::reduceOverMultiArray(<ref refid="classvigra_1_1MultiArrayView_1a6da88764aadffdf26736523ba73a53b2" kindref="member">traverser_begin</ref>(),<sp/><ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(),<sp/></highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res,<sp/></highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::MaxNormReduceFunctor(),</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MetaInt&lt;actual_dimension-1&gt;());</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NormType<sp/>res<sp/>=<sp/>NumericTraits&lt;NormType&gt;::zero();</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::reduceOverMultiArray(<ref refid="classvigra_1_1MultiArrayView_1a6da88764aadffdf26736523ba73a53b2" kindref="member">traverser_begin</ref>(),<sp/><ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(),<sp/></highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res,<sp/></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::L1NormReduceFunctor(),</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MetaInt&lt;actual_dimension-1&gt;());</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(useSquaredNorm)</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__FixedPointOperations_1ga22d75753836176f3d172f58be11ecc4c" kindref="member" tooltip="square root.">sqrt</ref>((NormType)<ref refid="classvigra_1_1MultiArrayView_1a6ada450d8e72c934a5406d1c2b5cf033" kindref="member">squaredNorm</ref>());</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NormType<sp/>normMax<sp/>=<sp/>NumericTraits&lt;NormType&gt;::zero();</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::reduceOverMultiArray(<ref refid="classvigra_1_1MultiArrayView_1a6da88764aadffdf26736523ba73a53b2" kindref="member">traverser_begin</ref>(),<sp/><ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(),<sp/></highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normMax,<sp/></highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::MaxNormReduceFunctor(),</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MetaInt&lt;actual_dimension-1&gt;());</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(normMax<sp/>==<sp/>NumericTraits&lt;NormType&gt;::zero())</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>normMax;</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NormType<sp/>res<sp/><sp/>=<sp/>NumericTraits&lt;NormType&gt;::zero();</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::reduceOverMultiArray(<ref refid="classvigra_1_1MultiArrayView_1a6da88764aadffdf26736523ba73a53b2" kindref="member">traverser_begin</ref>(),<sp/><ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(),<sp/></highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res,<sp/></highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::WeightedL2NormReduceFunctor&lt;NormType&gt;(1.0/normMax),</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MetaInt&lt;actual_dimension-1&gt;());</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__FixedPointOperations_1ga22d75753836176f3d172f58be11ecc4c" kindref="member" tooltip="square root.">sqrt</ref>(res)*normMax;</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra_precondition(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MultiArrayView::norm():<sp/>Unknown<sp/>norm<sp/>type.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NumericTraits&lt;NormType&gt;::zero();<sp/></highlight><highlight class="comment">//<sp/>unreachable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"></highlight></codeline>
<codeline lineno="2324"><highlight class="normal"></highlight></codeline>
<codeline lineno="2325"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2326"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2327"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>norm<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2328"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2329"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"></highlight></codeline>
<codeline lineno="2331"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NormTraits&lt;MultiArrayView<sp/>&lt;N,<sp/>T,<sp/>StrideTag&gt;<sp/>&gt;::SquaredNormType</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><ref refid="classvigra_1_1MultiArrayView_1a6ada450d8e72c934a5406d1c2b5cf033" kindref="member">squaredNorm</ref>(<ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, T, StrideTag&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>a)</highlight></codeline>
<codeline lineno="2334"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.<ref refid="classvigra_1_1MultiArrayView_1a6ada450d8e72c934a5406d1c2b5cf033" kindref="member">squaredNorm</ref>();</highlight></codeline>
<codeline lineno="2336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"></highlight></codeline>
<codeline lineno="2338"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NormTraits&lt;MultiArrayView<sp/>&lt;N,<sp/>T,<sp/>StrideTag&gt;<sp/>&gt;::NormType</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><ref refid="classvigra_1_1MultiArrayView_1a0816d7af1f17517f39dbef405d2e4a47" kindref="member">norm</ref>(MultiArrayView<sp/>&lt;N,<sp/>T,<sp/>StrideTag&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>a)</highlight></codeline>
<codeline lineno="2341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.norm();</highlight></codeline>
<codeline lineno="2343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"></highlight></codeline>
<codeline lineno="2345"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2346"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2347"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArray<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2348"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2349"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2350"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2351"><highlight class="comment">/**<sp/>\brief<sp/>Main<sp/>&lt;TT&gt;MultiArray&lt;/TT&gt;<sp/>class<sp/>containing<sp/>the<sp/>memory</highlight></codeline>
<codeline lineno="2352"><highlight class="comment"><sp/><sp/><sp/><sp/>management.</highlight></codeline>
<codeline lineno="2353"><highlight class="comment"></highlight></codeline>
<codeline lineno="2354"><highlight class="comment">This<sp/>class<sp/>inherits<sp/>the<sp/>interface<sp/>of<sp/>MultiArrayView,<sp/>and<sp/>implements</highlight></codeline>
<codeline lineno="2355"><highlight class="comment">the<sp/>memory<sp/>ownership.</highlight></codeline>
<codeline lineno="2356"><highlight class="comment">MultiArray&apos;s<sp/>are<sp/>always<sp/>unstrided,<sp/>striding<sp/>them<sp/>creates<sp/>a<sp/>MultiArrayView.</highlight></codeline>
<codeline lineno="2357"><highlight class="comment"></highlight></codeline>
<codeline lineno="2358"><highlight class="comment"></highlight></codeline>
<codeline lineno="2359"><highlight class="comment">The<sp/>template<sp/>parameters<sp/>are<sp/>as<sp/>follows</highlight></codeline>
<codeline lineno="2360"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="2361"><highlight class="comment"><sp/><sp/><sp/><sp/>N:<sp/>the<sp/>array<sp/>dimension</highlight></codeline>
<codeline lineno="2362"><highlight class="comment"></highlight></codeline>
<codeline lineno="2363"><highlight class="comment"><sp/><sp/><sp/><sp/>T:<sp/>the<sp/>type<sp/>of<sp/>the<sp/>array<sp/>elements</highlight></codeline>
<codeline lineno="2364"><highlight class="comment"></highlight></codeline>
<codeline lineno="2365"><highlight class="comment"><sp/><sp/><sp/><sp/>A:<sp/>the<sp/>allocator<sp/>used<sp/>for<sp/>internal<sp/>storage<sp/>management</highlight></codeline>
<codeline lineno="2366"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(default:<sp/>std::allocator&lt;T&gt;)</highlight></codeline>
<codeline lineno="2367"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="2368"><highlight class="comment"></highlight></codeline>
<codeline lineno="2369"><highlight class="comment">&lt;b&gt;\#include&lt;/b&gt;</highlight></codeline>
<codeline lineno="2370"><highlight class="comment">\&lt;vigra/multi_array.hxx\&gt;</highlight></codeline>
<codeline lineno="2371"><highlight class="comment"></highlight></codeline>
<codeline lineno="2372"><highlight class="comment">Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="2373"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2374"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">T,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">A<sp/></highlight><highlight class="comment">/*<sp/>default<sp/>already<sp/>declared<sp/>above<sp/>*/</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="2375" refid="classvigra_1_1MultiArray" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&lt;N,<sp/>T&gt;</highlight></codeline>
<codeline lineno="2376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"></highlight></codeline>
<codeline lineno="2378"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;N, T&gt;::actual_dimension</ref>;</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2381"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>allocator<sp/>type<sp/>used<sp/>to<sp/>allocate<sp/>the<sp/>memory</highlight></codeline>
<codeline lineno="2382"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2383" refid="classvigra_1_1MultiArray_1a8876e3aa4a94471d5f91b914f0d37759" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>A<sp/><ref refid="classvigra_1_1MultiArray_1a8876e3aa4a94471d5f91b914f0d37759" kindref="member">allocator_type</ref>;</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2385"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>view<sp/>type<sp/>associated<sp/>with<sp/>this<sp/>array.</highlight></codeline>
<codeline lineno="2386"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2387" refid="classvigra_1_1MultiArray_1af81e3b6334c7d3981b0be15ddf5b1cce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView &lt;N, T&gt;</ref><sp/><ref refid="classvigra_1_1MultiArray_1af81e3b6334c7d3981b0be15ddf5b1cce" kindref="member">view_type</ref>;</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2389"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>matrix<sp/>type<sp/>associated<sp/>with<sp/>this<sp/>array.</highlight></codeline>
<codeline lineno="2390"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2391" refid="classvigra_1_1MultiArray_1ad563f259ed215bbfb3c115ec44238e88" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray &lt;N, T, A&gt;</ref><sp/><ref refid="classvigra_1_1MultiArray_1ad563f259ed215bbfb3c115ec44238e88" kindref="member">matrix_type</ref>;</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2393"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>array&apos;s<sp/>value<sp/>type</highlight></codeline>
<codeline lineno="2394"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2395" refid="classvigra_1_1MultiArray_1adee9ba124f2423126f678c913667a229" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a265a253612b46abed17c61b0a5e5ce30" kindref="member">view_type::value_type</ref><sp/><ref refid="classvigra_1_1MultiArray_1adee9ba124f2423126f678c913667a229" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2397"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>pointer<sp/>type</highlight></codeline>
<codeline lineno="2398"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2399" refid="classvigra_1_1MultiArray_1a7c3b5f1ed08b27119127cb725966a945" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1ad25b518036b886d8f35a3c059301d007" kindref="member">view_type::pointer</ref><sp/><ref refid="classvigra_1_1MultiArray_1a7c3b5f1ed08b27119127cb725966a945" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2401"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>const<sp/>pointer<sp/>type</highlight></codeline>
<codeline lineno="2402"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2403" refid="classvigra_1_1MultiArray_1a6ace1aa97c0128931a921479d2df41c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a13c57dab17e2c903cadfa5e35ba84064" kindref="member">view_type::const_pointer</ref><sp/><ref refid="classvigra_1_1MultiArray_1a6ace1aa97c0128931a921479d2df41c2" kindref="member">const_pointer</ref>;</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2405"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>reference<sp/>type<sp/>(result<sp/>of<sp/>operator[])</highlight></codeline>
<codeline lineno="2406"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2407" refid="classvigra_1_1MultiArray_1a7ea9d2af939d562b74071b884d5e59b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1abe8933d436779a43cb5c1896ff5f2918" kindref="member">view_type::reference</ref><sp/><ref refid="classvigra_1_1MultiArray_1a7ea9d2af939d562b74071b884d5e59b3" kindref="member">reference</ref>;</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2409"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>const<sp/>reference<sp/>type<sp/>(result<sp/>of<sp/>operator[]<sp/>const)</highlight></codeline>
<codeline lineno="2410"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2411" refid="classvigra_1_1MultiArray_1a163353faff9e2af647551a93d2db5463" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1afdb67657e63a66ed3fae7b0c9fd81b48" kindref="member">view_type::const_reference</ref><sp/><ref refid="classvigra_1_1MultiArray_1a163353faff9e2af647551a93d2db5463" kindref="member">const_reference</ref>;</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2413"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>size<sp/>type</highlight></codeline>
<codeline lineno="2414"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2415" refid="classvigra_1_1MultiArray_1a49de2bda8c5700d3d386b176401e4a66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1aa0f974ecbf50663cc55fb80dc82af95b" kindref="member">view_type::size_type</ref><sp/><ref refid="classvigra_1_1MultiArray_1a49de2bda8c5700d3d386b176401e4a66" kindref="member">size_type</ref>;</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2417"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>difference<sp/>type<sp/>(used<sp/>for<sp/>multi-dimensional<sp/>offsets<sp/>and<sp/>indices)</highlight></codeline>
<codeline lineno="2418"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2419" refid="classvigra_1_1MultiArray_1a7a3c9714bbd0b64760c377a88fd36c63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">view_type::difference_type</ref><sp/><ref refid="classvigra_1_1MultiArray_1a7a3c9714bbd0b64760c377a88fd36c63" kindref="member">difference_type</ref>;</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2421"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>difference<sp/>and<sp/>index<sp/>type<sp/>for<sp/>a<sp/>single<sp/>dimension</highlight></codeline>
<codeline lineno="2422"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2423" refid="classvigra_1_1MultiArray_1a6ac789163dd290addb14a4330998df81" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">view_type::difference_type_1</ref><sp/><ref refid="classvigra_1_1MultiArray_1a6ac789163dd290addb14a4330998df81" kindref="member">difference_type_1</ref>;</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2425"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>traverser<sp/>type</highlight></codeline>
<codeline lineno="2426"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vigra::detail::MultiIteratorChooser<sp/>&lt;</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvigra_1_1UnstridedArrayTag" kindref="compound">UnstridedArrayTag</ref>&gt;::template<sp/>Traverser<sp/>&lt;N,<sp/>T,<sp/>T<sp/>&amp;,<sp/>T<sp/>*&gt;::type</highlight></codeline>
<codeline lineno="2429" refid="classvigra_1_1MultiArray_1a25503acdb8a49fc3ce1c8a0697440f54" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray_1a25503acdb8a49fc3ce1c8a0697440f54" kindref="member">traverser</ref>;</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2431"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>traverser<sp/>type<sp/>to<sp/>const<sp/>data</highlight></codeline>
<codeline lineno="2432"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>vigra::detail::MultiIteratorChooser<sp/>&lt;</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structvigra_1_1UnstridedArrayTag" kindref="compound">UnstridedArrayTag</ref>&gt;::template<sp/>Traverser<sp/>&lt;N,<sp/>T,<sp/>T<sp/>const<sp/>&amp;,<sp/>T<sp/>const<sp/>*&gt;::type</highlight></codeline>
<codeline lineno="2435" refid="classvigra_1_1MultiArray_1a6147584bb2ee1463a0ad29e120b4d12e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray_1a6147584bb2ee1463a0ad29e120b4d12e" kindref="member">const_traverser</ref>;</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2437"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>sequential<sp/>(random<sp/>access)<sp/>iterator<sp/>type</highlight></codeline>
<codeline lineno="2438"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2439" refid="classvigra_1_1MultiArray_1a35c955cacac6aacaa1e82874b1628865" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/>*<sp/><ref refid="classvigra_1_1MultiArray_1a35c955cacac6aacaa1e82874b1628865" kindref="member">iterator</ref>;</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2441"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>sequential<sp/>(random<sp/>access)<sp/>const<sp/>iterator<sp/>type</highlight></codeline>
<codeline lineno="2442"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2443" refid="classvigra_1_1MultiArray_1aab6e0e1e7dc8dda19dfa814ed6776833" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/>*<sp/><ref refid="classvigra_1_1MultiArray_1aab6e0e1e7dc8dda19dfa814ed6776833" kindref="member">const_iterator</ref>;</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"></highlight></codeline>
<codeline lineno="2445"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"></highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>difference_type::value_type<sp/>diff_zero_t;</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2449"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>the<sp/>allocator<sp/>used<sp/>to<sp/>allocate<sp/>the<sp/>memory</highlight></codeline>
<codeline lineno="2450"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2451" refid="classvigra_1_1MultiArray_1a2274deb28809e2e5a5571f525deeb1d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray_1a8876e3aa4a94471d5f91b914f0d37759" kindref="member">allocator_type</ref><sp/><ref refid="classvigra_1_1MultiArray_1a2274deb28809e2e5a5571f525deeb1d0" kindref="member">m_alloc</ref>;</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2453"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>allocate<sp/>memory<sp/>for<sp/>s<sp/>pixels,<sp/>write<sp/>its<sp/>address<sp/>into<sp/>the<sp/>given</highlight></codeline>
<codeline lineno="2454"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>and<sp/>initialize<sp/>the<sp/>pixels<sp/>with<sp/>init.</highlight></codeline>
<codeline lineno="2455"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>allocate<sp/>(<ref refid="classvigra_1_1MultiArrayView_1ad25b518036b886d8f35a3c059301d007" kindref="member">pointer</ref><sp/>&amp;ptr,<sp/><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref><sp/>s,<sp/><ref refid="classvigra_1_1MultiArrayView_1afdb67657e63a66ed3fae7b0c9fd81b48" kindref="member">const_reference</ref><sp/>init);</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2458"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>allocate<sp/>memory<sp/>for<sp/>s<sp/>pixels,<sp/>write<sp/>its<sp/>address<sp/>into<sp/>the<sp/>given</highlight></codeline>
<codeline lineno="2459"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>and<sp/>initialize<sp/>the<sp/>linearized<sp/>pixels<sp/>to<sp/>the<sp/>values<sp/>of<sp/>init.</highlight></codeline>
<codeline lineno="2460"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>allocate<sp/>(<ref refid="classvigra_1_1MultiArrayView_1ad25b518036b886d8f35a3c059301d007" kindref="member">pointer</ref><sp/>&amp;ptr,<sp/><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref><sp/>s,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>init);</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2464"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>allocate<sp/>memory,<sp/>write<sp/>its<sp/>address<sp/>into<sp/>the<sp/>given</highlight></codeline>
<codeline lineno="2465"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>and<sp/>initialize<sp/>it<sp/>by<sp/>copying<sp/>the<sp/>data<sp/>from<sp/>the<sp/>given<sp/>MultiArrayView.</highlight></codeline>
<codeline lineno="2466"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>allocate<sp/>(<ref refid="classvigra_1_1MultiArrayView_1ad25b518036b886d8f35a3c059301d007" kindref="member">pointer</ref><sp/>&amp;ptr,<sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;N, U, StrideTag&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>init);</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2470"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>deallocate<sp/>the<sp/>memory<sp/>(of<sp/>length<sp/>s)<sp/>starting<sp/>at<sp/>the<sp/>given<sp/>address.</highlight></codeline>
<codeline lineno="2471"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deallocate<sp/>(<ref refid="classvigra_1_1MultiArrayView_1ad25b518036b886d8f35a3c059301d007" kindref="member">pointer</ref><sp/>&amp;ptr,<sp/><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref><sp/>s);</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"></highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copyOrReshape<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;N, U, StrideTag&gt;</ref><sp/>&amp;rhs);</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2477"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>default<sp/>constructor</highlight></codeline>
<codeline lineno="2478"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2479" refid="classvigra_1_1MultiArray_1a596f3b4b4084da422cb3320e165e1d89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>()</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&lt;N,<sp/>T&gt;<sp/>(<ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref><sp/>(diff_zero_t(0)),</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref><sp/>(diff_zero_t(0)),<sp/>0)</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2484"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>construct<sp/>with<sp/>given<sp/>allocator</highlight></codeline>
<codeline lineno="2485"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2486" refid="classvigra_1_1MultiArray_1a7c046d7813f92f155a026b57327f43d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>(<ref refid="classvigra_1_1MultiArray_1a8876e3aa4a94471d5f91b914f0d37759" kindref="member">allocator_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>alloc)</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&lt;N,<sp/>T&gt;<sp/>(<ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref><sp/>(diff_zero_t(0)),</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref><sp/>(diff_zero_t(0)),<sp/>0),</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_alloc(alloc)</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2492"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>construct<sp/>with<sp/>given<sp/>length</highlight></codeline>
<codeline lineno="2493"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2494"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>only<sp/>for<sp/>1-dimensional<sp/>arrays<sp/>(&lt;tt&gt;N==1&lt;/tt&gt;).</highlight></codeline>
<codeline lineno="2495"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>(<ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">difference_type_1</ref><sp/>length,</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocator_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>alloc<sp/>=<sp/>allocator_type());</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2499"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>construct<sp/>with<sp/>given<sp/>shape</highlight></codeline>
<codeline lineno="2500"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref><sp/>&amp;shape,</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocator_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>alloc<sp/>=<sp/>allocator_type());</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2504"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>construct<sp/>from<sp/>shape<sp/>with<sp/>an<sp/>initial<sp/>value</highlight></codeline>
<codeline lineno="2505"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref><sp/>&amp;shape,<sp/><ref refid="classvigra_1_1MultiArrayView_1afdb67657e63a66ed3fae7b0c9fd81b48" kindref="member">const_reference</ref><sp/>init,</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocator_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>alloc<sp/>=<sp/>allocator_type());</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2509"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>construct<sp/>from<sp/>shape<sp/>and<sp/>copy<sp/>values<sp/>from<sp/>the<sp/>given<sp/>array</highlight></codeline>
<codeline lineno="2510"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref><sp/>&amp;shape,<sp/><ref refid="classvigra_1_1MultiArrayView_1a13c57dab17e2c903cadfa5e35ba84064" kindref="member">const_pointer</ref><sp/>init,</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocator_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>alloc<sp/>=<sp/>allocator_type());</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2514"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>copy<sp/>constructor</highlight></codeline>
<codeline lineno="2515"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2516" refid="classvigra_1_1MultiArray_1a64aab8620a7edfa633ed4d5553f5a33c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>&amp;rhs)</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&lt;N,<sp/>T&gt;<sp/>(rhs.<ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref>,<sp/>rhs.<ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>,<sp/>0),</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_alloc<sp/>(rhs.m_alloc)</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocate<sp/>(this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" kindref="member">m_ptr</ref>,<sp/>this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a76f6c30e31c82e61b8b7e09ce3d8871d" kindref="member">elementCount</ref><sp/>(),<sp/>rhs.<ref refid="classvigra_1_1MultiArrayView_1a9711a38a3b5f2d85c44505938499a0e2" kindref="member">data</ref><sp/>());</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2523"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>constructor<sp/>from<sp/>an<sp/>array<sp/>expression</highlight></codeline>
<codeline lineno="2524"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Expression&gt;</highlight></codeline>
<codeline lineno="2526" refid="classvigra_1_1MultiArray_1a25dbbf5b811952bdaccbc1d98b19a3a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>(multi_math::MultiMathOperand&lt;Expression&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs,</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray_1a8876e3aa4a94471d5f91b914f0d37759" kindref="member">allocator_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>alloc<sp/>=<sp/><ref refid="classvigra_1_1MultiArray_1a8876e3aa4a94471d5f91b914f0d37759" kindref="member">allocator_type</ref>())</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView</ref><sp/>&lt;N,<sp/>T&gt;<sp/>(<ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref><sp/>(diff_zero_t(0)),</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref><sp/>(diff_zero_t(0)),<sp/>0),</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_alloc<sp/>(alloc)</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multi_math::detail::assignOrResize(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>rhs);</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2535"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>construct<sp/>by<sp/>copying<sp/>from<sp/>a<sp/>MultiArrayView</highlight></codeline>
<codeline lineno="2536"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;N, U, StrideTag&gt;</ref><sp/><sp/>&amp;rhs,</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocator_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>alloc<sp/>=<sp/>allocator_type());</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2541"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>assignment.&lt;br&gt;</highlight></codeline>
<codeline lineno="2542"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>the<sp/>size<sp/>of<sp/>\a<sp/>rhs<sp/>is<sp/>the<sp/>same<sp/>as<sp/>the<sp/>left-hand<sp/>side<sp/>arrays&apos;s<sp/>old<sp/>size,<sp/>only</highlight></codeline>
<codeline lineno="2543"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>data<sp/>are<sp/>copied.<sp/>Otherwise,<sp/>new<sp/>storage<sp/>is<sp/>allocated,<sp/>which<sp/>invalidates<sp/>all</highlight></codeline>
<codeline lineno="2544"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objects<sp/>(array<sp/>views,<sp/>iterators)<sp/>depending<sp/>on<sp/>the<sp/>lhs<sp/>array.</highlight></codeline>
<codeline lineno="2545"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2546" refid="classvigra_1_1MultiArray_1aa573ed91bf7c43ac1301cc019a5820a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiArrayView_1aaf7167061b3a03a33146694f32aa380f" kindref="member">operator= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>&amp;rhs)</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;rhs)</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;copyOrReshape(rhs);</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2553"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>assignment<sp/>from<sp/>arbitrary<sp/>MultiArrayView.&lt;br&gt;</highlight></codeline>
<codeline lineno="2554"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>the<sp/>size<sp/>of<sp/>\a<sp/>rhs<sp/>is<sp/>the<sp/>same<sp/>as<sp/>the<sp/>left-hand<sp/>side<sp/>arrays&apos;s<sp/>old<sp/>size,<sp/>only</highlight></codeline>
<codeline lineno="2555"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>data<sp/>are<sp/>copied.<sp/>Otherwise,<sp/>new<sp/>storage<sp/>is<sp/>allocated,<sp/>which<sp/>invalidates<sp/>all</highlight></codeline>
<codeline lineno="2556"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objects<sp/>(array<sp/>views,<sp/>iterators)<sp/>depending<sp/>on<sp/>the<sp/>lhs<sp/>array.</highlight></codeline>
<codeline lineno="2557"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="2559" refid="classvigra_1_1MultiArray_1aa04e374b14935a8cb65734c419874ee1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>&amp;<ref refid="classvigra_1_1MultiArrayView_1aaf7167061b3a03a33146694f32aa380f" kindref="member">operator= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;N, U, StrideTag&gt;</ref><sp/>&amp;rhs)</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;copyOrReshape(rhs);</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2565"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Add-assignment<sp/>from<sp/>arbitrary<sp/>MultiArrayView.<sp/>Fails<sp/>with</highlight></codeline>
<codeline lineno="2566"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;PreconditionViolation&lt;/tt&gt;<sp/>exception<sp/>when<sp/>the<sp/>shapes<sp/>do<sp/>not<sp/>match.</highlight></codeline>
<codeline lineno="2567"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="2569" refid="classvigra_1_1MultiArray_1ac1bb8327f4e4e58fa8123c5503fd912d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>&amp;<ref refid="classvigra_1_1MultiArrayView_1a0db6c678b054c0cfba823c0fd355cc92" kindref="member">operator+= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;N, U, StrideTag&gt;</ref><sp/>&amp;rhs)</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a0db6c678b054c0cfba823c0fd355cc92" kindref="member">view_type::operator+=</ref>(rhs);</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2575"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Subtract-assignment<sp/>from<sp/>arbitrary<sp/>MultiArrayView.<sp/>Fails<sp/>with</highlight></codeline>
<codeline lineno="2576"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;PreconditionViolation&lt;/tt&gt;<sp/>exception<sp/>when<sp/>the<sp/>shapes<sp/>do<sp/>not<sp/>match.</highlight></codeline>
<codeline lineno="2577"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="2579" refid="classvigra_1_1MultiArray_1a5df322338746f147fe4c51cd95fa1ed3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>&amp;<ref refid="classvigra_1_1MultiArrayView_1ac9d3cda29b22226f730c4520bcb2c1ad" kindref="member">operator-= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;N, U, StrideTag&gt;</ref><sp/>&amp;rhs)</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1ac9d3cda29b22226f730c4520bcb2c1ad" kindref="member">view_type::operator-=</ref>(rhs);</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2585"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Multiply-assignment<sp/>from<sp/>arbitrary<sp/>MultiArrayView.<sp/>Fails<sp/>with</highlight></codeline>
<codeline lineno="2586"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;PreconditionViolation&lt;/tt&gt;<sp/>exception<sp/>when<sp/>the<sp/>shapes<sp/>do<sp/>not<sp/>match.</highlight></codeline>
<codeline lineno="2587"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="2589" refid="classvigra_1_1MultiArray_1ab5abfd58da4e496b7ac6f31ab74f869e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>&amp;<ref refid="classvigra_1_1MultiArrayView_1a2246e065e45bd9bd792efabac9fab724" kindref="member">operator*= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;N, U, StrideTag&gt;</ref><sp/>&amp;rhs)</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a2246e065e45bd9bd792efabac9fab724" kindref="member">view_type::operator*=</ref>(rhs);</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2595"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Divide-assignment<sp/>from<sp/>arbitrary<sp/>MultiArrayView.<sp/>Fails<sp/>with</highlight></codeline>
<codeline lineno="2596"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;PreconditionViolation&lt;/tt&gt;<sp/>exception<sp/>when<sp/>the<sp/>shapes<sp/>do<sp/>not<sp/>match.</highlight></codeline>
<codeline lineno="2597"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="2599" refid="classvigra_1_1MultiArray_1aae7e28d153b8aea7880b9310942a96e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>&amp;<ref refid="classvigra_1_1MultiArrayView_1ae4dd7bff037e05a3580cd66ca857c3f2" kindref="member">operator/= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;N, U, StrideTag&gt;</ref><sp/>&amp;rhs)</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1ae4dd7bff037e05a3580cd66ca857c3f2" kindref="member">view_type::operator/=</ref>(rhs);</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2605"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Add-assignment<sp/>of<sp/>a<sp/>scalar.</highlight></codeline>
<codeline lineno="2606"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2607" refid="classvigra_1_1MultiArray_1afa950f74d05a3e46a65dcaa0e353ec8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>&amp;<ref refid="classvigra_1_1MultiArrayView_1a0db6c678b054c0cfba823c0fd355cc92" kindref="member">operator+= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;rhs)</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a0db6c678b054c0cfba823c0fd355cc92" kindref="member">view_type::operator+=</ref>(rhs);</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2613"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Subtract-assignment<sp/>of<sp/>a<sp/>scalar.</highlight></codeline>
<codeline lineno="2614"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2615" refid="classvigra_1_1MultiArray_1a5bd660af26f82ea07946ef35780a04a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>&amp;<ref refid="classvigra_1_1MultiArrayView_1ac9d3cda29b22226f730c4520bcb2c1ad" kindref="member">operator-= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;rhs)</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1ac9d3cda29b22226f730c4520bcb2c1ad" kindref="member">view_type::operator-=</ref>(rhs);</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2621"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Multiply-assignment<sp/>of<sp/>a<sp/>scalar.</highlight></codeline>
<codeline lineno="2622"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2623" refid="classvigra_1_1MultiArray_1a88ea293d8f6d74123071e5ee63fc0c5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>&amp;<ref refid="classvigra_1_1MultiArrayView_1a2246e065e45bd9bd792efabac9fab724" kindref="member">operator*= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;rhs)</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1a2246e065e45bd9bd792efabac9fab724" kindref="member">view_type::operator*=</ref>(rhs);</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2629"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Divide-assignment<sp/>of<sp/>a<sp/>scalar.</highlight></codeline>
<codeline lineno="2630"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2631" refid="classvigra_1_1MultiArray_1a3417966535ad503c8f293f298205a8f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>&amp;<ref refid="classvigra_1_1MultiArrayView_1ae4dd7bff037e05a3580cd66ca857c3f2" kindref="member">operator/= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;rhs)</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1ae4dd7bff037e05a3580cd66ca857c3f2" kindref="member">view_type::operator/=</ref>(rhs);</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2636"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Assignment<sp/>of<sp/>an<sp/>array<sp/>expression.<sp/>Fails<sp/>with</highlight></codeline>
<codeline lineno="2637"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;PreconditionViolation&lt;/tt&gt;<sp/>exception<sp/>when<sp/>the<sp/>shapes<sp/>do<sp/>not<sp/>match.</highlight></codeline>
<codeline lineno="2638"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Expression&gt;</highlight></codeline>
<codeline lineno="2640" refid="classvigra_1_1MultiArray_1ad4d7ed46ffb1338b0654272afa1682f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiArrayView_1aaf7167061b3a03a33146694f32aa380f" kindref="member">operator=</ref>(multi_math::MultiMathOperand&lt;Expression&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multi_math::detail::assignOrResize(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>rhs);</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2646"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Add-assignment<sp/>of<sp/>an<sp/>array<sp/>expression.<sp/>Fails<sp/>with</highlight></codeline>
<codeline lineno="2647"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;PreconditionViolation&lt;/tt&gt;<sp/>exception<sp/>when<sp/>the<sp/>shapes<sp/>do<sp/>not<sp/>match.</highlight></codeline>
<codeline lineno="2648"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Expression&gt;</highlight></codeline>
<codeline lineno="2650" refid="classvigra_1_1MultiArray_1a3afee44754e764e42527a74f10d91162" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiArrayView_1a0db6c678b054c0cfba823c0fd355cc92" kindref="member">operator+=</ref>(multi_math::MultiMathOperand&lt;Expression&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multi_math::detail::plusAssignOrResize(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>rhs);</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2656"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Subtract-assignment<sp/>of<sp/>an<sp/>array<sp/>expression.<sp/>Fails<sp/>with</highlight></codeline>
<codeline lineno="2657"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;PreconditionViolation&lt;/tt&gt;<sp/>exception<sp/>when<sp/>the<sp/>shapes<sp/>do<sp/>not<sp/>match.</highlight></codeline>
<codeline lineno="2658"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Expression&gt;</highlight></codeline>
<codeline lineno="2660" refid="classvigra_1_1MultiArray_1a57a1104160719fee7bbc19880aaef568" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiArrayView_1ac9d3cda29b22226f730c4520bcb2c1ad" kindref="member">operator-=</ref>(multi_math::MultiMathOperand&lt;Expression&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multi_math::detail::minusAssignOrResize(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>rhs);</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2666"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Multiply-assignment<sp/>of<sp/>an<sp/>array<sp/>expression.<sp/>Fails<sp/>with</highlight></codeline>
<codeline lineno="2667"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;PreconditionViolation&lt;/tt&gt;<sp/>exception<sp/>when<sp/>the<sp/>shapes<sp/>do<sp/>not<sp/>match.</highlight></codeline>
<codeline lineno="2668"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Expression&gt;</highlight></codeline>
<codeline lineno="2670" refid="classvigra_1_1MultiArray_1a78d6b918c2821316ffc5665e4498a62b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiArrayView_1a2246e065e45bd9bd792efabac9fab724" kindref="member">operator*=</ref>(multi_math::MultiMathOperand&lt;Expression&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multi_math::detail::multiplyAssignOrResize(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>rhs);</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2676"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Divide-assignment<sp/>of<sp/>an<sp/>array<sp/>expression.<sp/>Fails<sp/>with</highlight></codeline>
<codeline lineno="2677"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;PreconditionViolation&lt;/tt&gt;<sp/>exception<sp/>when<sp/>the<sp/>shapes<sp/>do<sp/>not<sp/>match.</highlight></codeline>
<codeline lineno="2678"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Expression&gt;</highlight></codeline>
<codeline lineno="2680" refid="classvigra_1_1MultiArray_1a6e8d929ccae2ab0f0a07668610b5b172" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiArrayView_1ae4dd7bff037e05a3580cd66ca857c3f2" kindref="member">operator/=</ref>(multi_math::MultiMathOperand&lt;Expression&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multi_math::detail::divideAssignOrResize(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>rhs);</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2686"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>destructor</highlight></codeline>
<codeline lineno="2687"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2688" refid="classvigra_1_1MultiArray_1ae67638f4b1e3885c9308aac696c195fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>()</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deallocate<sp/>(this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" kindref="member">m_ptr</ref>,<sp/>this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a76f6c30e31c82e61b8b7e09ce3d8871d" kindref="member">elementCount</ref><sp/>());</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"></highlight></codeline>
<codeline lineno="2693"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2694"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>init<sp/>elements<sp/>with<sp/>a<sp/>constant</highlight></codeline>
<codeline lineno="2695"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="2697" refid="classvigra_1_1MultiArray_1aa90c22c574eaf8e0bd703912f644081b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiArrayView_1ae8d75c08347781b9854c8aea98c34610" kindref="member">init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U<sp/>&amp;<sp/>init)</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView_1ae8d75c08347781b9854c8aea98c34610" kindref="member">view_type::init</ref>(init);</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2703"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Allocate<sp/>new<sp/>memory<sp/>with<sp/>the<sp/>given<sp/>shape<sp/>and<sp/>initialize<sp/>with<sp/>zeros.&lt;br&gt;</highlight></codeline>
<codeline lineno="2704"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;em&gt;Note:&lt;/em&gt;<sp/>this<sp/>operation<sp/>invalidates<sp/>all<sp/>dependent<sp/>objects</highlight></codeline>
<codeline lineno="2705"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(array<sp/>views<sp/>and<sp/>iterators)</highlight></codeline>
<codeline lineno="2706"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2707" refid="classvigra_1_1MultiArray_1a4ba159bdb66dec55214cdcab25320c1d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reshape<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref><sp/>&amp;shape)</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reshape<sp/>(shape,<sp/>T());</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2712"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Allocate<sp/>new<sp/>memory<sp/>with<sp/>the<sp/>given<sp/>shape<sp/>and<sp/>initialize<sp/>it</highlight></codeline>
<codeline lineno="2713"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>the<sp/>given<sp/>value.&lt;br&gt;</highlight></codeline>
<codeline lineno="2714"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;em&gt;Note:&lt;/em&gt;<sp/>this<sp/>operation<sp/>invalidates<sp/>all<sp/>dependent<sp/>objects</highlight></codeline>
<codeline lineno="2715"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(array<sp/>views<sp/>and<sp/>iterators)</highlight></codeline>
<codeline lineno="2716"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reshape<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref><sp/>&amp;shape,<sp/><ref refid="classvigra_1_1MultiArrayView_1afdb67657e63a66ed3fae7b0c9fd81b48" kindref="member">const_reference</ref><sp/>init);</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2719"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Swap<sp/>the<sp/>contents<sp/>with<sp/>another<sp/>MultiArray.<sp/>This<sp/>is<sp/>fast,</highlight></codeline>
<codeline lineno="2720"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>because<sp/>no<sp/>data<sp/>are<sp/>copied,<sp/>but<sp/>only<sp/>pointers<sp/>and<sp/>shapes<sp/>swapped.</highlight></codeline>
<codeline lineno="2721"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;em&gt;Note:&lt;/em&gt;<sp/>this<sp/>operation<sp/>invalidates<sp/>all<sp/>dependent<sp/>objects</highlight></codeline>
<codeline lineno="2722"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(array<sp/>views<sp/>and<sp/>iterators)</highlight></codeline>
<codeline lineno="2723"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swap<sp/>(<ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2726"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>sequential<sp/>iterator<sp/>pointing<sp/>to<sp/>the<sp/>first<sp/>array<sp/>element.</highlight></codeline>
<codeline lineno="2727"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2728" refid="classvigra_1_1MultiArray_1ad69bd11391be1a1dba5c8202259664f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedScanOrderIterator" kindref="compound" tooltip="Sequential iterator for MultiArrayView.">iterator</ref><sp/><ref refid="classvigra_1_1MultiArrayView_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref><sp/>()</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a9711a38a3b5f2d85c44505938499a0e2" kindref="member">data</ref>();</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2733"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>sequential<sp/>iterator<sp/>pointing<sp/>beyond<sp/>the<sp/>last<sp/>array<sp/>element.</highlight></codeline>
<codeline lineno="2734"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2735" refid="classvigra_1_1MultiArray_1acad38d52497a975bfb6f2f6acd76631f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedScanOrderIterator" kindref="compound" tooltip="Sequential iterator for MultiArrayView.">iterator</ref><sp/><ref refid="classvigra_1_1MultiArrayView_1acad38d52497a975bfb6f2f6acd76631f" kindref="member">end</ref><sp/>()</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a9711a38a3b5f2d85c44505938499a0e2" kindref="member">data</ref>()<sp/>+<sp/>this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a76f6c30e31c82e61b8b7e09ce3d8871d" kindref="member">elementCount</ref>();</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2740"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>sequential<sp/>const<sp/>iterator<sp/>pointing<sp/>to<sp/>the<sp/>first<sp/>array<sp/>element.</highlight></codeline>
<codeline lineno="2741"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2742" refid="classvigra_1_1MultiArray_1aa4b02d4f1a8500fb07a551069060709f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedScanOrderIterator" kindref="compound" tooltip="Sequential iterator for MultiArrayView.">const_iterator</ref><sp/><ref refid="classvigra_1_1MultiArrayView_1ad69bd11391be1a1dba5c8202259664f8" kindref="member">begin</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2743"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a9711a38a3b5f2d85c44505938499a0e2" kindref="member">data</ref>();</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2747"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>sequential<sp/>const<sp/>iterator<sp/>pointing<sp/>beyond<sp/>the<sp/>last<sp/>array<sp/>element.</highlight></codeline>
<codeline lineno="2748"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2749" refid="classvigra_1_1MultiArray_1a350132543d80a1c1e5be844e6d2878ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1StridedScanOrderIterator" kindref="compound" tooltip="Sequential iterator for MultiArrayView.">const_iterator</ref><sp/><ref refid="classvigra_1_1MultiArrayView_1acad38d52497a975bfb6f2f6acd76631f" kindref="member">end</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2750"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a9711a38a3b5f2d85c44505938499a0e2" kindref="member">data</ref>()<sp/>+<sp/>this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a76f6c30e31c82e61b8b7e09ce3d8871d" kindref="member">elementCount</ref>();</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2754"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>get<sp/>the<sp/>allocator.</highlight></codeline>
<codeline lineno="2755"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2756" refid="classvigra_1_1MultiArray_1a52b4b6af5ae26e76305a28d3274cdd15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray_1a8876e3aa4a94471d5f91b914f0d37759" kindref="member">allocator_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>allocator<sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2757"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_alloc;</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2760"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"></highlight></codeline>
<codeline lineno="2762"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="2763" refid="classvigra_1_1MultiArray_1abad06a155ed3596c5a9b9118b3013c0b" refkind="member"><highlight class="normal"><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray &lt;N, T, A&gt;::MultiArray</ref><sp/>(<ref refid="classvigra_1_1MultiArray_1a6ac789163dd290addb14a4330998df81" kindref="member">difference_type_1</ref><sp/>length,</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray_1a8876e3aa4a94471d5f91b914f0d37759" kindref="member">allocator_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>alloc)</highlight></codeline>
<codeline lineno="2765"><highlight class="normal">:<sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView &lt;N, T&gt;</ref><sp/>(<ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref>(length),</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::defaultStride<sp/>&lt;1&gt;<sp/>(<ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">difference_type</ref>(length)),</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0),</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/>m_alloc(alloc)</highlight></codeline>
<codeline lineno="2769"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/>allocate<sp/>(this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" kindref="member">m_ptr</ref>,<sp/>this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a76f6c30e31c82e61b8b7e09ce3d8871d" kindref="member">elementCount</ref><sp/>(),<sp/>T());</highlight></codeline>
<codeline lineno="2771"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"></highlight></codeline>
<codeline lineno="2773"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="2774" refid="classvigra_1_1MultiArray_1a4067b31c5cb195e7df9e0b0b4d164f43" refkind="member"><highlight class="normal"><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray &lt;N, T, A&gt;::MultiArray</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArray_1a7a3c9714bbd0b64760c377a88fd36c63" kindref="member">difference_type</ref><sp/>&amp;<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray_1a8876e3aa4a94471d5f91b914f0d37759" kindref="member">allocator_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>alloc)</highlight></codeline>
<codeline lineno="2776"><highlight class="normal">:<sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView &lt;N, T&gt;</ref><sp/>(shape,</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::defaultStride<sp/>&lt;<ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;N,T&gt;::actual_dimension</ref>&gt;<sp/>(shape),</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0),</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/>m_alloc(alloc)</highlight></codeline>
<codeline lineno="2780"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(N<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref><sp/>[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref><sp/>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/>allocate<sp/>(this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" kindref="member">m_ptr</ref>,<sp/>this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a76f6c30e31c82e61b8b7e09ce3d8871d" kindref="member">elementCount</ref><sp/>(),<sp/>T());</highlight></codeline>
<codeline lineno="2787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"></highlight></codeline>
<codeline lineno="2789"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="2790" refid="classvigra_1_1MultiArray_1abc955c60d7711895b8aee8198b52f424" refkind="member"><highlight class="normal"><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray &lt;N, T, A&gt;::MultiArray</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArray_1a7a3c9714bbd0b64760c377a88fd36c63" kindref="member">difference_type</ref><sp/>&amp;<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>,<sp/><ref refid="classvigra_1_1MultiArray_1a163353faff9e2af647551a93d2db5463" kindref="member">const_reference</ref><sp/><ref refid="classvigra_1_1MultiArrayView_1ae8d75c08347781b9854c8aea98c34610" kindref="member">init</ref>,</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray_1a8876e3aa4a94471d5f91b914f0d37759" kindref="member">allocator_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>alloc)</highlight></codeline>
<codeline lineno="2792"><highlight class="normal">:<sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView &lt;N, T&gt;</ref><sp/>(shape,</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::defaultStride<sp/>&lt;<ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;N,T&gt;::actual_dimension</ref>&gt;<sp/>(shape),</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0),</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/>m_alloc(alloc)</highlight></codeline>
<codeline lineno="2796"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(N<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref><sp/>[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref><sp/>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/>allocate<sp/>(this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" kindref="member">m_ptr</ref>,<sp/>this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a76f6c30e31c82e61b8b7e09ce3d8871d" kindref="member">elementCount</ref><sp/>(),<sp/>init);</highlight></codeline>
<codeline lineno="2803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"></highlight></codeline>
<codeline lineno="2805"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="2806" refid="classvigra_1_1MultiArray_1a50fa8a6a86660d125b59b7439a58acbe" refkind="member"><highlight class="normal"><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray &lt;N, T, A&gt;::MultiArray</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArray_1a7a3c9714bbd0b64760c377a88fd36c63" kindref="member">difference_type</ref><sp/>&amp;<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>,<sp/><ref refid="classvigra_1_1MultiArray_1a6ace1aa97c0128931a921479d2df41c2" kindref="member">const_pointer</ref><sp/><ref refid="classvigra_1_1MultiArrayView_1ae8d75c08347781b9854c8aea98c34610" kindref="member">init</ref>,</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray_1a8876e3aa4a94471d5f91b914f0d37759" kindref="member">allocator_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>alloc)</highlight></codeline>
<codeline lineno="2808"><highlight class="normal">:<sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView &lt;N, T&gt;</ref><sp/>(shape,</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::defaultStride<sp/>&lt;<ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;N,T&gt;::actual_dimension</ref>&gt;<sp/>(shape),</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0),</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/>m_alloc(alloc)</highlight></codeline>
<codeline lineno="2812"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(N<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref><sp/>[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref><sp/>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/>allocate<sp/>(this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" kindref="member">m_ptr</ref>,<sp/>this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a76f6c30e31c82e61b8b7e09ce3d8871d" kindref="member">elementCount</ref><sp/>(),<sp/>init);</highlight></codeline>
<codeline lineno="2819"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"></highlight></codeline>
<codeline lineno="2821"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="2823" refid="classvigra_1_1MultiArray_1a9ac62554a9086f9bb27585256a6b8576" refkind="member"><highlight class="normal"><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray &lt;N, T, A&gt;::MultiArray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;N, U, StrideTag&gt;</ref><sp/><sp/>&amp;rhs,</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray_1a8876e3aa4a94471d5f91b914f0d37759" kindref="member">allocator_type</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>alloc)</highlight></codeline>
<codeline lineno="2825"><highlight class="normal">:<sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView &lt;N, T&gt;</ref><sp/>(rhs.shape(),</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::defaultStride<sp/>&lt;MultiArrayView&lt;N,T&gt;::actual_dimension&gt;(rhs.shape()),</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0),</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/>m_alloc<sp/>(alloc)</highlight></codeline>
<codeline lineno="2829"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/>allocate<sp/>(this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" kindref="member">m_ptr</ref>,<sp/>rhs);</highlight></codeline>
<codeline lineno="2831"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"></highlight></codeline>
<codeline lineno="2833"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray &lt;N, T, A&gt;::copyOrReshape</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;N, U, StrideTag&gt;</ref><sp/>&amp;rhs)</highlight></codeline>
<codeline lineno="2837"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>()<sp/>==<sp/>rhs.shape())</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a93b4cd51930b5c3f49081829c06a10da" kindref="member">copy</ref>(rhs);</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>t(rhs);</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;swap(t);</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2845"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"></highlight></codeline>
<codeline lineno="2847"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="2848" refid="classvigra_1_1MultiArray_1ae3faf1c77f906eeb2a8d315000d63ffb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray &lt;N, T, A&gt;::reshape</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArray_1a7a3c9714bbd0b64760c377a88fd36c63" kindref="member">difference_type</ref><sp/>&amp;<sp/>new_shape,</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray_1a163353faff9e2af647551a93d2db5463" kindref="member">const_reference</ref><sp/>initial)</highlight></codeline>
<codeline lineno="2850"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(N==<sp/>0)</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(new_shape<sp/>==<sp/>this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>())</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classvigra_1_1MultiArrayView_1ae8d75c08347781b9854c8aea98c34610" kindref="member">init</ref>(initial);</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray_1a7a3c9714bbd0b64760c377a88fd36c63" kindref="member">difference_type</ref><sp/>new_stride<sp/>=<sp/>detail::defaultStride<sp/>&lt;MultiArrayView&lt;N,T&gt;::actual_dimension&gt;<sp/>(new_shape);</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray_1a6ac789163dd290addb14a4330998df81" kindref="member">difference_type_1</ref><sp/>new_size<sp/>=<sp/>new_shape<sp/>[<ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;N,T&gt;::actual_dimension</ref>-1]<sp/>*<sp/>new_stride<sp/>[<ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;N,T&gt;::actual_dimension</ref>-1];</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>*new_ptr;</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocate<sp/>(new_ptr,<sp/>new_size,<sp/>initial);</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deallocate<sp/>(this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" kindref="member">m_ptr</ref>,<sp/>this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a76f6c30e31c82e61b8b7e09ce3d8871d" kindref="member">elementCount</ref><sp/>());</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" kindref="member">m_ptr</ref><sp/>=<sp/>new_ptr;</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref><sp/>=<sp/>new_shape;</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref><sp/>=<sp/>new_stride;</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2870"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"></highlight></codeline>
<codeline lineno="2872"><highlight class="normal"></highlight></codeline>
<codeline lineno="2873"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2875" refid="classvigra_1_1MultiArray_1a2e15da47fd16916e4165a55e99a0ed3b" refkind="member"><highlight class="normal"><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray &lt;N, T, A&gt;::swap</ref><sp/>(<ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray</ref><sp/>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="2876"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>&amp;other)</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" kindref="member">m_shape</ref>,<sp/><sp/>other.m_shape);</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(this-&gt;<ref refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" kindref="member">m_stride</ref>,<sp/>other.m_stride);</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(this-&gt;<ref refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" kindref="member">m_ptr</ref>,<sp/><sp/><sp/><sp/>other.m_ptr);</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(this-&gt;m_alloc,<sp/><sp/>other.m_alloc);</highlight></codeline>
<codeline lineno="2883"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"></highlight></codeline>
<codeline lineno="2885"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="2886" refid="classvigra_1_1MultiArray_1aa257c44bfd4971977f439473047f9b0e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray &lt;N, T, A&gt;::allocate</ref><sp/>(<ref refid="classvigra_1_1MultiArray_1a7c3b5f1ed08b27119127cb725966a945" kindref="member">pointer</ref><sp/>&amp;<sp/>ptr,<sp/><ref refid="classvigra_1_1MultiArray_1a6ac789163dd290addb14a4330998df81" kindref="member">difference_type_1</ref><sp/>s,</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray_1a163353faff9e2af647551a93d2db5463" kindref="member">const_reference</ref><sp/><ref refid="classvigra_1_1MultiArrayView_1ae8d75c08347781b9854c8aea98c34610" kindref="member">init</ref>)</highlight></codeline>
<codeline lineno="2888"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>m_alloc.<ref refid="classvigra_1_1MultiArray_1aa257c44bfd4971977f439473047f9b0e" kindref="member">allocate</ref><sp/>((</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A::size_type)s);</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray_1a6ac789163dd290addb14a4330998df81" kindref="member">difference_type_1</ref><sp/>i;</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>s;<sp/>++i)</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_alloc.construct<sp/>(ptr<sp/>+<sp/>i,<sp/>init);</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classvigra_1_1MultiArray_1a6ac789163dd290addb14a4330998df81" kindref="member">difference_type_1</ref><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>i;<sp/>++j)</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_alloc.destroy<sp/>(ptr<sp/>+<sp/>j);</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_alloc.deallocate<sp/>(ptr,<sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A::size_type)s);</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2901"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"></highlight></codeline>
<codeline lineno="2903"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="2905" refid="classvigra_1_1MultiArray_1a2b022f9fe0469b1dfb0c25e66437c1f2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray &lt;N, T, A&gt;::allocate</ref><sp/>(<ref refid="classvigra_1_1MultiArray_1a7c3b5f1ed08b27119127cb725966a945" kindref="member">pointer</ref><sp/>&amp;<sp/>ptr,<sp/><ref refid="classvigra_1_1MultiArray_1a6ac789163dd290addb14a4330998df81" kindref="member">difference_type_1</ref><sp/>s,</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classvigra_1_1MultiArrayView_1ae8d75c08347781b9854c8aea98c34610" kindref="member">init</ref>)</highlight></codeline>
<codeline lineno="2907"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>m_alloc.<ref refid="classvigra_1_1MultiArray_1aa257c44bfd4971977f439473047f9b0e" kindref="member">allocate</ref><sp/>((</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A::size_type)s);</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray_1a6ac789163dd290addb14a4330998df81" kindref="member">difference_type_1</ref><sp/>i;</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>s;<sp/>++i,<sp/>++<ref refid="classvigra_1_1MultiArrayView_1ae8d75c08347781b9854c8aea98c34610" kindref="member">init</ref>)</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_alloc.construct<sp/>(ptr<sp/>+<sp/>i,<sp/>*init);</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classvigra_1_1MultiArray_1a6ac789163dd290addb14a4330998df81" kindref="member">difference_type_1</ref><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>i;<sp/>++j)</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_alloc.destroy<sp/>(ptr<sp/>+<sp/>j);</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_alloc.deallocate<sp/>(ptr,<sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A::size_type)s);</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2920"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"></highlight></codeline>
<codeline lineno="2922"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="2924" refid="classvigra_1_1MultiArray_1a9c5daa3d096a6a6663afc1f9b2f654ba" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray &lt;N, T, A&gt;::allocate</ref><sp/>(<ref refid="classvigra_1_1MultiArray_1a7c3b5f1ed08b27119127cb725966a945" kindref="member">pointer</ref><sp/>&amp;<sp/>ptr,<sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;N, U, StrideTag&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="classvigra_1_1MultiArrayView_1ae8d75c08347781b9854c8aea98c34610" kindref="member">init</ref>)</highlight></codeline>
<codeline lineno="2925"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray_1a6ac789163dd290addb14a4330998df81" kindref="member">difference_type_1</ref><sp/>s<sp/>=<sp/>init.<ref refid="classvigra_1_1MultiArrayView_1a76f6c30e31c82e61b8b7e09ce3d8871d" kindref="member">elementCount</ref>();</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>m_alloc.allocate<sp/>((</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A::size_type)s);</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArray_1a7c3b5f1ed08b27119127cb725966a945" kindref="member">pointer</ref><sp/>p<sp/>=<sp/>ptr;</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::uninitializedCopyMultiArrayData(init.traverser_begin(),<sp/>init.shape(),</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p,<sp/>m_alloc,<sp/>MetaInt&lt;actual_dimension-1&gt;());</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classvigra_1_1MultiArray_1a7c3b5f1ed08b27119127cb725966a945" kindref="member">pointer</ref><sp/>pp<sp/>=<sp/>ptr;<sp/>pp<sp/>&lt;<sp/>p;<sp/>++pp)</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_alloc.destroy<sp/>(pp);</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_alloc.deallocate<sp/>(ptr,<sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A::size_type)s);</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2939"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"></highlight></codeline>
<codeline lineno="2941"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="2942" refid="classvigra_1_1MultiArray_1ad7dc8927f46c67fcc4efe8937629e866" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray &lt;N, T, A&gt;::deallocate</ref><sp/>(<ref refid="classvigra_1_1MultiArray_1a7c3b5f1ed08b27119127cb725966a945" kindref="member">pointer</ref><sp/>&amp;<sp/>ptr,<sp/><ref refid="classvigra_1_1MultiArray_1a6ac789163dd290addb14a4330998df81" kindref="member">difference_type_1</ref><sp/>s)</highlight></codeline>
<codeline lineno="2943"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classvigra_1_1MultiArray_1a6ac789163dd290addb14a4330998df81" kindref="member">difference_type_1</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>s;<sp/>++i)</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_alloc.destroy<sp/>(ptr<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/>m_alloc.<ref refid="classvigra_1_1MultiArray_1ad7dc8927f46c67fcc4efe8937629e866" kindref="member">deallocate</ref><sp/>(ptr,<sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A::size_type)s);</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2950"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"></highlight></codeline>
<codeline lineno="2952"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2953"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2954"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argument<sp/>object<sp/>factories<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2955"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2956"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2957"><highlight class="normal"></highlight></codeline>
<codeline lineno="2958"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>triple&lt;typename<sp/>MultiArrayView&lt;N,T,StrideTag&gt;::const_traverser,</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">MultiArrayView&lt;N,T,StrideTag&gt;::difference_type</ref>,</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StandardConstAccessor" kindref="compound" tooltip="Encapsulate read access to the values an iterator points to.">AccessorTraits&lt;T&gt;::default_const_accessor</ref><sp/>&gt;</highlight></codeline>
<codeline lineno="2962"><highlight class="normal">srcMultiArrayRange(<sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;N,T,StrideTag&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>array<sp/>)</highlight></codeline>
<codeline lineno="2963"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>triple&lt;typename<sp/>MultiArrayView&lt;N,T,StrideTag&gt;::const_traverser,</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">MultiArrayView&lt;N,T,StrideTag&gt;::difference_type</ref>,</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StandardConstAccessor" kindref="compound" tooltip="Encapsulate read access to the values an iterator points to.">AccessorTraits&lt;T&gt;::default_const_accessor</ref><sp/>&gt;</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>array.<ref refid="classvigra_1_1MultiArrayView_1a6da88764aadffdf26736523ba73a53b2" kindref="member">traverser_begin</ref>(),</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array.<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref>(),</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1StandardConstAccessor" kindref="compound" tooltip="Encapsulate read access to the values an iterator points to.">AccessorTraits&lt;T&gt;::default_const_accessor</ref>()<sp/>);</highlight></codeline>
<codeline lineno="2970"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"></highlight></codeline>
<codeline lineno="2972"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Accessor&gt;</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>triple&lt;typename<sp/>MultiArrayView&lt;N,T,StrideTag&gt;::const_traverser,</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MultiArrayView&lt;N,T,StrideTag&gt;::difference_type,</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Accessor<sp/>&gt;</highlight></codeline>
<codeline lineno="2976"><highlight class="normal">srcMultiArrayRange(<sp/>MultiArrayView&lt;N,T,StrideTag&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>array,<sp/>Accessor<sp/>a<sp/>)</highlight></codeline>
<codeline lineno="2977"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>triple&lt;typename<sp/>MultiArrayView&lt;N,T,StrideTag&gt;::const_traverser,</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MultiArrayView&lt;N,T,StrideTag&gt;::difference_type,</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Accessor<sp/>&gt;</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>array.traverser_begin(),</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array.shape(),</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a);</highlight></codeline>
<codeline lineno="2984"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"></highlight></codeline>
<codeline lineno="2986"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>pair&lt;typename<sp/>MultiArrayView&lt;N,T,StrideTag&gt;::const_traverser,</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;T&gt;::default_const_accessor<sp/>&gt;</highlight></codeline>
<codeline lineno="2989"><highlight class="normal">srcMultiArray(<sp/>MultiArrayView&lt;N,T,StrideTag&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>array<sp/>)</highlight></codeline>
<codeline lineno="2990"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pair&lt;typename<sp/>MultiArrayView&lt;N,T,StrideTag&gt;::const_traverser,</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;T&gt;::default_const_accessor<sp/>&gt;</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>array.traverser_begin(),</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;T&gt;::default_const_accessor()<sp/>);</highlight></codeline>
<codeline lineno="2995"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"></highlight></codeline>
<codeline lineno="2997"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Accessor&gt;</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>pair&lt;typename<sp/>MultiArrayView&lt;N,T,StrideTag&gt;::const_traverser,</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Accessor<sp/>&gt;</highlight></codeline>
<codeline lineno="3000"><highlight class="normal">srcMultiArray(<sp/>MultiArrayView&lt;N,T,StrideTag&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>array,<sp/>Accessor<sp/>a<sp/>)</highlight></codeline>
<codeline lineno="3001"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pair&lt;typename<sp/>MultiArrayView&lt;N,T,StrideTag&gt;::const_traverser,</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Accessor<sp/>&gt;</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>array.traverser_begin(),<sp/>a<sp/>);</highlight></codeline>
<codeline lineno="3005"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"></highlight></codeline>
<codeline lineno="3007"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>triple&lt;typename<sp/>MultiArrayView&lt;N,T,StrideTag&gt;::traverser,</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MultiArrayView&lt;N,T,StrideTag&gt;::difference_type,</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;T&gt;::default_accessor<sp/>&gt;</highlight></codeline>
<codeline lineno="3011"><highlight class="normal">destMultiArrayRange(<sp/>MultiArrayView&lt;N,T,StrideTag&gt;<sp/>&amp;<sp/>array<sp/>)</highlight></codeline>
<codeline lineno="3012"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>triple&lt;typename<sp/>MultiArrayView&lt;N,T,StrideTag&gt;::traverser,</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MultiArrayView&lt;N,T,StrideTag&gt;::difference_type,</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;T&gt;::default_accessor<sp/>&gt;</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>array.traverser_begin(),</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array.shape(),</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;T&gt;::default_accessor()<sp/>);</highlight></codeline>
<codeline lineno="3019"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"></highlight></codeline>
<codeline lineno="3021"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Accessor&gt;</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>triple&lt;typename<sp/>MultiArrayView&lt;N,T,StrideTag&gt;::traverser,</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MultiArrayView&lt;N,T,StrideTag&gt;::difference_type,</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Accessor<sp/>&gt;</highlight></codeline>
<codeline lineno="3025"><highlight class="normal">destMultiArrayRange(<sp/>MultiArrayView&lt;N,T,StrideTag&gt;<sp/>&amp;<sp/>array,<sp/>Accessor<sp/>a<sp/>)</highlight></codeline>
<codeline lineno="3026"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>triple&lt;typename<sp/>MultiArrayView&lt;N,T,StrideTag&gt;::traverser,</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MultiArrayView&lt;N,T,StrideTag&gt;::difference_type,</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Accessor<sp/>&gt;</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>array.traverser_begin(),</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array.shape(),</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>);</highlight></codeline>
<codeline lineno="3033"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"></highlight></codeline>
<codeline lineno="3035"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag&gt;</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>pair&lt;typename<sp/>MultiArrayView&lt;N,T,StrideTag&gt;::traverser,</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;T&gt;::default_accessor<sp/>&gt;</highlight></codeline>
<codeline lineno="3038"><highlight class="normal">destMultiArray(<sp/>MultiArrayView&lt;N,T,StrideTag&gt;<sp/>&amp;<sp/>array<sp/>)</highlight></codeline>
<codeline lineno="3039"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pair&lt;typename<sp/>MultiArrayView&lt;N,T,StrideTag&gt;::traverser,</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;T&gt;::default_accessor<sp/>&gt;</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>array.traverser_begin(),</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;T&gt;::default_accessor()<sp/>);</highlight></codeline>
<codeline lineno="3044"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"></highlight></codeline>
<codeline lineno="3046"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">eTag,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Accessor&gt;</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>pair&lt;typename<sp/>MultiArrayView&lt;N,T,StrideTag&gt;::traverser,</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Accessor<sp/>&gt;</highlight></codeline>
<codeline lineno="3049"><highlight class="normal">destMultiArray(<sp/>MultiArrayView&lt;N,T,StrideTag&gt;<sp/>&amp;<sp/>array,<sp/>Accessor<sp/>a<sp/>)</highlight></codeline>
<codeline lineno="3050"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pair&lt;typename<sp/>MultiArrayView&lt;N,T,StrideTag&gt;::traverser,</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Accessor<sp/>&gt;</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>array.traverser_begin(),<sp/>a<sp/>);</highlight></codeline>
<codeline lineno="3054"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"></highlight></codeline>
<codeline lineno="3056"><highlight class="normal"></highlight><highlight class="comment">/********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3057"><highlight class="normal"></highlight></codeline>
<codeline lineno="3058"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PixelType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Accessor&gt;</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>triple&lt;ConstStridedImageIterator&lt;PixelType&gt;,</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConstStridedImageIterator&lt;PixelType&gt;,<sp/>Accessor&gt;</highlight></codeline>
<codeline lineno="3061"><highlight class="normal">srcImageRange(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiArrayView&lt;2,<sp/>PixelType,<sp/>StridedArrayTag&gt;<sp/>&amp;<sp/>img,<sp/>Accessor<sp/>a)</highlight></codeline>
<codeline lineno="3062"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/>ConstStridedImageIterator&lt;PixelType&gt;</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ul(img.data(),<sp/>1,<sp/>img.stride(0),<sp/>img.stride(1));</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>triple&lt;ConstStridedImageIterator&lt;PixelType&gt;,</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConstStridedImageIterator&lt;PixelType&gt;,</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Accessor&gt;(</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ul,<sp/>ul<sp/>+<sp/>Size2D(img.shape(0),<sp/>img.shape(1)),<sp/>a);</highlight></codeline>
<codeline lineno="3069"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"></highlight></codeline>
<codeline lineno="3071"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PixelType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Accessor&gt;</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>pair&lt;ConstStridedImageIterator&lt;PixelType&gt;,<sp/>Accessor&gt;</highlight></codeline>
<codeline lineno="3073"><highlight class="normal">srcImage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiArrayView&lt;2,<sp/>PixelType,<sp/>StridedArrayTag&gt;<sp/>&amp;<sp/>img,<sp/>Accessor<sp/>a)</highlight></codeline>
<codeline lineno="3074"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/>ConstStridedImageIterator&lt;PixelType&gt;</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ul(img.data(),<sp/>1,<sp/>img.stride(0),<sp/>img.stride(1));</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pair&lt;ConstStridedImageIterator&lt;PixelType&gt;,<sp/>Accessor&gt;</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ul,<sp/>a);</highlight></codeline>
<codeline lineno="3079"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"></highlight></codeline>
<codeline lineno="3081"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PixelType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Accessor&gt;</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>triple&lt;StridedImageIterator&lt;PixelType&gt;,</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StridedImageIterator&lt;PixelType&gt;,<sp/>Accessor&gt;</highlight></codeline>
<codeline lineno="3084"><highlight class="normal">destImageRange(MultiArrayView&lt;2,<sp/>PixelType,<sp/>StridedArrayTag&gt;<sp/>&amp;<sp/>img,<sp/>Accessor<sp/>a)</highlight></codeline>
<codeline lineno="3085"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedImageIterator&lt;PixelType&gt;</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ul(img.data(),<sp/>1,<sp/>img.stride(0),<sp/>img.stride(1));</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>triple&lt;StridedImageIterator&lt;PixelType&gt;,</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StridedImageIterator&lt;PixelType&gt;,</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Accessor&gt;(</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ul,<sp/>ul<sp/>+<sp/>Size2D(img.shape(0),<sp/>img.shape(1)),<sp/>a);</highlight></codeline>
<codeline lineno="3092"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"></highlight></codeline>
<codeline lineno="3094"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PixelType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Accessor&gt;</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>pair&lt;StridedImageIterator&lt;PixelType&gt;,<sp/>Accessor&gt;</highlight></codeline>
<codeline lineno="3096"><highlight class="normal">destImage(MultiArrayView&lt;2,<sp/>PixelType,<sp/>StridedArrayTag&gt;<sp/>&amp;<sp/>img,<sp/>Accessor<sp/>a)</highlight></codeline>
<codeline lineno="3097"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedImageIterator&lt;PixelType&gt;</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ul(img.data(),<sp/>1,<sp/>img.stride(0),<sp/>img.stride(1));</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pair&lt;StridedImageIterator&lt;PixelType&gt;,<sp/>Accessor&gt;</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ul,<sp/>a);</highlight></codeline>
<codeline lineno="3102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"></highlight></codeline>
<codeline lineno="3104"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PixelType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Accessor&gt;</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>pair&lt;StridedImageIterator&lt;PixelType&gt;,<sp/>Accessor&gt;</highlight></codeline>
<codeline lineno="3106"><highlight class="normal">maskImage(MultiArrayView&lt;2,<sp/>PixelType,<sp/>StridedArrayTag&gt;<sp/>&amp;<sp/>img,<sp/>Accessor<sp/>a)</highlight></codeline>
<codeline lineno="3107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedImageIterator&lt;PixelType&gt;</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ul(img.data(),<sp/>1,<sp/>img.stride(0),<sp/>img.stride(1));</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pair&lt;StridedImageIterator&lt;PixelType&gt;,<sp/>Accessor&gt;</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ul,<sp/>a);</highlight></codeline>
<codeline lineno="3112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"></highlight></codeline>
<codeline lineno="3114"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3115"><highlight class="normal"></highlight></codeline>
<codeline lineno="3116"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PixelType&gt;</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>triple&lt;ConstStridedImageIterator&lt;PixelType&gt;,</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConstStridedImageIterator&lt;PixelType&gt;,</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;PixelType&gt;::default_const_accessor&gt;</highlight></codeline>
<codeline lineno="3120"><highlight class="normal">srcImageRange(MultiArrayView&lt;2,<sp/>PixelType,<sp/>StridedArrayTag&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>img)</highlight></codeline>
<codeline lineno="3121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/>ConstStridedImageIterator&lt;PixelType&gt;</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ul(img.data(),<sp/>1,<sp/>img.stride(0),<sp/>img.stride(1));</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;PixelType&gt;::default_const_accessor<sp/>Accessor;</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>triple&lt;ConstStridedImageIterator&lt;PixelType&gt;,</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConstStridedImageIterator&lt;PixelType&gt;,</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Accessor&gt;</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ul,<sp/>ul<sp/>+<sp/>Size2D(img.shape(0),<sp/>img.shape(1)),<sp/>Accessor());</highlight></codeline>
<codeline lineno="3129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"></highlight></codeline>
<codeline lineno="3131"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PixelType&gt;</highlight></codeline>
<codeline lineno="3132"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>triple&lt;ConstImageIterator&lt;PixelType&gt;,</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConstImageIterator&lt;PixelType&gt;,</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;PixelType&gt;::default_const_accessor&gt;</highlight></codeline>
<codeline lineno="3135"><highlight class="normal">srcImageRange(MultiArrayView&lt;2,<sp/>PixelType,<sp/>UnstridedArrayTag&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>img)</highlight></codeline>
<codeline lineno="3136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/>ConstImageIterator&lt;PixelType&gt;</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ul(img.data(),<sp/>img.stride(1));</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;PixelType&gt;::default_const_accessor<sp/>Accessor;</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>triple&lt;ConstImageIterator&lt;PixelType&gt;,</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConstImageIterator&lt;PixelType&gt;,</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Accessor&gt;</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ul,<sp/>ul<sp/>+<sp/>Size2D(img.shape(0),<sp/>img.shape(1)),<sp/>Accessor());</highlight></codeline>
<codeline lineno="3144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"></highlight></codeline>
<codeline lineno="3146"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PixelType&gt;</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>pair&lt;<sp/>ConstStridedImageIterator&lt;PixelType&gt;,</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;PixelType&gt;::default_const_accessor&gt;</highlight></codeline>
<codeline lineno="3149"><highlight class="normal">srcImage(MultiArrayView&lt;2,<sp/>PixelType,<sp/>StridedArrayTag&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>img)</highlight></codeline>
<codeline lineno="3150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/>ConstStridedImageIterator&lt;PixelType&gt;</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ul(img.data(),<sp/>1,<sp/>img.stride(0),<sp/>img.stride(1));</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;PixelType&gt;::default_const_accessor<sp/>Accessor;</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pair&lt;ConstStridedImageIterator&lt;PixelType&gt;,</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Accessor&gt;</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ul,<sp/>Accessor());</highlight></codeline>
<codeline lineno="3157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"></highlight></codeline>
<codeline lineno="3159"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PixelType&gt;</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>pair&lt;<sp/>ConstImageIterator&lt;PixelType&gt;,</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;PixelType&gt;::default_const_accessor&gt;</highlight></codeline>
<codeline lineno="3162"><highlight class="normal">srcImage(MultiArrayView&lt;2,<sp/>PixelType,<sp/>UnstridedArrayTag&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>img)</highlight></codeline>
<codeline lineno="3163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/>ConstImageIterator&lt;PixelType&gt;</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ul(img.data(),<sp/>img.stride(1));</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;PixelType&gt;::default_const_accessor<sp/>Accessor;</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pair&lt;ConstImageIterator&lt;PixelType&gt;,</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Accessor&gt;</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ul,<sp/>Accessor());</highlight></codeline>
<codeline lineno="3170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"></highlight></codeline>
<codeline lineno="3172"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PixelType&gt;</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>triple&lt;<sp/>StridedImageIterator&lt;PixelType&gt;,</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StridedImageIterator&lt;PixelType&gt;,</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;PixelType&gt;::default_accessor&gt;</highlight></codeline>
<codeline lineno="3176"><highlight class="normal">destImageRange(MultiArrayView&lt;2,<sp/>PixelType,<sp/>StridedArrayTag&gt;<sp/>&amp;<sp/>img)</highlight></codeline>
<codeline lineno="3177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedImageIterator&lt;PixelType&gt;</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ul(img.data(),<sp/>1,<sp/>img.stride(0),<sp/>img.stride(1));</highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;PixelType&gt;::default_accessor<sp/>Accessor;</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>triple&lt;StridedImageIterator&lt;PixelType&gt;,</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StridedImageIterator&lt;PixelType&gt;,</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Accessor&gt;</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ul,<sp/>ul<sp/>+<sp/>Size2D(img.shape(0),<sp/>img.shape(1)),<sp/>Accessor());</highlight></codeline>
<codeline lineno="3185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"></highlight></codeline>
<codeline lineno="3187"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PixelType&gt;</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>triple&lt;<sp/>ImageIterator&lt;PixelType&gt;,</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageIterator&lt;PixelType&gt;,</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;PixelType&gt;::default_accessor&gt;</highlight></codeline>
<codeline lineno="3191"><highlight class="normal">destImageRange(MultiArrayView&lt;2,<sp/>PixelType,<sp/>UnstridedArrayTag&gt;<sp/>&amp;<sp/>img)</highlight></codeline>
<codeline lineno="3192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/><sp/>ImageIterator&lt;PixelType&gt;</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ul(img.data(),<sp/>img.stride(1));</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;PixelType&gt;::default_accessor<sp/>Accessor;</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>triple&lt;ImageIterator&lt;PixelType&gt;,</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageIterator&lt;PixelType&gt;,</highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Accessor&gt;</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ul,<sp/>ul<sp/>+<sp/>Size2D(img.shape(0),<sp/>img.shape(1)),<sp/>Accessor());</highlight></codeline>
<codeline lineno="3200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"></highlight></codeline>
<codeline lineno="3202"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PixelType&gt;</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>pair&lt;<sp/>StridedImageIterator&lt;PixelType&gt;,</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;PixelType&gt;::default_accessor&gt;</highlight></codeline>
<codeline lineno="3205"><highlight class="normal">destImage(MultiArrayView&lt;2,<sp/>PixelType,<sp/>StridedArrayTag&gt;<sp/>&amp;<sp/>img)</highlight></codeline>
<codeline lineno="3206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/>StridedImageIterator&lt;PixelType&gt;</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ul(img.data(),<sp/>1,<sp/>img.stride(0),<sp/>img.stride(1));</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;PixelType&gt;::default_accessor<sp/>Accessor;</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pair&lt;StridedImageIterator&lt;PixelType&gt;,<sp/>Accessor&gt;</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ul,<sp/>Accessor());</highlight></codeline>
<codeline lineno="3212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"></highlight></codeline>
<codeline lineno="3214"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PixelType&gt;</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>pair&lt;<sp/>ImageIterator&lt;PixelType&gt;,</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;PixelType&gt;::default_accessor&gt;</highlight></codeline>
<codeline lineno="3217"><highlight class="normal">destImage(MultiArrayView&lt;2,<sp/>PixelType,<sp/>UnstridedArrayTag&gt;<sp/>&amp;<sp/>img)</highlight></codeline>
<codeline lineno="3218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/><sp/>ImageIterator&lt;PixelType&gt;<sp/>ul(img.data(),<sp/>img.stride(1));</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;PixelType&gt;::default_accessor<sp/>Accessor;</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pair&lt;ImageIterator&lt;PixelType&gt;,<sp/>Accessor&gt;(ul,<sp/>Accessor());</highlight></codeline>
<codeline lineno="3222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"></highlight></codeline>
<codeline lineno="3224"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PixelType&gt;</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>pair&lt;<sp/>ConstStridedImageIterator&lt;PixelType&gt;,</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;PixelType&gt;::default_accessor&gt;</highlight></codeline>
<codeline lineno="3227"><highlight class="normal">maskImage(MultiArrayView&lt;2,<sp/>PixelType,<sp/>StridedArrayTag&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>img)</highlight></codeline>
<codeline lineno="3228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/><sp/><sp/>ConstStridedImageIterator&lt;PixelType&gt;</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ul(img.data(),<sp/>1,<sp/>img.stride(0),<sp/>img.stride(1));</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;PixelType&gt;::default_accessor<sp/>Accessor;</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pair&lt;ConstStridedImageIterator&lt;PixelType&gt;,<sp/>Accessor&gt;</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ul,<sp/>Accessor());</highlight></codeline>
<codeline lineno="3234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"></highlight></codeline>
<codeline lineno="3236"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PixelType&gt;</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>pair&lt;<sp/>ConstImageIterator&lt;PixelType&gt;,</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;PixelType&gt;::default_accessor&gt;</highlight></codeline>
<codeline lineno="3239"><highlight class="normal">maskImage(MultiArrayView&lt;2,<sp/>PixelType,<sp/>UnstridedArrayTag&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>img)</highlight></codeline>
<codeline lineno="3240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/><sp/>ConstImageIterator&lt;PixelType&gt;</highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ul(img.data(),<sp/>img.stride(1));</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>AccessorTraits&lt;PixelType&gt;::default_accessor<sp/>Accessor;</highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pair&lt;ConstImageIterator&lt;PixelType&gt;,<sp/>Accessor&gt;</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ul,<sp/>Accessor());</highlight></codeline>
<codeline lineno="3246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3247"><highlight class="normal"></highlight></codeline>
<codeline lineno="3248"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3249"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3250"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>makeBasicImageView<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3251"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3252"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3253"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3254"><highlight class="comment">/**<sp/>\addtogroup<sp/>MultiArrayToImage<sp/>Wrap<sp/>a<sp/>\ref<sp/>vigra::MultiArrayView<sp/>in</highlight></codeline>
<codeline lineno="3255"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>\ref<sp/>vigra::BasicImageView</highlight></codeline>
<codeline lineno="3256"><highlight class="comment">*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3257"><highlight class="comment">//@{</highlight></codeline>
<codeline lineno="3258"><highlight class="comment"></highlight><highlight class="comment">/**<sp/>Create<sp/>a<sp/>\ref<sp/>vigra::BasicImageView<sp/>from<sp/>an<sp/>unstrided<sp/>2-dimensional</highlight></codeline>
<codeline lineno="3259"><highlight class="comment"><sp/><sp/><sp/><sp/>\ref<sp/>vigra::MultiArrayView.</highlight></codeline>
<codeline lineno="3260"><highlight class="comment"></highlight></codeline>
<codeline lineno="3261"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>\ref<sp/>vigra::BasicImageView<sp/>will<sp/>have<sp/>the<sp/>same<sp/>&lt;tt&gt;value_type<sp/>&lt;/tt&gt;</highlight></codeline>
<codeline lineno="3262"><highlight class="comment"><sp/><sp/><sp/><sp/>as<sp/>the<sp/>original<sp/>\ref<sp/>vigra::MultiArrayView.</highlight></codeline>
<codeline lineno="3263"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3264"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3265"><highlight class="normal">BasicImageView<sp/>&lt;T&gt;</highlight></codeline>
<codeline lineno="3266" refid="group__MultiArrayToImage_1gadaa8ba40a8a1974073a4f3e3e151b06d" refkind="member"><highlight class="normal"><ref refid="group__MultiArrayToImage_1gadaa8ba40a8a1974073a4f3e3e151b06d" kindref="member">makeBasicImageView</ref><sp/>(<ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView &lt;2, T, UnstridedArrayTag&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;array)</highlight></codeline>
<codeline lineno="3267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1BasicImageView" kindref="compound" tooltip="BasicImage using foreign memory.">BasicImageView &lt;T&gt;</ref><sp/>(array.<ref refid="classvigra_1_1MultiArrayView_1a9711a38a3b5f2d85c44505938499a0e2" kindref="member">data</ref><sp/>(),<sp/>array.<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref><sp/>(0),</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array.<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref><sp/>(1));</highlight></codeline>
<codeline lineno="3270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3272"><highlight class="comment">/**<sp/>Create<sp/>a<sp/>\ref<sp/>vigra::BasicImageView<sp/>from<sp/>a<sp/>3-dimensional</highlight></codeline>
<codeline lineno="3273"><highlight class="comment"><sp/><sp/><sp/><sp/>\ref<sp/>vigra::MultiArray.</highlight></codeline>
<codeline lineno="3274"><highlight class="comment"></highlight></codeline>
<codeline lineno="3275"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>wrapper<sp/>flattens<sp/>the<sp/>two<sp/>innermost<sp/>dimensions<sp/>of<sp/>the<sp/>array</highlight></codeline>
<codeline lineno="3276"><highlight class="comment"><sp/><sp/><sp/><sp/>into<sp/>single<sp/>rows<sp/>of<sp/>the<sp/>resulting<sp/>image.</highlight></codeline>
<codeline lineno="3277"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>\ref<sp/>vigra::BasicImageView<sp/>will<sp/>have<sp/>the<sp/>same<sp/>&lt;tt&gt;value_type<sp/>&lt;/tt&gt;</highlight></codeline>
<codeline lineno="3278"><highlight class="comment"><sp/><sp/><sp/><sp/>as<sp/>the<sp/>original<sp/>\ref<sp/>vigra::MultiArray.</highlight></codeline>
<codeline lineno="3279"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3280"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3281"><highlight class="normal">BasicImageView<sp/>&lt;T&gt;</highlight></codeline>
<codeline lineno="3282" refid="group__MultiArrayToImage_1ga7b7a8071c5d61465fe214820fa643a6a" refkind="member"><highlight class="normal"><ref refid="group__MultiArrayToImage_1gadaa8ba40a8a1974073a4f3e3e151b06d" kindref="member">makeBasicImageView</ref><sp/>(<ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray &lt;3, T&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;array)</highlight></codeline>
<codeline lineno="3283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1BasicImageView" kindref="compound" tooltip="BasicImage using foreign memory.">BasicImageView &lt;T&gt;</ref><sp/>(array.<ref refid="classvigra_1_1MultiArrayView_1a9711a38a3b5f2d85c44505938499a0e2" kindref="member">data</ref><sp/>(),</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array.<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref><sp/>(0)*array.<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref><sp/>(1),<sp/>array.<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref><sp/>(2));</highlight></codeline>
<codeline lineno="3286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3288"><highlight class="comment">/**<sp/>Create<sp/>a<sp/>\ref<sp/>vigra::BasicImageView<sp/>from<sp/>a<sp/>3-dimensional</highlight></codeline>
<codeline lineno="3289"><highlight class="comment"><sp/><sp/><sp/><sp/>\ref<sp/>vigra::MultiArray.</highlight></codeline>
<codeline lineno="3290"><highlight class="comment"></highlight></codeline>
<codeline lineno="3291"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>wrapper<sp/>only<sp/>works<sp/>if<sp/>&lt;tt&gt;T&lt;/tt&gt;<sp/>is<sp/>a<sp/>scalar<sp/>type<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="3292"><highlight class="comment"><sp/><sp/><sp/><sp/>array&apos;s<sp/>innermost<sp/>dimension<sp/>has<sp/>size<sp/>3.<sp/>It<sp/>then<sp/>re-interprets</highlight></codeline>
<codeline lineno="3293"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>data<sp/>array<sp/>as<sp/>a<sp/>2-dimensional<sp/>array<sp/>with<sp/>value_type</highlight></codeline>
<codeline lineno="3294"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;RGBValue&lt;T&gt;&lt;/tt&gt;.</highlight></codeline>
<codeline lineno="3295"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3296"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3297"><highlight class="normal">BasicImageView<sp/>&lt;RGBValue&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="3298" refid="group__MultiArrayToImage_1gac9eacd74b8edba21d4cf2030e09c0f79" refkind="member"><highlight class="normal"><ref refid="group__MultiArrayToImage_1gac9eacd74b8edba21d4cf2030e09c0f79" kindref="member">makeRGBImageView</ref><sp/>(<ref refid="classvigra_1_1MultiArray" kindref="compound" tooltip="Main MultiArray class containing the memory management.">MultiArray&lt;3, T&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;array)</highlight></codeline>
<codeline lineno="3299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/><sp/><sp/>vigra_precondition<sp/>(</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array.<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref><sp/>(0)<sp/>==<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;makeRGBImageView():<sp/>array.shape(0)<sp/>must<sp/>be<sp/>3.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1BasicImageView" kindref="compound" tooltip="BasicImage using foreign memory.">BasicImageView &lt;RGBValue&lt;T&gt;</ref><sp/>&gt;<sp/>(</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinterpret_cast<sp/>&lt;<ref refid="classvigra_1_1RGBValue" kindref="compound" tooltip="Class for a single RGB value.">RGBValue &lt;T&gt;</ref><sp/>*&gt;<sp/>(array.<ref refid="classvigra_1_1MultiArrayView_1a9711a38a3b5f2d85c44505938499a0e2" kindref="member">data</ref><sp/>()),</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array.<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref><sp/>(1),<sp/>array.<ref refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" kindref="member">shape</ref><sp/>(2));</highlight></codeline>
<codeline lineno="3305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3307"><highlight class="comment">//@}</highlight></codeline>
<codeline lineno="3308"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3309"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>vigra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3310"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VIGRA_ASSERT_INSIDE</highlight></codeline>
<codeline lineno="3311"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>VIGRA_MULTI_ARRAY_HXX</highlight></codeline>
    </programlisting>
    <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/multi_array.hxx"/>
  </compounddef>
</doxygen>
