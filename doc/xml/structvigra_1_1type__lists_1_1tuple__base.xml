<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="structvigra_1_1type__lists_1_1tuple__base" kind="struct" prot="public">
    <compoundname>vigra::type_lists::tuple_base</compoundname>
    <derivedcompoundref refid="structvigra_1_1type__lists_1_1bit__cond__tuple" prot="public" virt="non-virtual">bit_cond_tuple&lt; feature_types&lt; L &gt;::accu_list, passes&lt; 2 &gt;::template at_least &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvigra_1_1type__lists_1_1cond__virtual__tuple__base" prot="public" virt="non-virtual">cond_virtual_tuple_base&lt; ITL, ACXTT&lt; T, ITL &gt;, T, Z, TEST &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvigra_1_1type__lists_1_1tuple" prot="public" virt="non-virtual">tuple&lt; feature_types&lt; L &gt;::accu_list, passes&lt; 2 &gt;::template at_least &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvigra_1_1type__lists_1_1tuple" prot="public" virt="non-virtual">tuple&lt; L, passes&lt; 2 &gt;::template at_least &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvigra_1_1type__lists_1_1bit__cond__tuple" prot="public" virt="non-virtual">bit_cond_tuple&lt; ITL, TEST &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvigra_1_1type__lists_1_1cond__tuple" prot="public" virt="non-virtual">cond_tuple&lt; ITL, TEST &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvigra_1_1type__lists_1_1cond__tuple__plain" prot="public" virt="non-virtual">cond_tuple_plain&lt; ITL, TEST &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvigra_1_1type__lists_1_1cond__virtual__tuple__base" prot="public" virt="non-virtual">cond_virtual_tuple_base&lt; ITL, ACX, T, Z, TEST &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvigra_1_1type__lists_1_1tuple" prot="public" virt="non-virtual">tuple&lt; ITL, TEST &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvigra_1_1type__lists_1_1virtual__tuple__base" prot="public" virt="non-virtual">virtual_tuple_base&lt; ITL, ACX, T, Z, TEST &gt;</derivedcompoundref>
    <derivedcompoundref refid="structvigra_1_1type__lists_1_1virtual__tuple__base" prot="public" virt="non-virtual">virtual_tuple_base&lt; ITL, ACXTT&lt; T, ITL &gt;, T, Z, TEST &gt;</derivedcompoundref>
    <innerclass refid="structvigra_1_1type__lists_1_1tuple__base_1_1has__element" prot="public">vigra::type_lists::tuple_base::has_element</innerclass>
    <innerclass refid="structvigra_1_1type__lists_1_1tuple__base_1_1ref__returns" prot="public">vigra::type_lists::tuple_base::ref_returns</innerclass>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>ITL</declname>
        <defname>ITL</defname>
      </param>
      <param>
        <type>class</type>
        <declname>Q</declname>
        <defname>Q</defname>
        <defval>plain_chooser</defval>
      </param>
      <param>
        <type>template&lt; class &gt; class</type>
        <declname>TEST</declname>
        <defname>TEST</defname>
        <defval>true_test</defval>
      </param>
      <param>
        <type>unsigned</type>
        <declname>index</declname>
        <defname>index</defname>
        <defval>0</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structvigra_1_1type__lists_1_1tuple__base_1a0b6b3d267906b7eb9000be66f8a6345d" prot="public" static="no">
        <type>nil</type>
        <definition>typedef nil derived_type</definition>
        <argsstring></argsstring>
        <name>derived_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1572" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1572" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvigra_1_1type__lists_1_1tuple__base_1a9bec4099344296e57f95a7e33f152b69" prot="public" static="no">
        <type>ITL::first</type>
        <definition>typedef ITL::first finder_type</definition>
        <argsstring></argsstring>
        <name>finder_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1577" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1577" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvigra_1_1type__lists_1_1tuple__base_1a009b2284591b60b4de1c6fa5f212769f" prot="public" static="no">
        <type>Q::template use&lt; ref_finder_type, index &gt;::type</type>
        <definition>typedef Q::template use&lt;ref_finder_type, index&gt;::type first_type</definition>
        <argsstring></argsstring>
        <name>first_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1587" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1587" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvigra_1_1type__lists_1_1tuple__base_1a2f3800971aeced0944706bdf04d133db" prot="public" static="no">
        <type>tuple_base::global_data_type</type>
        <definition>typedef tuple_base::global_data_type global_data_base_type</definition>
        <argsstring></argsstring>
        <name>global_data_base_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1571" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1571" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvigra_1_1type__lists_1_1tuple__base_1a7ad0efb9c0c89e8253f61f51b71e9c03" prot="public" static="no">
        <type>ITL</type>
        <definition>typedef ITL list_type</definition>
        <argsstring></argsstring>
        <name>list_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1574" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1574" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvigra_1_1type__lists_1_1tuple__base_1ae07201134b670685e40b076735318de8" prot="public" static="no">
        <type>ITL::first</type>
        <definition>typedef ITL::first ref_finder_type</definition>
        <argsstring></argsstring>
        <name>ref_finder_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1585" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1585" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvigra_1_1type__lists_1_1tuple__base_1ab7907ac60a3d69bdaaf8b38db557b48a" prot="public" static="no">
        <type>ITL::rest</type>
        <definition>typedef ITL::rest rest_list_type</definition>
        <argsstring></argsstring>
        <name>rest_list_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1578" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1578" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvigra_1_1type__lists_1_1tuple__base_1a2d1ae46698a1836a27cdddf73030355f" prot="public" static="no">
        <type>tuple_base&lt; rest_list_type, Q, TEST, index+1 &gt;</type>
        <definition>typedef tuple_base&lt;rest_list_type, Q, TEST, index + 1&gt; rest_type</definition>
        <argsstring></argsstring>
        <name>rest_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1580" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1580" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structvigra_1_1type__lists_1_1tuple__base_1a81c7869dd5dc1452954a9e0b64b861fa" prot="public" static="no">
        <type>tuple_base</type>
        <definition>typedef tuple_base tuple_type</definition>
        <argsstring></argsstring>
        <name>tuple_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1573" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1573" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structvigra_1_1type__lists_1_1tuple__base_1a9b5a3fc101a92e0884c13bebefad25e9" prot="public" static="no" mutable="no">
        <type>first_type</type>
        <definition>first_type first</definition>
        <argsstring></argsstring>
        <name>first</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1588" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1588" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvigra_1_1type__lists_1_1tuple__base_1a28e30979a4f8ea8c1dac475f5adea98d" prot="public" static="no" mutable="no">
        <type>rest_type</type>
        <definition>rest_type rest</definition>
        <argsstring></argsstring>
        <name>rest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1589" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1589" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1tuple__base_1a2b538297d18c1a60a51000c05bd86419" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>unsigned</type>
            <declname>pos</declname>
            <defname>pos</defname>
          </param>
        </templateparamlist>
        <type>at_finder&lt; pos, tuple_base &gt;::type &amp;</type>
        <definition>at_finder&lt;pos, tuple_base&gt;::type&amp; at</definition>
        <argsstring>()</argsstring>
        <name>at</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1599" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1598" bodyend="1601"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1tuple__base_1abd1bc6370241af36be5e781030759b56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
          <param>
            <type>class B</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void call</definition>
        <argsstring>(const A &amp;v, const B &amp;w)</argsstring>
        <name>call</name>
        <param>
          <type>const A &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const B &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1742" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1741" bodyend="1745"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1tuple__base_1a20f9ab8d6cbd4179fdaed80e01a3cc79" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
          <param>
            <type>class B</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void call</definition>
        <argsstring>(A &amp;v, const B &amp;w)</argsstring>
        <name>call</name>
        <param>
          <type>A &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const B &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1748" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1747" bodyend="1751"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1tuple__base_1ab16d7b0e560de73fecd793073d073d4f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
          <param>
            <type>class B</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void call</definition>
        <argsstring>(A &amp;v, const B &amp;w) const </argsstring>
        <name>call</name>
        <param>
          <type>A &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const B &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1754" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1753" bodyend="1757"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1tuple__base_1aa68153907833cf9fa885f33b5417711c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
          <param>
            <type>class B</type>
          </param>
          <param>
            <type>class C</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void call</definition>
        <argsstring>(const A &amp;v, const B &amp;w, const C &amp;x)</argsstring>
        <name>call</name>
        <param>
          <type>const A &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const B &amp;</type>
          <declname>w</declname>
        </param>
        <param>
          <type>const C &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1761" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1760" bodyend="1764"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1tuple__base_1a0aef72ebd7db328a143cb59209904567" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
          <param>
            <type>class B</type>
          </param>
          <param>
            <type>class C</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void call</definition>
        <argsstring>(A &amp;v, const B &amp;w, const C &amp;x)</argsstring>
        <name>call</name>
        <param>
          <type>A &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const B &amp;</type>
          <declname>w</declname>
        </param>
        <param>
          <type>const C &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1767" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1766" bodyend="1770"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1tuple__base_1a03cb7d92e5aae807b87166f7c4d968e3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
          <param>
            <type>class B</type>
          </param>
          <param>
            <type>class C</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void call</definition>
        <argsstring>(A &amp;v, const B &amp;w, const C &amp;x) const </argsstring>
        <name>call</name>
        <param>
          <type>A &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const B &amp;</type>
          <declname>w</declname>
        </param>
        <param>
          <type>const C &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1773" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1772" bodyend="1776"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1tuple__base_1a57168f1771c25d9c6748f922f8ae798e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class B</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void call_bound</definition>
        <argsstring>(B &amp;binder)</argsstring>
        <name>call_bound</name>
        <param>
          <type>B &amp;</type>
          <declname>binder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1736" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1735" bodyend="1738"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1tuple__base_1a54d22af553d7a47c2228843ac6c93a65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class B</type>
          </param>
          <param>
            <type>class TBASE</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void call_bound_op</definition>
        <argsstring>(B &amp;binder, const TBASE &amp;z)</argsstring>
        <name>call_bound_op</name>
        <param>
          <type>B &amp;</type>
          <declname>binder</declname>
        </param>
        <param>
          <type>const TBASE &amp;</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1731" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1730" bodyend="1733"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1tuple__base_1a859216eca8e70847833a4786f5133dbb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class B</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void exec_bound</definition>
        <argsstring>(B &amp;binder)</argsstring>
        <name>exec_bound</name>
        <param>
          <type>B &amp;</type>
          <declname>binder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1661" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1660" bodyend="1663"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1tuple__base_1a4374e509ad1e27bab984819575bac8ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class B</type>
          </param>
          <param>
            <type>class TBASE</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void exec_bound_op</definition>
        <argsstring>(B &amp;binder, const TBASE &amp;z)</argsstring>
        <name>exec_bound_op</name>
        <param>
          <type>B &amp;</type>
          <declname>binder</declname>
        </param>
        <param>
          <type>const TBASE &amp;</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1656" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1655" bodyend="1658"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1tuple__base_1a8b5223b647670a52b3bb1a2aea27c53a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool is_set</definition>
        <argsstring>() const </argsstring>
        <name>is_set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1626" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1625" bodyend="1628"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1tuple__base_1a5ccbdeb5350ba8528eab7e4cc49fc68b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void operator()</definition>
        <argsstring>()</argsstring>
        <name>operator()</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1666" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1665" bodyend="1669"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1tuple__base_1a3563468dcbe023719960482a96299335" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void operator()</definition>
        <argsstring>(const A &amp;v)</argsstring>
        <name>operator()</name>
        <param>
          <type>const A &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1673" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1672" bodyend="1676"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1tuple__base_1a78b17723011ca760dc53b330156acc18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void operator()</definition>
        <argsstring>(A &amp;v)</argsstring>
        <name>operator()</name>
        <param>
          <type>A &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1679" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1678" bodyend="1682"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1tuple__base_1ae39b6563f976f6790562debb09f34591" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void operator()</definition>
        <argsstring>(A &amp;v) const </argsstring>
        <name>operator()</name>
        <param>
          <type>A &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1685" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1684" bodyend="1688"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1tuple__base_1af1744e5d97b541184d409c649cd402a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
          <param>
            <type>class B</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void operator()</definition>
        <argsstring>(const A &amp;v, const B &amp;w)</argsstring>
        <name>operator()</name>
        <param>
          <type>const A &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const B &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1692" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1691" bodyend="1695"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1tuple__base_1a378db1f70ece0b609e50fe415241776d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
          <param>
            <type>class B</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void operator()</definition>
        <argsstring>(A &amp;v, const B &amp;w)</argsstring>
        <name>operator()</name>
        <param>
          <type>A &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const B &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1698" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1697" bodyend="1701"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1tuple__base_1a0a8e84d4f4f65d5feb35ad6c85121e3b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
          <param>
            <type>class B</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void operator()</definition>
        <argsstring>(A &amp;v, const B &amp;w) const </argsstring>
        <name>operator()</name>
        <param>
          <type>A &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const B &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1704" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1703" bodyend="1707"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1tuple__base_1a3d158996718943b305d70c16625cdcb3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
          <param>
            <type>class B</type>
          </param>
          <param>
            <type>class C</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void operator()</definition>
        <argsstring>(const A &amp;v, const B &amp;w, const C &amp;x)</argsstring>
        <name>operator()</name>
        <param>
          <type>const A &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const B &amp;</type>
          <declname>w</declname>
        </param>
        <param>
          <type>const C &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1711" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1710" bodyend="1714"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1tuple__base_1aaa3d81381728198edfaddfb81db29a2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
          <param>
            <type>class B</type>
          </param>
          <param>
            <type>class C</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void operator()</definition>
        <argsstring>(A &amp;v, const B &amp;w, const C &amp;x)</argsstring>
        <name>operator()</name>
        <param>
          <type>A &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const B &amp;</type>
          <declname>w</declname>
        </param>
        <param>
          <type>const C &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1717" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1716" bodyend="1720"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1tuple__base_1ae373b652d139431d5ca8b82ac69ec4e2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
          <param>
            <type>class B</type>
          </param>
          <param>
            <type>class C</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void operator()</definition>
        <argsstring>(A &amp;v, const B &amp;w, const C &amp;x) const </argsstring>
        <name>operator()</name>
        <param>
          <type>A &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const B &amp;</type>
          <declname>w</declname>
        </param>
        <param>
          <type>const C &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1723" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1722" bodyend="1726"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1tuple__base_1a313a7ab0b9e1b4346d0a3b4577131c29" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>tuple_base &amp;</type>
        <definition>tuple_base&amp; operator=</definition>
        <argsstring>(const tuple_base &amp;x)</argsstring>
        <name>operator=</name>
        <param>
          <type>const tuple_base &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1786" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1785" bodyend="1792"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1tuple__base_1aa2bf84bd9c00498f5cfb8fa08edfa288" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>ref_returns&lt; T &gt;::type</type>
        <definition>ref_returns&lt;T&gt;::type ref</definition>
        <argsstring>()</argsstring>
        <name>ref</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1614" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1613" bodyend="1616"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1tuple__base_1a9d965f6c768f8fd7d6d647b0dc0c04ac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>ref_returns&lt; T &gt;::const_type</type>
        <definition>ref_returns&lt;T&gt;::const_type ref</definition>
        <argsstring>() const </argsstring>
        <name>ref</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1620" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1619" bodyend="1622"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1tuple__base_1a3fbe91f74734add7e1df567f6b1b8139" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class V</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void set</definition>
        <argsstring>()</argsstring>
        <name>set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1639" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1638" bodyend="1642"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1tuple__base_1a4a2ba53cb4b5cd99c60822635358c372" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class RV</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void set_if_not</definition>
        <argsstring>(RV &amp;rv)</argsstring>
        <name>set_if_not</name>
        <param>
          <type>RV &amp;</type>
          <declname>rv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1631" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1630" bodyend="1634"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1tuple__base_1a5d74be4917424115c9d1e177cf34db1c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ITL2</type>
          </param>
          <param>
            <type>class Q2</type>
          </param>
          <param>
            <type>template&lt; class &gt; class</type>
            <declname>TEST2</declname>
            <defname>TEST2</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void transfer_set_to</definition>
        <argsstring>(tuple_base&lt; ITL2, Q2, TEST2 &gt; &amp;t2) const </argsstring>
        <name>transfer_set_to</name>
        <param>
          <type>tuple_base&lt; ITL2, Q2, TEST2 &gt; &amp;</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1647" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1646" bodyend="1651"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1tuple__base_1a187a253483dc8f565902ce7cb9e00c77" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tuple_base</definition>
        <argsstring>()</argsstring>
        <name>tuple_base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1779" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1779" bodyend="1779"/>
      </memberdef>
      <memberdef kind="function" id="structvigra_1_1type__lists_1_1tuple__base_1a85b122535372e4e295db288b60806a0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tuple_base</definition>
        <argsstring>(const tuple_base &amp;x)</argsstring>
        <name>tuple_base</name>
        <param>
          <type>const tuple_base &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1782" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1780" bodyend="1784"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" line="1570" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/type_lists.hxx" bodystart="1568" bodyend="1793"/>
    <listofallmembers>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1a2b538297d18c1a60a51000c05bd86419" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>at</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1abd1bc6370241af36be5e781030759b56" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>call</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1a20f9ab8d6cbd4179fdaed80e01a3cc79" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>call</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1ab16d7b0e560de73fecd793073d073d4f" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>call</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1aa68153907833cf9fa885f33b5417711c" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>call</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1a0aef72ebd7db328a143cb59209904567" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>call</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1a03cb7d92e5aae807b87166f7c4d968e3" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>call</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1a57168f1771c25d9c6748f922f8ae798e" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>call_bound</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1a54d22af553d7a47c2228843ac6c93a65" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>call_bound_op</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1a0b6b3d267906b7eb9000be66f8a6345d" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>derived_type</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1a859216eca8e70847833a4786f5133dbb" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>exec_bound</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1a4374e509ad1e27bab984819575bac8ef" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>exec_bound_op</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1a9bec4099344296e57f95a7e33f152b69" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>finder_type</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1a9b5a3fc101a92e0884c13bebefad25e9" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>first</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1a009b2284591b60b4de1c6fa5f212769f" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>first_type</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1a2f3800971aeced0944706bdf04d133db" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>global_data_base_type</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1a8b5223b647670a52b3bb1a2aea27c53a" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>is_set</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1a7ad0efb9c0c89e8253f61f51b71e9c03" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>list_type</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1a5ccbdeb5350ba8528eab7e4cc49fc68b" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>operator()</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1a3563468dcbe023719960482a96299335" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>operator()</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1a78b17723011ca760dc53b330156acc18" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>operator()</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1ae39b6563f976f6790562debb09f34591" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>operator()</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1af1744e5d97b541184d409c649cd402a4" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>operator()</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1a378db1f70ece0b609e50fe415241776d" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>operator()</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1a0a8e84d4f4f65d5feb35ad6c85121e3b" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>operator()</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1a3d158996718943b305d70c16625cdcb3" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>operator()</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1aaa3d81381728198edfaddfb81db29a2b" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>operator()</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1ae373b652d139431d5ca8b82ac69ec4e2" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>operator()</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1a313a7ab0b9e1b4346d0a3b4577131c29" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>operator=</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1aa2bf84bd9c00498f5cfb8fa08edfa288" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>ref</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1a9d965f6c768f8fd7d6d647b0dc0c04ac" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>ref</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1ae07201134b670685e40b076735318de8" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>ref_finder_type</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1a28e30979a4f8ea8c1dac475f5adea98d" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>rest</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1ab7907ac60a3d69bdaaf8b38db557b48a" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>rest_list_type</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1a2d1ae46698a1836a27cdddf73030355f" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>rest_type</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1a3fbe91f74734add7e1df567f6b1b8139" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>set</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1a4a2ba53cb4b5cd99c60822635358c372" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>set_if_not</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1a5d74be4917424115c9d1e177cf34db1c" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>transfer_set_to</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1a187a253483dc8f565902ce7cb9e00c77" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>tuple_base</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1a85b122535372e4e295db288b60806a0e" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>tuple_base</name></member>
      <member refid="structvigra_1_1type__lists_1_1tuple__base_1a81c7869dd5dc1452954a9e0b64b861fa" prot="public" virt="non-virtual"><scope>vigra::type_lists::tuple_base</scope><name>tuple_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
