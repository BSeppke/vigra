<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="unsupervised__decomposition_8hxx" kind="file">
    <compoundname>unsupervised_decomposition.hxx</compoundname>
    <includes local="no">numeric</includes>
    <includes refid="mathutil_8hxx" local="yes">mathutil.hxx</includes>
    <includes refid="matrix_8hxx" local="yes">matrix.hxx</includes>
    <includes refid="singular__value__decomposition_8hxx" local="yes">singular_value_decomposition.hxx</includes>
    <includes refid="random_8hxx" local="yes">random.hxx</includes>
    <incdepgraph>
      <node id="9374">
        <label>multi_pointoperators.hxx</label>
        <link refid="multi__pointoperators_8hxx_source"/>
        <childnode refid="9370" relation="include">
        </childnode>
        <childnode refid="9375" relation="include">
        </childnode>
        <childnode refid="9376" relation="include">
        </childnode>
        <childnode refid="9379" relation="include">
        </childnode>
        <childnode refid="9377" relation="include">
        </childnode>
        <childnode refid="9355" relation="include">
        </childnode>
        <childnode refid="9341" relation="include">
        </childnode>
        <childnode refid="9349" relation="include">
        </childnode>
      </node>
      <node id="9354">
        <label>iomanip</label>
      </node>
      <node id="9350">
        <label>functional</label>
      </node>
      <node id="9343">
        <label>limits</label>
      </node>
      <node id="9340">
        <label>sized_int.hxx</label>
        <link refid="sized__int_8hxx_source"/>
        <childnode refid="9341" relation="include">
        </childnode>
        <childnode refid="9343" relation="include">
        </childnode>
      </node>
      <node id="9351">
        <label>iterator</label>
      </node>
      <node id="9355">
        <label>multi_array.hxx</label>
        <link refid="multi__array_8hxx_source"/>
        <childnode refid="9356" relation="include">
        </childnode>
        <childnode refid="9344" relation="include">
        </childnode>
        <childnode refid="9357" relation="include">
        </childnode>
        <childnode refid="9358" relation="include">
        </childnode>
        <childnode refid="9365" relation="include">
        </childnode>
        <childnode refid="9367" relation="include">
        </childnode>
        <childnode refid="9368" relation="include">
        </childnode>
        <childnode refid="9345" relation="include">
        </childnode>
        <childnode refid="9372" relation="include">
        </childnode>
        <childnode refid="9341" relation="include">
        </childnode>
        <childnode refid="9328" relation="include">
        </childnode>
      </node>
      <node id="9349">
        <label>inspector_passes.hxx</label>
        <link refid="inspector__passes_8hxx_source"/>
        <childnode refid="9341" relation="include">
        </childnode>
      </node>
      <node id="9347">
        <label>promote_traits.hxx</label>
        <link refid="promote__traits_8hxx_source"/>
      </node>
      <node id="9370">
        <label>initimage.hxx</label>
        <link refid="initimage_8hxx_source"/>
        <childnode refid="9369" relation="include">
        </childnode>
        <childnode refid="9362" relation="include">
        </childnode>
        <childnode refid="9371" relation="include">
        </childnode>
      </node>
      <node id="9348">
        <label>algorithm.hxx</label>
        <link refid="algorithm_8hxx_source"/>
        <childnode refid="9340" relation="include">
        </childnode>
        <childnode refid="9345" relation="include">
        </childnode>
        <childnode refid="9349" relation="include">
        </childnode>
        <childnode refid="9344" relation="include">
        </childnode>
        <childnode refid="9350" relation="include">
        </childnode>
        <childnode refid="9351" relation="include">
        </childnode>
      </node>
      <node id="9329">
        <label>cmath</label>
      </node>
      <node id="9334">
        <label>stdexcept</label>
      </node>
      <node id="9327">
        <label>numeric</label>
      </node>
      <node id="9371">
        <label>functortraits.hxx</label>
        <link refid="functortraits_8hxx_source"/>
        <childnode refid="9350" relation="include">
        </childnode>
        <childnode refid="9341" relation="include">
        </childnode>
      </node>
      <node id="9361">
        <label>iteratortags.hxx</label>
        <link refid="iteratortags_8hxx_source"/>
        <childnode refid="9351" relation="include">
        </childnode>
      </node>
      <node id="9337">
        <label>string</label>
      </node>
      <node id="9375">
        <label>copyimage.hxx</label>
        <link refid="copyimage_8hxx_source"/>
        <childnode refid="9369" relation="include">
        </childnode>
      </node>
      <node id="9367">
        <label>basicimageview.hxx</label>
        <link refid="basicimageview_8hxx_source"/>
        <childnode refid="9368" relation="include">
        </childnode>
        <childnode refid="9370" relation="include">
        </childnode>
      </node>
      <node id="9362">
        <label>iteratortraits.hxx</label>
        <link refid="iteratortraits_8hxx_source"/>
        <childnode refid="9357" relation="include">
        </childnode>
        <childnode refid="9363" relation="include">
        </childnode>
      </node>
      <node id="9346">
        <label>cfloat</label>
      </node>
      <node id="9380">
        <label>singular_value_decomposition.hxx</label>
        <link refid="singular__value__decomposition_8hxx_source"/>
        <childnode refid="9352" relation="include">
        </childnode>
        <childnode refid="9381" relation="include">
        </childnode>
      </node>
      <node id="9369">
        <label>utilities.hxx</label>
        <link refid="utilities_8hxx_source"/>
        <childnode refid="9332" relation="include">
        </childnode>
        <childnode refid="9335" relation="include">
        </childnode>
        <childnode refid="9341" relation="include">
        </childnode>
        <childnode refid="9338" relation="include">
        </childnode>
        <childnode refid="9360" relation="include">
        </childnode>
        <childnode refid="9328" relation="include">
        </childnode>
        <childnode refid="9337" relation="include">
        </childnode>
        <childnode refid="9336" relation="include">
        </childnode>
      </node>
      <node id="9333">
        <label>vigra/configVersion.hxx</label>
        <link refid="configVersion_8hxx_source"/>
      </node>
      <node id="9376">
        <label>transformimage.hxx</label>
        <link refid="transformimage_8hxx_source"/>
        <childnode refid="9369" relation="include">
        </childnode>
        <childnode refid="9345" relation="include">
        </childnode>
        <childnode refid="9362" relation="include">
        </childnode>
        <childnode refid="9365" relation="include">
        </childnode>
        <childnode refid="9371" relation="include">
        </childnode>
        <childnode refid="9377" relation="include">
        </childnode>
      </node>
      <node id="9338">
        <label>tuple.hxx</label>
        <link refid="tuple_8hxx_source"/>
        <childnode refid="9339" relation="include">
        </childnode>
      </node>
      <node id="9358">
        <label>tinyvector.hxx</label>
        <link refid="tinyvector_8hxx_source"/>
        <childnode refid="9329" relation="include">
        </childnode>
        <childnode refid="9330" relation="include">
        </childnode>
        <childnode refid="9353" relation="include">
        </childnode>
        <childnode refid="9344" relation="include">
        </childnode>
        <childnode refid="9332" relation="include">
        </childnode>
        <childnode refid="9335" relation="include">
        </childnode>
        <childnode refid="9341" relation="include">
        </childnode>
        <childnode refid="9345" relation="include">
        </childnode>
        <childnode refid="9359" relation="include">
        </childnode>
        <childnode refid="9328" relation="include">
        </childnode>
        <childnode refid="9360" relation="include">
        </childnode>
      </node>
      <node id="9373">
        <label>sys/types.h</label>
      </node>
      <node id="9377">
        <label>inspectimage.hxx</label>
        <link refid="inspectimage_8hxx_source"/>
        <childnode refid="9378" relation="include">
        </childnode>
        <childnode refid="9344" relation="include">
        </childnode>
        <childnode refid="9369" relation="include">
        </childnode>
        <childnode refid="9345" relation="include">
        </childnode>
        <childnode refid="9362" relation="include">
        </childnode>
        <childnode refid="9371" relation="include">
        </childnode>
        <childnode refid="9365" relation="include">
        </childnode>
        <childnode refid="9349" relation="include">
        </childnode>
      </node>
      <node id="9328">
        <label>mathutil.hxx</label>
        <link refid="mathutil_8hxx_source"/>
        <childnode refid="9329" relation="include">
        </childnode>
        <childnode refid="9330" relation="include">
        </childnode>
        <childnode refid="9331" relation="include">
        </childnode>
        <childnode refid="9332" relation="include">
        </childnode>
        <childnode refid="9335" relation="include">
        </childnode>
        <childnode refid="9338" relation="include">
        </childnode>
        <childnode refid="9340" relation="include">
        </childnode>
        <childnode refid="9345" relation="include">
        </childnode>
        <childnode refid="9348" relation="include">
        </childnode>
      </node>
      <node id="9332">
        <label>config.hxx</label>
        <link refid="config_8hxx_source"/>
        <childnode refid="9333" relation="include">
        </childnode>
        <childnode refid="9334" relation="include">
        </childnode>
      </node>
      <node id="9383">
        <label>ctime</label>
      </node>
      <node id="9326">
        <label>vigra/unsupervised_decomposition.hxx</label>
        <link refid="unsupervised_decomposition.hxx"/>
        <childnode refid="9327" relation="include">
        </childnode>
        <childnode refid="9328" relation="include">
        </childnode>
        <childnode refid="9352" relation="include">
        </childnode>
        <childnode refid="9380" relation="include">
        </childnode>
        <childnode refid="9382" relation="include">
        </childnode>
      </node>
      <node id="9345">
        <label>numerictraits.hxx</label>
        <link refid="numerictraits_8hxx_source"/>
        <childnode refid="9342" relation="include">
        </childnode>
        <childnode refid="9343" relation="include">
        </childnode>
        <childnode refid="9346" relation="include">
        </childnode>
        <childnode refid="9331" relation="include">
        </childnode>
        <childnode refid="9341" relation="include">
        </childnode>
        <childnode refid="9340" relation="include">
        </childnode>
        <childnode refid="9347" relation="include">
        </childnode>
      </node>
      <node id="9378">
        <label>vector</label>
      </node>
      <node id="9368">
        <label>imageiterator.hxx</label>
        <link refid="imageiterator_8hxx_source"/>
        <childnode refid="9369" relation="include">
        </childnode>
        <childnode refid="9357" relation="include">
        </childnode>
        <childnode refid="9362" relation="include">
        </childnode>
        <childnode refid="9341" relation="include">
        </childnode>
      </node>
      <node id="9364">
        <label>iteratoradapter.hxx</label>
        <link refid="iteratoradapter_8hxx_source"/>
      </node>
      <node id="9363">
        <label>imageiteratoradapter.hxx</label>
        <link refid="imageiteratoradapter_8hxx_source"/>
        <childnode refid="9351" relation="include">
        </childnode>
      </node>
      <node id="9339">
        <label>utility</label>
      </node>
      <node id="9336">
        <label>sstream</label>
      </node>
      <node id="9365">
        <label>rgbvalue.hxx</label>
        <link refid="rgbvalue_8hxx_source"/>
        <childnode refid="9329" relation="include">
        </childnode>
        <childnode refid="9330" relation="include">
        </childnode>
        <childnode refid="9332" relation="include">
        </childnode>
        <childnode refid="9345" relation="include">
        </childnode>
        <childnode refid="9357" relation="include">
        </childnode>
        <childnode refid="9358" relation="include">
        </childnode>
        <childnode refid="9366" relation="include">
        </childnode>
      </node>
      <node id="9382">
        <label>random.hxx</label>
        <link refid="random_8hxx_source"/>
        <childnode refid="9328" relation="include">
        </childnode>
        <childnode refid="9371" relation="include">
        </childnode>
        <childnode refid="9381" relation="include">
        </childnode>
        <childnode refid="9383" relation="include">
        </childnode>
      </node>
      <node id="9360">
        <label>diff2d.hxx</label>
        <link refid="diff2d_8hxx_source"/>
        <childnode refid="9329" relation="include">
        </childnode>
        <childnode refid="9353" relation="include">
        </childnode>
        <childnode refid="9332" relation="include">
        </childnode>
        <childnode refid="9361" relation="include">
        </childnode>
        <childnode refid="9362" relation="include">
        </childnode>
        <childnode refid="9364" relation="include">
        </childnode>
        <childnode refid="9338" relation="include">
        </childnode>
      </node>
      <node id="9335">
        <label>error.hxx</label>
        <link refid="error_8hxx_source"/>
        <childnode refid="9334" relation="include">
        </childnode>
        <childnode refid="9336" relation="include">
        </childnode>
        <childnode refid="9337" relation="include">
        </childnode>
        <childnode refid="9332" relation="include">
        </childnode>
      </node>
      <node id="9366">
        <label>static_assert.hxx</label>
        <link refid="static__assert_8hxx_source"/>
      </node>
      <node id="9381">
        <label>array_vector.hxx</label>
        <link refid="array__vector_8hxx_source"/>
        <childnode refid="9335" relation="include">
        </childnode>
        <childnode refid="9359" relation="include">
        </childnode>
        <childnode refid="9345" relation="include">
        </childnode>
        <childnode refid="9356" relation="include">
        </childnode>
        <childnode refid="9344" relation="include">
        </childnode>
        <childnode refid="9353" relation="include">
        </childnode>
      </node>
      <node id="9353">
        <label>iosfwd</label>
      </node>
      <node id="9330">
        <label>cstdlib</label>
      </node>
      <node id="9372">
        <label>multi_iterator.hxx</label>
        <link refid="multi__iterator_8hxx_source"/>
        <childnode refid="9373" relation="include">
        </childnode>
        <childnode refid="9358" relation="include">
        </childnode>
        <childnode refid="9361" relation="include">
        </childnode>
      </node>
      <node id="9342">
        <label>climits</label>
      </node>
      <node id="9341">
        <label>metaprogramming.hxx</label>
        <link refid="metaprogramming_8hxx_source"/>
        <childnode refid="9332" relation="include">
        </childnode>
        <childnode refid="9342" relation="include">
        </childnode>
        <childnode refid="9343" relation="include">
        </childnode>
        <childnode refid="9344" relation="include">
        </childnode>
      </node>
      <node id="9379">
        <label>combineimages.hxx</label>
        <link refid="combineimages_8hxx_source"/>
        <childnode refid="9369" relation="include">
        </childnode>
        <childnode refid="9345" relation="include">
        </childnode>
        <childnode refid="9371" relation="include">
        </childnode>
        <childnode refid="9329" relation="include">
        </childnode>
      </node>
      <node id="9331">
        <label>complex</label>
      </node>
      <node id="9352">
        <label>matrix.hxx</label>
        <link refid="matrix_8hxx_source"/>
        <childnode refid="9329" relation="include">
        </childnode>
        <childnode refid="9353" relation="include">
        </childnode>
        <childnode refid="9354" relation="include">
        </childnode>
        <childnode refid="9355" relation="include">
        </childnode>
        <childnode refid="9328" relation="include">
        </childnode>
        <childnode refid="9345" relation="include">
        </childnode>
        <childnode refid="9374" relation="include">
        </childnode>
      </node>
      <node id="9344">
        <label>algorithm</label>
      </node>
      <node id="9359">
        <label>memory.hxx</label>
        <link refid="memory_8hxx_source"/>
        <childnode refid="9341" relation="include">
        </childnode>
      </node>
      <node id="9357">
        <label>accessor.hxx</label>
        <link refid="accessor_8hxx_source"/>
        <childnode refid="9341" relation="include">
        </childnode>
        <childnode refid="9345" relation="include">
        </childnode>
        <childnode refid="9338" relation="include">
        </childnode>
      </node>
      <node id="9356">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innerclass refid="classvigra_1_1PLSAOptions" prot="public">vigra::PLSAOptions</innerclass>
    <innernamespace refid="namespacevigra">vigra</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Copyright<sp/>2008-2011<sp/>by<sp/>Michael<sp/>Hanselmann<sp/>and<sp/>Ullrich<sp/>Koethe<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>VIGRA<sp/>computer<sp/>vision<sp/>library.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>The<sp/>VIGRA<sp/>Website<sp/>is<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://hci.iwr.uni-heidelberg.de/vigra/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Please<sp/>direct<sp/>questions,<sp/>bug<sp/>reports,<sp/>and<sp/>contributions<sp/>to<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ullrich.koethe@iwr.uni-heidelberg.de<sp/><sp/><sp/><sp/>or<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra@informatik.uni-hamburg.de<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>conditions:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Software.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VIGRA_UNSUPERVISED_DECOMPOSITION_HXX</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_UNSUPERVISED_DECOMPOSITION_HXX</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;numeric&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mathutil.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;matrix.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;singular_value_decomposition.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;random.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vigra</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="49"><highlight class="comment">/**<sp/>\addtogroup<sp/>Unsupervised_Decomposition<sp/>Unsupervised<sp/>Decomposition</highlight></codeline>
<codeline lineno="50"><highlight class="comment"></highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/><sp/>Unsupervised<sp/>matrix<sp/>decomposition<sp/>methods.</highlight></codeline>
<codeline lineno="52"><highlight class="comment">**/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="53"><highlight class="comment">//@{</highlight></codeline>
<codeline lineno="54"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>principle<sp/>component<sp/>analysis<sp/>(PCA)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/>/**<sp/>\brief<sp/>Decompose<sp/>a<sp/>matrix<sp/>according<sp/>to<sp/>the<sp/>PCA<sp/>algorithm.<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="comment"></highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>function<sp/>implements<sp/>the<sp/>PCA<sp/>algorithm<sp/>(principle<sp/>component<sp/>analysis).</highlight></codeline>
<codeline lineno="64"><highlight class="comment"></highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\arg<sp/>features<sp/>must<sp/>be<sp/>a<sp/>matrix<sp/>with<sp/>shape<sp/>&lt;tt&gt;(numFeatures<sp/>*<sp/>numSamples)&lt;/tt&gt;,<sp/>which<sp/>is</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decomposed<sp/>into<sp/>the<sp/>matrices<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\arg<sp/>fz<sp/>with<sp/>shape<sp/>&lt;tt&gt;(numFeatures<sp/>*<sp/>numComponents)&lt;/tt&gt;<sp/>and</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\arg<sp/>zv<sp/>with<sp/>shape<sp/>&lt;tt&gt;(numComponents<sp/>*<sp/>numSamples)&lt;/tt&gt;</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>such<sp/>that</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\f[</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\mathrm{features}<sp/>\approx<sp/>\mathrm{fz}<sp/>*<sp/>\mathrm{zv}</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\f]</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(this<sp/>formula<sp/>requires<sp/>that<sp/>the<sp/>features<sp/>have<sp/>been<sp/>centered<sp/>around<sp/>the<sp/>mean<sp/>by</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;\ref<sp/>linalg::prepareRows&amp;nbsp;(features,<sp/>features,<sp/>ZeroMean)&lt;/tt&gt;).</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>shape<sp/>parameter<sp/>&lt;tt&gt;numComponents&lt;/tt&gt;<sp/>determines<sp/>the<sp/>complexity<sp/>of<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>decomposition<sp/>model<sp/>and<sp/>therefore<sp/>the<sp/>approximation<sp/>quality<sp/>(if</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;numComponents<sp/>==<sp/>numFeatures&lt;/tt&gt;,<sp/>the<sp/>representation<sp/>becomes<sp/>exact).<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Intuitively,<sp/>&lt;tt&gt;fz&lt;/tt&gt;<sp/>is<sp/>a<sp/>projection<sp/>matrix<sp/>from<sp/>the<sp/>reduced<sp/>space</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>into<sp/>the<sp/>original<sp/>space,<sp/>and<sp/>&lt;tt&gt;zv&lt;/tt&gt;<sp/>is<sp/><sp/>the<sp/>reduced<sp/>representation</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>data,<sp/>using<sp/>just<sp/>&lt;tt&gt;numComponents&lt;/tt&gt;<sp/>features.</highlight></codeline>
<codeline lineno="83"><highlight class="comment"></highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;Declaration:&lt;/b&gt;</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/unsupervised_decomposition.hxx\&gt;</highlight></codeline>
<codeline lineno="87"><highlight class="comment"></highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>U,<sp/>class<sp/>C1,<sp/>class<sp/>C2,<sp/>class<sp/>C3&gt;</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>principleComponents(MultiArrayView&lt;2,<sp/>U,<sp/>C1&gt;<sp/>const<sp/>&amp;<sp/>features,</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,<sp/>U,<sp/>C2&gt;<sp/>fz,<sp/></highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,<sp/>U,<sp/>C3&gt;<sp/>zv);</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matrix&lt;double&gt;<sp/>data(numFeatures,<sp/>numSamples);</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...<sp/>//<sp/>fill<sp/>the<sp/>input<sp/>matrix</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>numComponents<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matrix&lt;double&gt;<sp/>fz(numFeatures,<sp/>numComponents),</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zv(numComponents,<sp/>numSamples);</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>center<sp/>the<sp/>data</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prepareRows(data,<sp/>data,<sp/>ZeroMean);</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>compute<sp/>the<sp/>reduced<sp/>representation</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>principleComponents(data,<sp/>fz,<sp/>zv);</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matrix&lt;double&gt;<sp/>model<sp/>=<sp/>fz*zv;</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>meanSquaredError<sp/>=<sp/>squaredNorm(data<sp/>-<sp/>model)<sp/>/<sp/>numSamples;</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C3&gt;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="group__Unsupervised__Decomposition_1ga03b34ec75f31e6ea3b2dc541f31204fe" refkind="member"><highlight class="normal"><ref refid="group__Unsupervised__Decomposition_1ga03b34ec75f31e6ea3b2dc541f31204fe" kindref="member" tooltip="Decompose a matrix according to the PCA algorithm.">principleComponents</ref>(<ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView&lt;2, T, C1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>features,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView&lt;2, T, C2&gt;</ref><sp/>fz,<sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1MultiArrayView" kindref="compound" tooltip="Base class for, and view to, vigra::MultiArray.">MultiArrayView&lt;2, T, C3&gt;</ref><sp/>zv)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">linalg;<sp/></highlight><highlight class="comment">//<sp/>activate<sp/>matrix<sp/>multiplication<sp/>and<sp/>arithmetic<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numFeatures<sp/>=<sp/><ref refid="group__LinearAlgebraFunctions_1gaa88b5c1277c72b4d4e2b70c278efbffe" kindref="member">rowCount</ref>(features);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numSamples<sp/>=<sp/><ref refid="group__LinearAlgebraFunctions_1ga40eab6d0fc1e179c173a3b90c9d991be" kindref="member">columnCount</ref>(features);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numComponents<sp/>=<sp/><ref refid="group__LinearAlgebraFunctions_1ga40eab6d0fc1e179c173a3b90c9d991be" kindref="member">columnCount</ref>(fz);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>vigra_precondition(numSamples<sp/>&gt;=<sp/>numFeatures,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;principleComponents():<sp/>The<sp/>number<sp/>of<sp/>samples<sp/>has<sp/>to<sp/>be<sp/>larger<sp/>than<sp/>the<sp/>number<sp/>of<sp/>features.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>vigra_precondition(numFeatures<sp/>&gt;=<sp/>numComponents<sp/>&amp;&amp;<sp/>numComponents<sp/>&gt;=<sp/>1,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;principleComponents():<sp/>The<sp/>number<sp/>of<sp/>features<sp/>has<sp/>to<sp/>be<sp/>larger<sp/>or<sp/>equal<sp/>to<sp/>the<sp/>number<sp/>of<sp/>components<sp/>in<sp/>which<sp/>the<sp/>feature<sp/>matrix<sp/>is<sp/>decomposed.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>vigra_precondition(<ref refid="group__LinearAlgebraFunctions_1gaa88b5c1277c72b4d4e2b70c278efbffe" kindref="member">rowCount</ref>(fz)<sp/>==<sp/>numFeatures,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;principleComponents():<sp/>The<sp/>output<sp/>matrix<sp/>fz<sp/>has<sp/>to<sp/>be<sp/>of<sp/>dimension<sp/>numFeatures*numComponents.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>vigra_precondition(<ref refid="group__LinearAlgebraFunctions_1ga40eab6d0fc1e179c173a3b90c9d991be" kindref="member">columnCount</ref>(zv)<sp/>==<sp/>numSamples<sp/>&amp;&amp;<sp/><ref refid="group__LinearAlgebraFunctions_1gaa88b5c1277c72b4d4e2b70c278efbffe" kindref="member">rowCount</ref>(zv)<sp/>==<sp/>numComponents,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;principleComponents():<sp/>The<sp/>output<sp/>matrix<sp/>zv<sp/>has<sp/>to<sp/>be<sp/>of<sp/>dimension<sp/>numComponents*numSamples.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>Matrix&lt;T&gt;<sp/>U(numSamples,<sp/>numFeatures),<sp/>S(numFeatures,<sp/>1),<sp/>V(numFeatures,<sp/>numFeatures);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__MatrixAlgebra_1gaf20e05edcc344f32d96fdaf5a6b3b972" kindref="member">singularValueDecomposition</ref>(features.<ref refid="classvigra_1_1MultiArrayView_1af54479ad2ee57be8181f50013864cc33" kindref="member">transpose</ref>(),<sp/>U,<sp/>S,<sp/>V);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k&lt;numComponents;<sp/>++k)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__LinearAlgebraFunctions_1ga8cc5e13ed0643c0d9b8c9021eaae625d" kindref="member">rowVector</ref>(zv,<sp/>k)<sp/>=<sp/><ref refid="group__LinearAlgebraFunctions_1gab8ee32ac1c1c77108435f22be5cb08a0" kindref="member">columnVector</ref>(U,<sp/>k).transpose()<sp/>*<sp/>S(k,<sp/>0);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__LinearAlgebraFunctions_1gab8ee32ac1c1c77108435f22be5cb08a0" kindref="member">columnVector</ref>(fz,<sp/>k)<sp/>=<sp/><ref refid="group__LinearAlgebraFunctions_1gab8ee32ac1c1c77108435f22be5cb08a0" kindref="member">columnVector</ref>(V,<sp/>k);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probabilistic<sp/>latent<sp/>semantic<sp/>analysis<sp/>(pLSA)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>see<sp/>T<sp/>Hofmann,<sp/>Probabilistic<sp/>Latent<sp/>Semantic<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Indexing<sp/>for<sp/>details<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/>/**<sp/>\brief<sp/>Option<sp/>object<sp/>for<sp/>the<sp/>\ref<sp/>pLSA<sp/>algorithm.<sp/></highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="classvigra_1_1PLSAOptions" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1PLSAOptions" kindref="compound" tooltip="Option object for the pLSA algorithm.">PLSAOptions</ref></highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Initialize<sp/>all<sp/>options<sp/>with<sp/>default<sp/>values.</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="classvigra_1_1PLSAOptions_1a9afedae4367619c81bbc22bd8e701c94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1PLSAOptions_1a9afedae4367619c81bbc22bd8e701c94" kindref="member">PLSAOptions</ref>()</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>min_rel_gain(1e-4),</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max_iterations(50),</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>normalized_component_weights(true)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Maximum<sp/>number<sp/>of<sp/>iterations<sp/>which<sp/>is<sp/>performed<sp/>by<sp/>the<sp/>pLSA<sp/>algorithm.</highlight></codeline>
<codeline lineno="170"><highlight class="comment"></highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default:<sp/>50</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="classvigra_1_1PLSAOptions_1ac0f2c0819687682f42103d19874301d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1PLSAOptions" kindref="compound" tooltip="Option object for the pLSA algorithm.">PLSAOptions</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1PLSAOptions_1ac0f2c0819687682f42103d19874301d2" kindref="member">maximumNumberOfIterations</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra_precondition(n<sp/>&gt;=<sp/>1,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;PLSAOptions::maximumNumberOfIterations():<sp/>number<sp/>must<sp/>be<sp/>a<sp/>positive<sp/>integer.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_iterations<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Minimum<sp/>relative<sp/>gain<sp/>which<sp/>is<sp/>required<sp/>for<sp/>the<sp/>algorithm<sp/>to<sp/>continue<sp/>the<sp/>iterations.</highlight></codeline>
<codeline lineno="182"><highlight class="comment"></highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default:<sp/>1e-4</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="classvigra_1_1PLSAOptions_1a80bb8ec2539c639f75edb46fc7c10f84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1PLSAOptions" kindref="compound" tooltip="Option object for the pLSA algorithm.">PLSAOptions</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1PLSAOptions_1a80bb8ec2539c639f75edb46fc7c10f84" kindref="member">minimumRelativeGain</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>g)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra_precondition(g<sp/>&gt;=<sp/>0.0,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;PLSAOptions::minimumRelativeGain():<sp/>number<sp/>must<sp/>be<sp/>positive<sp/>or<sp/>zero.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_rel_gain<sp/>=<sp/>g;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/**<sp/>Normalize<sp/>the<sp/>entries<sp/>of<sp/>the<sp/>zv<sp/>result<sp/>array.</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>true,<sp/>the<sp/>columns<sp/>of<sp/>zv<sp/>sum<sp/>to<sp/>one.<sp/>Otherwise,<sp/>they<sp/>have<sp/>the<sp/>same</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>column<sp/>sum<sp/>as<sp/>the<sp/>original<sp/>feature<sp/>matrix.</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default:<sp/>true</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="classvigra_1_1PLSAOptions_1afbfa2fa89b7b07fa4a4a7479502a839f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1PLSAOptions" kindref="compound" tooltip="Option object for the pLSA algorithm.">PLSAOptions</ref><sp/>&amp;<sp/><ref refid="classvigra_1_1PLSAOptions_1afbfa2fa89b7b07fa4a4a7479502a839f" kindref="member">normalizedComponentWeights</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>v<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalized_component_weights<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min_rel_gain;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_iterations;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>normalized_component_weights;</highlight></codeline>
<codeline lineno="209"><highlight class="normal">};</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/>/**<sp/>\brief<sp/>Decompose<sp/>a<sp/>matrix<sp/>according<sp/>to<sp/>the<sp/>pLSA<sp/>algorithm.<sp/></highlight></codeline>
<codeline lineno="212"><highlight class="comment"></highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>function<sp/>implements<sp/>the<sp/>pLSA<sp/>algorithm<sp/>(probabilistic<sp/>latent<sp/>semantic<sp/>analysis)<sp/></highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proposed<sp/>in</highlight></codeline>
<codeline lineno="215"><highlight class="comment"></highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T.<sp/>Hofmann:<sp/>&lt;a<sp/>href=&quot;http://www.cs.brown.edu/people/th/papers/Hofmann-UAI99.pdf&quot;&gt;</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;i&gt;&quot;Probabilistic<sp/>Latent<sp/>Semantic<sp/>Analysis&quot;&lt;/i&gt;&lt;/a&gt;,</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in:<sp/>UAI&apos;99,<sp/>Proc.<sp/>15th<sp/>Conf.<sp/>on<sp/>Uncertainty<sp/>in<sp/>Artificial<sp/>Intelligence,</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp.<sp/>289-296,<sp/>Morgan<sp/>Kaufmann,<sp/>1999</highlight></codeline>
<codeline lineno="220"><highlight class="comment"></highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\arg<sp/>features<sp/>must<sp/>be<sp/>a<sp/>matrix<sp/>with<sp/>shape<sp/>&lt;tt&gt;(numFeatures<sp/>*<sp/>numSamples)&lt;/tt&gt;,<sp/>which<sp/>is</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decomposed<sp/>into<sp/>the<sp/>matrices<sp/></highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\arg<sp/>fz<sp/>with<sp/>shape<sp/>&lt;tt&gt;(numFeatures<sp/>*<sp/>numComponents)&lt;/tt&gt;<sp/>and</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\arg<sp/>zv<sp/>with<sp/>shape<sp/>&lt;tt&gt;(numComponents<sp/>*<sp/>numSamples)&lt;/tt&gt;</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>such<sp/>that</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\f[</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\mathrm{features}<sp/>\approx<sp/>\mathrm{fz}<sp/>*<sp/>\mathrm{zv}</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\f]</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(this<sp/>formula<sp/>applies<sp/>when<sp/>pLSA<sp/>is<sp/>called<sp/>with<sp/></highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;PLSAOptions.normalizedComponentWeights(false)&lt;/tt&gt;.<sp/>Otherwise,<sp/>you<sp/>must</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalize<sp/>the<sp/>features<sp/>by<sp/>calling<sp/>&lt;tt&gt;\ref<sp/>linalg::prepareColumns&amp;nbsp;(features,<sp/>features,<sp/>UnitSum)&lt;/tt&gt;</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>make<sp/>the<sp/>formula<sp/>hold).</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>shape<sp/>parameter<sp/>&lt;tt&gt;numComponents&lt;/tt&gt;<sp/>determines<sp/>the<sp/>complexity<sp/>of<sp/></highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>decomposition<sp/>model<sp/>and<sp/>therefore<sp/>the<sp/>approximation<sp/>quality.<sp/></highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Intuitively,<sp/>features<sp/>are<sp/>a<sp/>set<sp/>of<sp/>words,<sp/>and<sp/>the<sp/>samples<sp/>a<sp/>set<sp/>of<sp/></highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>documents.<sp/>The<sp/>entries<sp/>of<sp/>the<sp/>&lt;tt&gt;features&lt;/tt&gt;<sp/>matrix<sp/>denote<sp/>the<sp/>relative<sp/></highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frequency<sp/>of<sp/>the<sp/>words<sp/>in<sp/>each<sp/>document.<sp/>The<sp/>components<sp/>represents<sp/>a<sp/></highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(presumably<sp/>small)<sp/>set<sp/>of<sp/>topics.<sp/>The<sp/>matrix<sp/>&lt;tt&gt;fz&lt;/tt&gt;<sp/>encodes<sp/>the<sp/></highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>relative<sp/>frequency<sp/>of<sp/>words<sp/>in<sp/>the<sp/>different<sp/>topics,<sp/>and<sp/>the<sp/>matrix<sp/><sp/></highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;tt&gt;zv&lt;/tt&gt;<sp/>encodes<sp/>to<sp/>what<sp/>extend<sp/>each<sp/>topic<sp/>explains<sp/>the<sp/>content<sp/>of<sp/>each<sp/></highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>document.</highlight></codeline>
<codeline lineno="244"><highlight class="comment"></highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>option<sp/>object<sp/>determines<sp/>the<sp/>iteration<sp/>termination<sp/>conditions<sp/>and<sp/>the<sp/>output</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalization.<sp/>In<sp/>addition,<sp/>you<sp/>may<sp/>pass<sp/>a<sp/>random<sp/>number<sp/>generator<sp/>to<sp/>pLSA()</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>which<sp/>is<sp/>used<sp/>to<sp/>create<sp/>the<sp/>initial<sp/>solution.</highlight></codeline>
<codeline lineno="248"><highlight class="comment"></highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;Declarations:&lt;/b&gt;</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/unsupervised_decomposition.hxx\&gt;</highlight></codeline>
<codeline lineno="252"><highlight class="comment"></highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>U,<sp/>class<sp/>C1,<sp/>class<sp/>C2,<sp/>class<sp/>C3,<sp/>class<sp/>Random&gt;</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pLSA(MultiArrayView&lt;2,<sp/>U,<sp/>C1&gt;<sp/>const<sp/>&amp;<sp/>features,</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,<sp/>U,<sp/>C2&gt;<sp/>&amp;<sp/>fz,<sp/></highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,<sp/>U,<sp/>C3&gt;<sp/>&amp;<sp/>zv,</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Random<sp/>const&amp;<sp/>random,</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PLSAOptions<sp/>const<sp/>&amp;<sp/>options<sp/>=<sp/>PLSAOptions());</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>U,<sp/>class<sp/>C1,<sp/>class<sp/>C2,<sp/>class<sp/>C3&gt;</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pLSA(MultiArrayView&lt;2,<sp/>U,<sp/>C1&gt;<sp/>const<sp/>&amp;<sp/>features,<sp/></highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,<sp/>U,<sp/>C2&gt;<sp/>&amp;<sp/>fz,<sp/></highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,<sp/>U,<sp/>C3&gt;<sp/>&amp;<sp/>zv,</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PLSAOptions<sp/>const<sp/>&amp;<sp/>options<sp/>=<sp/>PLSAOptions());</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matrix&lt;double&gt;<sp/>words(numWords,<sp/>numDocuments);</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...<sp/>//<sp/>fill<sp/>the<sp/>input<sp/>matrix</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>numTopics<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matrix&lt;double&gt;<sp/>fz(numWords,<sp/>numTopics),</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zv(numTopics,<sp/>numDocuments);</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pLSA(words,<sp/>fz,<sp/>zv,<sp/>PLSAOptions().normalizedComponentWeights(false));</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matrix&lt;double&gt;<sp/>model<sp/>=<sp/>fz*zv;</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>meanSquaredError<sp/>=<sp/>(words<sp/>-<sp/>model).squaredNorm()<sp/>/<sp/>numDocuments;</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal">doxygen_overloaded_function(template<sp/>&lt;...&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__Unsupervised__Decomposition_1ga7aff6f8e1ad85add65d226bcd899e07b" kindref="member" tooltip="Decompose a matrix according to the pLSA algorithm.">pLSA</ref>)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C3,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Random&gt;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><ref refid="group__Unsupervised__Decomposition_1ga7aff6f8e1ad85add65d226bcd899e07b" kindref="member" tooltip="Decompose a matrix according to the pLSA algorithm.">pLSA</ref>(MultiArrayView&lt;2,<sp/>U,<sp/>C1&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>features,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,<sp/>U,<sp/>C2&gt;<sp/>fz,<sp/></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,<sp/>U,<sp/>C3&gt;<sp/>zv,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>Random<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>random,</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>PLSAOptions<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>options<sp/>=<sp/>PLSAOptions())</highlight></codeline>
<codeline lineno="298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">linalg;<sp/></highlight><highlight class="comment">//<sp/>activate<sp/>matrix<sp/>multiplication<sp/>and<sp/>arithmetic<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numFeatures<sp/>=<sp/><ref refid="group__LinearAlgebraFunctions_1gaa88b5c1277c72b4d4e2b70c278efbffe" kindref="member">rowCount</ref>(features);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numSamples<sp/>=<sp/><ref refid="group__LinearAlgebraFunctions_1ga40eab6d0fc1e179c173a3b90c9d991be" kindref="member">columnCount</ref>(features);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numComponents<sp/>=<sp/><ref refid="group__LinearAlgebraFunctions_1ga40eab6d0fc1e179c173a3b90c9d991be" kindref="member">columnCount</ref>(fz);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>vigra_precondition(numFeatures<sp/>&gt;=<sp/>numComponents<sp/>&amp;&amp;<sp/>numComponents<sp/>&gt;=<sp/>1,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;pLSA():<sp/>The<sp/>number<sp/>of<sp/>features<sp/>has<sp/>to<sp/>be<sp/>larger<sp/>or<sp/>equal<sp/>to<sp/>the<sp/>number<sp/>of<sp/>components<sp/>in<sp/>which<sp/>the<sp/>feature<sp/>matrix<sp/>is<sp/>decomposed.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>vigra_precondition(<ref refid="group__LinearAlgebraFunctions_1gaa88b5c1277c72b4d4e2b70c278efbffe" kindref="member">rowCount</ref>(fz)<sp/>==<sp/>numFeatures,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;pLSA():<sp/>The<sp/>output<sp/>matrix<sp/>fz<sp/>has<sp/>to<sp/>be<sp/>of<sp/>dimension<sp/>numFeatures*numComponents.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>vigra_precondition(<ref refid="group__LinearAlgebraFunctions_1ga40eab6d0fc1e179c173a3b90c9d991be" kindref="member">columnCount</ref>(zv)<sp/>==<sp/>numSamples<sp/>&amp;&amp;<sp/><ref refid="group__LinearAlgebraFunctions_1gaa88b5c1277c72b4d4e2b70c278efbffe" kindref="member">rowCount</ref>(zv)<sp/>==<sp/>numComponents,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;pLSA():<sp/>The<sp/>output<sp/>matrix<sp/>zv<sp/>has<sp/>to<sp/>be<sp/>of<sp/>dimension<sp/>numComponents*numSamples.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>random<sp/>initialization<sp/>of<sp/>result<sp/>matrices,<sp/>subsequent<sp/>normalization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>UniformRandomFunctor&lt;Random&gt;<sp/>randf(random);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__MultiPointoperators_1ga67ea3b211a208ad10866c127f93860c8" kindref="member" tooltip="Write a value to every pixel in a multi-dimensional array.">initMultiArray</ref>(destMultiArrayRange(fz),<sp/>randf);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__MultiPointoperators_1ga67ea3b211a208ad10866c127f93860c8" kindref="member" tooltip="Write a value to every pixel in a multi-dimensional array.">initMultiArray</ref>(destMultiArrayRange(zv),<sp/>randf);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__LinearAlgebraFunctions_1ga9570361590f341c6a3699b1d2074c3de" kindref="member">prepareColumns</ref>(fz,<sp/>fz,<sp/>UnitSum);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__LinearAlgebraFunctions_1ga9570361590f341c6a3699b1d2074c3de" kindref="member">prepareColumns</ref>(zv,<sp/>zv,<sp/>UnitSum);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>vars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps<sp/>=<sp/>1.0/<ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">NumericTraits&lt;U&gt;::max</ref>();<sp/></highlight><highlight class="comment">//<sp/>epsilon<sp/>&gt;<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lastChange<sp/>=<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">NumericTraits&lt;U&gt;::max</ref>();<sp/></highlight><highlight class="comment">//<sp/>infinity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>err<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>err_old;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iteration<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>expectation<sp/>maximization<sp/>(EM)<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>Matrix&lt;U&gt;<sp/>columnSums(1,<sp/>numSamples);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>features.sum(columnSums);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>Matrix&lt;U&gt;<sp/>expandedSums<sp/>=<sp/>ones&lt;U&gt;(numFeatures,<sp/>1)<sp/>*<sp/>columnSums;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(iteration<sp/>&lt;<sp/>options.max_iterations<sp/>&amp;&amp;<sp/>(lastChange<sp/>&gt;<sp/>options.min_rel_gain))</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matrix&lt;U&gt;<sp/>fzv<sp/>=<sp/>fz*zv;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(iteration%25<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;iteration:<sp/>&quot;<sp/>&lt;&lt;<sp/>iteration<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;last<sp/>relative<sp/>change:<sp/>&quot;<sp/>&lt;&lt;<sp/>lastChange<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matrix&lt;U&gt;<sp/>factor<sp/>=<sp/>features<sp/>/<sp/>pointWise(fzv<sp/>+<sp/>(U)eps);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zv<sp/>*=<sp/>(fz.transpose()<sp/>*<sp/>factor);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fz<sp/>*=<sp/>(factor<sp/>*<sp/>zv.transpose());</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__LinearAlgebraFunctions_1ga9570361590f341c6a3699b1d2074c3de" kindref="member">prepareColumns</ref>(fz,<sp/>fz,<sp/>UnitSum);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__LinearAlgebraFunctions_1ga9570361590f341c6a3699b1d2074c3de" kindref="member">prepareColumns</ref>(zv,<sp/>zv,<sp/>UnitSum);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>relative<sp/>change<sp/>in<sp/>least<sp/>squares<sp/>model<sp/>fit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Matrix&lt;U&gt;<sp/>model<sp/>=<sp/>expandedSums<sp/>*<sp/>pointWise(fzv);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err_old<sp/>=<sp/>err;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>(features<sp/>-<sp/>model).<ref refid="group__LinearAlgebraFunctions_1gacb4fbe2464f536923f80991e7d7b9f16" kindref="member">squaredNorm</ref>();</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;error:<sp/>&quot;<sp/>&lt;&lt;<sp/>err<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastChange<sp/>=<sp/><ref refid="group__LinearAlgebraFunctions_1ga53f1096eae84afd8f97055fe7ac5c5fe" kindref="member">abs</ref>((err-err_old)<sp/>/<sp/>(U)(err<sp/>+<sp/>eps));</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;lastChange:<sp/>&quot;<sp/>&lt;&lt;<sp/>lastChange<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iteration<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;Terminated<sp/>after<sp/>&quot;<sp/>&lt;&lt;<sp/>iteration<sp/>&lt;&lt;<sp/>&quot;<sp/>iterations.&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;Last<sp/>relative<sp/>change<sp/>was<sp/>&quot;<sp/>&lt;&lt;<sp/>lastChange<sp/>&lt;&lt;<sp/>&quot;.&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!options.normalized_component_weights)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>undo<sp/>the<sp/>normalization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k&lt;numSamples;<sp/>++k)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__LinearAlgebraFunctions_1gab8ee32ac1c1c77108435f22be5cb08a0" kindref="member">columnVector</ref>(zv,<sp/>k)<sp/>*=<sp/>columnSums(0,<sp/>k);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C3&gt;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><ref refid="group__Unsupervised__Decomposition_1ga7aff6f8e1ad85add65d226bcd899e07b" kindref="member" tooltip="Decompose a matrix according to the pLSA algorithm.">pLSA</ref>(MultiArrayView&lt;2,<sp/>U,<sp/>C1&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>features,<sp/></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,<sp/>U,<sp/>C2&gt;<sp/>&amp;<sp/>fz,<sp/></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,<sp/>U,<sp/>C3&gt;<sp/>&amp;<sp/>zv,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>PLSAOptions<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>options<sp/>=<sp/>PLSAOptions())</highlight></codeline>
<codeline lineno="373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>RandomNumberGenerator&lt;&gt;<sp/>generator(RandomSeed);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__Unsupervised__Decomposition_1ga7aff6f8e1ad85add65d226bcd899e07b" kindref="member" tooltip="Decompose a matrix according to the pLSA algorithm.">pLSA</ref>(features,<sp/>fz,<sp/>zv,<sp/>generator,<sp/>options);</highlight></codeline>
<codeline lineno="376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="378"><highlight class="comment">//@}</highlight></codeline>
<codeline lineno="379"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>vigra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>VIGRA_UNSUPERVISED_DECOMPOSITION_HXX</highlight></codeline>
<codeline lineno="384"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/unsupervised_decomposition.hxx"/>
  </compounddef>
</doxygen>
