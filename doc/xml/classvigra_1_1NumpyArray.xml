<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="classvigra_1_1NumpyArray" kind="class" prot="public">
    <compoundname>vigra::NumpyArray</compoundname>
    <basecompoundref refid="classvigra_1_1MultiArrayView" prot="public" virt="non-virtual">MultiArrayView&lt; N, NumpyArrayTraits&lt; N, T, Stride &gt;::value_type, Stride &gt;</basecompoundref>
    <basecompoundref refid="classvigra_1_1NumpyAnyArray" prot="public" virt="non-virtual">NumpyAnyArray</basecompoundref>
    <includes refid="numpy__array_8hxx" local="no">vigra/numpy_array.hxx</includes>
    <templateparamlist>
      <param>
        <type>unsigned int</type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
      <param>
        <type>class</type>
        <declname>Stride</declname>
        <defname>Stride</defname>
        <defval><ref refid="structvigra_1_1StridedArrayTag" kindref="compound">StridedArrayTag</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classvigra_1_1NumpyArray_1ab48899087cc647f0f791ed0c459adc53" prot="public" static="no">
        <name>@35</name>
        <enumvalue id="classvigra_1_1NumpyArray_1ab48899087cc647f0f791ed0c459adc53ad5e9f57920c8f3be820823a379d521ea" prot="public">
          <name>actual_dimension</name>
          <initializer> view_type::actual_dimension</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="597" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="597" bodyend="597"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1NumpyArray_1a9aa4f8df3251438f58a26a4ec6022af6" prot="public" static="no">
        <type>NumpyArrayTraits&lt; N, T, Stride &gt;</type>
        <definition>typedef NumpyArrayTraits&lt;N, T, Stride&gt; ArrayTraits</definition>
        <argsstring></argsstring>
        <name>ArrayTraits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="587" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="587" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1NumpyArray_1aa483940878145b2ff9e92ccdb9cf3fa8" prot="public" static="no">
        <type><ref refid="classvigra_1_1MultiArrayView_1a7ccba9db082c23d8d019296dcd9ff735" kindref="member">view_type::const_iterator</ref></type>
        <definition>typedef view_type::const_iterator const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sequential (random access) const iterator type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="649" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="649" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1NumpyArray_1a6ace1aa97c0128931a921479d2df41c2" prot="public" static="no">
        <type><ref refid="classvigra_1_1MultiArrayView_1a13c57dab17e2c903cadfa5e35ba84064" kindref="member">view_type::const_pointer</ref></type>
        <definition>typedef view_type::const_pointer const_pointer</definition>
        <argsstring></argsstring>
        <name>const_pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>const pointer type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="609" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="609" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1NumpyArray_1a163353faff9e2af647551a93d2db5463" prot="public" static="no">
        <type><ref refid="classvigra_1_1MultiArrayView_1afdb67657e63a66ed3fae7b0c9fd81b48" kindref="member">view_type::const_reference</ref></type>
        <definition>typedef view_type::const_reference const_reference</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>const reference type (result of operator[] const) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="617" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="617" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1NumpyArray_1a119344590bd9a1658911dfaa5194ea6c" prot="public" static="no">
        <type><ref refid="classvigra_1_1MultiArrayView_1a58290f6e0cbd34a15d2e5024bd69d567" kindref="member">view_type::const_traverser</ref></type>
        <definition>typedef view_type::const_traverser const_traverser</definition>
        <argsstring></argsstring>
        <name>const_traverser</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>traverser type to const data </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="641" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="641" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1NumpyArray_1a7a3c9714bbd0b64760c377a88fd36c63" prot="public" static="no">
        <type><ref refid="classvigra_1_1MultiArrayView_1a8c847f2bb5c903a94bb9fb465636ae69" kindref="member">view_type::difference_type</ref></type>
        <definition>typedef view_type::difference_type difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>difference type (used for multi-dimensional offsets and indices) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="625" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="625" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1NumpyArray_1a6ac789163dd290addb14a4330998df81" prot="public" static="no">
        <type><ref refid="classvigra_1_1MultiArrayView_1a1cce94460b6beb9fb3edf9fb300fe78d" kindref="member">view_type::difference_type_1</ref></type>
        <definition>typedef view_type::difference_type_1 difference_type_1</definition>
        <argsstring></argsstring>
        <name>difference_type_1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>difference and index type for a single dimension </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="629" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="629" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1NumpyArray_1a2f5e9d6e69ba03068eab6622b4a0355b" prot="public" static="no">
        <type>ArrayTraits::dtype</type>
        <definition>typedef ArrayTraits::dtype dtype</definition>
        <argsstring></argsstring>
        <name>dtype</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="588" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="588" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1NumpyArray_1a6a8ffa1c2eb8d394ca502402e4c60792" prot="public" static="no">
        <type><ref refid="classvigra_1_1MultiArrayView_1aeee42f6d6232520f1f2342866a2ddefb" kindref="member">view_type::iterator</ref></type>
        <definition>typedef view_type::iterator iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sequential (random access) iterator type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="645" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="645" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1NumpyArray_1aaac4530f06ee099d3576181ebb585ed0" prot="public" static="no">
        <type><ref refid="classvigra_1_1NumpyAnyArray_1a34455770254dcbf1de8a4204c3db3932" kindref="member">NumpyAnyArray::difference_type</ref></type>
        <definition>typedef NumpyAnyArray::difference_type permutation_type</definition>
        <argsstring></argsstring>
        <name>permutation_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>type of an array specifying an axis permutation </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="633" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="633" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1NumpyArray_1a7c3b5f1ed08b27119127cb725966a945" prot="public" static="no">
        <type><ref refid="classvigra_1_1MultiArrayView_1ad25b518036b886d8f35a3c059301d007" kindref="member">view_type::pointer</ref></type>
        <definition>typedef view_type::pointer pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>pointer type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="605" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="605" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1NumpyArray_1ac5cb821eef81319efe0297be0092bc04" prot="public" static="no">
        <type>T</type>
        <definition>typedef T pseudo_value_type</definition>
        <argsstring></argsstring>
        <name>pseudo_value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="589" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="589" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1NumpyArray_1a7ea9d2af939d562b74071b884d5e59b3" prot="public" static="no">
        <type><ref refid="classvigra_1_1MultiArrayView_1abe8933d436779a43cb5c1896ff5f2918" kindref="member">view_type::reference</ref></type>
        <definition>typedef view_type::reference reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>reference type (result of operator[]) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="613" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="613" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1NumpyArray_1a49de2bda8c5700d3d386b176401e4a66" prot="public" static="no">
        <type><ref refid="classvigra_1_1MultiArrayView_1aa0f974ecbf50663cc55fb80dc82af95b" kindref="member">view_type::size_type</ref></type>
        <definition>typedef view_type::size_type size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>size type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="621" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="621" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1NumpyArray_1ad5c19110480a81b46e8ecdd4cfdc0c9d" prot="public" static="no">
        <type><ref refid="classvigra_1_1MultiArrayView_1a004f010b30c35872abd72cd8bc9a0d19" kindref="member">view_type::traverser</ref></type>
        <definition>typedef view_type::traverser traverser</definition>
        <argsstring></argsstring>
        <name>traverser</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>traverser type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="637" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="637" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1NumpyArray_1adee9ba124f2423126f678c913667a229" prot="public" static="no">
        <type><ref refid="classvigra_1_1MultiArrayView_1a265a253612b46abed17c61b0a5e5ce30" kindref="member">view_type::value_type</ref></type>
        <definition>typedef view_type::value_type value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the array&apos;s value type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="601" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="601" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classvigra_1_1NumpyArray_1a851962ebf3f9c7e4647851effd663452" prot="public" static="no">
        <type><ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, typename ArrayTraits::value_type, Stride &gt;</type>
        <definition>typedef MultiArrayView&lt;N, typename ArrayTraits::value_type, Stride&gt; view_type</definition>
        <argsstring></argsstring>
        <name>view_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the view type associated with this array. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="595" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="595" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classvigra_1_1NumpyArray_1a0d51ab961661b605845aa7dfb81e0dfd" prot="public" static="yes" mutable="no">
        <type>NPY_TYPES const</type>
        <definition>NPY_TYPES const typeCode</definition>
        <argsstring></argsstring>
        <name>typeCode</name>
        <initializer> ArrayTraits::typeCode</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="591" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="591" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classvigra_1_1NumpyArray_1aca24adb7f3ac8d8b16cbbc16446f9a53" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setupArrayView</definition>
        <argsstring>()</argsstring>
        <name>setupArrayView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="658" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="1090" bodyend="1121"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classvigra_1_1NumpyArray_1a40a073fd62c4209d92c1c492debec38f" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>python_ptr</type>
        <definition>static python_ptr init</definition>
        <argsstring>(difference_type const &amp;shape, bool init=true, std::string const &amp;order=&quot;&quot;)</argsstring>
        <name>init</name>
        <param>
          <type><ref refid="classvigra_1_1NumpyAnyArray_1a34455770254dcbf1de8a4204c3db3932" kindref="member">difference_type</ref> const &amp;</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>init</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>order</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="662" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="660" bodyend="668"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvigra_1_1NumpyArray_1a8adfb15cf0a227961aa801bbe90e4131" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void makeCopy</definition>
        <argsstring>(PyObject *obj, bool strict=false)</argsstring>
        <name>makeCopy</name>
        <param>
          <type>PyObject *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>strict</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Try to create a copy of the given PyObject. Raises an exception when obj is not a compatible array (see <ref refid="classvigra_1_1NumpyArray_1a4ed9b9aab69b735c1edbbe909da7513a" kindref="member">isCopyCompatible()</ref> or <ref refid="classvigra_1_1NumpyArray_1a57fd8208f95baee983df2c0ab30faf70" kindref="member">isReferenceCompatible()</ref>, according to the parameter <emphasis>strict</emphasis>) or the Python constructor call failed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="1018" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="1017" bodyend="1031"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1NumpyArray_1a5f8a2d93f2503d6d377c7080d3998f4a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool makeReference</definition>
        <argsstring>(PyObject *obj, bool=false)</argsstring>
        <name>makeReference</name>
        <param>
          <type>PyObject *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>bool</type>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Try to set up a view referencing the given PyObject. Returns false if the python object is not a compatible numpy array (see <ref refid="classvigra_1_1NumpyArray_1a57fd8208f95baee983df2c0ab30faf70" kindref="member">isReferenceCompatible()</ref>).</para><para>The second parameter (&apos;strict&apos;) is deprecated and will be ignored. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="970" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="969" bodyend="975"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1NumpyArray_1abce2b1cc8974e1b1cbb3d92a7d8dd9c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool makeReference</definition>
        <argsstring>(const NumpyAnyArray &amp;array, bool strict=false)</argsstring>
        <name>makeReference</name>
        <param>
          <type>const <ref refid="classvigra_1_1NumpyAnyArray" kindref="compound">NumpyAnyArray</ref> &amp;</type>
          <declname>array</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>strict</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Try to set up a view referencing the same data as the given <ref refid="classvigra_1_1NumpyAnyArray" kindref="compound">NumpyAnyArray</ref>. This overloaded variant simply calls <ref refid="classvigra_1_1NumpyArray_1a5f8a2d93f2503d6d377c7080d3998f4a" kindref="member">makeReference()</ref> on array.pyObject(). The parameter <emphasis>strict</emphasis> is deprecated and will be ignored. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="984" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="983" bodyend="986"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1NumpyArray_1a8278cbc02364604ee3ee9c82c988d788" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void makeReferenceUnchecked</definition>
        <argsstring>(PyObject *obj)</argsstring>
        <name>makeReferenceUnchecked</name>
        <param>
          <type>PyObject *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set up a view to the given object without checking compatibility. This function must not be used unless isReferenceCompatible(obj) returned true on the given object (otherwise, a crash is likely). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="957" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="956" bodyend="960"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1NumpyArray_1a096ce770fe5924b84467fcc795b03e45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void makeUnsafeReference</definition>
        <argsstring>(const view_type &amp;multiArrayView)</argsstring>
        <name>makeUnsafeReference</name>
        <param>
          <type>const <ref refid="classvigra_1_1NumpyArray_1a851962ebf3f9c7e4647851effd663452" kindref="member">view_type</ref> &amp;</type>
          <declname>multiArrayView</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set up an unsafe reference to the given <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>. ATTENTION: This creates a numpy.ndarray that points to the same data, but does not own it, so it must be ensured by other means that the memory does not get freed before the end of the ndarray&apos;s lifetime! (One elegant way would be to set the &apos;base&apos; attribute of the resulting ndarray to a python object which directly or indirectly holds the memory of the given <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>.) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="999" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="998" bodyend="1009"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1NumpyArray_1a48399310d2778a96429661ce8aa9ad3c" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NumpyArray</definition>
        <argsstring>(PyObject *obj=0, bool createCopy=false)</argsstring>
        <name>NumpyArray</name>
        <param>
          <type>PyObject *</type>
          <declname>obj</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>createCopy</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct from a given PyObject pointer. When the given python object is NULL, the internal python array will be NULL and <ref refid="classvigra_1_1NumpyAnyArray_1a0effbd4cf91891700ac41e86defe4aa6" kindref="member">hasData()</ref> will return false.</para><para>Otherwise, the function attempts to create a new reference to the given Python object, unless copying is forced by setting <emphasis>createCopy</emphasis> to true. If either of this fails, the function throws an exception. This will not happen if isReferenceCompatible(obj) (in case of creating a new reference) or isCopyCompatible(obj) (in case of copying) have returned true beforehand. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="688" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="687" bodyend="696"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1NumpyArray_1ae36bb6b6b01e5b510d3e6eacf05e04c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NumpyArray</definition>
        <argsstring>(const NumpyArray &amp;other, bool createCopy=false)</argsstring>
        <name>NumpyArray</name>
        <param>
          <type>const <ref refid="classvigra_1_1NumpyArray" kindref="compound">NumpyArray</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>createCopy</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy constructor; does not copy the memory, but creates a new reference to the same underlying python object, unless a copy is forced by setting <emphasis>createCopy</emphasis> to true. (If the source object has no data, this one will have no data, too.) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="708" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="705" bodyend="715"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1NumpyArray_1a4477f06996cc2cc22ff0738eb15b3870" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class S</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>NumpyArray</definition>
        <argsstring>(const MultiArrayView&lt; N, U, S &gt; &amp;other)</argsstring>
        <name>NumpyArray</name>
        <param>
          <type>const <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, U, S &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate new memory and copy data from a <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="722" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="721" bodyend="728"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1NumpyArray_1a86aff00e8c361bf47b8733163392dc8a" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NumpyArray</definition>
        <argsstring>(difference_type const &amp;shape, std::string const &amp;order=&quot;&quot;)</argsstring>
        <name>NumpyArray</name>
        <param>
          <type><ref refid="classvigra_1_1NumpyAnyArray_1a34455770254dcbf1de8a4204c3db3932" kindref="member">difference_type</ref> const &amp;</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>order</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a new array object, allocating an internal python ndarray of the given shape in the given order (default: VIGRA order), initialized with zeros.</para><para>An exception is thrown when construction fails. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="738" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="737" bodyend="741"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1NumpyArray_1aae3ebfb83214d0615b2ad080dda32d77" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NumpyArray</definition>
        <argsstring>(TaggedShape const &amp;tagged_shape)</argsstring>
        <name>NumpyArray</name>
        <param>
          <type>TaggedShape const &amp;</type>
          <declname>tagged_shape</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a new array object, allocating an internal python ndarray according to the given tagged shape, initialized with zeros.</para><para>An exception is thrown when construction fails. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="750" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="749" bodyend="753"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1NumpyArray_1ac4e181d397e44aff6ebb73717e57cd8f" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NumpyArray</definition>
        <argsstring>(const NumpyAnyArray &amp;other, bool createCopy=false)</argsstring>
        <name>NumpyArray</name>
        <param>
          <type>const <ref refid="classvigra_1_1NumpyAnyArray" kindref="compound">NumpyAnyArray</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>createCopy</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor from <ref refid="classvigra_1_1NumpyAnyArray" kindref="compound">NumpyAnyArray</ref>. Equivalent to <ref refid="classvigra_1_1NumpyArray" kindref="compound">NumpyArray</ref>(other.pyObject()) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="760" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="759" bodyend="768"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1NumpyArray_1a01b12f7d980db7c10eabb7612f0ef983" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1NumpyArray" kindref="compound">NumpyArray</ref> &amp;</type>
        <definition>NumpyArray&amp; operator=</definition>
        <argsstring>(const NumpyArray &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classvigra_1_1NumpyArray" kindref="compound">NumpyArray</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assignment operator. If this is already a view with data (i.e. <ref refid="classvigra_1_1NumpyAnyArray_1a0effbd4cf91891700ac41e86defe4aa6" kindref="member">hasData()</ref> is true) and the shapes match, the RHS array contents are copied. If this is an empty view, assignment is identical to makeReferenceUnchecked(other.pyObject()). See <ref refid="classvigra_1_1MultiArrayView_1aaf7167061b3a03a33146694f32aa380f" kindref="member">MultiArrayView::operator=</ref> for further information on semantics. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="779" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="778" bodyend="785"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1NumpyArray_1a9116251c93eca87ac435271931edec16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class S</type>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1NumpyArray" kindref="compound">NumpyArray</ref> &amp;</type>
        <definition>NumpyArray&amp; operator=</definition>
        <argsstring>(const NumpyArray&lt; N, U, S &gt; &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classvigra_1_1NumpyArray" kindref="compound">NumpyArray</ref>&lt; N, U, S &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assignment operator. If this is already a view with data (i.e. <ref refid="classvigra_1_1NumpyAnyArray_1a0effbd4cf91891700ac41e86defe4aa6" kindref="member">hasData()</ref> is true) and the shapes match, the RHS array contents are copied. If this is an empty view, assignment is identical to makeReferenceUnchecked(other.pyObject()). See <ref refid="classvigra_1_1MultiArrayView_1aaf7167061b3a03a33146694f32aa380f" kindref="member">MultiArrayView::operator=</ref> for further information on semantics. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="797" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="796" bodyend="813"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1NumpyArray_1a699502268fa295c001778ac9c4c30899" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class S</type>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1NumpyArray" kindref="compound">NumpyArray</ref> &amp;</type>
        <definition>NumpyArray&amp; operator=</definition>
        <argsstring>(const MultiArrayView&lt; N, U, S &gt; &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref>&lt; N, U, S &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assignment operator. If this is already a view with data (i.e. <ref refid="classvigra_1_1NumpyAnyArray_1a0effbd4cf91891700ac41e86defe4aa6" kindref="member">hasData()</ref> is true) and the shapes match, the RHS array contents are copied. If this is an empty view, a new buffer with the RHS shape is allocated before copying. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="823" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="822" bodyend="839"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1NumpyArray_1a84403a9738641959850475337c59c0b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1NumpyArray" kindref="compound">NumpyArray</ref> &amp;</type>
        <definition>NumpyArray&amp; operator=</definition>
        <argsstring>(const NumpyAnyArray &amp;other)</argsstring>
        <name>operator=</name>
        <reimplements refid="classvigra_1_1NumpyAnyArray_1a0ac78180c68d1f31b83fa5e88cc2026e">operator=</reimplements>
        <param>
          <type>const <ref refid="classvigra_1_1NumpyAnyArray" kindref="compound">NumpyAnyArray</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assignment operator. If this is already a view with data (i.e. <ref refid="classvigra_1_1NumpyAnyArray_1a0effbd4cf91891700ac41e86defe4aa6" kindref="member">hasData()</ref> is true) and the shapes match, the RHS array contents are copied. If this is an empty view, assignment is identical to makeReference(other.pyObject()). Otherwise, an exception is thrown. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="850" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="849" bodyend="865"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1NumpyArray_1a81599a8735b2a4fb5589ecae9d57193b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1ArrayVector" kindref="compound">ArrayVector</ref>&lt; U &gt;</type>
        <definition>ArrayVector&lt;U&gt; permuteLikewise</definition>
        <argsstring>(ArrayVector&lt; U &gt; const &amp;data) const </argsstring>
        <name>permuteLikewise</name>
        <param>
          <type><ref refid="classvigra_1_1ArrayVector" kindref="compound">ArrayVector</ref>&lt; U &gt; const &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Permute the entries of the given array <emphasis>data</emphasis> exactly like the axes of this <ref refid="classvigra_1_1NumpyArray" kindref="compound">NumpyArray</ref> were permuted upon conversion from numpy. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="874" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="873" bodyend="881"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1NumpyArray_1a958c15c2d02e34507b993c0f84ae93e5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>int</type>
            <declname>K</declname>
            <defname>K</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classvigra_1_1TinyVector" kindref="compound">TinyVector</ref>&lt; U, K &gt;</type>
        <definition>TinyVector&lt;U, K&gt; permuteLikewise</definition>
        <argsstring>(TinyVector&lt; U, K &gt; const &amp;data) const </argsstring>
        <name>permuteLikewise</name>
        <param>
          <type><ref refid="classvigra_1_1TinyVector" kindref="compound">TinyVector</ref>&lt; U, K &gt; const &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Permute the entries of the given array <emphasis>data</emphasis> exactly like the axes of this <ref refid="classvigra_1_1NumpyArray" kindref="compound">NumpyArray</ref> were permuted upon conversion from numpy. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="890" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="889" bodyend="897"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1NumpyArray_1a7f58eb1cf89d57154bcfe16fc45b4270" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void reshape</definition>
        <argsstring>(difference_type const &amp;shape)</argsstring>
        <name>reshape</name>
        <param>
          <type><ref refid="classvigra_1_1NumpyAnyArray_1a34455770254dcbf1de8a4204c3db3932" kindref="member">difference_type</ref> const &amp;</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate new memory with the given shape and initialize with zeros.<linebreak/>
 If a stride ordering is given, the resulting array will have this stride ordering, when it is compatible with the array&apos;s memory layout (unstrided arrays only permit the standard ascending stride ordering).</para><para><emphasis>Note:</emphasis> this operation invalidates dependent objects (MultiArrayViews and iterators) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="1043" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="1042" bodyend="1046"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1NumpyArray_1a4c89503fb1567b05b7b93084eb5e2d04" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void reshapeIfEmpty</definition>
        <argsstring>(difference_type const &amp;shape, std::string message=&quot;&quot;)</argsstring>
        <name>reshapeIfEmpty</name>
        <param>
          <type><ref refid="classvigra_1_1NumpyAnyArray_1a34455770254dcbf1de8a4204c3db3932" kindref="member">difference_type</ref> const &amp;</type>
          <declname>shape</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When this array has no data, allocate new memory with the given <emphasis>shape</emphasis> and initialize with zeros. Otherwise, check if the new shape matches the old shape and throw a precondition exception with the given <emphasis>message</emphasis> if not. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="1054" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="1053" bodyend="1058"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1NumpyArray_1ab5ae4f17400725597718ca6ab9c84db4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void reshapeIfEmpty</definition>
        <argsstring>(TaggedShape tagged_shape, std::string message=&quot;&quot;)</argsstring>
        <name>reshapeIfEmpty</name>
        <param>
          <type>TaggedShape</type>
          <declname>tagged_shape</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When this array has no data, allocate new memory with the given <emphasis>shape</emphasis> and initialize with zeros. Otherwise, check if the new shape matches the old shape and throw a precondition exception with the given <emphasis>message</emphasis> if not. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="1066" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="1065" bodyend="1080"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1NumpyArray_1a55345ed070e1aa09b7f8547e0d64db17" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>TaggedShape</type>
        <definition>TaggedShape taggedShape</definition>
        <argsstring>() const </argsstring>
        <name>taggedShape</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="1083" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="1082" bodyend="1085"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classvigra_1_1NumpyArray_1a4ed9b9aab69b735c1edbbe909da7513a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool isCopyCompatible</definition>
        <argsstring>(PyObject *obj)</argsstring>
        <name>isCopyCompatible</name>
        <param>
          <type>PyObject *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test whether a given python object is a numpy array that can be converted (copied) into an array compatible to this <ref refid="classvigra_1_1NumpyArray" kindref="compound">NumpyArray</ref> type. This means that the array&apos;s shape conforms to the requirements of <ref refid="classvigra_1_1NumpyArray_1a8adfb15cf0a227961aa801bbe90e4131" kindref="member">makeCopy()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="906" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="905" bodyend="916"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1NumpyArray_1a57fd8208f95baee983df2c0ab30faf70" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool isReferenceCompatible</definition>
        <argsstring>(PyObject *obj)</argsstring>
        <name>isReferenceCompatible</name>
        <param>
          <type>PyObject *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test whether a given python object is a numpy array with a compatible dtype and the correct shape and strides, so that it can be referenced as a view by this <ref refid="classvigra_1_1NumpyArray" kindref="compound">NumpyArray</ref> type (i.e. it conforms to the requirements of <ref refid="classvigra_1_1NumpyArray_1a5f8a2d93f2503d6d377c7080d3998f4a" kindref="member">makeReference()</ref>). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="925" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="924" bodyend="928"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1NumpyArray_1a0d39c95acf6283713d252455f21078fc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool isStrictlyCompatible</definition>
        <argsstring>(PyObject *obj)</argsstring>
        <name>isStrictlyCompatible</name>
        <param>
          <type>PyObject *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deprecated, use isReferenceCompatible(obj) instead. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="934" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="933" bodyend="936"/>
      </memberdef>
      <memberdef kind="function" id="classvigra_1_1NumpyArray_1a344ddbd2b5a9cca1045ac2bf665d487c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvigra_1_1NumpyAnyArray_1a34455770254dcbf1de8a4204c3db3932" kindref="member">difference_type</ref></type>
        <definition>static difference_type standardStrideOrdering</definition>
        <argsstring>()</argsstring>
        <name>standardStrideOrdering</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a vector representing the standard stride ordering of a <ref refid="classvigra_1_1NumpyArray" kindref="compound">NumpyArray</ref>. That is, we get a vector representing the range [0,...,N-1], which denotes the stride ordering for Fortran order. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="944" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="943" bodyend="949"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Provide the <ref refid="classvigra_1_1MultiArrayView" kindref="compound">MultiArrayView</ref> interface for a Python array.</para><para>This class inherits from both <ref refid="classvigra_1_1MultiArrayView" kindref="compound">vigra::MultiArrayView</ref> and <ref refid="classvigra_1_1NumpyAnyArray" kindref="compound">vigra::NumpyAnyArray</ref> in order to support easy and save application of VIGRA functions to Python arrays.</para><para><bold>#include</bold> &lt;<ref refid="numpy__array_8hxx_source" kindref="compound">vigra/numpy_array.hxx</ref>&gt;<linebreak/>
 Namespace: vigra </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1304">
        <label>NumpyArray&lt; N, T, Stride &gt;</label>
        <link refid="classvigra_1_1NumpyArray"/>
        <childnode refid="1305" relation="public-inheritance">
        </childnode>
        <childnode refid="1306" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1305">
        <label>MultiArrayView&lt; N, NumpyArrayTraits&lt; N, T, Stride &gt;::value_type, Stride &gt;</label>
        <link refid="classvigra_1_1MultiArrayView"/>
      </node>
      <node id="1306">
        <label>NumpyAnyArray</label>
        <link refid="classvigra_1_1NumpyAnyArray"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1307">
        <label>NumpyArray&lt; N, T, Stride &gt;</label>
        <link refid="classvigra_1_1NumpyArray"/>
        <childnode refid="1308" relation="public-inheritance">
        </childnode>
        <childnode refid="1310" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1308">
        <label>MultiArrayView&lt; N, NumpyArrayTraits&lt; N, T, Stride &gt;::value_type, Stride &gt;</label>
        <link refid="classvigra_1_1MultiArrayView"/>
        <childnode refid="1309" relation="usage">
          <edgelabel>m_stride</edgelabel>
          <edgelabel>m_shape</edgelabel>
        </childnode>
      </node>
      <node id="1309">
        <label>MultiArrayShape&lt; actual_dimension &gt;</label>
        <link refid="classvigra_1_1MultiArrayShape"/>
      </node>
      <node id="1310">
        <label>NumpyAnyArray</label>
        <link refid="classvigra_1_1NumpyAnyArray"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" line="585" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array.hxx" bodystart="582" bodyend="1086"/>
    <listofallmembers>
      <member refid="classvigra_1_1NumpyArray_1ab48899087cc647f0f791ed0c459adc53ad5e9f57920c8f3be820823a379d521ea" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>actual_dimension</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ad1ff5270f93b932185051401f1bdc351" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>ActualDimension</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a8df8a389781b95596f98ef919b00d5f0" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>all</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a8be230fdd50e0ce842dd3b0a3012821b" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>any</name></member>
      <member refid="classvigra_1_1MultiArrayView_1acfc6e475db7e5d4f439c5940f4b18c6d" prot="protected" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>arraysOverlap</name></member>
      <member refid="classvigra_1_1MultiArrayView_1aa4c08bc293c9e26bc3a5888f9af8f05f" prot="protected" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>arraysOverlap</name></member>
      <member refid="classvigra_1_1NumpyArray_1a9aa4f8df3251438f58a26a4ec6022af6" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>ArrayTraits</name></member>
      <member refid="classvigra_1_1NumpyAnyArray_1aaf7ce231a8fdec98196c2721d97004db" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>axistags</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ad69bd11391be1a1dba5c8202259664f8" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>begin</name></member>
      <member refid="classvigra_1_1MultiArrayView_1aa4b02d4f1a8500fb07a551069060709f" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>begin</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a5620a71abd33556ab702350b31b123da" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>bind</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a1e24fcdbd0c298cbbb07fe21368d5abc" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>bindAt</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a59031884a541eed08347b5b626ba5613" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>bindElementChannel</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a262f8f52cd526b497522b444a53aeb1c" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>bindInner</name></member>
      <member refid="classvigra_1_1MultiArrayView_1acf6b7dc4ce0db4457beed5f3d90b5e7e" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>bindInner</name></member>
      <member refid="classvigra_1_1MultiArrayView_1acaca6e5790fa86120c4df40c3385d324" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>bindOuter</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a8ca5e1bbe796369b97ee1711671b9ca7" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>bindOuter</name></member>
      <member refid="classvigra_1_1NumpyAnyArray_1a41c4094bd90316412b901085edc23956" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>channelIndex</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ada10d77a4929689e467bf3478d5dc538" prot="protected" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>checkInnerStride</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a193cf45dcc77a4247554361ca1835330" prot="protected" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>checkInnerStride</name></member>
      <member refid="classvigra_1_1NumpyArray_1aa483940878145b2ff9e92ccdb9cf3fa8" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>const_iterator</name></member>
      <member refid="classvigra_1_1NumpyArray_1a6ace1aa97c0128931a921479d2df41c2" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>const_pointer</name></member>
      <member refid="classvigra_1_1NumpyArray_1a163353faff9e2af647551a93d2db5463" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>const_reference</name></member>
      <member refid="classvigra_1_1NumpyArray_1a119344590bd9a1658911dfaa5194ea6c" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>const_traverser</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a55d0184c5fbde73165533111441bb8ff" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>coordinateToScanOrderIndex</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a93b4cd51930b5c3f49081829c06a10da" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>copy</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a93cc8e36bc3893691f7c34f6f2b742ff" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>copy</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a84313f2a23b1242a0a0c556d6d97ba06" prot="protected" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>copyImpl</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a9711a38a3b5f2d85c44505938499a0e2" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>data</name></member>
      <member refid="classvigra_1_1NumpyAnyArray_1adb2a999cc67c0a576d3f924c930ee365" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>defaultAxistags</name></member>
      <member refid="classvigra_1_1NumpyAnyArray_1a63a65514063024a4dc841b77000019d9" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>defaultOrder</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a94fcd2d26ff25d3e428031416b75054d" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>diagonal</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a607c140f0bd1f5cd4a4a482493afe93c" prot="protected" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>diff_zero_t</name></member>
      <member refid="classvigra_1_1NumpyArray_1a7a3c9714bbd0b64760c377a88fd36c63" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>difference_type</name></member>
      <member refid="classvigra_1_1NumpyArray_1a6ac789163dd290addb14a4330998df81" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>difference_type_1</name></member>
      <member refid="classvigra_1_1NumpyArray_1a2f5e9d6e69ba03068eab6622b4a0355b" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>dtype</name></member>
      <member refid="classvigra_1_1NumpyAnyArray_1a87c42aefaf56bb0283010649979c3b3e" prot="public" virt="non-virtual" ambiguityscope="vigra::NumpyAnyArray::"><scope>vigra::NumpyArray</scope><name>dtype</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a76f6c30e31c82e61b8b7e09ce3d8871d" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>elementCount</name></member>
      <member refid="classvigra_1_1NumpyAnyArray_1a59abd6101cc61a5a585a70001e087d2b" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>emptyAxistags</name></member>
      <member refid="classvigra_1_1MultiArrayView_1acad38d52497a975bfb6f2f6acd76631f" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>end</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a350132543d80a1c1e5be844e6d2878ea" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>end</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ab005801d6e252c3ae75ce9da36d1a600" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>expandElements</name></member>
      <member refid="classvigra_1_1NumpyAnyArray_1a1532151c68105dd7c925ab13231193a5" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>getArrayTypeObject</name></member>
      <member refid="classvigra_1_1NumpyAnyArray_1ab42ca379e0454eccf39ec72ace7ab51f" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>hasChannelAxis</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a0effbd4cf91891700ac41e86defe4aa6" prot="public" virt="non-virtual" ambiguityscope="MultiArrayView&lt; N, NumpyArrayTraits&lt; N, T, Stride &gt;::"><scope>vigra::NumpyArray</scope><name>hasData</name></member>
      <member refid="classvigra_1_1NumpyAnyArray_1a0effbd4cf91891700ac41e86defe4aa6" prot="public" virt="non-virtual" ambiguityscope="vigra::NumpyAnyArray::"><scope>vigra::NumpyArray</scope><name>hasData</name></member>
      <member refid="classvigra_1_1NumpyArray_1a40a073fd62c4209d92c1c492debec38f" prot="protected" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>init</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ae8d75c08347781b9854c8aea98c34610" prot="public" virt="non-virtual" ambiguityscope="MultiArrayView&lt; N, NumpyArrayTraits&lt; N, T, Stride &gt;::value_type, Stride &gt;::"><scope>vigra::NumpyArray</scope><name>init</name></member>
      <member refid="classvigra_1_1NumpyAnyArray_1a96eba6b60c2f8b154ea1de0a54199e9e" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>innerNonchannelIndex</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a70170072585722399abd07c46f168909" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>insertSingletonDimension</name></member>
      <member refid="classvigra_1_1NumpyArray_1a4ed9b9aab69b735c1edbbe909da7513a" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>isCopyCompatible</name></member>
      <member refid="classvigra_1_1MultiArrayView_1acc16a9ac0801c380fcfe1841566efb99" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>isInside</name></member>
      <member refid="classvigra_1_1NumpyArray_1a57fd8208f95baee983df2c0ab30faf70" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>isReferenceCompatible</name></member>
      <member refid="classvigra_1_1NumpyArray_1a0d39c95acf6283713d252455f21078fc" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>isStrictlyCompatible</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a3e1a9e07d9bc055f20a1b216370afd2f" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>isUnstrided</name></member>
      <member refid="classvigra_1_1NumpyArray_1a6a8ffa1c2eb8d394ca502402e4c60792" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>iterator</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a799d2a6ed1ca851cc96ba81fb83488fb" prot="protected" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>m_ptr</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a6ecf2b971516c9ee114e74a1c3c376ba" prot="protected" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>m_shape</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ad05e71a51b6cc635d1f179b83707afe5" prot="protected" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>m_stride</name></member>
      <member refid="classvigra_1_1NumpyArray_1a8adfb15cf0a227961aa801bbe90e4131" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>makeCopy</name></member>
      <member refid="classvigra_1_1NumpyAnyArray_1aa49a3e01404313e8bf16705cceffd229" prot="public" virt="non-virtual" ambiguityscope="vigra::NumpyAnyArray::"><scope>vigra::NumpyArray</scope><name>makeCopy</name></member>
      <member refid="classvigra_1_1NumpyArray_1a5f8a2d93f2503d6d377c7080d3998f4a" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>makeReference</name></member>
      <member refid="classvigra_1_1NumpyArray_1abce2b1cc8974e1b1cbb3d92a7d8dd9c9" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>makeReference</name></member>
      <member refid="classvigra_1_1NumpyAnyArray_1acf8a71971e005683ba7de36b23ff4336" prot="public" virt="non-virtual" ambiguityscope="vigra::NumpyAnyArray::"><scope>vigra::NumpyArray</scope><name>makeReference</name></member>
      <member refid="classvigra_1_1NumpyArray_1a8278cbc02364604ee3ee9c82c988d788" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>makeReferenceUnchecked</name></member>
      <member refid="classvigra_1_1NumpyArray_1a096ce770fe5924b84467fcc795b03e45" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>makeUnsafeReference</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ae77ee86b1b883625be8f0092c104ae75" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>matrix_type</name></member>
      <member refid="classvigra_1_1MultiArrayView_1acd4c954a3c2fe5db856c4608f773eb45" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>meanVariance</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a6d8831009ea104ac1d9f36a2af5b0176" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>minmax</name></member>
      <member refid="classvigra_1_1MultiArrayView_1acddece61538d74dc1d7f71ea7c581e67" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>MultiArrayView</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a2d2c039824d104f03d97d00a5b87d914" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>MultiArrayView</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ac8e675f45de1e53c3cc147375a920ea4" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>MultiArrayView</name></member>
      <member refid="classvigra_1_1NumpyAnyArray_1ab0c2b5386194068f8801a5af758f7a30" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>ndim</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a0816d7af1f17517f39dbef405d2e4a47" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>norm</name></member>
      <member refid="classvigra_1_1NumpyAnyArray_1aff5e0bf796e2afb9a1a45443e75c1125" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>NumpyAnyArray</name></member>
      <member refid="classvigra_1_1NumpyAnyArray_1acb3ad6e964a2a05b04eb33cc0cfd6267" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>NumpyAnyArray</name></member>
      <member refid="classvigra_1_1NumpyArray_1a48399310d2778a96429661ce8aa9ad3c" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>NumpyArray</name></member>
      <member refid="classvigra_1_1NumpyArray_1ae36bb6b6b01e5b510d3e6eacf05e04c1" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>NumpyArray</name></member>
      <member refid="classvigra_1_1NumpyArray_1a4477f06996cc2cc22ff0738eb15b3870" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>NumpyArray</name></member>
      <member refid="classvigra_1_1NumpyArray_1a86aff00e8c361bf47b8733163392dc8a" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>NumpyArray</name></member>
      <member refid="classvigra_1_1NumpyArray_1aae3ebfb83214d0615b2ad080dda32d77" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>NumpyArray</name></member>
      <member refid="classvigra_1_1NumpyArray_1ac4e181d397e44aff6ebb73717e57cd8f" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>NumpyArray</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ae01c274541e9b1d39eab573df7344fd1" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator MultiArrayView&lt; N, NumpyArrayTraits&lt; N, T, Stride &gt;::value_type, StridedArrayTag &gt;</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a018c002f23f0985c9ca89cd0a244f59d" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator!=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a902647635a189183308cb1fa8457f54a" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator()</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a3fe9a64fd6323465b3bf17ef76de53b7" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator()</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a95f6b94c53d6aa8ba4a9c4671a9daa65" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator()</name></member>
      <member refid="classvigra_1_1MultiArrayView_1af2c5eb62f1650fb7a3735990346478ed" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator()</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a05f95d6148a375885a7be85819dcbc02" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator()</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a2fa26a6082ac991137129dcbc4257ae0" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator()</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a5fbf52c1c9127b0e97f2cd1c263f9c5f" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator()</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ad157dd636e184ad7a235158bab39c5d8" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator()</name></member>
      <member refid="classvigra_1_1MultiArrayView_1abcbc55ed1f30019f85a6f25bf376ef2a" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator()</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a7792042817681cc6d8f5674b168419c1" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator()</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a2246e065e45bd9bd792efabac9fab724" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator*=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a6cc7ac8b9105a0d95b2c7750252d32ec" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator*=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a35f6aab0e7f37cbf1de49abe62901ec5" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator*=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a0db6c678b054c0cfba823c0fd355cc92" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator+=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1af80e0592a63a35af2748ba5c54bf51ea" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator+=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a927f4e96d6f5b28c7c7cbc7e6ca978bc" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator+=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ac9d3cda29b22226f730c4520bcb2c1ad" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator-=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1aa8b0daf746d75139531bff75b1f43fa9" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator-=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1af514e5535c2682fcc0970b133a25b158" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator-=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ae4dd7bff037e05a3580cd66ca857c3f2" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator/=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1aad41190865f1ff0b93dcef5d07938a0f" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator/=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a644075b68b6b01524b1b8620dbd79758" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator/=</name></member>
      <member refid="classvigra_1_1NumpyArray_1a01b12f7d980db7c10eabb7612f0ef983" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator=</name></member>
      <member refid="classvigra_1_1NumpyArray_1a9116251c93eca87ac435271931edec16" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator=</name></member>
      <member refid="classvigra_1_1NumpyArray_1a699502268fa295c001778ac9c4c30899" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator=</name></member>
      <member refid="classvigra_1_1NumpyArray_1a84403a9738641959850475337c59c0b5" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1aaf7167061b3a03a33146694f32aa380f" prot="public" virt="non-virtual" ambiguityscope="MultiArrayView&lt; N, NumpyArrayTraits&lt; N, T, Stride &gt;::value_type, Stride &gt;::"><scope>vigra::NumpyArray</scope><name>operator=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a47317f3dddbd8b1d447eee03040ae00b" prot="public" virt="non-virtual" ambiguityscope="MultiArrayView&lt; N, NumpyArrayTraits&lt; N, T, Stride &gt;::value_type, Stride &gt;::"><scope>vigra::NumpyArray</scope><name>operator=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1aba1db9e0b6bddad5e85929219950e98d" prot="public" virt="non-virtual" ambiguityscope="MultiArrayView&lt; N, NumpyArrayTraits&lt; N, T, Stride &gt;::value_type, Stride &gt;::"><scope>vigra::NumpyArray</scope><name>operator=</name></member>
      <member refid="classvigra_1_1MultiArrayView_1af2799b196fd761fc6d5313cf374f2b5a" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator==</name></member>
      <member refid="classvigra_1_1MultiArrayView_1aebc939b0cbcef6234def78f6fcb50bf2" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator[]</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a77fdced99246dc012c098ffdd020e336" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator[]</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ace2c9cd7baee89bc7f005e3664693235" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator[]</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a994b70e9a282ffd06e7fc7df7308e4c0" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator[]</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a7ec14f3bf1d4cdfc41d8630176a82a07" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>operator[]</name></member>
      <member refid="classvigra_1_1NumpyArray_1aaac4530f06ee099d3576181ebb585ed0" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>permutation_type</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a62a571ba62a9cc4b4f27af78b20a6d0e" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>permuteDimensions</name></member>
      <member refid="classvigra_1_1NumpyArray_1a81599a8735b2a4fb5589ecae9d57193b" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>permuteLikewise</name></member>
      <member refid="classvigra_1_1NumpyArray_1a958c15c2d02e34507b993c0f84ae93e5" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>permuteLikewise</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a4f32a16f89e9ff9927a20dc3c7abee6b" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>permuteStridesAscending</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a421ac71c17f86f900041784e3c77857a" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>permuteStridesDescending</name></member>
      <member refid="classvigra_1_1NumpyArray_1a7c3b5f1ed08b27119127cb725966a945" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>pointer</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a5b3042c71814da638e52b4d547771cf4" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>product</name></member>
      <member refid="classvigra_1_1NumpyArray_1ac5cb821eef81319efe0297be0092bc04" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>pseudo_value_type</name></member>
      <member refid="classvigra_1_1NumpyAnyArray_1a922380903d2aed672819a1ab2216f155" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>pyArray</name></member>
      <member refid="classvigra_1_1NumpyAnyArray_1a6254655f96d6ebd96f84c3a9cc962541" prot="protected" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>pyArray_</name></member>
      <member refid="classvigra_1_1NumpyAnyArray_1af27abedf257a55f66c007533c9916884" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>pyObject</name></member>
      <member refid="classvigra_1_1NumpyArray_1a7ea9d2af939d562b74071b884d5e59b3" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>reference</name></member>
      <member refid="classvigra_1_1NumpyArray_1a7f58eb1cf89d57154bcfe16fc45b4270" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>reshape</name></member>
      <member refid="classvigra_1_1NumpyArray_1a4c89503fb1567b05b7b93084eb5e2d04" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>reshapeIfEmpty</name></member>
      <member refid="classvigra_1_1NumpyArray_1ab5ae4f17400725597718ca6ab9c84db4" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>reshapeIfEmpty</name></member>
      <member refid="classvigra_1_1MultiArrayView_1aa2a1a7741de3368ab949dff7b574680c" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>scanOrderIndexToCoordinate</name></member>
      <member refid="classvigra_1_1NumpyArray_1aca24adb7f3ac8d8b16cbbc16446f9a53" prot="protected" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>setupArrayView</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a53c8f0d5c70f10f31fbc246cbe524e32" prot="public" virt="non-virtual" ambiguityscope="MultiArrayView&lt; N, NumpyArrayTraits&lt; N, T, Stride &gt;::"><scope>vigra::NumpyArray</scope><name>shape</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a33c2d2f3676a54c9393d06fbda8bd190" prot="public" virt="non-virtual" ambiguityscope="MultiArrayView&lt; N, NumpyArrayTraits&lt; N, T, Stride &gt;::"><scope>vigra::NumpyArray</scope><name>shape</name></member>
      <member refid="classvigra_1_1NumpyAnyArray_1ae76c6448fcb8351b75a0f6cab85116da" prot="public" virt="non-virtual" ambiguityscope="vigra::NumpyAnyArray::"><scope>vigra::NumpyArray</scope><name>shape</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a14c1df938ca1578ffc71bc9728b4e401" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>size</name></member>
      <member refid="classvigra_1_1MultiArrayView_1abfcdc6d232e4633fe63ba5f0881e0998" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>size</name></member>
      <member refid="classvigra_1_1NumpyArray_1a49de2bda8c5700d3d386b176401e4a66" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>size_type</name></member>
      <member refid="classvigra_1_1NumpyAnyArray_1a26c340b03772d978c03338e308249f20" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>spatialDimensions</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a6ada450d8e72c934a5406d1c2b5cf033" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>squaredNorm</name></member>
      <member refid="classvigra_1_1NumpyArray_1a344ddbd2b5a9cca1045ac2bf665d487c" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>standardStrideOrdering</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a3fee5f2594095fe1e747155d6bad57b0" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>stride</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a38ba1f2e9f964bc1e2f8531bd030c84e" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>stride</name></member>
      <member refid="classvigra_1_1MultiArrayView_1ac5561077d69e2d8b92a62bc5206664e4" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>stridearray</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a614a382ab304114f19a2c1168502647d" prot="public" virt="non-virtual" ambiguityscope="MultiArrayView&lt; N, NumpyArrayTraits&lt; N, T, Stride &gt;::"><scope>vigra::NumpyArray</scope><name>strideOrdering</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a78785a3e970fb24bb63462af833934d8" prot="public" virt="non-virtual" ambiguityscope="MultiArrayView&lt; N, NumpyArrayTraits&lt; N, T, Stride &gt;::"><scope>vigra::NumpyArray</scope><name>strideOrdering</name></member>
      <member refid="classvigra_1_1NumpyAnyArray_1a614a382ab304114f19a2c1168502647d" prot="public" virt="non-virtual" ambiguityscope="vigra::NumpyAnyArray::"><scope>vigra::NumpyArray</scope><name>strideOrdering</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a2271545a765e00427cb6c59f6c4d78e0" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>subarray</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a2863f8aff8f52d7471f7b8f6f3b41390" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>sum</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a3b2d9689550ecef9ddc5b225f253b7d7" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>sum</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a1d0311cdc0759be49f6e54595b88c5c5" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>swapData</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a37c3d67af76aa3ab3c6ceecd01efe841" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>swapData</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a4d4727187e1a94b33400901c1c815c0b" prot="protected" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>swapDataImpl</name></member>
      <member refid="classvigra_1_1NumpyArray_1a55345ed070e1aa09b7f8547e0d64db17" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>taggedShape</name></member>
      <member refid="classvigra_1_1MultiArrayView_1af54479ad2ee57be8181f50013864cc33" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>transpose</name></member>
      <member refid="classvigra_1_1NumpyArray_1ad5c19110480a81b46e8ecdd4cfdc0c9d" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>traverser</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a6da88764aadffdf26736523ba73a53b2" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>traverser_begin</name></member>
      <member refid="classvigra_1_1MultiArrayView_1af5bd133df88785669c1f7058fd6ee4b5" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>traverser_begin</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a8e25dc1fff81a9ff3776106365bbd73f" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>traverser_end</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a8eeb5d1af1828e5f7f99548c03f51640" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>traverser_end</name></member>
      <member refid="classvigra_1_1NumpyArray_1a0d51ab961661b605845aa7dfb81e0dfd" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>typeCode</name></member>
      <member refid="classvigra_1_1NumpyArray_1adee9ba124f2423126f678c913667a229" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>value_type</name></member>
      <member refid="classvigra_1_1MultiArrayView_1a6317301617e7845bcd8d940a7af43156" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>view</name></member>
      <member refid="classvigra_1_1NumpyArray_1a851962ebf3f9c7e4647851effd663452" prot="public" virt="non-virtual"><scope>vigra::NumpyArray</scope><name>view_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
