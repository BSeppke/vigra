<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="tv__filter_8hxx" kind="file">
    <compoundname>tv_filter.hxx</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">cmath</includes>
    <includes refid="config_8hxx" local="yes">config.hxx</includes>
    <includes refid="impex_8hxx" local="yes">impex.hxx</includes>
    <includes refid="separableconvolution_8hxx" local="yes">separableconvolution.hxx</includes>
    <includes refid="multi__array_8hxx" local="yes">multi_array.hxx</includes>
    <includes refid="multi__math_8hxx" local="yes">multi_math.hxx</includes>
    <includes refid="eigensystem_8hxx" local="yes">eigensystem.hxx</includes>
    <includes refid="convolution_8hxx" local="yes">convolution.hxx</includes>
    <includes refid="fixedpoint_8hxx" local="yes">fixedpoint.hxx</includes>
    <includes refid="project2ellipse_8hxx" local="yes">project2ellipse.hxx</includes>
    <incdepgraph>
      <node id="9260">
        <label>multi_pointoperators.hxx</label>
        <link refid="multi__pointoperators_8hxx_source"/>
        <childnode refid="9251" relation="include">
        </childnode>
        <childnode refid="9247" relation="include">
        </childnode>
        <childnode refid="9246" relation="include">
        </childnode>
        <childnode refid="9261" relation="include">
        </childnode>
        <childnode refid="9244" relation="include">
        </childnode>
        <childnode refid="9248" relation="include">
        </childnode>
        <childnode refid="9204" relation="include">
        </childnode>
        <childnode refid="9232" relation="include">
        </childnode>
      </node>
      <node id="9259">
        <label>iomanip</label>
      </node>
      <node id="9233">
        <label>functional</label>
      </node>
      <node id="9206">
        <label>limits</label>
      </node>
      <node id="9211">
        <label>basicimage.hxx</label>
        <link refid="basicimage_8hxx_source"/>
        <childnode refid="9212" relation="include">
        </childnode>
        <childnode refid="9207" relation="include">
        </childnode>
        <childnode refid="9213" relation="include">
        </childnode>
        <childnode refid="9221" relation="include">
        </childnode>
        <childnode refid="9222" relation="include">
        </childnode>
        <childnode refid="9234" relation="include">
        </childnode>
      </node>
      <node id="9268">
        <label>resizeimage.hxx</label>
        <link refid="resizeimage_8hxx_source"/>
        <childnode refid="9240" relation="include">
        </childnode>
        <childnode refid="9213" relation="include">
        </childnode>
        <childnode refid="9223" relation="include">
        </childnode>
        <childnode refid="9208" relation="include">
        </childnode>
        <childnode refid="9265" relation="include">
        </childnode>
        <childnode refid="9253" relation="include">
        </childnode>
        <childnode refid="9269" relation="include">
        </childnode>
        <childnode refid="9273" relation="include">
        </childnode>
      </node>
      <node id="9203">
        <label>sized_int.hxx</label>
        <link refid="sized__int_8hxx_source"/>
        <childnode refid="9204" relation="include">
        </childnode>
        <childnode refid="9206" relation="include">
        </childnode>
      </node>
      <node id="9220">
        <label>iterator</label>
      </node>
      <node id="9273">
        <label>splines.hxx</label>
        <link refid="splines_8hxx_source"/>
        <childnode refid="9198" relation="include">
        </childnode>
        <childnode refid="9199" relation="include">
        </childnode>
        <childnode refid="9229" relation="include">
        </childnode>
        <childnode refid="9262" relation="include">
        </childnode>
        <childnode refid="9241" relation="include">
        </childnode>
        <childnode refid="9274" relation="include">
        </childnode>
      </node>
      <node id="9248">
        <label>multi_array.hxx</label>
        <link refid="multi__array_8hxx_source"/>
        <childnode refid="9212" relation="include">
        </childnode>
        <childnode refid="9207" relation="include">
        </childnode>
        <childnode refid="9222" relation="include">
        </childnode>
        <childnode refid="9236" relation="include">
        </childnode>
        <childnode refid="9235" relation="include">
        </childnode>
        <childnode refid="9249" relation="include">
        </childnode>
        <childnode refid="9250" relation="include">
        </childnode>
        <childnode refid="9223" relation="include">
        </childnode>
        <childnode refid="9242" relation="include">
        </childnode>
        <childnode refid="9204" relation="include">
        </childnode>
        <childnode refid="9229" relation="include">
        </childnode>
      </node>
      <node id="9232">
        <label>inspector_passes.hxx</label>
        <link refid="inspector__passes_8hxx_source"/>
        <childnode refid="9204" relation="include">
        </childnode>
      </node>
      <node id="9226">
        <label>promote_traits.hxx</label>
        <link refid="promote__traits_8hxx_source"/>
      </node>
      <node id="9251">
        <label>initimage.hxx</label>
        <link refid="initimage_8hxx_source"/>
        <childnode refid="9213" relation="include">
        </childnode>
        <childnode refid="9221" relation="include">
        </childnode>
        <childnode refid="9245" relation="include">
        </childnode>
      </node>
      <node id="9231">
        <label>algorithm.hxx</label>
        <link refid="algorithm_8hxx_source"/>
        <childnode refid="9203" relation="include">
        </childnode>
        <childnode refid="9223" relation="include">
        </childnode>
        <childnode refid="9232" relation="include">
        </childnode>
        <childnode refid="9207" relation="include">
        </childnode>
        <childnode refid="9233" relation="include">
        </childnode>
        <childnode refid="9220" relation="include">
        </childnode>
      </node>
      <node id="9270">
        <label>rational.hxx</label>
        <link refid="rational_8hxx_source"/>
        <childnode refid="9198" relation="include">
        </childnode>
        <childnode refid="9201" relation="include">
        </childnode>
        <childnode refid="9218" relation="include">
        </childnode>
        <childnode refid="9199" relation="include">
        </childnode>
        <childnode refid="9229" relation="include">
        </childnode>
        <childnode refid="9223" relation="include">
        </childnode>
        <childnode refid="9204" relation="include">
        </childnode>
      </node>
      <node id="9198">
        <label>cmath</label>
      </node>
      <node id="9201">
        <label>stdexcept</label>
      </node>
      <node id="9245">
        <label>functortraits.hxx</label>
        <link refid="functortraits_8hxx_source"/>
        <childnode refid="9233" relation="include">
        </childnode>
        <childnode refid="9204" relation="include">
        </childnode>
      </node>
      <node id="9219">
        <label>iteratortags.hxx</label>
        <link refid="iteratortags_8hxx_source"/>
        <childnode refid="9220" relation="include">
        </childnode>
      </node>
      <node id="9253">
        <label>separableconvolution.hxx</label>
        <link refid="separableconvolution_8hxx_source"/>
        <childnode refid="9198" relation="include">
        </childnode>
        <childnode refid="9213" relation="include">
        </childnode>
        <childnode refid="9223" relation="include">
        </childnode>
        <childnode refid="9227" relation="include">
        </childnode>
        <childnode refid="9254" relation="include">
        </childnode>
        <childnode refid="9255" relation="include">
        </childnode>
        <childnode refid="9241" relation="include">
        </childnode>
      </node>
      <node id="9216">
        <label>string</label>
      </node>
      <node id="9247">
        <label>copyimage.hxx</label>
        <link refid="copyimage_8hxx_source"/>
        <childnode refid="9213" relation="include">
        </childnode>
      </node>
      <node id="9249">
        <label>basicimageview.hxx</label>
        <link refid="basicimageview_8hxx_source"/>
        <childnode refid="9250" relation="include">
        </childnode>
        <childnode refid="9251" relation="include">
        </childnode>
      </node>
      <node id="9272">
        <label>imagecontainer.hxx</label>
        <link refid="imagecontainer_8hxx_source"/>
        <childnode refid="9213" relation="include">
        </childnode>
        <childnode refid="9241" relation="include">
        </childnode>
        <childnode refid="9247" relation="include">
        </childnode>
      </node>
      <node id="9221">
        <label>iteratortraits.hxx</label>
        <link refid="iteratortraits_8hxx_source"/>
        <childnode refid="9222" relation="include">
        </childnode>
        <childnode refid="9227" relation="include">
        </childnode>
      </node>
      <node id="9267">
        <label>stdimagefunctions.hxx</label>
        <link refid="stdimagefunctions_8hxx_source"/>
        <childnode refid="9251" relation="include">
        </childnode>
        <childnode refid="9244" relation="include">
        </childnode>
        <childnode refid="9247" relation="include">
        </childnode>
        <childnode refid="9246" relation="include">
        </childnode>
        <childnode refid="9261" relation="include">
        </childnode>
        <childnode refid="9268" relation="include">
        </childnode>
      </node>
      <node id="9265">
        <label>recursiveconvolution.hxx</label>
        <link refid="recursiveconvolution_8hxx_source"/>
        <childnode refid="9198" relation="include">
        </childnode>
        <childnode refid="9240" relation="include">
        </childnode>
        <childnode refid="9213" relation="include">
        </childnode>
        <childnode refid="9223" relation="include">
        </childnode>
        <childnode refid="9227" relation="include">
        </childnode>
        <childnode refid="9254" relation="include">
        </childnode>
        <childnode refid="9241" relation="include">
        </childnode>
      </node>
      <node id="9224">
        <label>cfloat</label>
      </node>
      <node id="9256">
        <label>multi_math.hxx</label>
        <link refid="multi__math_8hxx_source"/>
        <childnode refid="9248" relation="include">
        </childnode>
        <childnode refid="9236" relation="include">
        </childnode>
        <childnode refid="9235" relation="include">
        </childnode>
        <childnode refid="9229" relation="include">
        </childnode>
        <childnode refid="9225" relation="include">
        </childnode>
      </node>
      <node id="9213">
        <label>utilities.hxx</label>
        <link refid="utilities_8hxx_source"/>
        <childnode refid="9199" relation="include">
        </childnode>
        <childnode refid="9214" relation="include">
        </childnode>
        <childnode refid="9204" relation="include">
        </childnode>
        <childnode refid="9209" relation="include">
        </childnode>
        <childnode refid="9217" relation="include">
        </childnode>
        <childnode refid="9229" relation="include">
        </childnode>
        <childnode refid="9216" relation="include">
        </childnode>
        <childnode refid="9215" relation="include">
        </childnode>
      </node>
      <node id="9255">
        <label>gaussians.hxx</label>
        <link refid="gaussians_8hxx_source"/>
        <childnode refid="9198" relation="include">
        </childnode>
        <childnode refid="9199" relation="include">
        </childnode>
        <childnode refid="9229" relation="include">
        </childnode>
        <childnode refid="9241" relation="include">
        </childnode>
        <childnode refid="9214" relation="include">
        </childnode>
      </node>
      <node id="9200">
        <label>vigra/configVersion.hxx</label>
        <link refid="configVersion_8hxx_source"/>
      </node>
      <node id="9246">
        <label>transformimage.hxx</label>
        <link refid="transformimage_8hxx_source"/>
        <childnode refid="9213" relation="include">
        </childnode>
        <childnode refid="9223" relation="include">
        </childnode>
        <childnode refid="9221" relation="include">
        </childnode>
        <childnode refid="9235" relation="include">
        </childnode>
        <childnode refid="9245" relation="include">
        </childnode>
        <childnode refid="9244" relation="include">
        </childnode>
      </node>
      <node id="9263">
        <label>convolution.hxx</label>
        <link refid="convolution_8hxx_source"/>
        <childnode refid="9233" relation="include">
        </childnode>
        <childnode refid="9264" relation="include">
        </childnode>
        <childnode refid="9253" relation="include">
        </childnode>
        <childnode refid="9265" relation="include">
        </childnode>
        <childnode refid="9266" relation="include">
        </childnode>
        <childnode refid="9261" relation="include">
        </childnode>
      </node>
      <node id="9266">
        <label>nonlineardiffusion.hxx</label>
        <link refid="nonlineardiffusion_8hxx_source"/>
        <childnode refid="9240" relation="include">
        </childnode>
        <childnode refid="9208" relation="include">
        </childnode>
        <childnode refid="9267" relation="include">
        </childnode>
        <childnode refid="9227" relation="include">
        </childnode>
        <childnode refid="9245" relation="include">
        </childnode>
      </node>
      <node id="9209">
        <label>tuple.hxx</label>
        <link refid="tuple_8hxx_source"/>
        <childnode refid="9210" relation="include">
        </childnode>
      </node>
      <node id="9239">
        <label>codec.hxx</label>
        <link refid="codec_8hxx_source"/>
        <childnode refid="9212" relation="include">
        </childnode>
        <childnode refid="9216" relation="include">
        </childnode>
        <childnode refid="9240" relation="include">
        </childnode>
        <childnode refid="9241" relation="include">
        </childnode>
        <childnode refid="9199" relation="include">
        </childnode>
        <childnode refid="9217" relation="include">
        </childnode>
        <childnode refid="9203" relation="include">
        </childnode>
      </node>
      <node id="9236">
        <label>tinyvector.hxx</label>
        <link refid="tinyvector_8hxx_source"/>
        <childnode refid="9198" relation="include">
        </childnode>
        <childnode refid="9230" relation="include">
        </childnode>
        <childnode refid="9218" relation="include">
        </childnode>
        <childnode refid="9207" relation="include">
        </childnode>
        <childnode refid="9199" relation="include">
        </childnode>
        <childnode refid="9214" relation="include">
        </childnode>
        <childnode refid="9204" relation="include">
        </childnode>
        <childnode refid="9223" relation="include">
        </childnode>
        <childnode refid="9234" relation="include">
        </childnode>
        <childnode refid="9229" relation="include">
        </childnode>
        <childnode refid="9217" relation="include">
        </childnode>
      </node>
      <node id="9269">
        <label>resampling_convolution.hxx</label>
        <link refid="resampling__convolution_8hxx_source"/>
        <childnode refid="9198" relation="include">
        </childnode>
        <childnode refid="9208" relation="include">
        </childnode>
        <childnode refid="9241" relation="include">
        </childnode>
        <childnode refid="9270" relation="include">
        </childnode>
        <childnode refid="9245" relation="include">
        </childnode>
        <childnode refid="9271" relation="include">
        </childnode>
        <childnode refid="9246" relation="include">
        </childnode>
        <childnode refid="9272" relation="include">
        </childnode>
      </node>
      <node id="9243">
        <label>sys/types.h</label>
      </node>
      <node id="9208">
        <label>stdimage.hxx</label>
        <link refid="stdimage_8hxx_source"/>
        <childnode refid="9203" relation="include">
        </childnode>
        <childnode refid="9209" relation="include">
        </childnode>
        <childnode refid="9211" relation="include">
        </childnode>
        <childnode refid="9221" relation="include">
        </childnode>
        <childnode refid="9222" relation="include">
        </childnode>
        <childnode refid="9235" relation="include">
        </childnode>
      </node>
      <node id="9252">
        <label>typeinfo</label>
      </node>
      <node id="9244">
        <label>inspectimage.hxx</label>
        <link refid="inspectimage_8hxx_source"/>
        <childnode refid="9240" relation="include">
        </childnode>
        <childnode refid="9207" relation="include">
        </childnode>
        <childnode refid="9213" relation="include">
        </childnode>
        <childnode refid="9223" relation="include">
        </childnode>
        <childnode refid="9221" relation="include">
        </childnode>
        <childnode refid="9245" relation="include">
        </childnode>
        <childnode refid="9235" relation="include">
        </childnode>
        <childnode refid="9232" relation="include">
        </childnode>
      </node>
      <node id="9229">
        <label>mathutil.hxx</label>
        <link refid="mathutil_8hxx_source"/>
        <childnode refid="9198" relation="include">
        </childnode>
        <childnode refid="9230" relation="include">
        </childnode>
        <childnode refid="9225" relation="include">
        </childnode>
        <childnode refid="9199" relation="include">
        </childnode>
        <childnode refid="9214" relation="include">
        </childnode>
        <childnode refid="9209" relation="include">
        </childnode>
        <childnode refid="9203" relation="include">
        </childnode>
        <childnode refid="9223" relation="include">
        </childnode>
        <childnode refid="9231" relation="include">
        </childnode>
      </node>
      <node id="9199">
        <label>config.hxx</label>
        <link refid="config_8hxx_source"/>
        <childnode refid="9200" relation="include">
        </childnode>
        <childnode refid="9201" relation="include">
        </childnode>
      </node>
      <node id="9223">
        <label>numerictraits.hxx</label>
        <link refid="numerictraits_8hxx_source"/>
        <childnode refid="9205" relation="include">
        </childnode>
        <childnode refid="9206" relation="include">
        </childnode>
        <childnode refid="9224" relation="include">
        </childnode>
        <childnode refid="9225" relation="include">
        </childnode>
        <childnode refid="9204" relation="include">
        </childnode>
        <childnode refid="9203" relation="include">
        </childnode>
        <childnode refid="9226" relation="include">
        </childnode>
      </node>
      <node id="9240">
        <label>vector</label>
      </node>
      <node id="9250">
        <label>imageiterator.hxx</label>
        <link refid="imageiterator_8hxx_source"/>
        <childnode refid="9213" relation="include">
        </childnode>
        <childnode refid="9222" relation="include">
        </childnode>
        <childnode refid="9221" relation="include">
        </childnode>
        <childnode refid="9204" relation="include">
        </childnode>
      </node>
      <node id="9228">
        <label>iteratoradapter.hxx</label>
        <link refid="iteratoradapter_8hxx_source"/>
      </node>
      <node id="9238">
        <label>imageinfo.hxx</label>
        <link refid="imageinfo_8hxx_source"/>
        <childnode refid="9212" relation="include">
        </childnode>
        <childnode refid="9216" relation="include">
        </childnode>
        <childnode refid="9199" relation="include">
        </childnode>
        <childnode refid="9214" relation="include">
        </childnode>
        <childnode refid="9217" relation="include">
        </childnode>
        <childnode refid="9239" relation="include">
        </childnode>
        <childnode refid="9241" relation="include">
        </childnode>
        <childnode refid="9242" relation="include">
        </childnode>
      </node>
      <node id="9227">
        <label>imageiteratoradapter.hxx</label>
        <link refid="imageiteratoradapter_8hxx_source"/>
        <childnode refid="9220" relation="include">
        </childnode>
      </node>
      <node id="9210">
        <label>utility</label>
      </node>
      <node id="9215">
        <label>sstream</label>
      </node>
      <node id="9235">
        <label>rgbvalue.hxx</label>
        <link refid="rgbvalue_8hxx_source"/>
        <childnode refid="9198" relation="include">
        </childnode>
        <childnode refid="9230" relation="include">
        </childnode>
        <childnode refid="9199" relation="include">
        </childnode>
        <childnode refid="9223" relation="include">
        </childnode>
        <childnode refid="9222" relation="include">
        </childnode>
        <childnode refid="9236" relation="include">
        </childnode>
        <childnode refid="9237" relation="include">
        </childnode>
      </node>
      <node id="9217">
        <label>diff2d.hxx</label>
        <link refid="diff2d_8hxx_source"/>
        <childnode refid="9198" relation="include">
        </childnode>
        <childnode refid="9218" relation="include">
        </childnode>
        <childnode refid="9199" relation="include">
        </childnode>
        <childnode refid="9219" relation="include">
        </childnode>
        <childnode refid="9221" relation="include">
        </childnode>
        <childnode refid="9228" relation="include">
        </childnode>
        <childnode refid="9209" relation="include">
        </childnode>
      </node>
      <node id="9275">
        <label>project2ellipse.hxx</label>
        <link refid="project2ellipse_8hxx_source"/>
        <childnode refid="9197" relation="include">
        </childnode>
      </node>
      <node id="9214">
        <label>error.hxx</label>
        <link refid="error_8hxx_source"/>
        <childnode refid="9201" relation="include">
        </childnode>
        <childnode refid="9215" relation="include">
        </childnode>
        <childnode refid="9216" relation="include">
        </childnode>
        <childnode refid="9199" relation="include">
        </childnode>
      </node>
      <node id="9237">
        <label>static_assert.hxx</label>
        <link refid="static__assert_8hxx_source"/>
      </node>
      <node id="9241">
        <label>array_vector.hxx</label>
        <link refid="array__vector_8hxx_source"/>
        <childnode refid="9214" relation="include">
        </childnode>
        <childnode refid="9234" relation="include">
        </childnode>
        <childnode refid="9223" relation="include">
        </childnode>
        <childnode refid="9212" relation="include">
        </childnode>
        <childnode refid="9207" relation="include">
        </childnode>
        <childnode refid="9218" relation="include">
        </childnode>
      </node>
      <node id="9196">
        <label>vigra/tv_filter.hxx</label>
        <link refid="tv_filter.hxx"/>
        <childnode refid="9197" relation="include">
        </childnode>
        <childnode refid="9198" relation="include">
        </childnode>
        <childnode refid="9199" relation="include">
        </childnode>
        <childnode refid="9202" relation="include">
        </childnode>
        <childnode refid="9253" relation="include">
        </childnode>
        <childnode refid="9248" relation="include">
        </childnode>
        <childnode refid="9256" relation="include">
        </childnode>
        <childnode refid="9257" relation="include">
        </childnode>
        <childnode refid="9263" relation="include">
        </childnode>
        <childnode refid="9274" relation="include">
        </childnode>
        <childnode refid="9275" relation="include">
        </childnode>
      </node>
      <node id="9218">
        <label>iosfwd</label>
      </node>
      <node id="9254">
        <label>bordertreatment.hxx</label>
        <link refid="bordertreatment_8hxx_source"/>
      </node>
      <node id="9230">
        <label>cstdlib</label>
      </node>
      <node id="9197">
        <label>iostream</label>
      </node>
      <node id="9242">
        <label>multi_iterator.hxx</label>
        <link refid="multi__iterator_8hxx_source"/>
        <childnode refid="9243" relation="include">
        </childnode>
        <childnode refid="9236" relation="include">
        </childnode>
        <childnode refid="9219" relation="include">
        </childnode>
      </node>
      <node id="9202">
        <label>impex.hxx</label>
        <link refid="impex_8hxx"/>
        <childnode refid="9203" relation="include">
        </childnode>
        <childnode refid="9208" relation="include">
        </childnode>
        <childnode refid="9236" relation="include">
        </childnode>
        <childnode refid="9238" relation="include">
        </childnode>
        <childnode refid="9223" relation="include">
        </childnode>
        <childnode refid="9239" relation="include">
        </childnode>
        <childnode refid="9222" relation="include">
        </childnode>
        <childnode refid="9244" relation="include">
        </childnode>
        <childnode refid="9246" relation="include">
        </childnode>
        <childnode refid="9247" relation="include">
        </childnode>
        <childnode refid="9248" relation="include">
        </childnode>
        <childnode refid="9252" relation="include">
        </childnode>
        <childnode refid="9197" relation="include">
        </childnode>
      </node>
      <node id="9205">
        <label>climits</label>
      </node>
      <node id="9204">
        <label>metaprogramming.hxx</label>
        <link refid="metaprogramming_8hxx_source"/>
        <childnode refid="9199" relation="include">
        </childnode>
        <childnode refid="9205" relation="include">
        </childnode>
        <childnode refid="9206" relation="include">
        </childnode>
        <childnode refid="9207" relation="include">
        </childnode>
      </node>
      <node id="9264">
        <label>stdconvolution.hxx</label>
        <link refid="stdconvolution_8hxx_source"/>
        <childnode refid="9198" relation="include">
        </childnode>
        <childnode refid="9208" relation="include">
        </childnode>
        <childnode refid="9254" relation="include">
        </childnode>
        <childnode refid="9253" relation="include">
        </childnode>
        <childnode refid="9213" relation="include">
        </childnode>
        <childnode refid="9203" relation="include">
        </childnode>
      </node>
      <node id="9271">
        <label>functorexpression.hxx</label>
        <link refid="functorexpression_8hxx_source"/>
      </node>
      <node id="9257">
        <label>eigensystem.hxx</label>
        <link refid="eigensystem_8hxx_source"/>
        <childnode refid="9207" relation="include">
        </childnode>
        <childnode refid="9225" relation="include">
        </childnode>
        <childnode refid="9258" relation="include">
        </childnode>
        <childnode refid="9241" relation="include">
        </childnode>
        <childnode refid="9262" relation="include">
        </childnode>
      </node>
      <node id="9261">
        <label>combineimages.hxx</label>
        <link refid="combineimages_8hxx_source"/>
        <childnode refid="9213" relation="include">
        </childnode>
        <childnode refid="9223" relation="include">
        </childnode>
        <childnode refid="9245" relation="include">
        </childnode>
        <childnode refid="9198" relation="include">
        </childnode>
      </node>
      <node id="9225">
        <label>complex</label>
      </node>
      <node id="9258">
        <label>matrix.hxx</label>
        <link refid="matrix_8hxx_source"/>
        <childnode refid="9198" relation="include">
        </childnode>
        <childnode refid="9218" relation="include">
        </childnode>
        <childnode refid="9259" relation="include">
        </childnode>
        <childnode refid="9248" relation="include">
        </childnode>
        <childnode refid="9229" relation="include">
        </childnode>
        <childnode refid="9223" relation="include">
        </childnode>
        <childnode refid="9260" relation="include">
        </childnode>
      </node>
      <node id="9207">
        <label>algorithm</label>
      </node>
      <node id="9274">
        <label>fixedpoint.hxx</label>
        <link refid="fixedpoint_8hxx_source"/>
        <childnode refid="9229" relation="include">
        </childnode>
        <childnode refid="9237" relation="include">
        </childnode>
        <childnode refid="9214" relation="include">
        </childnode>
        <childnode refid="9223" relation="include">
        </childnode>
      </node>
      <node id="9234">
        <label>memory.hxx</label>
        <link refid="memory_8hxx_source"/>
        <childnode refid="9204" relation="include">
        </childnode>
      </node>
      <node id="9222">
        <label>accessor.hxx</label>
        <link refid="accessor_8hxx_source"/>
        <childnode refid="9204" relation="include">
        </childnode>
        <childnode refid="9223" relation="include">
        </childnode>
        <childnode refid="9209" relation="include">
        </childnode>
      </node>
      <node id="9212">
        <label>memory</label>
      </node>
      <node id="9262">
        <label>polynomial.hxx</label>
        <link refid="polynomial_8hxx_source"/>
        <childnode refid="9198" relation="include">
        </childnode>
        <childnode refid="9225" relation="include">
        </childnode>
        <childnode refid="9207" relation="include">
        </childnode>
        <childnode refid="9218" relation="include">
        </childnode>
        <childnode refid="9214" relation="include">
        </childnode>
        <childnode refid="9229" relation="include">
        </childnode>
        <childnode refid="9223" relation="include">
        </childnode>
        <childnode refid="9241" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacevigra">vigra</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="tv__filter_8hxx_1a82df262df8c8d9c4a4b37b2b2d58261d" prot="public" static="no">
        <name>VIGRA_MIXED_2ND_DERIVATIVES</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/tv_filter.hxx" line="53" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/tv_filter.hxx" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>2012<sp/>by<sp/>Frank<sp/>Lenzen<sp/>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ullrich<sp/>Koethe<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>VIGRA<sp/>computer<sp/>vision<sp/>library.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>The<sp/>VIGRA<sp/>Website<sp/>is<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://hci.iwr.uni-heidelberg.de/vigra/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Please<sp/>direct<sp/>questions,<sp/>bug<sp/>reports,<sp/>and<sp/>contributions<sp/>to<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ullrich.koethe@iwr.uni-heidelberg.de<sp/><sp/><sp/><sp/>or<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra@informatik.uni-hamburg.de<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>conditions:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Software.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VIGRA_TV_FILTER_HXX</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_TV_FILTER_HXX</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;config.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="impex_8hxx" kindref="compound" tooltip="image import and export functions">impex.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;separableconvolution.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;multi_array.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;multi_math.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;eigensystem.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;convolution.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fixedpoint.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;project2ellipse.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VIGRA_MIXED_2ND_DERIVATIVES</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_MIXED_2ND_DERIVATIVES<sp/>1</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vigra{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="61"><highlight class="comment">/**<sp/>\addtogroup<sp/>NonLinearDiffusion</highlight></codeline>
<codeline lineno="62"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="64"><highlight class="comment">//@{</highlight></codeline>
<codeline lineno="65"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalVariationFilter<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="72"><highlight class="comment">/**<sp/>\brief<sp/>Performs<sp/>standard<sp/>Total<sp/>Variation<sp/>Regularization</highlight></codeline>
<codeline lineno="73"><highlight class="comment"></highlight></codeline>
<codeline lineno="74"><highlight class="comment">The<sp/>algorithm<sp/>minimizes</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="comment">\f[</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\min_u<sp/>\int_\Omega<sp/>\frac{1}{2}<sp/>(u-f)^2\;dx<sp/>+<sp/>\alpha<sp/>TV(u)\qquad\qquad<sp/>(1)</highlight></codeline>
<codeline lineno="78"><highlight class="comment">\f]</highlight></codeline>
<codeline lineno="79"><highlight class="comment">where<sp/>&lt;em&gt;\f$<sp/>f=f(x)\f$&lt;/em&gt;<sp/>are<sp/>the<sp/>two<sp/>dimensional<sp/>noisy<sp/>data,</highlight></codeline>
<codeline lineno="80"><highlight class="comment">&lt;em&gt;<sp/>\f$<sp/>u=u(x)\f$&lt;/em&gt;<sp/>are<sp/>the<sp/>smoothed<sp/>data,&lt;em&gt;\f$<sp/>\alpha<sp/>\ge<sp/>0<sp/>\f$&lt;/em&gt;</highlight></codeline>
<codeline lineno="81"><highlight class="comment">is<sp/>the<sp/>filter<sp/>parameter<sp/>and<sp/>&lt;em&gt;\f$<sp/>TV(u)\f$<sp/>&lt;/em&gt;<sp/>is<sp/>the<sp/>total<sp/>variation<sp/>semi-norm.</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83"><highlight class="comment">&lt;b&gt;<sp/>Declarations:&lt;/b&gt;</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="86"><highlight class="comment">namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>stride1,class<sp/>stride2&gt;</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>totalVariationFilter(MultiArrayView&lt;2,double,stride1&gt;<sp/>data,<sp/></highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,double,stride2&gt;<sp/>out,</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>alpha,<sp/></highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>steps,<sp/></highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>eps=0);</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>totalVariationFilter(MultiArrayView&lt;2,double,stride1&gt;<sp/>data,</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,double,stride2&gt;<sp/>weight,</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,double,stride3&gt;<sp/>out,</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>alpha,<sp/></highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>steps,<sp/></highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>eps=0);</highlight></codeline>
<codeline lineno="99"><highlight class="comment">}</highlight></codeline>
<codeline lineno="100"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="comment">\ref<sp/>totalVariationFilter()<sp/>implements<sp/>a<sp/>primal-dual<sp/>algorithm<sp/>to<sp/>solve<sp/>(1).</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="104"><highlight class="comment">Input:</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>&lt;table&gt;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>&lt;tr&gt;&lt;td&gt;&lt;em&gt;data&lt;/em&gt;:<sp/><sp/>&lt;/td&gt;&lt;td&gt;<sp/>input<sp/>data<sp/>to<sp/>be<sp/>smoothed.<sp/>&lt;/td&gt;&lt;/tr&gt;</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>&lt;tr&gt;&lt;td&gt;&lt;em&gt;alpha&lt;/em&gt;:<sp/>&lt;/td&gt;&lt;td&gt;<sp/>smoothing<sp/>parameter.&lt;/td&gt;&lt;/tr&gt;</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>&lt;tr&gt;&lt;td&gt;&lt;em&gt;steps&lt;/em&gt;:<sp/>&lt;/td&gt;&lt;td&gt;<sp/>maximal<sp/>number<sp/>of<sp/>iteration<sp/>steps.<sp/>&lt;/td&gt;&lt;/tr&gt;</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>&lt;tr&gt;&lt;td&gt;&lt;em&gt;eps&lt;/em&gt;:<sp/><sp/><sp/>&lt;/td&gt;&lt;td&gt;<sp/>The<sp/>algorithm<sp/>stops,<sp/>if<sp/>the<sp/>primal-dual<sp/>gap<sp/>is<sp/>below<sp/>the<sp/>threshold<sp/>&lt;em&gt;eps&lt;/em&gt;.</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>&lt;/table&gt;</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>Output:</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>&lt;em&gt;out&lt;/em&gt;<sp/>contains<sp/>the<sp/>filtered<sp/>data.</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>In<sp/>addition,<sp/>a<sp/>point-wise<sp/>weight<sp/>(\f$<sp/>\ge<sp/>0<sp/>\f$)<sp/>for<sp/>the<sp/>data<sp/>term<sp/>can<sp/>be<sp/>provided<sp/>(overloaded<sp/>function).</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/tv_filter.hxx\&gt;</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/><sp/>MultiArray&lt;2,double&gt;<sp/>data(Shape2(width,height));<sp/><sp/>//<sp/>to<sp/>be<sp/>initialized</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/><sp/>MultiArray&lt;2,double&gt;<sp/>out(Shape2(width,height));</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/><sp/>MultiArray&lt;2,double&gt;<sp/>weight(Shape2(width,height)));<sp/>//optional<sp/>argument<sp/>in<sp/>overloaded<sp/>function,<sp/>to<sp/>be<sp/>initialized<sp/>if<sp/>used</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>steps;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>to<sp/>be<sp/>initialized</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/><sp/>double<sp/>alpha,eps;<sp/>//<sp/>to<sp/>be<sp/>initialized</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/><sp/>totalVariationFilter(data,out,alpha,steps,eps);</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/>or</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/><sp/>totalVariationFilter(data,weight,out,alpha,steps,eps);</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">doxygen_overloaded_function(template<sp/>&lt;...&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__NonLinearDiffusion_1ga60041a186e8c6a6a7fb98a432bbee319" kindref="member" tooltip="Performs standard Total Variation Regularization.">totalVariationFilter</ref>)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e1,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e2&gt;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__NonLinearDiffusion_1ga60041a186e8c6a6a7fb98a432bbee319" kindref="member" tooltip="Performs standard Total Variation Regularization.">totalVariationFilter</ref>(MultiArrayView&lt;2,double,stride1&gt;<sp/>data,MultiArrayView&lt;2,double,stride2&gt;<sp/>out,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>steps,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps=0){</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">multi_math;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>MultiArray&lt;2,double&gt;<sp/>temp1(data.shape()),temp2(data.shape()),vx(data.shape()),vy(data.shape()),u_bar(data.shape());</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>Kernel1D&lt;double&gt;<sp/>Lx,LTx;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>Lx.initExplicitly(0,1)=1,-1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>=<sp/>Right<sp/>sided<sp/>finite<sp/>differences<sp/>for<sp/>d/dx<sp/>and<sp/>d/dy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>Lx.setBorderTreatment(BORDER_TREATMENT_REFLECT);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>with<sp/>hom.<sp/>Neumann<sp/>boundary<sp/>conditions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>LTx.initExplicitly(-1,0)=-1,1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>=<sp/>Left<sp/>sided<sp/>finite<sp/>differences<sp/>for<sp/>-d/dx<sp/><sp/>and<sp/>-d/dy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>LTx.setBorderTreatment(BORDER_TREATMENT_ZEROPAD);<sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>with<sp/>hom.<sp/>Dirichlet<sp/>b.<sp/>c.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>out=data;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>u_bar=data;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tau=1.0<sp/>/<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">std::max</ref>(alpha,1.)<sp/>/<sp/><ref refid="group__FixedPointOperations_1ga22d75753836176f3d172f58be11ecc4c" kindref="member" tooltip="square root.">std::sqrt</ref>(8.0)<sp/>*<sp/>0.06;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma=1.0<sp/>/<sp/><ref refid="group__FixedPointOperations_1ga22d75753836176f3d172f58be11ecc4c" kindref="member" tooltip="square root.">std::sqrt</ref>(8.0)<sp/>/<sp/>0.06;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;steps;i++){</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1ga34459275af4134198dfc1a75c9993848" kindref="member" tooltip="Performs a 1 dimensional convolution in x direction.">separableConvolveX</ref>(srcImageRange(u_bar),destImage(temp1),kernel1d(Lx));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>vx+=(sigma*temp1);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1gaee4f7ee32121e37112a20f5fb8ad4610" kindref="member" tooltip="Performs a 1 dimensional convolution in y direction.">separableConvolveY</ref>(srcImageRange(u_bar),destImage(temp1),kernel1d(Lx));</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>vy+=(sigma*temp1);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//project<sp/>to<sp/>constraint<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y=0;y&lt;data.shape(1);y++){</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x=0;x&lt;data.shape(0);x++){</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>l=<ref refid="group__FixedPoint16Operations_1gac462ab7aeaeaa2af19c524e89c9ee1fd" kindref="member" tooltip="Length of hypotenuse.">hypot</ref>(vx(x,y),vy(x,y));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l&gt;1){</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vx(x,y)/=l;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vy(x,y)/=l;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1ga34459275af4134198dfc1a75c9993848" kindref="member" tooltip="Performs a 1 dimensional convolution in x direction.">separableConvolveX</ref>(srcImageRange(vx),destImage(temp1),kernel1d(LTx));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1gaee4f7ee32121e37112a20f5fb8ad4610" kindref="member" tooltip="Performs a 1 dimensional convolution in y direction.">separableConvolveY</ref>(srcImageRange(vy),destImage(temp2),kernel1d(LTx));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>u_bar=out;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>out-=tau*(out-data+alpha*(temp1+temp2));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>u_bar=2*out-u_bar;<sp/><sp/><sp/></highlight><highlight class="comment">//cf.<sp/>Chambolle/Pock<sp/>and<sp/>Popov&apos;s<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//stopping<sp/>criterion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eps&gt;0){</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1ga34459275af4134198dfc1a75c9993848" kindref="member" tooltip="Performs a 1 dimensional convolution in x direction.">separableConvolveX</ref>(srcImageRange(out),destImage(temp1),kernel1d(Lx));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1gaee4f7ee32121e37112a20f5fb8ad4610" kindref="member" tooltip="Performs a 1 dimensional convolution in y direction.">separableConvolveY</ref>(srcImageRange(out),destImage(temp2),kernel1d(Lx));</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f_primal=0,f_dual=0;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y=0;y&lt;data.shape(1);y++){</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x=0;x&lt;data.shape(0);x++){</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_primal+=.5*(out(x,y)-data(x,y))*(out(x,y)-data(x,y))+alpha*<ref refid="group__FixedPoint16Operations_1gac462ab7aeaeaa2af19c524e89c9ee1fd" kindref="member" tooltip="Length of hypotenuse.">hypot</ref>(temp1(x,y),temp2(x,y));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1ga34459275af4134198dfc1a75c9993848" kindref="member" tooltip="Performs a 1 dimensional convolution in x direction.">separableConvolveX</ref>(srcImageRange(vx),destImage(temp1),kernel1d(LTx));</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1gaee4f7ee32121e37112a20f5fb8ad4610" kindref="member" tooltip="Performs a 1 dimensional convolution in y direction.">separableConvolveY</ref>(srcImageRange(vy),destImage(temp2),kernel1d(LTx));</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y=0;y&lt;data.shape(1);y++){</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x=0;x&lt;data.shape(0);x++){</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>divv=temp1(x,y)+temp2(x,y);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_dual+=-.5*alpha*alpha*(divv*divv)+alpha*data(x,y)*divv;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f_primal&gt;0<sp/>&amp;&amp;<sp/>(f_primal-f_dual)/f_primal&lt;eps){</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e1,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e3&gt;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__NonLinearDiffusion_1ga60041a186e8c6a6a7fb98a432bbee319" kindref="member" tooltip="Performs standard Total Variation Regularization.">totalVariationFilter</ref>(MultiArrayView&lt;2,double,stride1&gt;<sp/>data,MultiArrayView&lt;2,double,stride2&gt;<sp/>weight,<sp/>MultiArrayView&lt;2,double,stride3&gt;<sp/>out,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>steps,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps=0){</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">multi_math;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>MultiArray&lt;2,double&gt;<sp/>temp1(data.shape()),temp2(data.shape()),vx(data.shape()),vy(data.shape()),u_bar(data.shape());</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>Kernel1D&lt;double&gt;<sp/>Lx,LTx;<sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>Lx.initExplicitly(0,1)=1,-1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>=<sp/>Right<sp/>sided<sp/>finite<sp/>differences<sp/>for<sp/>d/dx<sp/>and<sp/>d/dy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>Lx.setBorderTreatment(BORDER_TREATMENT_REFLECT);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>with<sp/>hom.<sp/>Neumann<sp/>boundary<sp/>conditions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>LTx.initExplicitly(-1,0)=-1,1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>=<sp/>Left<sp/>sided<sp/>finite<sp/>differences<sp/>for<sp/>-d/dx<sp/><sp/>and<sp/>-d/dy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>LTx.setBorderTreatment(BORDER_TREATMENT_ZEROPAD);<sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>with<sp/>hom.<sp/>Dirichlet<sp/>b.<sp/>c.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>out=data;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>u_bar=data;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tau=1.0<sp/>/<sp/><ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">std::max</ref>(alpha,1.)<sp/>/<sp/><ref refid="group__FixedPointOperations_1ga22d75753836176f3d172f58be11ecc4c" kindref="member" tooltip="square root.">std::sqrt</ref>(8.0)<sp/>*<sp/>0.06;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma=1.0<sp/>/<sp/><ref refid="group__FixedPointOperations_1ga22d75753836176f3d172f58be11ecc4c" kindref="member" tooltip="square root.">std::sqrt</ref>(8.0)<sp/>/<sp/>0.06;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;steps;i++){</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1ga34459275af4134198dfc1a75c9993848" kindref="member" tooltip="Performs a 1 dimensional convolution in x direction.">separableConvolveX</ref>(srcImageRange(u_bar),destImage(temp1),kernel1d(Lx));</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>vx+=(sigma*temp1);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1gaee4f7ee32121e37112a20f5fb8ad4610" kindref="member" tooltip="Performs a 1 dimensional convolution in y direction.">separableConvolveY</ref>(srcImageRange(u_bar),destImage(temp1),kernel1d(Lx));</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>vy+=(sigma*temp1);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//project<sp/>to<sp/>constraint<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y=0;y&lt;data.shape(1);y++){</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x=0;x&lt;data.shape(0);x++){</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>l=<ref refid="group__FixedPoint16Operations_1gac462ab7aeaeaa2af19c524e89c9ee1fd" kindref="member" tooltip="Length of hypotenuse.">hypot</ref>(vx(x,y),vy(x,y));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l&gt;1){</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vx(x,y)/=l;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vy(x,y)/=l;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1ga34459275af4134198dfc1a75c9993848" kindref="member" tooltip="Performs a 1 dimensional convolution in x direction.">separableConvolveX</ref>(srcImageRange(vx),destImage(temp1),kernel1d(LTx));</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1gaee4f7ee32121e37112a20f5fb8ad4610" kindref="member" tooltip="Performs a 1 dimensional convolution in y direction.">separableConvolveY</ref>(srcImageRange(vy),destImage(temp2),kernel1d(LTx));</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>u_bar=out;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>out-=tau*(weight*(out-data)+alpha*(temp1+temp2));</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>u_bar=2*out-u_bar;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//stopping<sp/>criterion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eps&gt;0){</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1ga34459275af4134198dfc1a75c9993848" kindref="member" tooltip="Performs a 1 dimensional convolution in x direction.">separableConvolveX</ref>(srcImageRange(out),destImage(temp1),kernel1d(Lx));</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1gaee4f7ee32121e37112a20f5fb8ad4610" kindref="member" tooltip="Performs a 1 dimensional convolution in y direction.">separableConvolveY</ref>(srcImageRange(out),destImage(temp2),kernel1d(Lx));</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f_primal=0,f_dual=0;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y=0;y&lt;data.shape(1);y++){</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x=0;x&lt;data.shape(0);x++){</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_primal+=.5*weight(x,y)*(out(x,y)-data(x,y))*(out(x,y)-data(x,y))+alpha*<ref refid="group__FixedPoint16Operations_1gac462ab7aeaeaa2af19c524e89c9ee1fd" kindref="member" tooltip="Length of hypotenuse.">hypot</ref>(temp1(x,y),temp2(x,y));</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1ga34459275af4134198dfc1a75c9993848" kindref="member" tooltip="Performs a 1 dimensional convolution in x direction.">separableConvolveX</ref>(srcImageRange(vx),destImage(temp1),kernel1d(LTx));</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1gaee4f7ee32121e37112a20f5fb8ad4610" kindref="member" tooltip="Performs a 1 dimensional convolution in y direction.">separableConvolveY</ref>(srcImageRange(vy),destImage(temp2),kernel1d(LTx));</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y=0;y&lt;data.shape(1);y++){</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x=0;x&lt;data.shape(0);x++){</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>divv=temp1(x,y)+temp2(x,y);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_dual+=-.5*alpha*alpha*(weight(x,y)*divv*divv)+alpha*data(x,y)*divv;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f_primal&gt;0<sp/>&amp;&amp;<sp/>(f_primal-f_dual)/f_primal&lt;eps){</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">//&lt;!--\f$<sp/>\alpha(x)=\beta(x)=\beta_{par}\f$<sp/>in<sp/>homogeneous<sp/>regions<sp/>without<sp/>edges,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">//and<sp/>\f$<sp/>\alpha(x)=\alpha_{par}\f$<sp/>at<sp/>edges.--&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getAnisotropy<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="285"><highlight class="comment">/**<sp/>\brief<sp/>Sets<sp/>up<sp/>directional<sp/>data<sp/>for<sp/>anisotropic<sp/>regularization</highlight></codeline>
<codeline lineno="286"><highlight class="comment"></highlight></codeline>
<codeline lineno="287"><highlight class="comment">This<sp/>routine<sp/>provides<sp/>a<sp/>two-dimensional<sp/>normalized<sp/>vector<sp/>field<sp/>\f$<sp/>v<sp/>\f$,<sp/>which<sp/>is<sp/>normal<sp/>to<sp/>edges<sp/>in<sp/>the<sp/>given<sp/>data,</highlight></codeline>
<codeline lineno="288"><highlight class="comment">found<sp/>as<sp/>the<sp/>eigenvector<sp/>of<sp/>the<sp/>structure<sp/>tensor<sp/>belonging<sp/>to<sp/>the<sp/>largest<sp/>eigenvalue.</highlight></codeline>
<codeline lineno="289"><highlight class="comment">\f$<sp/>v<sp/>\f$<sp/>is<sp/>encoded<sp/>by<sp/>a<sp/>scalar<sp/>field<sp/>\f$<sp/>\varphi<sp/>\f$<sp/>of<sp/>angles,<sp/>i.e.<sp/></highlight></codeline>
<codeline lineno="290"><highlight class="comment">\f$<sp/>v(x)=(\cos(\varphi(x)),\sin(\varphi(x)))^\top<sp/>\f$.</highlight></codeline>
<codeline lineno="291"><highlight class="comment"></highlight></codeline>
<codeline lineno="292"><highlight class="comment">In<sp/>addition,<sp/>two<sp/>scalar<sp/>fields<sp/>\f$<sp/>\alpha<sp/>\f$<sp/>and<sp/><sp/>\f$<sp/>\beta<sp/>\f$<sp/>are<sp/>generated<sp/>from</highlight></codeline>
<codeline lineno="293"><highlight class="comment">scalar<sp/>parameters<sp/>\f$<sp/>\alpha_{par}\f$<sp/>and<sp/>\f$<sp/>\beta_{par}\f$,<sp/>such<sp/>that</highlight></codeline>
<codeline lineno="294"><highlight class="comment">&lt;center&gt;</highlight></codeline>
<codeline lineno="295"><highlight class="comment">&lt;table&gt;</highlight></codeline>
<codeline lineno="296"><highlight class="comment">&lt;tr&gt;<sp/>&lt;td&gt;\f$<sp/>\alpha(x)=<sp/>\alpha_{par}\f$<sp/>at<sp/>edges,&lt;/td&gt;&lt;/tr&gt;</highlight></codeline>
<codeline lineno="297"><highlight class="comment">&lt;tr&gt;<sp/>&lt;td&gt;\f$<sp/>\alpha(x)=<sp/>\beta_{par}\f$<sp/>in<sp/>homogeneous<sp/>regions,&lt;/td&gt;&lt;/tr&gt;</highlight></codeline>
<codeline lineno="298"><highlight class="comment">&lt;tr&gt;<sp/>&lt;td&gt;\f$<sp/>\beta(x)=\beta_{par}\f$<sp/>.&lt;/td&gt;&lt;/tr&gt;</highlight></codeline>
<codeline lineno="299"><highlight class="comment">&lt;/table&gt;</highlight></codeline>
<codeline lineno="300"><highlight class="comment">&lt;/center&gt;</highlight></codeline>
<codeline lineno="301"><highlight class="comment"></highlight></codeline>
<codeline lineno="302"><highlight class="comment">&lt;b&gt;<sp/>Declarations:&lt;/b&gt;</highlight></codeline>
<codeline lineno="303"><highlight class="comment"></highlight></codeline>
<codeline lineno="304"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="305"><highlight class="comment">namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="comment">void<sp/>getAnisotropy(MultiArrayView&lt;2,double,stride1&gt;<sp/>data,</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,double,stride2&gt;<sp/>phi,</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,double,stride3&gt;<sp/>alpha,<sp/></highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,double,stride4&gt;<sp/>beta,<sp/></highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>alpha_par,<sp/></highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>beta_par,<sp/></highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>sigma_par,<sp/></highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>rho_par,<sp/></highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>K_par);</highlight></codeline>
<codeline lineno="315"><highlight class="comment">}</highlight></codeline>
<codeline lineno="316"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="317"><highlight class="comment"></highlight></codeline>
<codeline lineno="318"><highlight class="comment">Output:</highlight></codeline>
<codeline lineno="319"><highlight class="comment">&lt;table&gt;</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/><sp/>&lt;tr&gt;&lt;td&gt;Three<sp/>scalar<sp/>fields<sp/>&lt;em&gt;phi&lt;/em&gt;,<sp/>&lt;em&gt;alpha&lt;/em&gt;<sp/>and<sp/>&lt;em&gt;beta&lt;/em&gt;.&lt;/td&gt;&lt;/tr&gt;</highlight></codeline>
<codeline lineno="321"><highlight class="comment">&lt;/table&gt;</highlight></codeline>
<codeline lineno="322"><highlight class="comment"></highlight></codeline>
<codeline lineno="323"><highlight class="comment">Input:</highlight></codeline>
<codeline lineno="324"><highlight class="comment">&lt;table&gt;</highlight></codeline>
<codeline lineno="325"><highlight class="comment">&lt;tr&gt;&lt;td&gt;&lt;em&gt;data&lt;/em&gt;:&lt;/td&gt;&lt;td&gt;two-dimensional<sp/>scalar<sp/>field.&lt;/td&gt;&lt;/tr&gt;</highlight></codeline>
<codeline lineno="326"><highlight class="comment">&lt;tr&gt;&lt;td&gt;&lt;em&gt;alpha_par,beta_par&lt;/em&gt;:&lt;/td&gt;&lt;td&gt;two<sp/>positive<sp/>values<sp/>for<sp/>setting<sp/>up<sp/>the<sp/>scalar<sp/>fields<sp/>alpha<sp/>and<sp/>beta&lt;/tr&gt;</highlight></codeline>
<codeline lineno="327"><highlight class="comment">&lt;tr&gt;&lt;td&gt;&lt;em&gt;sigma_par&lt;/em&gt;:&lt;/td&gt;&lt;td&gt;<sp/>non-negative<sp/>parameter<sp/>for<sp/>presmoothing<sp/>the<sp/>data.&lt;/td&gt;&lt;/tr&gt;</highlight></codeline>
<codeline lineno="328"><highlight class="comment">&lt;tr&gt;&lt;td&gt;<sp/>&lt;em&gt;rho_par&lt;/em&gt;:&lt;/td&gt;&lt;td&gt;<sp/>non-negative<sp/>parameter<sp/>for<sp/>presmoothing<sp/>the<sp/>structure<sp/>tensor.&lt;/td&gt;&lt;/tr&gt;</highlight></codeline>
<codeline lineno="329"><highlight class="comment">&lt;tr&gt;&lt;td&gt;&lt;em&gt;K_par&lt;/em&gt;:&lt;/td&gt;&lt;td&gt;<sp/>positive<sp/>edge<sp/>sensitivity<sp/>parameter.&lt;/td&gt;&lt;/tr&gt;</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>&lt;/table&gt;</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="332"><highlight class="comment">(see<sp/>\ref<sp/>anisotropicTotalVariationFilter()<sp/>and<sp/>\ref<sp/>secondOrderTotalVariationFilter()<sp/>for<sp/>usage<sp/>in<sp/>an<sp/>application).</highlight></codeline>
<codeline lineno="333"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal">doxygen_overloaded_function(template<sp/>&lt;...&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__NonLinearDiffusion_1ga826a11a3e56ff35a8f3dc38f2c7c9a5e" kindref="member" tooltip="Sets up directional data for anisotropic regularization.">getAnisotropy</ref>)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e1,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e2,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e3,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e4&gt;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__NonLinearDiffusion_1ga826a11a3e56ff35a8f3dc38f2c7c9a5e" kindref="member" tooltip="Sets up directional data for anisotropic regularization.">getAnisotropy</ref>(MultiArrayView&lt;2,double,stride1&gt;<sp/>data,MultiArrayView&lt;2,double,stride2&gt;<sp/>phi,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,double,stride3&gt;<sp/>alpha,<sp/>MultiArrayView&lt;2,double,stride4&gt;<sp/>beta,<sp/></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha_par,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>beta_par,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma_par,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rho_par,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>K_par){</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">multi_math;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>MultiArray&lt;2,double&gt;<sp/>smooth(data.shape()),tmp(data.shape());</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><ref refid="classvigra_1_1Kernel1D" kindref="compound" tooltip="Generic 1 dimensional convolution kernel.">vigra::Kernel1D&lt;double&gt;</ref><sp/>gauss;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>gauss.<ref refid="classvigra_1_1Kernel1D_1a48c46ac7770600ec38f55c1dc498244a" kindref="member">initGaussian</ref>(sigma_par);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><ref refid="group__SeparableConvolution_1ga34459275af4134198dfc1a75c9993848" kindref="member" tooltip="Performs a 1 dimensional convolution in x direction.">separableConvolveX</ref>(srcImageRange(data),<sp/>destImage(tmp),<sp/>kernel1d(gauss));</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><ref refid="group__SeparableConvolution_1gaee4f7ee32121e37112a20f5fb8ad4610" kindref="member" tooltip="Performs a 1 dimensional convolution in y direction.">separableConvolveY</ref>(srcImageRange(tmp),<sp/>destImage(smooth),<sp/>kernel1d(gauss));</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>MultiArray&lt;2,double&gt;<sp/>stxx(data.shape()),stxy(data.shape()),styy(data.shape());</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>Structure<sp/>Tensor<sp/>at<sp/>inner<sp/>scale<sp/>=<sp/>sigma<sp/>and<sp/>outer<sp/>scale<sp/>=<sp/>rho</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><ref refid="group__CommonConvolutionFilters_1ga1fa5263dd0a2d0d152e67e7bb31f1d66" kindref="member" tooltip="Calculate the Structure Tensor for each pixel of and image, using Gaussian (derivative) filters...">vigra::structureTensor</ref>(srcImageRange(smooth),destImage(stxx),<sp/>destImage(stxy),<sp/>destImage(styy),1.,1.);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>gauss.initGaussian(rho_par);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><ref refid="group__SeparableConvolution_1ga34459275af4134198dfc1a75c9993848" kindref="member" tooltip="Performs a 1 dimensional convolution in x direction.">separableConvolveX</ref>(srcImageRange(stxx),<sp/>destImage(tmp),<sp/>kernel1d(gauss));</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><ref refid="group__SeparableConvolution_1gaee4f7ee32121e37112a20f5fb8ad4610" kindref="member" tooltip="Performs a 1 dimensional convolution in y direction.">separableConvolveY</ref>(srcImageRange(tmp),<sp/>destImage(stxx),<sp/>kernel1d(gauss));</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><ref refid="group__SeparableConvolution_1ga34459275af4134198dfc1a75c9993848" kindref="member" tooltip="Performs a 1 dimensional convolution in x direction.">separableConvolveX</ref>(srcImageRange(stxy),<sp/>destImage(tmp),<sp/>kernel1d(gauss));</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><ref refid="group__SeparableConvolution_1gaee4f7ee32121e37112a20f5fb8ad4610" kindref="member" tooltip="Performs a 1 dimensional convolution in y direction.">separableConvolveY</ref>(srcImageRange(tmp),<sp/>destImage(stxy),<sp/>kernel1d(gauss));</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><ref refid="group__SeparableConvolution_1ga34459275af4134198dfc1a75c9993848" kindref="member" tooltip="Performs a 1 dimensional convolution in x direction.">separableConvolveX</ref>(srcImageRange(styy),<sp/>destImage(tmp),<sp/>kernel1d(gauss));</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><ref refid="group__SeparableConvolution_1gaee4f7ee32121e37112a20f5fb8ad4610" kindref="member" tooltip="Performs a 1 dimensional convolution in y direction.">separableConvolveY</ref>(srcImageRange(tmp),<sp/>destImage(styy),<sp/>kernel1d(gauss));</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>MultiArray&lt;2,double&gt;<sp/>matrix(<ref refid="group__MultiIteratorGroup_1ga2e2ffc107bb0e38f9b1288b647c8ec5b" kindref="member" tooltip="shape type for MultiArray&amp;lt;2, T&amp;gt;">Shape2</ref>(2,2)),ev(<ref refid="group__MultiIteratorGroup_1ga2e2ffc107bb0e38f9b1288b647c8ec5b" kindref="member" tooltip="shape type for MultiArray&amp;lt;2, T&amp;gt;">Shape2</ref>(2,2)),ew(<ref refid="group__MultiIteratorGroup_1ga2e2ffc107bb0e38f9b1288b647c8ec5b" kindref="member" tooltip="shape type for MultiArray&amp;lt;2, T&amp;gt;">Shape2</ref>(2,1));</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y=0;y&lt;data.shape(1);y++){</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x=0;x&lt;data.shape(0);x++){</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>matrix(0,0)=stxx(x,y);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>matrix(1,1)=styy(x,y);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>matrix(0,1)=stxy(x,y);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>matrix(1,0)=stxy(x,y);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vigra::linalg::detail::symmetricEigensystem2x2(matrix,ew,ev);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>phi(x,y)=<ref refid="group__FixedPoint16Operations_1gae83e1ae2e3dae6dc462c69a7c8175fc5" kindref="member" tooltip="Arctangent. Accuracy better than 1/3 degree (9 significant bits).">std::atan2</ref>(ev(1,0),ev(0,0));</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>coherence=ew(0,0)-ew(1,0);<sp/></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c=<ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">std::min</ref>(K_par*coherence,1.);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alpha(x,y)=alpha_par*c+(1-c)*beta_par;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>beta(x,y)=beta_par;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/>anisotropicTotalVariationFilter<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="390"><highlight class="comment">/**<sp/>\brief<sp/>Performs<sp/>Anisotropic<sp/>Total<sp/>Variation<sp/>Regularization</highlight></codeline>
<codeline lineno="391"><highlight class="comment"></highlight></codeline>
<codeline lineno="392"><highlight class="comment">The<sp/>algorithm<sp/>minimizes</highlight></codeline>
<codeline lineno="393"><highlight class="comment">\f[</highlight></codeline>
<codeline lineno="394"><highlight class="comment">\min_u<sp/>\int_\Omega<sp/>\frac{1}{2}<sp/>(u-f)^2<sp/>+<sp/>\sqrt{\nabla<sp/>u^\top<sp/>A<sp/>\nabla<sp/>u}\;dx\qquad\qquad(2)</highlight></codeline>
<codeline lineno="395"><highlight class="comment">\f]</highlight></codeline>
<codeline lineno="396"><highlight class="comment"></highlight></codeline>
<codeline lineno="397"><highlight class="comment">where<sp/>&lt;em&gt;<sp/>\f$<sp/>f=f(x)\f$<sp/>&lt;/em&gt;<sp/>are<sp/>the<sp/>noisy<sp/>data,<sp/>&lt;em&gt;<sp/>\f$<sp/>u=u(x)\f$<sp/>&lt;/em&gt;<sp/>are<sp/>the<sp/>smoothed<sp/>data,&lt;em&gt;\f$<sp/>\nabla<sp/>u<sp/>\f$<sp/>&lt;/em&gt;</highlight></codeline>
<codeline lineno="398"><highlight class="comment">is<sp/>the<sp/>image<sp/>gradient<sp/>in<sp/>the<sp/>sense<sp/>of<sp/>Total<sp/>Variation<sp/>and<sp/>&lt;em&gt;\f$<sp/>A<sp/>\f$<sp/>&lt;/em&gt;<sp/>is<sp/>a<sp/>locally<sp/>varying<sp/>symmetric,<sp/>positive<sp/>definite<sp/><sp/>2x2<sp/>matrix.</highlight></codeline>
<codeline lineno="399"><highlight class="comment"></highlight></codeline>
<codeline lineno="400"><highlight class="comment">Matrix<sp/>&lt;em&gt;\f$<sp/>A<sp/>\f$<sp/>&lt;/em&gt;<sp/>is<sp/>described<sp/>by<sp/>providing<sp/><sp/>for<sp/>each<sp/>data<sp/>point<sp/>a<sp/>normalized<sp/>eigenvector<sp/>(via<sp/>angle<sp/>\f$<sp/>\phi<sp/>\f$)</highlight></codeline>
<codeline lineno="401"><highlight class="comment">and<sp/>two<sp/>eigenvalues<sp/>\f$<sp/>\alpha&gt;0<sp/>\f$<sp/>and<sp/>\f$<sp/>\beta&gt;0<sp/>\f$.</highlight></codeline>
<codeline lineno="402"><highlight class="comment"></highlight></codeline>
<codeline lineno="403"><highlight class="comment">\ref<sp/>getAnisotropy()<sp/>can<sp/>be<sp/>use<sp/>to<sp/>set<sp/>up<sp/>such<sp/>data<sp/>\f$<sp/>\phi,\alpha,\beta<sp/>\f$<sp/>by<sp/>providing<sp/>a<sp/>vector<sp/>field<sp/>normal<sp/>to<sp/>edges.</highlight></codeline>
<codeline lineno="404"><highlight class="comment"></highlight></codeline>
<codeline lineno="405"><highlight class="comment">&lt;b&gt;<sp/>Declarations:&lt;/b&gt;</highlight></codeline>
<codeline lineno="406"><highlight class="comment"></highlight></codeline>
<codeline lineno="407"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="408"><highlight class="comment">namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/><sp/>template<sp/>&lt;class<sp/>stride1,class<sp/>stride2,class<sp/>stride3,class<sp/>stride4,class<sp/>stride5,class<sp/>stride6&gt;</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/><sp/>void<sp/>anisotropicTotalVariationFilter(MultiArrayView&lt;2,double,stride1&gt;<sp/>data,</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,double,stride2&gt;<sp/>weight,</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,double,stride3&gt;<sp/>phi,</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,double,stride4&gt;<sp/>alpha,<sp/></highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,double,stride5&gt;<sp/>beta,</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,double,stride6&gt;<sp/>out,</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>steps);</highlight></codeline>
<codeline lineno="417"><highlight class="comment">}</highlight></codeline>
<codeline lineno="418"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="419"><highlight class="comment"></highlight></codeline>
<codeline lineno="420"><highlight class="comment">\ref<sp/>anisotropicTotalVariationFilter()<sp/>implements<sp/>a<sp/>primal-dual<sp/>algorithm<sp/>to<sp/>solve<sp/>(2).</highlight></codeline>
<codeline lineno="421"><highlight class="comment"></highlight></codeline>
<codeline lineno="422"><highlight class="comment">Input:</highlight></codeline>
<codeline lineno="423"><highlight class="comment">&lt;table&gt;</highlight></codeline>
<codeline lineno="424"><highlight class="comment">&lt;tr&gt;&lt;td&gt;&lt;em&gt;data&lt;/em&gt;:&lt;/td&gt;&lt;td&gt;input<sp/>data<sp/>to<sp/>be<sp/>filtered.<sp/>&lt;/td&gt;&lt;/tr&gt;</highlight></codeline>
<codeline lineno="425"><highlight class="comment">&lt;tr&gt;&lt;td&gt;&lt;em&gt;steps&lt;/em&gt;:&lt;/td&gt;&lt;td&gt;iteration<sp/>steps.&lt;/td&gt;&lt;/tr&gt;</highlight></codeline>
<codeline lineno="426"><highlight class="comment">&lt;tr&gt;&lt;td&gt;&lt;em&gt;weight&lt;/em&gt;<sp/>:&lt;/td&gt;&lt;td&gt;a<sp/>point-wise<sp/>weight<sp/>(\f$<sp/>\ge<sp/>0<sp/>\f$<sp/>)<sp/>for<sp/>the<sp/>data<sp/>term.&lt;/td&gt;&lt;/tr&gt;</highlight></codeline>
<codeline lineno="427"><highlight class="comment">&lt;tr&gt;&lt;td&gt;&lt;em&gt;phi&lt;/em&gt;,&lt;em&gt;alpha&lt;/em&gt;<sp/>and<sp/>&lt;em&gt;beta&lt;/em&gt;<sp/>:&lt;/td&gt;&lt;td&gt;<sp/>describe<sp/>matrix<sp/>\f$<sp/>A<sp/>\f$,<sp/>see<sp/>above.&lt;/td&gt;&lt;/tr&gt;</highlight></codeline>
<codeline lineno="428"><highlight class="comment">&lt;/table&gt;</highlight></codeline>
<codeline lineno="429"><highlight class="comment"></highlight></codeline>
<codeline lineno="430"><highlight class="comment">Output:</highlight></codeline>
<codeline lineno="431"><highlight class="comment">&lt;table&gt;</highlight></codeline>
<codeline lineno="432"><highlight class="comment">&lt;tr&gt;&lt;td&gt;&lt;em&gt;out&lt;/em&gt;<sp/>:&lt;/td&gt;&lt;td&gt;contains<sp/>filtered<sp/>data.&lt;/td&gt;&lt;/tr&gt;</highlight></codeline>
<codeline lineno="433"><highlight class="comment">&lt;/table&gt;</highlight></codeline>
<codeline lineno="434"><highlight class="comment"></highlight></codeline>
<codeline lineno="435"><highlight class="comment">&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="436"><highlight class="comment"></highlight></codeline>
<codeline lineno="437"><highlight class="comment">E.g.<sp/>with<sp/>a<sp/>solution-dependent<sp/>adaptivity<sp/>cf.<sp/>[1],<sp/>by<sp/>updating<sp/>the<sp/>matrix<sp/>\f$<sp/>A=A(u)\f$</highlight></codeline>
<codeline lineno="438"><highlight class="comment">in<sp/>an<sp/>outer<sp/>loop:</highlight></codeline>
<codeline lineno="439"><highlight class="comment"></highlight></codeline>
<codeline lineno="440"><highlight class="comment">&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/tv_filter.hxx\&gt;</highlight></codeline>
<codeline lineno="441"><highlight class="comment"></highlight></codeline>
<codeline lineno="442"><highlight class="comment">\code<sp/></highlight></codeline>
<codeline lineno="443"><highlight class="comment">MultiArray&lt;2,double&gt;<sp/>data(Shape2(width,height));<sp/>//to<sp/>be<sp/>initialized</highlight></codeline>
<codeline lineno="444"><highlight class="comment">MultiArray&lt;2,double&gt;<sp/>out<sp/>(Shape2(width,height));</highlight></codeline>
<codeline lineno="445"><highlight class="comment">MultiArray&lt;2,double&gt;<sp/>weight(Shape2(width,height));<sp/><sp/>//to<sp/>be<sp/>initialized</highlight></codeline>
<codeline lineno="446"><highlight class="comment">MultiArray&lt;2,double&gt;<sp/>phi<sp/><sp/>(Shape2(width,height));</highlight></codeline>
<codeline lineno="447"><highlight class="comment">MultiArray&lt;2,double&gt;<sp/>alpha(Shape2(width,height));</highlight></codeline>
<codeline lineno="448"><highlight class="comment">MultiArray&lt;2,double&gt;<sp/>beta<sp/>(Shape2(width,height));<sp/></highlight></codeline>
<codeline lineno="449"><highlight class="comment">double<sp/>alpha0,beta0,sigma,rho,K;<sp/><sp/>//to<sp/>be<sp/>initialized</highlight></codeline>
<codeline lineno="450"><highlight class="comment">int<sp/>outer_steps,inner_steps;//to<sp/>be<sp/>initialized</highlight></codeline>
<codeline lineno="451"><highlight class="comment"></highlight></codeline>
<codeline lineno="452"><highlight class="comment">out=data;<sp/>//<sp/>data<sp/>serves<sp/>as<sp/>initial<sp/>value</highlight></codeline>
<codeline lineno="453"><highlight class="comment"></highlight></codeline>
<codeline lineno="454"><highlight class="comment">for<sp/>(int<sp/>i=0;i&lt;outer_steps;i++){</highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/><sp/>getAnisotropy(out,phi,alpha,beta,alpha0,beta0,sigma,rho,K);<sp/><sp/>//<sp/>sets<sp/>phi,<sp/>alpha,<sp/>beta</highlight></codeline>
<codeline lineno="456"><highlight class="comment"><sp/><sp/>anisotropicTotalVariationFilter(data,weight,phi,alpha,beta,out,inner_steps);</highlight></codeline>
<codeline lineno="457"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="459"><highlight class="comment"></highlight></codeline>
<codeline lineno="460"><highlight class="comment">[1]<sp/>Frank<sp/>Lenzen,<sp/>Florian<sp/>Becker,<sp/>Jan<sp/>Lellmann,<sp/>Stefania<sp/>Petra<sp/>and<sp/>Christoph<sp/>Schn&amp;ouml;rr,<sp/>A<sp/>Class<sp/>of<sp/>Quasi-Variational<sp/>Inequalities<sp/>for<sp/>Adaptive<sp/>Image<sp/>Denoising<sp/>and<sp/>Decomposition,<sp/>Computational<sp/>Optimization<sp/>and<sp/>Applications,<sp/>Springer,<sp/>2012.</highlight></codeline>
<codeline lineno="461"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal">doxygen_overloaded_function(template<sp/>&lt;...&gt;<sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__NonLinearDiffusion_1gab03d88e6a6ccf3dd060534d58b8db5b8" kindref="member" tooltip="Performs Anisotropic Total Variation Regularization.">anisotropicTotalVariationFilter</ref>)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e1,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e2,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e3,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e4,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e5,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e6&gt;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__NonLinearDiffusion_1gab03d88e6a6ccf3dd060534d58b8db5b8" kindref="member" tooltip="Performs Anisotropic Total Variation Regularization.">anisotropicTotalVariationFilter</ref>(MultiArrayView&lt;2,double,stride1&gt;<sp/>data,MultiArrayView&lt;2,double,stride2&gt;<sp/>weight,<sp/></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,double,stride3&gt;<sp/>phi,MultiArrayView&lt;2,double,stride4&gt;<sp/>alpha,</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,double,stride5&gt;<sp/>beta,MultiArrayView&lt;2,double,stride6&gt;<sp/>out,</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>steps){</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">multi_math;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>MultiArray&lt;2,double&gt;<sp/>temp1(data.shape()),temp2(data.shape()),vx(data.shape()),vy(data.shape()),u_bar(data.shape());</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>MultiArray&lt;2,double&gt;<sp/>rx(data.shape()),ry(data.shape());</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>Kernel1D&lt;double&gt;<sp/>Lx,LTx;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>Lx.initExplicitly(0,1)=1,-1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>=<sp/>Right<sp/>sided<sp/>finite<sp/>differences<sp/>for<sp/>d/dx<sp/>and<sp/>d/dy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>Lx.setBorderTreatment(BORDER_TREATMENT_REFLECT);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>with<sp/>hom.<sp/>Neumann<sp/>boundary<sp/>conditions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>LTx.initExplicitly(-1,0)=-1,1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>=<sp/>Left<sp/>sided<sp/>finite<sp/>differences<sp/>for<sp/>-d/dx<sp/><sp/>and<sp/>-d/dy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>LTx.setBorderTreatment(BORDER_TREATMENT_ZEROPAD);<sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>with<sp/>hom.<sp/>Dirichlet<sp/>b.<sp/>c.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>u_bar=out;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m=0;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y=0;y&lt;data.shape(1);y++){</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x=0;x&lt;data.shape(0);x++){</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m=<ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">std::max</ref>(m,alpha(x,y));</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m=<ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">std::max</ref>(m,beta<sp/>(x,y));</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>m=<ref refid="group__TinyVectorOperators_1ga22d93f30188e8ad29c37bd614b26b510" kindref="member" tooltip="element-wise minimum">std::min</ref>(m,1.);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tau=.1/m/<ref refid="group__FixedPointOperations_1ga22d75753836176f3d172f58be11ecc4c" kindref="member" tooltip="square root.">std::sqrt</ref>(8.)*0.06;<sp/><sp/></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma=.1/m/<ref refid="group__FixedPointOperations_1ga22d75753836176f3d172f58be11ecc4c" kindref="member" tooltip="square root.">std::sqrt</ref>(8.)/0.06;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;steps;i++){</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1ga34459275af4134198dfc1a75c9993848" kindref="member" tooltip="Performs a 1 dimensional convolution in x direction.">separableConvolveX</ref>(srcImageRange(u_bar),destImage(temp1),kernel1d(Lx));</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>vx+=(sigma*temp1);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1gaee4f7ee32121e37112a20f5fb8ad4610" kindref="member" tooltip="Performs a 1 dimensional convolution in y direction.">separableConvolveY</ref>(srcImageRange(u_bar),destImage(temp1),kernel1d(Lx));</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>vy+=(sigma*temp1);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//project<sp/>to<sp/>constraint<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y=0;y&lt;data.shape(1);y++){</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x=0;x&lt;data.shape(0);x++){</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e1,e2,skp1,skp2;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e1=<ref refid="group__LinearAlgebraFunctions_1ga05727ffc201ac332c0e4158a2267c08c" kindref="member">std::cos</ref>(phi(x,y));</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e2=<ref refid="group__LinearAlgebraFunctions_1ga9db90484f9146df72b800bab7fecdd4b" kindref="member">std::sin</ref>(phi(x,y));</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skp1=vx(x,y)*e1+vy(x,y)*e2;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skp2=vx(x,y)*(-e2)+vy(x,y)*e1;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra::detail::projectEllipse2D<sp/>(skp1,skp2,alpha(x,y),beta(x,y),0.001,100);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vx(x,y)=skp1*e1-skp2*e2;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vy(x,y)=skp1*e2+skp2*e1;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1ga34459275af4134198dfc1a75c9993848" kindref="member" tooltip="Performs a 1 dimensional convolution in x direction.">separableConvolveX</ref>(srcImageRange(vx),destImage(temp1),kernel1d(LTx));</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1gaee4f7ee32121e37112a20f5fb8ad4610" kindref="member" tooltip="Performs a 1 dimensional convolution in y direction.">separableConvolveY</ref>(srcImageRange(vy),destImage(temp2),kernel1d(LTx));</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>u_bar=out;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>out-=tau*(weight*(out-data)+(temp1+temp2));</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>u_bar=2*out-u_bar;<sp/><sp/><sp/></highlight><highlight class="comment">//cf.<sp/>Chambolle/Pock<sp/>and<sp/>Popov&apos;s<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/>secondOrderTotalVariationFilter<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="531"><highlight class="comment">/**<sp/>\brief<sp/>Performs<sp/>Anisotropic<sp/>Total<sp/>Variation<sp/>Regularization</highlight></codeline>
<codeline lineno="532"><highlight class="comment"></highlight></codeline>
<codeline lineno="533"><highlight class="comment">The<sp/>algorithm<sp/>minimizes</highlight></codeline>
<codeline lineno="534"><highlight class="comment"></highlight></codeline>
<codeline lineno="535"><highlight class="comment">\f[</highlight></codeline>
<codeline lineno="536"><highlight class="comment">\min_u<sp/>\int_\Omega<sp/>\frac{1}{2}<sp/>(u-f)^2<sp/>+<sp/>\sqrt{\nabla<sp/>u^\top<sp/>A<sp/>\nabla<sp/>u}<sp/><sp/>+<sp/>\gamma<sp/>|Hu|_F\;dx<sp/>\qquad\qquad<sp/>(3)</highlight></codeline>
<codeline lineno="537"><highlight class="comment">\f]</highlight></codeline>
<codeline lineno="538"><highlight class="comment">where<sp/>&lt;em&gt;<sp/>\f$<sp/>f=f(x)\f$<sp/>&lt;/em&gt;<sp/>are<sp/>the<sp/>noisy<sp/>data,<sp/>&lt;em&gt;<sp/>\f$<sp/>u=u(x)\f$<sp/>&lt;/em&gt;<sp/>are<sp/>the<sp/>smoothed<sp/>data,&lt;em&gt;\f$<sp/>\nabla<sp/>u<sp/>\f$<sp/>&lt;/em&gt;</highlight></codeline>
<codeline lineno="539"><highlight class="comment">is<sp/>the<sp/>image<sp/>gradient<sp/>in<sp/>the<sp/>sense<sp/>of<sp/>Total<sp/>Variation,<sp/>&lt;em&gt;\f$<sp/>A<sp/>\f$<sp/>&lt;/em&gt;<sp/>is<sp/>a<sp/>locally<sp/>varying<sp/></highlight></codeline>
<codeline lineno="540"><highlight class="comment">symmetric,<sp/>positive-definite<sp/><sp/>2x2<sp/>matrix<sp/>and<sp/>&lt;em&gt;\f$<sp/>|Hu|_F<sp/>\f$&lt;/em&gt;<sp/>is<sp/>the<sp/>Frobenius<sp/>norm<sp/>of<sp/>the<sp/>Hessian<sp/>of<sp/>\f$<sp/>u<sp/>\f$.</highlight></codeline>
<codeline lineno="541"><highlight class="comment"></highlight></codeline>
<codeline lineno="542"><highlight class="comment">Matrix<sp/>&lt;em&gt;\f$<sp/>A<sp/>\f$<sp/>&lt;/em&gt;<sp/>is<sp/>described<sp/>by<sp/>providing<sp/><sp/>for<sp/>each<sp/>data<sp/>point<sp/>a<sp/>normalized<sp/>eigenvector<sp/>(via<sp/>angle<sp/>\f$<sp/>\phi<sp/>\f$)</highlight></codeline>
<codeline lineno="543"><highlight class="comment">and<sp/>two<sp/>eigenvalues<sp/>\f$<sp/>\alpha&gt;0<sp/>\f$<sp/>and<sp/>\f$<sp/>\beta&gt;0<sp/>\f$.</highlight></codeline>
<codeline lineno="544"><highlight class="comment">\ref<sp/>getAnisotropy()<sp/>can<sp/>be<sp/>use<sp/>to<sp/>set<sp/>up<sp/>such<sp/>data<sp/>\f$<sp/>\phi,\alpha,<sp/>\beta<sp/>\f$<sp/>by<sp/>providing<sp/>a<sp/>vector<sp/>field<sp/>normal<sp/>to<sp/>edges.</highlight></codeline>
<codeline lineno="545"><highlight class="comment"></highlight></codeline>
<codeline lineno="546"><highlight class="comment">\f$<sp/>\gamma&gt;0<sp/>\f$<sp/>is<sp/>the<sp/>locally<sp/>varying<sp/>regularization<sp/>parameter<sp/>for<sp/>second<sp/>order.</highlight></codeline>
<codeline lineno="547"><highlight class="comment"></highlight></codeline>
<codeline lineno="548"><highlight class="comment">&lt;b&gt;<sp/>Declarations:&lt;/b&gt;</highlight></codeline>
<codeline lineno="549"><highlight class="comment"></highlight></codeline>
<codeline lineno="550"><highlight class="comment">\code</highlight></codeline>
<codeline lineno="551"><highlight class="comment">namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/><sp/>template<sp/>&lt;class<sp/>stride1,class<sp/>stride2,...,class<sp/>stride9&gt;</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/><sp/>void<sp/>secondOrderTotalVariationFilter(MultiArrayView&lt;2,double,stride1&gt;<sp/>data,<sp/></highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,double,stride2&gt;<sp/>weight,</highlight></codeline>
<codeline lineno="555"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,double,stride3&gt;<sp/>phi,</highlight></codeline>
<codeline lineno="556"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,double,stride4&gt;<sp/>alpha,</highlight></codeline>
<codeline lineno="557"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,double,stride5&gt;<sp/>beta,</highlight></codeline>
<codeline lineno="558"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,double,stride6&gt;<sp/>gamma,</highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,double,stride7&gt;<sp/>xedges,</highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,double,stride8&gt;<sp/>yedges,</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,double,stride9&gt;<sp/>out,</highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>steps);</highlight></codeline>
<codeline lineno="563"><highlight class="comment">}</highlight></codeline>
<codeline lineno="564"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="565"><highlight class="comment"></highlight></codeline>
<codeline lineno="566"><highlight class="comment">\ref<sp/>secondOrderTotalVariationFilter()<sp/>implements<sp/>a<sp/>primal-dual<sp/>algorithm<sp/>to<sp/>solve<sp/>(3).</highlight></codeline>
<codeline lineno="567"><highlight class="comment"></highlight></codeline>
<codeline lineno="568"><highlight class="comment">Input:</highlight></codeline>
<codeline lineno="569"><highlight class="comment">&lt;table&gt;</highlight></codeline>
<codeline lineno="570"><highlight class="comment">&lt;tr&gt;&lt;td&gt;&lt;em&gt;data&lt;/em&gt;:<sp/>&lt;/td&gt;&lt;td&gt;<sp/>the<sp/>input<sp/>data<sp/>to<sp/>be<sp/>filtered.<sp/>&lt;/td&gt;&lt;/tr&gt;</highlight></codeline>
<codeline lineno="571"><highlight class="comment">&lt;tr&gt;&lt;td&gt;&lt;em&gt;steps&lt;/em&gt;<sp/>:<sp/>&lt;/td&gt;&lt;td&gt;<sp/>number<sp/>of<sp/>iteration<sp/>steps.&lt;/td&gt;&lt;/tr&gt;</highlight></codeline>
<codeline lineno="572"><highlight class="comment">&lt;tr&gt;&lt;td&gt;&lt;em&gt;out&lt;/em&gt;<sp/>:<sp/>&lt;/td&gt;&lt;td&gt;contains<sp/>the<sp/>filtered<sp/>data.&lt;/td&gt;&lt;/tr&gt;</highlight></codeline>
<codeline lineno="573"><highlight class="comment">&lt;tr&gt;&lt;td&gt;&lt;em&gt;weight&lt;/em&gt;<sp/>:<sp/>&lt;/td&gt;&lt;td&gt;<sp/>point-wise<sp/>weight<sp/>(\f$<sp/>\ge<sp/>0\f$<sp/>)<sp/>for<sp/>the<sp/>data<sp/>term.&lt;/td&gt;&lt;/tr&gt;</highlight></codeline>
<codeline lineno="574"><highlight class="comment">&lt;tr&gt;&lt;td&gt;&lt;em&gt;phi&lt;/em&gt;,&lt;em&gt;alpha&lt;/em&gt;,&lt;em&gt;beta&lt;/em&gt;:<sp/>&lt;/td&gt;&lt;td&gt;<sp/>describe<sp/>matrix<sp/>\f$<sp/>A\f$,<sp/>see<sp/>above.&lt;/td&gt;&lt;/tr&gt;</highlight></codeline>
<codeline lineno="575"><highlight class="comment">&lt;tr&gt;&lt;td&gt;&lt;em&gt;<sp/>xedges<sp/>&lt;/em&gt;<sp/>and<sp/>&lt;em&gt;<sp/>yedges<sp/>&lt;/em&gt;:<sp/>&lt;/td&gt;&lt;td&gt;<sp/>binary<sp/>arrays<sp/>indicating<sp/>the</highlight></codeline>
<codeline lineno="576"><highlight class="comment">presence<sp/>of<sp/>horizontal<sp/>(between<sp/>(x,y)<sp/>and<sp/>(x+1,y))<sp/>and<sp/>vertical<sp/>edges<sp/>(between<sp/>(x,y)<sp/>and<sp/>(x,y+1)).<sp/></highlight></codeline>
<codeline lineno="577"><highlight class="comment">These<sp/>data<sp/>are<sp/>considered<sp/>in<sp/>the<sp/>calculation<sp/>of<sp/>\f$<sp/>Hu\f$,<sp/>such<sp/>that</highlight></codeline>
<codeline lineno="578"><highlight class="comment">finite<sp/>differences<sp/>across<sp/>edges<sp/>are<sp/>artificially<sp/>set<sp/>to<sp/>zero<sp/>to<sp/>avoid<sp/>second<sp/>order<sp/>smoothing<sp/>over<sp/>edges.&lt;/td&gt;&lt;/tr&gt;</highlight></codeline>
<codeline lineno="579"><highlight class="comment">&lt;/table&gt;</highlight></codeline>
<codeline lineno="580"><highlight class="comment"></highlight></codeline>
<codeline lineno="581"><highlight class="comment">&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="582"><highlight class="comment"></highlight></codeline>
<codeline lineno="583"><highlight class="comment">E.g.<sp/>with<sp/>a<sp/>solution-dependent<sp/>adaptivity<sp/>(cf.[1]),<sp/>by<sp/>updating<sp/>the<sp/>matrix<sp/>\f$<sp/>A=A(u)\f$</highlight></codeline>
<codeline lineno="584"><highlight class="comment">in<sp/>an<sp/>outer<sp/>loop:</highlight></codeline>
<codeline lineno="585"><highlight class="comment"></highlight></codeline>
<codeline lineno="586"><highlight class="comment">&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/tv_filter.hxx\&gt;</highlight></codeline>
<codeline lineno="587"><highlight class="comment"></highlight></codeline>
<codeline lineno="588"><highlight class="comment">\code<sp/></highlight></codeline>
<codeline lineno="589"><highlight class="comment">MultiArray&lt;2,double&gt;<sp/>data(Shape2(width,height));<sp/>//to<sp/>be<sp/>initialized</highlight></codeline>
<codeline lineno="590"><highlight class="comment">MultiArray&lt;2,double&gt;<sp/>out(Shape2(width,height));</highlight></codeline>
<codeline lineno="591"><highlight class="comment">MultiArray&lt;2,double&gt;<sp/>weight(Shape2(width,height)));<sp/>//to<sp/>be<sp/>initialized</highlight></codeline>
<codeline lineno="592"><highlight class="comment">MultiArray&lt;2,double&gt;<sp/>phi(Shape2(width,height);</highlight></codeline>
<codeline lineno="593"><highlight class="comment">MultiArray&lt;2,double&gt;<sp/>alpha(Shape2(width,height);</highlight></codeline>
<codeline lineno="594"><highlight class="comment">MultiArray&lt;2,double&gt;<sp/>beta(Shape2(width,height));<sp/></highlight></codeline>
<codeline lineno="595"><highlight class="comment">MultiArray&lt;2,double&gt;<sp/>gamma(Shape2(width,height));<sp/><sp/>//to<sp/>be<sp/>initialized</highlight></codeline>
<codeline lineno="596"><highlight class="comment">MultiArray&lt;2,double&gt;<sp/>xedges(Shape2(width,height));<sp/><sp/>//to<sp/>be<sp/>initialized</highlight></codeline>
<codeline lineno="597"><highlight class="comment">MultiArray&lt;2,double&gt;<sp/>yedges(Shape2(width,height));<sp/><sp/>//to<sp/>be<sp/>initialized</highlight></codeline>
<codeline lineno="598"><highlight class="comment"></highlight></codeline>
<codeline lineno="599"><highlight class="comment"></highlight></codeline>
<codeline lineno="600"><highlight class="comment">double<sp/>alpha0,beta0,sigma,rho,K;<sp/><sp/>//to<sp/>be<sp/>initialized</highlight></codeline>
<codeline lineno="601"><highlight class="comment">int<sp/>outer_steps,inner_steps;//to<sp/>be<sp/>initialized</highlight></codeline>
<codeline lineno="602"><highlight class="comment"></highlight></codeline>
<codeline lineno="603"><highlight class="comment">out=data;<sp/>//<sp/>data<sp/>serves<sp/>as<sp/>initial<sp/>value</highlight></codeline>
<codeline lineno="604"><highlight class="comment"></highlight></codeline>
<codeline lineno="605"><highlight class="comment">for<sp/>(int<sp/>i=0;i&lt;outer_steps;i++){</highlight></codeline>
<codeline lineno="606"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="607"><highlight class="comment"><sp/><sp/>getAnisotropy(out,phi,alpha,beta,alpha0,beta0,sigma,rho,K);<sp/><sp/>//<sp/>sets<sp/>phi,<sp/>alpha,<sp/>beta</highlight></codeline>
<codeline lineno="608"><highlight class="comment"><sp/><sp/>secondOrderTotalVariationFilter(data,weight,phi,alpha,beta,gamma,xedges,yedges,out,inner_steps);</highlight></codeline>
<codeline lineno="609"><highlight class="comment">}</highlight></codeline>
<codeline lineno="610"><highlight class="comment">\endcode</highlight></codeline>
<codeline lineno="611"><highlight class="comment"></highlight></codeline>
<codeline lineno="612"><highlight class="comment"></highlight></codeline>
<codeline lineno="613"><highlight class="comment">[1]<sp/>Frank<sp/>Lenzen,<sp/>Florian<sp/>Becker,<sp/>Jan<sp/>Lellmann,<sp/>Stefania<sp/>Petra<sp/>and<sp/>Christoph<sp/>Schn&amp;ouml;rr,<sp/>A<sp/>Class<sp/>of<sp/>Quasi-Variational<sp/>Inequalities<sp/>for<sp/>Adaptive<sp/>Image<sp/>Denoising<sp/>and<sp/>Decomposition,<sp/>Computational<sp/>Optimization<sp/>and<sp/>Applications,<sp/>Springer,<sp/>2012.</highlight></codeline>
<codeline lineno="614"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal">doxygen_overloaded_function(template<sp/>&lt;...&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__NonLinearDiffusion_1ga80e6e77f9e1a94080a3791981bb4fc0c" kindref="member" tooltip="Performs Anisotropic Total Variation Regularization.">secondOrderTotalVariationFilter</ref>)</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e1,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e2,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e3,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e4,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e5,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e6,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e7,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e8,</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e9&gt;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__NonLinearDiffusion_1ga80e6e77f9e1a94080a3791981bb4fc0c" kindref="member" tooltip="Performs Anisotropic Total Variation Regularization.">secondOrderTotalVariationFilter</ref>(MultiArrayView&lt;2,double,stride1&gt;<sp/>data,<sp/></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,double,stride2&gt;<sp/>weight,MultiArrayView&lt;2,double,stride3&gt;<sp/>phi,</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,double,stride4&gt;<sp/>alpha,MultiArrayView&lt;2,double,stride5&gt;<sp/>beta,</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,double,stride6&gt;<sp/><ref refid="group__MathFunctions_1ga441c9e4bf9f952c0fe94836634bcf976" kindref="member">gamma</ref>,</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,double,stride7&gt;<sp/>xedges,MultiArrayView&lt;2,double,stride8&gt;<sp/>yedges,</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,double,stride9&gt;<sp/>out,</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>steps){</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">multi_math;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>MultiArray&lt;2,double&gt;<sp/>temp1(data.shape()),temp2(data.shape()),vx(data.shape()),vy(data.shape()),u_bar(data.shape());</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/>MultiArray&lt;2,double&gt;<sp/>rx(data.shape()),ry(data.shape());</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>MultiArray&lt;2,double&gt;<sp/>wx(data.shape()),wy(data.shape()),wz(data.shape());</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/>Kernel1D&lt;double&gt;<sp/>Lx,LTx;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/>Lx.initExplicitly(0,1)=1,-1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>=<sp/>Right<sp/>sided<sp/>finite<sp/>differences<sp/>for<sp/>d/dx<sp/>and<sp/>d/dy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/>Lx.setBorderTreatment(BORDER_TREATMENT_REFLECT);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>with<sp/>hom.<sp/>Neumann<sp/>boundary<sp/>conditions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/>LTx.initExplicitly(-1,0)=-1,1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>=<sp/>Left<sp/>sided<sp/>finite<sp/>differences<sp/>for<sp/>-d/dx<sp/><sp/>and<sp/>-d/dy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/>LTx.setBorderTreatment(BORDER_TREATMENT_ZEROPAD);<sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>with<sp/>hom.<sp/>Dirichlet<sp/>b.<sp/>c.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/>u_bar=out;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m=0;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y=0;y&lt;data.shape(1);y++){</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x=0;x&lt;data.shape(0);x++){</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m=<ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">std::max</ref>(m,alpha(x,y));</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m=<ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">std::max</ref>(m,beta<sp/>(x,y));</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/>m=<ref refid="group__TinyVectorOperators_1ga5bc03ab0e1ce5b0a6560bcb19d6b3a66" kindref="member" tooltip="element-wise maximum">std::max</ref>(m,1.);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tau=.1/m;</highlight><highlight class="comment">//std::sqrt(8)*0.06;<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma=.1;</highlight><highlight class="comment">//m;/std::sqrt(8)/0.06;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;steps;i++){</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1ga34459275af4134198dfc1a75c9993848" kindref="member" tooltip="Performs a 1 dimensional convolution in x direction.">separableConvolveX</ref>(srcImageRange(u_bar),destImage(temp1),kernel1d(Lx));</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>vx+=(sigma*temp1);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1gaee4f7ee32121e37112a20f5fb8ad4610" kindref="member" tooltip="Performs a 1 dimensional convolution in y direction.">separableConvolveY</ref>(srcImageRange(u_bar),destImage(temp1),kernel1d(Lx));</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>vy+=(sigma*temp1);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>wx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1ga34459275af4134198dfc1a75c9993848" kindref="member" tooltip="Performs a 1 dimensional convolution in x direction.">separableConvolveX</ref>(srcImageRange(u_bar),destImage(temp1),kernel1d(Lx));</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>temp1*=xedges;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1ga34459275af4134198dfc1a75c9993848" kindref="member" tooltip="Performs a 1 dimensional convolution in x direction.">separableConvolveX</ref>(srcImageRange(temp1),destImage(temp2),kernel1d(LTx));</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>wx-=sigma*temp2;</highlight><highlight class="comment">//(-Lx&apos;*(xedges.*(Lx*u)));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//update<sp/>wy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1gaee4f7ee32121e37112a20f5fb8ad4610" kindref="member" tooltip="Performs a 1 dimensional convolution in y direction.">separableConvolveY</ref>(srcImageRange(u_bar),destImage(temp1),kernel1d(Lx));</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>temp1*=yedges;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1gaee4f7ee32121e37112a20f5fb8ad4610" kindref="member" tooltip="Performs a 1 dimensional convolution in y direction.">separableConvolveY</ref>(srcImageRange(temp1),destImage(temp2),kernel1d(LTx));</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>wy-=sigma*temp2;</highlight><highlight class="comment">//(-Ly&apos;*(yedges.*(Ly*u)));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//update<sp/>wz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>(VIGRA_MIXED_2ND_DERIVATIVES)</highlight></codeline>
<codeline lineno="675"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1gaee4f7ee32121e37112a20f5fb8ad4610" kindref="member" tooltip="Performs a 1 dimensional convolution in y direction.">separableConvolveY</ref>(srcImageRange(u_bar),destImage(temp1),kernel1d(Lx));</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>temp1*=yedges;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1ga34459275af4134198dfc1a75c9993848" kindref="member" tooltip="Performs a 1 dimensional convolution in x direction.">separableConvolveX</ref>(srcImageRange(temp1),destImage(temp2),kernel1d(LTx));</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>wz-=sigma*temp2;</highlight><highlight class="comment">//-Lx&apos;*(yedges.*(Ly*u))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1ga34459275af4134198dfc1a75c9993848" kindref="member" tooltip="Performs a 1 dimensional convolution in x direction.">separableConvolveX</ref>(srcImageRange(u_bar),destImage(temp1),kernel1d(Lx));</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>temp1*=xedges;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1gaee4f7ee32121e37112a20f5fb8ad4610" kindref="member" tooltip="Performs a 1 dimensional convolution in y direction.">separableConvolveY</ref>(srcImageRange(temp1),destImage(temp2),kernel1d(LTx));</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>wz-=sigma*temp2;</highlight><highlight class="comment">//-Ly&apos;*(xedges.*(Lx*u)));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="686"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//project<sp/>to<sp/>constraint<sp/>sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y=0;y&lt;data.shape(1);y++){</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x=0;x&lt;data.shape(0);x++){</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e1,e2,skp1,skp2;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//project<sp/>v</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e1=<ref refid="group__LinearAlgebraFunctions_1ga05727ffc201ac332c0e4158a2267c08c" kindref="member">std::cos</ref>(phi(x,y));</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e2=<ref refid="group__LinearAlgebraFunctions_1ga9db90484f9146df72b800bab7fecdd4b" kindref="member">std::sin</ref>(phi(x,y));</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skp1=vx(x,y)*e1+vy(x,y)*e2;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skp2=vx(x,y)*(-e2)+vy(x,y)*e1;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra::detail::projectEllipse2D<sp/>(skp1,skp2,alpha(x,y),beta(x,y),0.001,100);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vx(x,y)=skp1*e1-skp2*e2;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vy(x,y)=skp1*e2+skp2*e1;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//project<sp/>w</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>l=<ref refid="group__FixedPointOperations_1ga22d75753836176f3d172f58be11ecc4c" kindref="member" tooltip="square root.">sqrt</ref>(wx(x,y)*wx(x,y)+wy(x,y)*wy(x,y)+wz(x,y)*wz(x,y));</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l&gt;<ref refid="group__MathFunctions_1ga441c9e4bf9f952c0fe94836634bcf976" kindref="member">gamma</ref>(x,y)){</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wx(x,y)=<ref refid="group__MathFunctions_1ga441c9e4bf9f952c0fe94836634bcf976" kindref="member">gamma</ref>(x,y)*wx(x,y)/l;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wy(x,y)=<ref refid="group__MathFunctions_1ga441c9e4bf9f952c0fe94836634bcf976" kindref="member">gamma</ref>(x,y)*wy(x,y)/l;<sp/><sp/></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>(VIGRA_MIXED_2ND_DERIVATIVES)</highlight></codeline>
<codeline lineno="708"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wz(x,y)=<ref refid="group__MathFunctions_1ga441c9e4bf9f952c0fe94836634bcf976" kindref="member">gamma</ref>(x,y)*wz(x,y)/l;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="710"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1ga34459275af4134198dfc1a75c9993848" kindref="member" tooltip="Performs a 1 dimensional convolution in x direction.">separableConvolveX</ref>(srcImageRange(vx),destImage(temp1),kernel1d(LTx));</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1gaee4f7ee32121e37112a20f5fb8ad4610" kindref="member" tooltip="Performs a 1 dimensional convolution in y direction.">separableConvolveY</ref>(srcImageRange(vy),destImage(temp2),kernel1d(LTx));</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>u_bar=out;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>out-=tau*(weight*(out-data)+temp1+temp2);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>wx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1ga34459275af4134198dfc1a75c9993848" kindref="member" tooltip="Performs a 1 dimensional convolution in x direction.">separableConvolveX</ref>(srcImageRange(wx),destImage(temp1),kernel1d(Lx));</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>temp1*=xedges;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1ga34459275af4134198dfc1a75c9993848" kindref="member" tooltip="Performs a 1 dimensional convolution in x direction.">separableConvolveX</ref>(srcImageRange(temp1),destImage(temp2),kernel1d(LTx));</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>out+=tau*temp2;<sp/></highlight><highlight class="comment">//<sp/>(-1)^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//update<sp/>wy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1gaee4f7ee32121e37112a20f5fb8ad4610" kindref="member" tooltip="Performs a 1 dimensional convolution in y direction.">separableConvolveY</ref>(srcImageRange(wy),destImage(temp1),kernel1d(Lx));</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>temp1*=yedges;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1gaee4f7ee32121e37112a20f5fb8ad4610" kindref="member" tooltip="Performs a 1 dimensional convolution in y direction.">separableConvolveY</ref>(srcImageRange(temp1),destImage(temp2),kernel1d(LTx));</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>out+=tau*temp2;<sp/></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//update<sp/>wz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>(VIGRA_MIXED_2ND_DERIVATIVES)</highlight></codeline>
<codeline lineno="736"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1gaee4f7ee32121e37112a20f5fb8ad4610" kindref="member" tooltip="Performs a 1 dimensional convolution in y direction.">separableConvolveY</ref>(srcImageRange(wz),destImage(temp1),kernel1d(Lx));</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>temp1*=yedges;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1ga34459275af4134198dfc1a75c9993848" kindref="member" tooltip="Performs a 1 dimensional convolution in x direction.">separableConvolveX</ref>(srcImageRange(temp1),destImage(temp2),kernel1d(LTx));</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>out+=tau*temp2;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1ga34459275af4134198dfc1a75c9993848" kindref="member" tooltip="Performs a 1 dimensional convolution in x direction.">separableConvolveX</ref>(srcImageRange(wz),destImage(temp1),kernel1d(Lx));</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>temp1*=xedges;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SeparableConvolution_1gaee4f7ee32121e37112a20f5fb8ad4610" kindref="member" tooltip="Performs a 1 dimensional convolution in y direction.">separableConvolveY</ref>(srcImageRange(temp1),destImage(temp2),kernel1d(LTx));</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>out+=tau*temp2;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="748"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>u_bar=2*out-u_bar;<sp/><sp/><sp/></highlight><highlight class="comment">//cf.<sp/>Chambolle/Pock<sp/>and<sp/>Popov&apos;s<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="754"><highlight class="comment">//@}</highlight></codeline>
<codeline lineno="755"><highlight class="comment"></highlight><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>closing<sp/>namespace<sp/>vigra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>VIGRA_TV_FILTER_HXX</highlight></codeline>
    </programlisting>
    <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/tv_filter.hxx"/>
  </compounddef>
</doxygen>
