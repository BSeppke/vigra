<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="group__MachineLearning" kind="group">
    <compoundname>MachineLearning</compoundname>
    <title>Machine Learning</title>
    <innerclass refid="classvigra_1_1rf_1_1visitors_1_1CompleteOOBInfo" prot="public">vigra::rf::visitors::CompleteOOBInfo</innerclass>
    <innerclass refid="classvigra_1_1rf_1_1visitors_1_1CorrelationVisitor" prot="public">vigra::rf::visitors::CorrelationVisitor</innerclass>
    <innerclass refid="structvigra_1_1rf_1_1visitors_1_1OnlineLearnVisitor_1_1MarginalDistribution" prot="public">vigra::rf::visitors::OnlineLearnVisitor::MarginalDistribution</innerclass>
    <innerclass refid="classvigra_1_1rf_1_1visitors_1_1OnlineLearnVisitor" prot="public">vigra::rf::visitors::OnlineLearnVisitor</innerclass>
    <innerclass refid="classvigra_1_1rf_1_1visitors_1_1OOB__Error" prot="public">vigra::rf::visitors::OOB_Error</innerclass>
    <innerclass refid="classvigra_1_1rf_1_1visitors_1_1OOB__PerTreeError" prot="public">vigra::rf::visitors::OOB_PerTreeError</innerclass>
    <innerclass refid="classvigra_1_1PoissonSampler" prot="public">vigra::PoissonSampler</innerclass>
    <innerclass refid="classvigra_1_1ProblemSpec" prot="public">vigra::ProblemSpec</innerclass>
    <innerclass refid="classvigra_1_1RandomForest" prot="public">vigra::RandomForest</innerclass>
    <innerclass refid="classvigra_1_1RandomForestDeprec" prot="public">vigra::RandomForestDeprec</innerclass>
    <innerclass refid="classvigra_1_1RandomForestOptions" prot="public">vigra::RandomForestOptions</innerclass>
    <innerclass refid="classvigra_1_1RandomForestOptionsDeprec" prot="public">vigra::RandomForestOptionsDeprec</innerclass>
    <innerclass refid="classvigra_1_1rf_1_1visitors_1_1RandomForestProgressVisitor" prot="public">vigra::rf::visitors::RandomForestProgressVisitor</innerclass>
    <innerclass refid="classvigra_1_1Sampler" prot="public">vigra::Sampler</innerclass>
    <innerclass refid="classvigra_1_1SamplerOptions" prot="public">vigra::SamplerOptions</innerclass>
    <innerclass refid="classvigra_1_1rf_1_1visitors_1_1StopVisiting" prot="public">vigra::rf::visitors::StopVisiting</innerclass>
    <innerclass refid="structvigra_1_1rf_1_1visitors_1_1OnlineLearnVisitor_1_1TreeOnlineInformation" prot="public">vigra::rf::visitors::OnlineLearnVisitor::TreeOnlineInformation</innerclass>
    <innerclass refid="classvigra_1_1rf_1_1visitors_1_1VariableImportanceVisitor" prot="public">vigra::rf::visitors::VariableImportanceVisitor</innerclass>
    <innerclass refid="classvigra_1_1rf_1_1visitors_1_1VisitorBase" prot="public">vigra::rf::visitors::VisitorBase</innerclass>
    <innerclass refid="classvigra_1_1rf_1_1visitors_1_1detail_1_1VisitorNode" prot="public">vigra::rf::visitors::detail::VisitorNode</innerclass>
    <innernamespace refid="namespacevigra_1_1rf_1_1visitors">vigra::rf::visitors</innernamespace>
    <innernamespace refid="namespacevigra_1_1rf_1_1visitors_1_1detail">vigra::rf::visitors::detail</innernamespace>
      <sectiondef kind="user-defined">
      <header>Learning</header>
      <description><para>Following functions differ in the degree of customization allowed </para></description>
      <memberdef kind="function" id="group__MachineLearning_1ga11157c680b4f47c5592d6695b5fbac05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class C1</type>
          </param>
          <param>
            <type>class U2</type>
          </param>
          <param>
            <type>class C2</type>
          </param>
          <param>
            <type>class Split_t</type>
          </param>
          <param>
            <type>class Stop_t</type>
          </param>
          <param>
            <type>class Visitor_t</type>
          </param>
          <param>
            <type>class Random_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void learn</definition>
        <argsstring>(MultiArrayView&lt; 2, U, C1 &gt; const &amp;features, MultiArrayView&lt; 2, U2, C2 &gt; const &amp;response, Visitor_t visitor, Split_t split, Stop_t stop, Random_t const &amp;random)</argsstring>
        <name>learn</name>
        <param>
          <type>MultiArrayView&lt; 2, U, C1 &gt; const &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>MultiArrayView&lt; 2, U2, C2 &gt; const &amp;</type>
          <declname>response</declname>
        </param>
        <param>
          <type>Visitor_t</type>
          <declname>visitor</declname>
        </param>
        <param>
          <type>Split_t</type>
          <declname>split</declname>
        </param>
        <param>
          <type>Stop_t</type>
          <declname>stop</declname>
        </param>
        <param>
          <type>Random_t const &amp;</type>
          <declname>random</declname>
        </param>
        <briefdescription>
<para>learn on data with custom config and random number generator </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>features</parametername>
</parameternamelist>
<parameterdescription>
<para>a N x M matrix containing N samples with M features </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>response</parametername>
</parameternamelist>
<parameterdescription>
<para>a N x D matrix containing the corresponding response. Current split functors assume D to be 1 and ignore any additional columns. This is not enforced to allow future support for uncertain labels, label independent strata etc. The Preprocessor specified during construction should be able to handle features and labels features and the labels. see also: SplitFunctor, Preprocessing</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>visitor</parametername>
</parameternamelist>
<parameterdescription>
<para>visitor which is to be applied after each split, tree and at the end. Use rf_default for using default value. (No Visitors) see also: <ref refid="namespacevigra_1_1rf_1_1visitors" kindref="compound">rf::visitors</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>split</parametername>
</parameternamelist>
<parameterdescription>
<para>split functor to be used to calculate each split use <ref refid="namespacevigra_1ae19ed2482e705ffa14000822902fc131" kindref="member">rf_default()</ref> for using default value. (GiniSplit) see also: <ref refid="namespacevigra_1_1rf_1_1split" kindref="compound">rf::split</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stop</parametername>
</parameternamelist>
<parameterdescription>
<para>predicate to be used to calculate each split use <ref refid="namespacevigra_1ae19ed2482e705ffa14000822902fc131" kindref="member">rf_default()</ref> for using default value. (<ref refid="classvigra_1_1EarlyStoppStd" kindref="compound">EarlyStoppStd</ref>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>random</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classvigra_1_1RandomNumberGenerator" kindref="compound">RandomNumberGenerator</ref> to be used. Use <ref refid="namespacevigra_1ae19ed2482e705ffa14000822902fc131" kindref="member">rf_default()</ref> to use default value.(RandomMT19337) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" line="464" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" bodystart="893" bodyend="996"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga05c80b7f7ca5fa44ed88fc627f465f5c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class C1</type>
          </param>
          <param>
            <type>class U2</type>
          </param>
          <param>
            <type>class C2</type>
          </param>
          <param>
            <type>class Split_t</type>
          </param>
          <param>
            <type>class Stop_t</type>
          </param>
          <param>
            <type>class Visitor_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void learn</definition>
        <argsstring>(MultiArrayView&lt; 2, U, C1 &gt; const &amp;features, MultiArrayView&lt; 2, U2, C2 &gt; const &amp;response, Visitor_t visitor, Split_t split, Stop_t stop)</argsstring>
        <name>learn</name>
        <param>
          <type>MultiArrayView&lt; 2, U, C1 &gt; const &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>MultiArrayView&lt; 2, U2, C2 &gt; const &amp;</type>
          <declname>response</declname>
        </param>
        <param>
          <type>Visitor_t</type>
          <declname>visitor</declname>
        </param>
        <param>
          <type>Split_t</type>
          <declname>split</declname>
        </param>
        <param>
          <type>Stop_t</type>
          <declname>stop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" line="477" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" bodystart="471" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1gaea1c7a3bf92fb7685a8add6194a835fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class C1</type>
          </param>
          <param>
            <type>class U2</type>
          </param>
          <param>
            <type>class C2</type>
          </param>
          <param>
            <type>class Visitor_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void learn</definition>
        <argsstring>(MultiArrayView&lt; 2, U, C1 &gt; const &amp;features, MultiArrayView&lt; 2, U2, C2 &gt; const &amp;labels, Visitor_t visitor)</argsstring>
        <name>learn</name>
        <param>
          <type>MultiArrayView&lt; 2, U, C1 &gt; const &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>MultiArrayView&lt; 2, U2, C2 &gt; const &amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>Visitor_t</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" line="491" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" bodystart="488" bodyend="497"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga8119c7a745c08e7f855090749755377d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class C1</type>
          </param>
          <param>
            <type>class U2</type>
          </param>
          <param>
            <type>class C2</type>
          </param>
          <param>
            <type>class Visitor_t</type>
          </param>
          <param>
            <type>class Split_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void learn</definition>
        <argsstring>(MultiArrayView&lt; 2, U, C1 &gt; const &amp;features, MultiArrayView&lt; 2, U2, C2 &gt; const &amp;labels, Visitor_t visitor, Split_t split)</argsstring>
        <name>learn</name>
        <param>
          <type>MultiArrayView&lt; 2, U, C1 &gt; const &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>MultiArrayView&lt; 2, U2, C2 &gt; const &amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>Visitor_t</type>
          <declname>visitor</declname>
        </param>
        <param>
          <type>Split_t</type>
          <declname>split</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" line="505" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" bodystart="501" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1gae480948c60eee838463b03a4593ee507" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class C1</type>
          </param>
          <param>
            <type>class U2</type>
          </param>
          <param>
            <type>class C2</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void learn</definition>
        <argsstring>(MultiArrayView&lt; 2, U, C1 &gt; const &amp;features, MultiArrayView&lt; 2, U2, C2 &gt; const &amp;labels)</argsstring>
        <name>learn</name>
        <param>
          <type>MultiArrayView&lt; 2, U, C1 &gt; const &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>MultiArrayView&lt; 2, U2, C2 &gt; const &amp;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
<para>learn on data with default configuration </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>features</parametername>
</parameternamelist>
<parameterdescription>
<para>a N x M matrix containing N samples with M features </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>labels</parametername>
</parameternamelist>
<parameterdescription>
<para>a N x D matrix containing the corresponding N labels. Current split functors assume D to be 1 and ignore any additional columns. this is not enforced to allow future support for uncertain labels.</para></parameterdescription>
</parameteritem>
</parameterlist>
learning is done with:</para><para><simplesect kind="see"><para><ref refid="namespacevigra_1_1rf_1_1split" kindref="compound">rf::split</ref>, <ref refid="classvigra_1_1EarlyStoppStd" kindref="compound">EarlyStoppStd</ref></para></simplesect>
<itemizedlist>
<listitem><para>Randomly seeded random number generator</para></listitem><listitem><para>default gini split functor as described by Breiman</para></listitem><listitem><para>default The standard early stopping criterion </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" line="534" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" bodystart="532" bodyend="540"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>prediction</header>
      <memberdef kind="function" id="group__MachineLearning_1gaf79cd1eb1287d9d26dd90be5cb971645" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class C</type>
          </param>
          <param>
            <type>class Stop</type>
          </param>
        </templateparamlist>
        <type>LabelType</type>
        <definition>LabelType predictLabel</definition>
        <argsstring>(MultiArrayView&lt; 2, U, C &gt;const &amp;features, Stop &amp;stop) const </argsstring>
        <name>predictLabel</name>
        <param>
          <type>MultiArrayView&lt; 2, U, C &gt;const &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>Stop &amp;</type>
          <declname>stop</declname>
        </param>
        <briefdescription>
<para>predict a label given a feature. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>features</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>a 1 by featureCount matrix containing data point to be predicted (this only works in classification setting) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stop</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>early stopping criterion </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double value representing class. You can use the <ref refid="group__MachineLearning_1gaa2a5fc3a96d247c319c27c5bde7fab4e" kindref="member">predictLabels()</ref> function together with the rf.external_parameter().class_type_ attribute to get back the same type used during learning. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" line="560" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" bodystart="1004" bodyend="1018"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga75ac70b9d658f75208f5ffb5a15adbe2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class C</type>
          </param>
        </templateparamlist>
        <type>LabelType</type>
        <definition>LabelType predictLabel</definition>
        <argsstring>(MultiArrayView&lt; 2, U, C &gt; const &amp;features, ArrayVectorView&lt; double &gt; prior) const </argsstring>
        <name>predictLabel</name>
        <param>
          <type>MultiArrayView&lt; 2, U, C &gt; const &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>ArrayVectorView&lt; double &gt;</type>
          <declname>prior</declname>
        </param>
        <briefdescription>
<para>predict a label with features and class priors </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>features</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>same as above. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prior</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>iterator to prior weighting of classes </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>sam as above. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" line="575" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" bodystart="1025" bodyend="1042"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga1e4d4fa6fafeba4bc5c23726096fe0d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T1</type>
          </param>
          <param>
            <type>class T2</type>
          </param>
          <param>
            <type>class C</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void predictProbabilities</definition>
        <argsstring>(OnlinePredictionSet&lt; T1 &gt; &amp;predictionSet, MultiArrayView&lt; 2, T2, C &gt; &amp;prob)</argsstring>
        <name>predictProbabilities</name>
        <param>
          <type>OnlinePredictionSet&lt; T1 &gt; &amp;</type>
          <declname>predictionSet</declname>
        </param>
        <param>
          <type>MultiArrayView&lt; 2, T2, C &gt; &amp;</type>
          <declname>prob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" line="619" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" bodystart="1047" bodyend="1183"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga1d2fe9c3d73b17a8a3c6eefe2d704ed2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class C1</type>
          </param>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class C2</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void predictRaw</definition>
        <argsstring>(MultiArrayView&lt; 2, U, C1 &gt;const &amp;features, MultiArrayView&lt; 2, T, C2 &gt; &amp;prob) const </argsstring>
        <name>predictRaw</name>
        <param>
          <type>MultiArrayView&lt; 2, U, C1 &gt;const &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>MultiArrayView&lt; 2, T, C2 &gt; &amp;</type>
          <declname>prob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" line="636" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" bodystart="1269" bodyend="1327"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga2ebe9f99d22454bdec33f1a330494241" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class C</type>
          </param>
        </templateparamlist>
        <type>LabelType</type>
        <definition>LabelType predictLabel</definition>
        <argsstring>(MultiArrayView&lt; 2, U, C &gt;const &amp;features)</argsstring>
        <name>predictLabel</name>
        <param>
          <type>MultiArrayView&lt; 2, U, C &gt;const &amp;</type>
          <declname>features</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" line="564" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" bodystart="563" bodyend="566"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1gaa2a5fc3a96d247c319c27c5bde7fab4e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class C1</type>
          </param>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class C2</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void predictLabels</definition>
        <argsstring>(MultiArrayView&lt; 2, U, C1 &gt;const &amp;features, MultiArrayView&lt; 2, T, C2 &gt; &amp;labels) const </argsstring>
        <name>predictLabels</name>
        <param>
          <type>MultiArrayView&lt; 2, U, C1 &gt;const &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>MultiArrayView&lt; 2, T, C2 &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
<para>predict multiple labels with given features </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>features</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>a n by featureCount matrix containing data point to be predicted (this only works in classification setting) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>labels</parametername>
<parametername>:</parametername>
</parameternamelist>
<parameterdescription>
<para>a n by 1 matrix passed by reference to store output. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" line="588" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" bodystart="586" bodyend="593"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga20542164f24478948190079e3ba311b2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class C1</type>
          </param>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class C2</type>
          </param>
          <param>
            <type>class Stop</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void predictLabels</definition>
        <argsstring>(MultiArrayView&lt; 2, U, C1 &gt;const &amp;features, MultiArrayView&lt; 2, T, C2 &gt; &amp;labels, Stop &amp;stop) const </argsstring>
        <name>predictLabels</name>
        <param>
          <type>MultiArrayView&lt; 2, U, C1 &gt;const &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>MultiArrayView&lt; 2, T, C2 &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>Stop &amp;</type>
          <declname>stop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" line="599" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" bodystart="596" bodyend="604"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga30e310de1642021af2e24d56be57a37d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class C1</type>
          </param>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class C2</type>
          </param>
          <param>
            <type>class Stop</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void predictProbabilities</definition>
        <argsstring>(MultiArrayView&lt; 2, U, C1 &gt;const &amp;features, MultiArrayView&lt; 2, T, C2 &gt; &amp;prob, Stop &amp;stop) const </argsstring>
        <name>predictProbabilities</name>
        <param>
          <type>MultiArrayView&lt; 2, U, C1 &gt;const &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>MultiArrayView&lt; 2, T, C2 &gt; &amp;</type>
          <declname>prob</declname>
        </param>
        <param>
          <type>Stop &amp;</type>
          <declname>stop</declname>
        </param>
        <briefdescription>
<para>predict the class probabilities for multiple labels </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>features</parametername>
</parameternamelist>
<parameterdescription>
<para>same as above </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prob</parametername>
</parameternamelist>
<parameterdescription>
<para>a n x class_count_ matrix. passed by reference to save class probabilities </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stop</parametername>
</parameternamelist>
<parameterdescription>
<para>earlystopping criterion </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>EarlyStopping </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" line="616"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1gaf3fb598fb45d272f6f6745321cbc8b81" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class C1</type>
          </param>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class C2</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void predictProbabilities</definition>
        <argsstring>(MultiArrayView&lt; 2, U, C1 &gt;const &amp;features, MultiArrayView&lt; 2, T, C2 &gt; &amp;prob) const </argsstring>
        <name>predictProbabilities</name>
        <param>
          <type>MultiArrayView&lt; 2, U, C1 &gt;const &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>MultiArrayView&lt; 2, T, C2 &gt; &amp;</type>
          <declname>prob</declname>
        </param>
        <briefdescription>
<para>predict the class probabilities for multiple labels </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>features</parametername>
</parameternamelist>
<parameterdescription>
<para>same as above </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prob</parametername>
</parameternamelist>
<parameterdescription>
<para>a n x class_count_ matrix. passed by reference to save class probabilities </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" line="630" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" bodystart="628" bodyend="632"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__MachineLearning_1ga362f1d354d5330231ea89d7551b17037" prot="public" static="no">
        <name>Problem_t</name>
        <enumvalue id="group__MachineLearning_1gga362f1d354d5330231ea89d7551b17037ae6d2c2f7b90bba6e1b40461a0d3931da" prot="public">
          <name>REGRESSION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__MachineLearning_1gga362f1d354d5330231ea89d7551b17037a99b055120b030eb3da100f590b862e59" prot="public">
          <name>CLASSIFICATION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__MachineLearning_1gga362f1d354d5330231ea89d7551b17037a664e4a70398583b7163ea69697e2349b" prot="public">
          <name>CHECKLATER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>problem types </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_common.hxx" line="521" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_common.hxx" bodystart="521" bodyend="521"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__MachineLearning_1gaaf0efe2c5ee3890670341f3f51d4bc3b" prot="public" static="no">
        <type>BestGiniOfColumn&lt; GiniCriterion &gt;</type>
        <definition>typedef BestGiniOfColumn&lt;GiniCriterion&gt; ColumnDecisionFunctor</definition>
        <argsstring></argsstring>
        <name>ColumnDecisionFunctor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1519" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1519" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__MachineLearning_1ga5e8bec3b7b9791274c14599c35f9602c" prot="public" static="no">
        <type>ArrayVector&lt; <ref refid="group__FixedSizeInt_1ga92f05c4b6944ec5926841e34f03a9060" kindref="member">vigra::Int32</ref> &gt;</type>
        <definition>typedef ArrayVector&lt;vigra::Int32&gt; IndexList</definition>
        <argsstring></argsstring>
        <name>IndexList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="598" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="598" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__MachineLearning_1ga606073e25407c2ef974c7aa4c25d2edd" prot="private" static="no">
        <type>MultiArrayShape&lt; 2 &gt;::type</type>
        <definition>typedef MultiArrayShape&lt;2&gt;::type Shp</definition>
        <argsstring></argsstring>
        <name>Shp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="854" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="854" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__MachineLearning_1ga606073e25407c2ef974c7aa4c25d2edd" prot="private" static="no">
        <type>MultiArrayShape&lt; 2 &gt;::type</type>
        <definition>typedef MultiArrayShape&lt;2&gt;::type Shp</definition>
        <argsstring></argsstring>
        <name>Shp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1006" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1006" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__MachineLearning_1ga121aee969503dcc0f2d4ff4879d9c4d9" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool active_</definition>
        <argsstring></argsstring>
        <name>active_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="104" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga24dfb9613855584f3a2508726e26422a" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool adjust_thresholds</definition>
        <argsstring></argsstring>
        <name>adjust_thresholds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="577" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="577" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga3aece4fc6c9be25d39283ec8f3f292d2" prot="public" static="no" mutable="no">
        <type>BestGiniOfColumn&lt; GiniCriterion &gt;</type>
        <definition>BestGiniOfColumn&lt;GiniCriterion&gt; bgfunc</definition>
        <argsstring></argsstring>
        <name>bgfunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1520" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1520" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga096cc4d94437c527051772ec34374e60" prot="public" static="no" mutable="no">
        <type>MultiArray&lt; 2, double &gt;</type>
        <definition>MultiArray&lt;2, double&gt; breiman_per_tree</definition>
        <argsstring></argsstring>
        <name>breiman_per_tree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Column containing the development of the Ensemble error rate with increasing number of trees </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1039" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1039" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga882a88530b6e08e1303d6828321dc7fb" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int class_count</definition>
        <argsstring></argsstring>
        <name>class_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="855" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="855" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga882a88530b6e08e1303d6828321dc7fb" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int class_count</definition>
        <argsstring></argsstring>
        <name>class_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1007" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1007" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1gaaf3d73ba301ef56511238609b3279842" prot="public" static="no" mutable="no">
        <type>MultiArray&lt; 2, double &gt;</type>
        <definition>MultiArray&lt;2, double&gt; corr_l</definition>
        <argsstring></argsstring>
        <name>corr_l</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1499" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga55034538c707f3d5068526077072817d" prot="public" static="no" mutable="no">
        <type>MultiArray&lt; 2, double &gt;</type>
        <definition>MultiArray&lt;2, double&gt; corr_noise</definition>
        <argsstring></argsstring>
        <name>corr_noise</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>how well can a noise column describe a partition created on variable ii. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1498" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1498" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga14bb41ff4c8673e2289422a9902cd724" prot="public" static="no" mutable="no">
        <type><ref refid="group__FixedSizeInt_1ga92f05c4b6944ec5926841e34f03a9060" kindref="member">vigra::Int32</ref></type>
        <definition>vigra::Int32 current_label</definition>
        <argsstring></argsstring>
        <name>current_label</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="583" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="583" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga4a4f8fe9c52db2d3efdad7dfa1e1f4d3" prot="public" static="no" mutable="no">
        <type>MultiArray&lt; 2, double &gt;</type>
        <definition>MultiArray&lt;2, double&gt; distance</definition>
        <argsstring></argsstring>
        <name>distance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Distance Matrix 1-similarity </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1513" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1513" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga83805c93249800cc98da8d38d998a43e" prot="public" static="no" mutable="no">
        <type>std::map&lt; int, int &gt;</type>
        <definition>std::map&lt;int,int&gt; exterior_to_index</definition>
        <argsstring></argsstring>
        <name>exterior_to_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="608" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="608" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga82a1bf14bd71bb895c4cef9172317a86" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double gap_left</definition>
        <argsstring></argsstring>
        <name>gap_left</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="595" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="595" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1gaea5fdbdb9c3260950784e38e90690459" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double gap_right</definition>
        <argsstring></argsstring>
        <name>gap_right</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="596" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="596" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga5a9c356faf57cd8426e919c4cccc01a0" prot="public" static="no" mutable="no">
        <type>MultiArray&lt; 2, double &gt;</type>
        <definition>MultiArray&lt;2, double&gt; gini_missc</definition>
        <argsstring></argsstring>
        <name>gini_missc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gini_missc(ii, jj) describes how well variable jj can describe a partition created on variable ii(when variable ii was chosen) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1490" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1490" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1gafbcb3ac4169d783043b3f1b6f9e0665c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool in_place_</definition>
        <argsstring></argsstring>
        <name>in_place_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1250" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga09314a374626f065d722d6487cd0f57a" prot="public" static="no" mutable="no">
        <type>std::vector&lt; IndexList &gt;</type>
        <definition>std::vector&lt;IndexList&gt; index_lists</definition>
        <argsstring></argsstring>
        <name>index_lists</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="604" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="604" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1gaac1ae8f8d411473b19eec589745ac215" prot="public" static="no" mutable="no">
        <type>ArrayVector&lt; int &gt;</type>
        <definition>ArrayVector&lt; int&gt; indices</definition>
        <argsstring></argsstring>
        <name>indices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="866" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="866" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1gaf39e8014777d31c558b5238cad1adbc0" prot="public" static="no" mutable="no">
        <type>std::map&lt; int, int &gt;</type>
        <definition>std::map&lt;int,int&gt; interior_to_index</definition>
        <argsstring></argsstring>
        <name>interior_to_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="606" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="606" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga1252c8e0c4a9c0cbd41fc84fa1e58214" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool is_weighted</definition>
        <argsstring></argsstring>
        <name>is_weighted</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="856" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="856" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga1252c8e0c4a9c0cbd41fc84fa1e58214" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool is_weighted</definition>
        <argsstring></argsstring>
        <name>is_weighted</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1008" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1008" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga44d50b8fd0fb769af77f35ede50b4de9" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int last_node_id</definition>
        <argsstring></argsstring>
        <name>last_node_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="581" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="581" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1gac80b1b85518b533dc13f2e002ef9976e" prot="public" static="no" mutable="no">
        <type>ArrayVector&lt; Int32 &gt;</type>
        <definition>ArrayVector&lt;Int32&gt; leftCounts</definition>
        <argsstring></argsstring>
        <name>leftCounts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="591" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="591" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga8c75fcdf776c749ea3f299f393680e18" prot="public" static="no" mutable="no">
        <type>Int32</type>
        <definition>Int32 leftTotalCounts</definition>
        <argsstring></argsstring>
        <name>leftTotalCounts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="592" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="592" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga56d7249fd8f04e339666482e81243992" prot="public" static="no" mutable="no">
        <type>std::vector&lt; MarginalDistribution &gt;</type>
        <definition>std::vector&lt;MarginalDistribution&gt; mag_distributions</definition>
        <argsstring></argsstring>
        <name>mag_distributions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="603" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="603" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1gac9538ff109e0e6842252f6742faa8ca3" prot="public" static="no" mutable="no">
        <type>Next</type>
        <definition>Next next_</definition>
        <argsstring></argsstring>
        <name>next_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="249" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1gae7ce9f0ea37f373c59af9bf925e2f706" prot="public" static="no" mutable="no">
        <type>MultiArray&lt; 2, double &gt;</type>
        <definition>MultiArray&lt;2, double&gt; noise</definition>
        <argsstring></argsstring>
        <name>noise</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>additional noise features. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1494" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1494" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga2b605f60437bdaa8de2036ba8e35908a" prot="public" static="no" mutable="no">
        <type>MultiArray&lt; 2, double &gt;</type>
        <definition>MultiArray&lt;2, double&gt; noise_l</definition>
        <argsstring></argsstring>
        <name>noise_l</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1495" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga715510c20adb132029520a8f37295712" prot="public" static="no" mutable="no">
        <type>ArrayVector&lt; int &gt;</type>
        <definition>ArrayVector&lt;int&gt; numChoices</definition>
        <argsstring></argsstring>
        <name>numChoices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>How often was variable ii chosen </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1518" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1518" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga1f3b7456eb9396ffeae179c1cf81539e" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double oob_breiman</definition>
        <argsstring></argsstring>
        <name>oob_breiman</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ensemble oob error rate </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="863" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="863" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga1f3b7456eb9396ffeae179c1cf81539e" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double oob_breiman</definition>
        <argsstring></argsstring>
        <name>oob_breiman</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ensemble OOB error</para><para><simplesect kind="see"><para><ref refid="classvigra_1_1rf_1_1visitors_1_1OOB__Error" kindref="compound">OOB_Error</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1027" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1027" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga1201fdfdd42d1f8c6f4b8ded2919bb50" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double oob_mean</definition>
        <argsstring></argsstring>
        <name>oob_mean</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mean of oob_per_tree </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1017" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1017" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga852ff55e6085077e4c9217e58db06a76" prot="public" static="no" mutable="no">
        <type>MultiArray&lt; 2, double &gt;</type>
        <definition>MultiArray&lt;2, double&gt; oob_per_tree</definition>
        <argsstring></argsstring>
        <name>oob_per_tree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OOB Error rate of each individual tree </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1014" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1014" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga03a4e6e24e20e6a14dc301c919eddd6b" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double oob_per_tree2</definition>
        <argsstring></argsstring>
        <name>oob_per_tree2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Per Tree OOB error calculated as in <ref refid="classvigra_1_1rf_1_1visitors_1_1OOB__PerTreeError" kindref="compound">OOB_PerTreeError</ref> (Ulli&apos;s version) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1034" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1034" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1gac2812ecf65a24228f82610cee1b1903a" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double oob_std</definition>
        <argsstring></argsstring>
        <name>oob_std</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Standard deviation of oob_per_tree </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1020" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1020" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1gad17262705ebb1dd7bc7e26e1c95a9727" prot="public" static="no" mutable="no">
        <type>ArrayVector&lt; int &gt;</type>
        <definition>ArrayVector&lt;int&gt; oobCount</definition>
        <argsstring></argsstring>
        <name>oobCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="780" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="780" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1gaa0a521055a659f847f5fada87197f5df" prot="public" static="no" mutable="no">
        <type>MultiArray&lt; 2, double &gt;</type>
        <definition>MultiArray&lt;2, double&gt; oobCount</definition>
        <argsstring></argsstring>
        <name>oobCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="865" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="865" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1gaa0a521055a659f847f5fada87197f5df" prot="public" static="no" mutable="no">
        <type>MultiArray&lt; 2, double &gt;</type>
        <definition>MultiArray&lt;2, double&gt; oobCount</definition>
        <argsstring></argsstring>
        <name>oobCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1029" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1029" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga523d2a60f01e03fea2fb0c8d5e29d903" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double oobError</definition>
        <argsstring></argsstring>
        <name>oobError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Average error of one randomized decision tree </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="777" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="777" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga17443940567792b67a0b48922c147fa8" prot="public" static="no" mutable="no">
        <type>ArrayVector&lt; int &gt;</type>
        <definition>ArrayVector&lt;int&gt; oobErrorCount</definition>
        <argsstring></argsstring>
        <name>oobErrorCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="780" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="780" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga8c552a6391b54495278b3df68abe29d7" prot="public" static="no" mutable="no">
        <type>MultiArray&lt; 2, double &gt;</type>
        <definition>MultiArray&lt;2, double&gt; oobErrorCount</definition>
        <argsstring></argsstring>
        <name>oobErrorCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1030" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1030" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga8c5500f5a93e18db839b6c83601257a4" prot="public" static="no" mutable="no">
        <type>MultiArray&lt; 4, double &gt;</type>
        <definition>MultiArray&lt;4, double&gt; oobroc_per_tree</definition>
        <argsstring></argsstring>
        <name>oobroc_per_tree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>4 dimensional array containing the development of confusion matrices with number of trees - can be used to estimate ROC curves etc.</para><para>oobroc_per_tree(ii,jj,kk,ll) corresponds true label = ii predicted label = jj confusion matrix after ll trees</para><para>explanation of third index:</para><para>Two class case: kk = 0 - (treeCount-1) <ref refid="classvigra_1_1Threshold" kindref="compound">Threshold</ref> is on Probability for class 0 is kk/(treeCount-1); More classes: kk = 0. <ref refid="classvigra_1_1Threshold" kindref="compound">Threshold</ref> on probability set by argMax of the probability array. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1056" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1056" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1gaac2ed7b6ec02c33fab2f47b744db8a39" prot="public" static="no" mutable="no">
        <type>MultiArray&lt; 2, double &gt;</type>
        <definition>MultiArray&lt;2, double&gt; prob_oob</definition>
        <argsstring></argsstring>
        <name>prob_oob</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="860" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="860" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1gaac2ed7b6ec02c33fab2f47b744db8a39" prot="public" static="no" mutable="no">
        <type>MultiArray&lt; 2, double &gt;</type>
        <definition>MultiArray&lt;2, double&gt; prob_oob</definition>
        <argsstring></argsstring>
        <name>prob_oob</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1022" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1022" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1gaa7c72f076b7eacaeda9a6b5f522c7a63" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int repetition_count_</definition>
        <argsstring></argsstring>
        <name>repetition_count_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1249" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga5579a37daa083146a5f788b04ad64406" prot="public" static="no" mutable="no">
        <type>ArrayVector&lt; Int32 &gt;</type>
        <definition>ArrayVector&lt;Int32&gt; rightCounts</definition>
        <argsstring></argsstring>
        <name>rightCounts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="593" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="593" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1gac2c41624239f61f56eb0c7cafd090c86" prot="public" static="no" mutable="no">
        <type>Int32</type>
        <definition>Int32 rightTotalCounts</definition>
        <argsstring></argsstring>
        <name>rightTotalCounts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="594" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="594" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga60981e3077e2a643025056f5c10abc63" prot="public" static="no" mutable="no">
        <type>MultiArray&lt; 2, double &gt;</type>
        <definition>MultiArray&lt;2, double&gt; similarity</definition>
        <argsstring></argsstring>
        <name>similarity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Similarity Matrix</para><para>(numberOfFeatures + 1) by (number Of Features + 1) Matrix gini_missc<itemizedlist>
<listitem><para>row normalized by the number of times the column was chosen</para></listitem><listitem><para>mean of corr_noise subtracted</para></listitem><listitem><para>and symmetrised. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1510" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1510" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1gaa5118c8ed3b07f227d8996f7c8244a7c" prot="public" static="no" mutable="no">
        <type>StopVisiting</type>
        <definition>StopVisiting stop_</definition>
        <argsstring></argsstring>
        <name>stop_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="248" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1gaef7b078527e6eb6f885454b598366299" prot="public" static="no" mutable="no">
        <type>ArrayVector&lt; int &gt;</type>
        <definition>ArrayVector&lt;int&gt; tmp_cc</definition>
        <argsstring></argsstring>
        <name>tmp_cc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1514" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1514" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1gaea713b449fd9b28a824e9ada4105480b" prot="public" static="no" mutable="no">
        <type>MultiArray&lt; 2, int &gt;</type>
        <definition>MultiArray&lt;2, int&gt; tmp_labels</definition>
        <argsstring></argsstring>
        <name>tmp_labels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1491" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1491" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga78edaf84006368768a3606698c1972cb" prot="private" static="no" mutable="no">
        <type>MultiArray&lt; 2, double &gt;</type>
        <definition>MultiArray&lt;2,double&gt; tmp_prob</definition>
        <argsstring></argsstring>
        <name>tmp_prob</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="857" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="857" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga78edaf84006368768a3606698c1972cb" prot="private" static="no" mutable="no">
        <type>MultiArray&lt; 2, double &gt;</type>
        <definition>MultiArray&lt;2,double&gt; tmp_prob</definition>
        <argsstring></argsstring>
        <name>tmp_prob</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1009" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1009" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1gadfe38e6ab02bc8794383ff0859fd140a" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int totalOobCount</definition>
        <argsstring></argsstring>
        <name>totalOobCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="779" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="779" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1gaedb836354b462be1531999042058f6b3" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int tree_id</definition>
        <argsstring></argsstring>
        <name>tree_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="579" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="579" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga5edbd669c0bf460e92708fcd03adc3b1" prot="public" static="no" mutable="no">
        <type>std::vector&lt; TreeOnlineInformation &gt;</type>
        <definition>std::vector&lt;TreeOnlineInformation&gt; trees_online_information</definition>
        <argsstring></argsstring>
        <name>trees_online_information</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="612" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="612" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga1c64194167429b6056f839a981a07460" prot="private" static="no" mutable="no">
        <type></type>
        <definition>USETICTOC</definition>
        <argsstring></argsstring>
        <name>USETICTOC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1477" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1gac4b8c6cd30f9b3de278e373528e092aa" prot="public" static="no" mutable="no">
        <type>MultiArray&lt; 2, double &gt;</type>
        <definition>MultiArray&lt;2, double&gt; variable_importance_</definition>
        <argsstring></argsstring>
        <name>variable_importance_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This Array has the same entries as the R - random forest variable importance. Matrix is featureCount by (classCount +2) variable_importance_(ii,jj) is the variable importance measure of the ii-th variable according to: jj = 0 - (classCount-1) classwise permutation importance jj = rowCount(variable_importance_) -2 permutation importance jj = rowCount(variable_importance_) -1 gini decrease importance.</para><para>permutation importance: The difference between the fraction of OOB samples classified correctly before and after permuting (randomizing) the ii-th column is calculated. The ii-th column is permuted rep_cnt times.</para><para>class wise permutation importance: same as permutation importance. We only look at those OOB samples whose response corresponds to class jj.</para><para>gini decrease importance: row ii corresponds to the sum of all gini decreases induced by variable ii in each node of the random forest. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1248" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__MachineLearning_1ga2ade2a7c1c372dbb38c22d4cb1150900" prot="public" static="no" mutable="no">
        <type>Visitor &amp;</type>
        <definition>Visitor&amp; visitor_</definition>
        <argsstring></argsstring>
        <name>visitor_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="250" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="250" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__MachineLearning_1ga8011fcbeb5efeda20bd2dbffbbb70165" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void activate</definition>
        <argsstring>()</argsstring>
        <name>activate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="124" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="123" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga69bc5016ce2fa710b9a4ee732b3003ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void add_to_index_list</definition>
        <argsstring>(int tree, int node, int index)</argsstring>
        <name>add_to_index_list</name>
        <param>
          <type>int</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>int</type>
          <declname>node</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="694" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="693" bodyend="699"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1gae14ce8384c149dfccb48079c51464207" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class RF</type>
          </param>
          <param>
            <type>class PR</type>
          </param>
          <param>
            <type>class SM</type>
          </param>
          <param>
            <type>class ST</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void after_tree_ip_impl</definition>
        <argsstring>(RF &amp;rf, PR &amp;pr, SM &amp;sm, ST &amp;st, int index)</argsstring>
        <name>after_tree_ip_impl</name>
        <param>
          <type>RF &amp;</type>
          <declname>rf</declname>
        </param>
        <param>
          <type>PR &amp;</type>
          <declname>pr</declname>
        </param>
        <param>
          <type>SM &amp;</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>ST &amp;</type>
          <declname>st</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>compute permutation based var imp. (Only an Array of size oob_sample_count x 1 is created.<itemizedlist>
<listitem><para>apposed to oob_sample_count x feature_count in the other method.</para></listitem></itemizedlist>
</para><para><simplesect kind="see"><para>FieldProxy </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1312" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1311" bodyend="1425"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1gaeee674af70ce7394af26c114981d2aba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CompleteOOBInfo</definition>
        <argsstring>()</argsstring>
        <name>CompleteOOBInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1058" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1058" bodyend="1058"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1gafee5cad59894c439573770103eacfbc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
        </templateparamlist>
        <type>detail::VisitorNode&lt; A &gt;</type>
        <definition>detail::VisitorNode&lt;A&gt; vigra::rf::visitors::create_visitor</definition>
        <argsstring>(A &amp;a)</argsstring>
        <name>create_visitor</name>
        <param>
          <type>A &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>factory method to to be used with <ref refid="group__MachineLearning_1ga11157c680b4f47c5592d6695b5fbac05" kindref="member">RandomForest::learn()</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="335" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="334" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga1dce33feda060f316c9a629200cd595a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
          <param>
            <type>class B</type>
          </param>
        </templateparamlist>
        <type>detail::VisitorNode&lt; A, detail::VisitorNode&lt; B &gt; &gt;</type>
        <definition>detail::VisitorNode&lt;A, detail::VisitorNode&lt;B&gt; &gt; vigra::rf::visitors::create_visitor</definition>
        <argsstring>(A &amp;a, B &amp;b)</argsstring>
        <name>create_visitor</name>
        <param>
          <type>A &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>B &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>factory method to to be used with <ref refid="group__MachineLearning_1ga11157c680b4f47c5592d6695b5fbac05" kindref="member">RandomForest::learn()</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="347" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="346" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1gaf2acbad174f2838cb87965604a01a0f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
          <param>
            <type>class B</type>
          </param>
          <param>
            <type>class C</type>
          </param>
        </templateparamlist>
        <type>detail::VisitorNode&lt; A, detail::VisitorNode&lt; B, detail::VisitorNode&lt; C &gt; &gt; &gt;</type>
        <definition>detail::VisitorNode&lt;A, detail::VisitorNode&lt;B, detail::VisitorNode&lt;C&gt; &gt; &gt; vigra::rf::visitors::create_visitor</definition>
        <argsstring>(A &amp;a, B &amp;b, C &amp;c)</argsstring>
        <name>create_visitor</name>
        <param>
          <type>A &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>B &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>C &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>factory method to to be used with <ref refid="group__MachineLearning_1ga11157c680b4f47c5592d6695b5fbac05" kindref="member">RandomForest::learn()</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="361" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="360" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga58e4a960053285ee48ba63c86ffe4dd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
          <param>
            <type>class B</type>
          </param>
          <param>
            <type>class C</type>
          </param>
          <param>
            <type>class D</type>
          </param>
        </templateparamlist>
        <type>detail::VisitorNode&lt; A, detail::VisitorNode&lt; B, detail::VisitorNode&lt; C, detail::VisitorNode&lt; D &gt; &gt; &gt; &gt;</type>
        <definition>detail::VisitorNode&lt;A, detail::VisitorNode&lt;B, detail::VisitorNode&lt;C, detail::VisitorNode&lt;D&gt; &gt; &gt; &gt; vigra::rf::visitors::create_visitor</definition>
        <argsstring>(A &amp;a, B &amp;b, C &amp;c, D &amp;d)</argsstring>
        <name>create_visitor</name>
        <param>
          <type>A &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>B &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>C &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>D &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>factory method to to be used with <ref refid="group__MachineLearning_1ga11157c680b4f47c5592d6695b5fbac05" kindref="member">RandomForest::learn()</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="378" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="377" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga2c777463415e56d7f988eb345bf49e72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
          <param>
            <type>class B</type>
          </param>
          <param>
            <type>class C</type>
          </param>
          <param>
            <type>class D</type>
          </param>
          <param>
            <type>class E</type>
          </param>
        </templateparamlist>
        <type>detail::VisitorNode&lt; A, detail::VisitorNode&lt; B, detail::VisitorNode&lt; C, detail::VisitorNode&lt; D, detail::VisitorNode&lt; E &gt; &gt; &gt; &gt; &gt;</type>
        <definition>detail::VisitorNode&lt;A, detail::VisitorNode&lt;B, detail::VisitorNode&lt;C, detail::VisitorNode&lt;D, detail::VisitorNode&lt;E&gt; &gt; &gt; &gt; &gt; vigra::rf::visitors::create_visitor</definition>
        <argsstring>(A &amp;a, B &amp;b, C &amp;c, D &amp;d, E &amp;e)</argsstring>
        <name>create_visitor</name>
        <param>
          <type>A &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>B &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>C &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>D &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>E &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>factory method to to be used with <ref refid="group__MachineLearning_1ga11157c680b4f47c5592d6695b5fbac05" kindref="member">RandomForest::learn()</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="398" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="396" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga65a28eb722429876459b7067d7c293ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
          <param>
            <type>class B</type>
          </param>
          <param>
            <type>class C</type>
          </param>
          <param>
            <type>class D</type>
          </param>
          <param>
            <type>class E</type>
          </param>
          <param>
            <type>class F</type>
          </param>
        </templateparamlist>
        <type>detail::VisitorNode&lt; A, detail::VisitorNode&lt; B, detail::VisitorNode&lt; C, detail::VisitorNode&lt; D, detail::VisitorNode&lt; E, detail::VisitorNode&lt; F &gt; &gt; &gt; &gt; &gt; &gt;</type>
        <definition>detail::VisitorNode&lt;A, detail::VisitorNode&lt;B, detail::VisitorNode&lt;C, detail::VisitorNode&lt;D, detail::VisitorNode&lt;E, detail::VisitorNode&lt;F&gt; &gt; &gt; &gt; &gt; &gt; vigra::rf::visitors::create_visitor</definition>
        <argsstring>(A &amp;a, B &amp;b, C &amp;c, D &amp;d, E &amp;e, F &amp;f)</argsstring>
        <name>create_visitor</name>
        <param>
          <type>A &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>B &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>C &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>D &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>E &amp;</type>
          <declname>e</declname>
        </param>
        <param>
          <type>F &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>factory method to to be used with <ref refid="group__MachineLearning_1ga11157c680b4f47c5592d6695b5fbac05" kindref="member">RandomForest::learn()</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="421" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="419" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga597964fa099dc42046df99ca10df587d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
          <param>
            <type>class B</type>
          </param>
          <param>
            <type>class C</type>
          </param>
          <param>
            <type>class D</type>
          </param>
          <param>
            <type>class E</type>
          </param>
          <param>
            <type>class F</type>
          </param>
          <param>
            <type>class G</type>
          </param>
        </templateparamlist>
        <type>detail::VisitorNode&lt; A, detail::VisitorNode&lt; B, detail::VisitorNode&lt; C, detail::VisitorNode&lt; D, detail::VisitorNode&lt; E, detail::VisitorNode&lt; F, detail::VisitorNode&lt; G &gt; &gt; &gt; &gt; &gt; &gt; &gt;</type>
        <definition>detail::VisitorNode&lt;A, detail::VisitorNode&lt;B, detail::VisitorNode&lt;C, detail::VisitorNode&lt;D, detail::VisitorNode&lt;E, detail::VisitorNode&lt;F, detail::VisitorNode&lt;G&gt; &gt; &gt; &gt; &gt; &gt; &gt; vigra::rf::visitors::create_visitor</definition>
        <argsstring>(A &amp;a, B &amp;b, C &amp;c, D &amp;d, E &amp;e, F &amp;f, G &amp;g)</argsstring>
        <name>create_visitor</name>
        <param>
          <type>A &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>B &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>C &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>D &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>E &amp;</type>
          <declname>e</declname>
        </param>
        <param>
          <type>F &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>G &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>factory method to to be used with <ref refid="group__MachineLearning_1ga11157c680b4f47c5592d6695b5fbac05" kindref="member">RandomForest::learn()</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="447" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="445" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1gae5fe6a588e964ed4fb049c1a7880b4ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
          <param>
            <type>class B</type>
          </param>
          <param>
            <type>class C</type>
          </param>
          <param>
            <type>class D</type>
          </param>
          <param>
            <type>class E</type>
          </param>
          <param>
            <type>class F</type>
          </param>
          <param>
            <type>class G</type>
          </param>
          <param>
            <type>class H</type>
          </param>
        </templateparamlist>
        <type>detail::VisitorNode&lt; A, detail::VisitorNode&lt; B, detail::VisitorNode&lt; C, detail::VisitorNode&lt; D, detail::VisitorNode&lt; E, detail::VisitorNode&lt; F, detail::VisitorNode&lt; G, detail::VisitorNode&lt; H &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;</type>
        <definition>detail::VisitorNode&lt;A, detail::VisitorNode&lt;B, detail::VisitorNode&lt;C, detail::VisitorNode&lt;D, detail::VisitorNode&lt;E, detail::VisitorNode&lt;F, detail::VisitorNode&lt;G, detail::VisitorNode&lt;H&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; vigra::rf::visitors::create_visitor</definition>
        <argsstring>(A &amp;a, B &amp;b, C &amp;c, D &amp;d, E &amp;e, F &amp;f, G &amp;g, H &amp;h)</argsstring>
        <name>create_visitor</name>
        <param>
          <type>A &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>B &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>C &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>D &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>E &amp;</type>
          <declname>e</declname>
        </param>
        <param>
          <type>F &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>G &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>H &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>factory method to to be used with <ref refid="group__MachineLearning_1ga11157c680b4f47c5592d6695b5fbac05" kindref="member">RandomForest::learn()</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="476" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="473" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1gad1084832eeb142bde98f01307ca847c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
          <param>
            <type>class B</type>
          </param>
          <param>
            <type>class C</type>
          </param>
          <param>
            <type>class D</type>
          </param>
          <param>
            <type>class E</type>
          </param>
          <param>
            <type>class F</type>
          </param>
          <param>
            <type>class G</type>
          </param>
          <param>
            <type>class H</type>
          </param>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>detail::VisitorNode&lt; A, detail::VisitorNode&lt; B, detail::VisitorNode&lt; C, detail::VisitorNode&lt; D, detail::VisitorNode&lt; E, detail::VisitorNode&lt; F, detail::VisitorNode&lt; G, detail::VisitorNode&lt; H, detail::VisitorNode&lt; I &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;</type>
        <definition>detail::VisitorNode&lt;A, detail::VisitorNode&lt;B, detail::VisitorNode&lt;C, detail::VisitorNode&lt;D, detail::VisitorNode&lt;E, detail::VisitorNode&lt;F, detail::VisitorNode&lt;G, detail::VisitorNode&lt;H, detail::VisitorNode&lt;I&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; vigra::rf::visitors::create_visitor</definition>
        <argsstring>(A &amp;a, B &amp;b, C &amp;c, D &amp;d, E &amp;e, F &amp;f, G &amp;g, H &amp;h, I &amp;i)</argsstring>
        <name>create_visitor</name>
        <param>
          <type>A &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>B &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>C &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>D &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>E &amp;</type>
          <declname>e</declname>
        </param>
        <param>
          <type>F &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>G &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>H &amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>factory method to to be used with <ref refid="group__MachineLearning_1ga11157c680b4f47c5592d6695b5fbac05" kindref="member">RandomForest::learn()</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="507" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="504" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga69a71a1a184e60e44d24d18dd67d8a60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class A</type>
          </param>
          <param>
            <type>class B</type>
          </param>
          <param>
            <type>class C</type>
          </param>
          <param>
            <type>class D</type>
          </param>
          <param>
            <type>class E</type>
          </param>
          <param>
            <type>class F</type>
          </param>
          <param>
            <type>class G</type>
          </param>
          <param>
            <type>class H</type>
          </param>
          <param>
            <type>class I</type>
          </param>
          <param>
            <type>class J</type>
          </param>
        </templateparamlist>
        <type>detail::VisitorNode&lt; A, detail::VisitorNode&lt; B, detail::VisitorNode&lt; C, detail::VisitorNode&lt; D, detail::VisitorNode&lt; E, detail::VisitorNode&lt; F, detail::VisitorNode&lt; G, detail::VisitorNode&lt; H, detail::VisitorNode&lt; I, detail::VisitorNode&lt; J &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;</type>
        <definition>detail::VisitorNode&lt;A, detail::VisitorNode&lt;B, detail::VisitorNode&lt;C, detail::VisitorNode&lt;D, detail::VisitorNode&lt;E, detail::VisitorNode&lt;F, detail::VisitorNode&lt;G, detail::VisitorNode&lt;H, detail::VisitorNode&lt;I, detail::VisitorNode&lt;J&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; vigra::rf::visitors::create_visitor</definition>
        <argsstring>(A &amp;a, B &amp;b, C &amp;c, D &amp;d, E &amp;e, F &amp;f, G &amp;g, H &amp;h, I &amp;i, J &amp;j)</argsstring>
        <name>create_visitor</name>
        <param>
          <type>A &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>B &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>C &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>D &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>E &amp;</type>
          <declname>e</declname>
        </param>
        <param>
          <type>F &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>G &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>H &amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type>I &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>J &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>factory method to to be used with <ref refid="group__MachineLearning_1ga11157c680b4f47c5592d6695b5fbac05" kindref="member">RandomForest::learn()</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="541" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="537" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga8308b4bb6079733f4b77ced9d46da7a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void deactivate</definition>
        <argsstring>()</argsstring>
        <name>deactivate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="120" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1gaff96f61c8d66b4def05fcb5ab514d688" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool has_value</definition>
        <argsstring>()</argsstring>
        <name>has_value</name>
        <reimplementedby refid="group__MachineLearning_1gaff96f61c8d66b4def05fcb5ab514d688">has_value</reimplementedby>
        <reimplementedby refid="group__MachineLearning_1gaff96f61c8d66b4def05fcb5ab514d688">has_value</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="111" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="110" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1gaff96f61c8d66b4def05fcb5ab514d688" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool has_value</definition>
        <argsstring>()</argsstring>
        <name>has_value</name>
        <reimplements refid="group__MachineLearning_1gaff96f61c8d66b4def05fcb5ab514d688">has_value</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="228" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="227" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1gaff96f61c8d66b4def05fcb5ab514d688" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool has_value</definition>
        <argsstring>()</argsstring>
        <name>has_value</name>
        <reimplements refid="group__MachineLearning_1gaff96f61c8d66b4def05fcb5ab514d688">has_value</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="789" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="788" bodyend="791"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1gadc5260e7eba946182b172d0385d19c7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_active</definition>
        <argsstring>()</argsstring>
        <name>is_active</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="106" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1gab9ef13af1ef9360db06131a58b38385c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class C1</type>
          </param>
          <param>
            <type>class Array</type>
          </param>
          <param>
            <type>class Random</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double learn</definition>
        <argsstring>(MultiArrayView&lt; 2, U, C1 &gt; const &amp;features, Array const &amp;labels, Random const &amp;random)</argsstring>
        <name>learn</name>
        <param>
          <type>MultiArrayView&lt; 2, U, C1 &gt; const &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>Array const &amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>Random const &amp;</type>
          <declname>random</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest_deprec.hxx" line="843" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest_deprec.hxx" bodystart="840" bodyend="1021"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1gaf355362938d9cb358b9095d342162603" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void move_exterior_node</definition>
        <argsstring>(int src_tree, int src_index, int dst_tree, int dst_index)</argsstring>
        <name>move_exterior_node</name>
        <param>
          <type>int</type>
          <declname>src_tree</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src_index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dst_tree</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dst_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="701" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="700" bodyend="706"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga77d1223c066081fc17ca28a9c9623875" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class C1</type>
          </param>
          <param>
            <type>class U2</type>
          </param>
          <param>
            <type>class C2</type>
          </param>
          <param>
            <type>class Split_t</type>
          </param>
          <param>
            <type>class Stop_t</type>
          </param>
          <param>
            <type>class Visitor_t</type>
          </param>
          <param>
            <type>class Random_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void onlineLearn</definition>
        <argsstring>(MultiArrayView&lt; 2, U, C1 &gt; const &amp;features, MultiArrayView&lt; 2, U2, C2 &gt; const &amp;response, int new_start_index, Visitor_t visitor_, Split_t split_, Stop_t stop_, Random_t &amp;random, bool adjust_thresholds=false)</argsstring>
        <name>onlineLearn</name>
        <param>
          <type>MultiArrayView&lt; 2, U, C1 &gt; const &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>MultiArrayView&lt; 2, U2, C2 &gt; const &amp;</type>
          <declname>response</declname>
        </param>
        <param>
          <type>int</type>
          <declname>new_start_index</declname>
        </param>
        <param>
          <type>Visitor_t</type>
          <declname>visitor_</declname>
        </param>
        <param>
          <type>Split_t</type>
          <declname>split_</declname>
        </param>
        <param>
          <type>Stop_t</type>
          <declname>stop_</declname>
        </param>
        <param>
          <type>Random_t &amp;</type>
          <declname>random</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>adjust_thresholds</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" line="372" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" bodystart="651" bodyend="781"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga68bc47b8ddc84f0256e63a29a51281d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>OnlineLearnVisitor</definition>
        <argsstring>()</argsstring>
        <name>OnlineLearnVisitor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="588" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="586" bodyend="588"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga5ed3bd21db6d4f7321a8d72fdaddbd4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>OOB_Error</definition>
        <argsstring>()</argsstring>
        <name>OOB_Error</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="867" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="867" bodyend="867"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga699045ad522ba352f9f49460dd28a3aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>OOB_PerTreeError</definition>
        <argsstring>()</argsstring>
        <name>OOB_PerTreeError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="785" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="782" bodyend="785"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga8c2339e0e5cb5235444d6abe35aa8e98" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class C</type>
          </param>
        </templateparamlist>
        <type>ClassLabelType</type>
        <definition>ClassLabelType predictLabel</definition>
        <argsstring>(MultiArrayView&lt; 2, U, C &gt; const &amp;features) const </argsstring>
        <name>predictLabel</name>
        <param>
          <type>MultiArrayView&lt; 2, U, C &gt; const &amp;</type>
          <declname>features</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest_deprec.hxx" line="812" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest_deprec.hxx" bodystart="1026" bodyend="1035"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1gaaba682bba79d534aebdc779e6d4713b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class C</type>
          </param>
          <param>
            <type>class Iterator</type>
          </param>
        </templateparamlist>
        <type>ClassLabelType</type>
        <definition>ClassLabelType predictLabel</definition>
        <argsstring>(MultiArrayView&lt; 2, U, C &gt; const &amp;features, Iterator priors) const </argsstring>
        <name>predictLabel</name>
        <param>
          <type>MultiArrayView&lt; 2, U, C &gt; const &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>Iterator</type>
          <declname>priors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest_deprec.hxx" line="826" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest_deprec.hxx" bodystart="1042" bodyend="1054"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga35b12cc053e7fd5d5b4545c625c3fabd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class C1</type>
          </param>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class C2</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void predictNodes</definition>
        <argsstring>(MultiArrayView&lt; 2, U, C1 &gt; const &amp;features, MultiArrayView&lt; 2, T, C2 &gt; &amp;NodeIDs) const </argsstring>
        <name>predictNodes</name>
        <param>
          <type>MultiArrayView&lt; 2, U, C1 &gt; const &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>MultiArrayView&lt; 2, T, C2 &gt; &amp;</type>
          <declname>NodeIDs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest_deprec.hxx" line="834" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest_deprec.hxx" bodystart="1117" bodyend="1134"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1gadb9a6a9750599f1d81ef5eb8ebd52243" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class C1</type>
          </param>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class C2</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void predictProbabilities</definition>
        <argsstring>(MultiArrayView&lt; 2, U, C1 &gt; const &amp;features, MultiArrayView&lt; 2, T, C2 &gt; &amp;prob) const </argsstring>
        <name>predictProbabilities</name>
        <param>
          <type>MultiArrayView&lt; 2, U, C1 &gt; const &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>MultiArrayView&lt; 2, T, C2 &gt; &amp;</type>
          <declname>prob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest_deprec.hxx" line="830" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest_deprec.hxx" bodystart="1059" bodyend="1111"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga58eff83a90ab5b8ee0d887d6e52ce796" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class C1</type>
          </param>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class C2</type>
          </param>
          <param>
            <type>class Stop_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void predictProbabilities</definition>
        <argsstring>(MultiArrayView&lt; 2, U, C1 &gt;const &amp;features, MultiArrayView&lt; 2, T, C2 &gt; &amp;prob, Stop_t &amp;stop_) const </argsstring>
        <name>predictProbabilities</name>
        <param>
          <type>MultiArrayView&lt; 2, U, C1 &gt;const &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>MultiArrayView&lt; 2, T, C2 &gt; &amp;</type>
          <declname>prob</declname>
        </param>
        <param>
          <type>Stop_t &amp;</type>
          <declname>stop_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" line="1191" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" bodystart="1188" bodyend="1264"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga43389b35751e5ccceff79e0a1d7a8be1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>RandomForestProgressVisitor</definition>
        <argsstring>()</argsstring>
        <name>RandomForestProgressVisitor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1451" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1451" bodyend="1451"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1gae1ccc1e1d0b2d4aaec94005e775b4db2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class C1</type>
          </param>
          <param>
            <type>class U2</type>
          </param>
          <param>
            <type>class C2</type>
          </param>
          <param>
            <type>class Split_t</type>
          </param>
          <param>
            <type>class Stop_t</type>
          </param>
          <param>
            <type>class Visitor_t</type>
          </param>
          <param>
            <type>class Random_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void reLearnTree</definition>
        <argsstring>(MultiArrayView&lt; 2, U, C1 &gt; const &amp;features, MultiArrayView&lt; 2, U2, C2 &gt; const &amp;response, int treeId, Visitor_t visitor_, Split_t split_, Stop_t stop_, Random_t &amp;random)</argsstring>
        <name>reLearnTree</name>
        <param>
          <type>MultiArrayView&lt; 2, U, C1 &gt; const &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>MultiArrayView&lt; 2, U2, C2 &gt; const &amp;</type>
          <declname>response</declname>
        </param>
        <param>
          <type>int</type>
          <declname>treeId</declname>
        </param>
        <param>
          <type>Visitor_t</type>
          <declname>visitor_</declname>
        </param>
        <param>
          <type>Split_t</type>
          <declname>split_</declname>
        </param>
        <param>
          <type>Stop_t</type>
          <declname>stop_</declname>
        </param>
        <param>
          <type>Random_t &amp;</type>
          <declname>random</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para><xrefsect id="todo_1_todo000005"><xreftitle>Todo</xreftitle><xrefdescription><para>replace this crappy class out. It uses function pointers. and is making code slower according to me. Comment from Nathan: This is copied from Rahul, so me=Rahul </para></xrefdescription></xrefsect></para>        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" line="401" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest.hxx" bodystart="790" bodyend="883"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga41140e76b75f3909084ce8c6a4f4ce3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void reset_tree</definition>
        <argsstring>(int tree_id)</argsstring>
        <name>reset_tree</name>
        <param>
          <type>int</type>
          <declname>tree_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset a tree </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="626" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="625" bodyend="631"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1gad23fdebbe022fdb6fee05ddede523bdc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double return_val</definition>
        <argsstring>()</argsstring>
        <name>return_val</name>
        <reimplementedby refid="group__MachineLearning_1gad23fdebbe022fdb6fee05ddede523bdc">return_val</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return a double value. The value of the first visitor encountered that has a return value is returned with the <ref refid="group__MachineLearning_1ga11157c680b4f47c5592d6695b5fbac05" kindref="member">RandomForest::learn()</ref> method - or -1.0 if no return value visitor existed. This functionality basically only exists so that the OOB - visitor can return the oob error rate like in the old version of the random forest. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="216" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="215" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1gad23fdebbe022fdb6fee05ddede523bdc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double return_val</definition>
        <argsstring>()</argsstring>
        <name>return_val</name>
        <reimplements refid="group__MachineLearning_1gad23fdebbe022fdb6fee05ddede523bdc">return_val</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return a double value. The value of the first visitor encountered that has a return value is returned with the <ref refid="group__MachineLearning_1ga11157c680b4f47c5592d6695b5fbac05" kindref="member">RandomForest::learn()</ref> method - or -1.0 if no return value visitor existed. This functionality basically only exists so that the OOB - visitor can return the oob error rate like in the old version of the random forest. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="232" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="231" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1gad23fdebbe022fdb6fee05ddede523bdc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double return_val</definition>
        <argsstring>()</argsstring>
        <name>return_val</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="317" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="316" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga50a2ce599e896bfb535e70a42003ed23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sample</definition>
        <argsstring>()</argsstring>
        <name>sample</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new sample. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/sampling.hxx" line="384" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/sampling.hxx" bodystart="465" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1gad2c1ffc41c8d608120a11f8557ae0e1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void save</definition>
        <argsstring>(std::string file, std::string prefix)</argsstring>
        <name>save</name>
        <param>
          <type>std::string</type>
          <declname>file</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>prefix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1522" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1521" bodyend="1537"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga6d8acee39d76fbdb44ece3977a336c35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>VariableImportanceVisitor</definition>
        <argsstring>(int rep_cnt=10)</argsstring>
        <name>VariableImportanceVisitor</name>
        <param>
          <type>int</type>
          <declname>rep_cnt</declname>
          <defval>10</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rep_cnt</parametername>
</parameternamelist>
<parameterdescription>
<para>(defautl: 10) how often should the permutation take place. Set to 1 to make calculation faster (but possibly more instable) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1270" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1267" bodyend="1270"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga32301fb47981050340e6a927d78a2a77" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Tree</type>
          </param>
          <param>
            <type>class Split</type>
          </param>
          <param>
            <type>class Region</type>
          </param>
          <param>
            <type>class Feature_t</type>
          </param>
          <param>
            <type>class Label_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_after_split</definition>
        <argsstring>(Tree &amp;tree, Split &amp;split, Region &amp;parent, Region &amp;leftChild, Region &amp;rightChild, Feature_t &amp;features, Label_t &amp;labels)</argsstring>
        <name>visit_after_split</name>
        <reimplementedby refid="group__MachineLearning_1ga32301fb47981050340e6a927d78a2a77">visit_after_split</reimplementedby>
        <reimplementedby refid="group__MachineLearning_1ga32301fb47981050340e6a927d78a2a77">visit_after_split</reimplementedby>
        <reimplementedby refid="group__MachineLearning_1ga32301fb47981050340e6a927d78a2a77">visit_after_split</reimplementedby>
        <param>
          <type>Tree &amp;</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>Split &amp;</type>
          <declname>split</declname>
        </param>
        <param>
          <type>Region &amp;</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>Region &amp;</type>
          <declname>leftChild</declname>
        </param>
        <param>
          <type>Region &amp;</type>
          <declname>rightChild</declname>
        </param>
        <param>
          <type>Feature_t &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>Label_t &amp;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>do something after the the Split has decided how to process the Region (Stack entry)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the tree that is currently being learned </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>split</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the split object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>current stack entry which was used to decide the split </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>leftChild</parametername>
</parameternamelist>
<parameterdescription>
<para>left stack entry that will be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rightChild</parametername>
</parameternamelist>
<parameterdescription>
<para>right stack entry that will be pushed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>features</parametername>
</parameternamelist>
<parameterdescription>
<para>features matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>labels</parametername>
</parameternamelist>
<parameterdescription>
<para>label matrix </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>RF_Traits::StackEntry_t </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="149" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="142" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga32301fb47981050340e6a927d78a2a77" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Tree</type>
          </param>
          <param>
            <type>class Split</type>
          </param>
          <param>
            <type>class Region</type>
          </param>
          <param>
            <type>class Feature_t</type>
          </param>
          <param>
            <type>class Label_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_after_split</definition>
        <argsstring>(Tree &amp;tree, Split &amp;split, Region &amp;parent, Region &amp;leftChild, Region &amp;rightChild, Feature_t &amp;features, Label_t &amp;labels)</argsstring>
        <name>visit_after_split</name>
        <param>
          <type>Tree &amp;</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>Split &amp;</type>
          <declname>split</declname>
        </param>
        <param>
          <type>Region &amp;</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>Region &amp;</type>
          <declname>leftChild</declname>
        </param>
        <param>
          <type>Region &amp;</type>
          <declname>rightChild</declname>
        </param>
        <param>
          <type>Feature_t &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>Label_t &amp;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="269" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="262" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga32301fb47981050340e6a927d78a2a77" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Tree</type>
          </param>
          <param>
            <type>class Split</type>
          </param>
          <param>
            <type>class Region</type>
          </param>
          <param>
            <type>class Feature_t</type>
          </param>
          <param>
            <type>class Label_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_after_split</definition>
        <argsstring>(Tree &amp;tree, Split &amp;split, Region &amp;parent, Region &amp;leftChild, Region &amp;rightChild, Feature_t &amp;features, Label_t &amp;labels)</argsstring>
        <name>visit_after_split</name>
        <reimplements refid="group__MachineLearning_1ga32301fb47981050340e6a927d78a2a77">visit_after_split</reimplements>
        <param>
          <type>Tree &amp;</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>Split &amp;</type>
          <declname>split</declname>
        </param>
        <param>
          <type>Region &amp;</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>Region &amp;</type>
          <declname>leftChild</declname>
        </param>
        <param>
          <type>Region &amp;</type>
          <declname>rightChild</declname>
        </param>
        <param>
          <type>Feature_t &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>Label_t &amp;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>do something after the the Split has decided how to process the Region (Stack entry)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the tree that is currently being learned </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>split</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the split object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>current stack entry which was used to decide the split </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>leftChild</parametername>
</parameternamelist>
<parameterdescription>
<para>left stack entry that will be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rightChild</parametername>
</parameternamelist>
<parameterdescription>
<para>right stack entry that will be pushed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>features</parametername>
</parameternamelist>
<parameterdescription>
<para>features matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>labels</parametername>
</parameternamelist>
<parameterdescription>
<para>label matrix </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>RF_Traits::StackEntry_t </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="649" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="642" bodyend="692"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga32301fb47981050340e6a927d78a2a77" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Tree</type>
          </param>
          <param>
            <type>class Split</type>
          </param>
          <param>
            <type>class Region</type>
          </param>
          <param>
            <type>class Feature_t</type>
          </param>
          <param>
            <type>class Label_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_after_split</definition>
        <argsstring>(Tree &amp;tree, Split &amp;split, Region &amp;parent, Region &amp;leftChild, Region &amp;rightChild, Feature_t &amp;features, Label_t &amp;labels)</argsstring>
        <name>visit_after_split</name>
        <reimplements refid="group__MachineLearning_1ga32301fb47981050340e6a927d78a2a77">visit_after_split</reimplements>
        <param>
          <type>Tree &amp;</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>Split &amp;</type>
          <declname>split</declname>
        </param>
        <param>
          <type>Region &amp;</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>Region &amp;</type>
          <declname>leftChild</declname>
        </param>
        <param>
          <type>Region &amp;</type>
          <declname>rightChild</declname>
        </param>
        <param>
          <type>Feature_t &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>Label_t &amp;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>calculates impurity decrease based variable importance after every split. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1283" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1276" bodyend="1302"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga32301fb47981050340e6a927d78a2a77" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Tree</type>
          </param>
          <param>
            <type>class Split</type>
          </param>
          <param>
            <type>class Region</type>
          </param>
          <param>
            <type>class Feature_t</type>
          </param>
          <param>
            <type>class Label_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_after_split</definition>
        <argsstring>(Tree &amp;tree, Split &amp;split, Region &amp;parent, Region &amp;leftChild, Region &amp;rightChild, Feature_t &amp;features, Label_t &amp;labels)</argsstring>
        <name>visit_after_split</name>
        <reimplements refid="group__MachineLearning_1ga32301fb47981050340e6a927d78a2a77">visit_after_split</reimplements>
        <param>
          <type>Tree &amp;</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>Split &amp;</type>
          <declname>split</declname>
        </param>
        <param>
          <type>Region &amp;</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>Region &amp;</type>
          <declname>leftChild</declname>
        </param>
        <param>
          <type>Region &amp;</type>
          <declname>rightChild</declname>
        </param>
        <param>
          <type>Feature_t &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>Label_t &amp;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>do something after the the Split has decided how to process the Region (Stack entry)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the tree that is currently being learned </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>split</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the split object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>current stack entry which was used to decide the split </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>leftChild</parametername>
</parameternamelist>
<parameterdescription>
<para>left stack entry that will be pushed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rightChild</parametername>
</parameternamelist>
<parameterdescription>
<para>right stack entry that will be pushed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>features</parametername>
</parameternamelist>
<parameterdescription>
<para>features matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>labels</parametername>
</parameternamelist>
<parameterdescription>
<para>label matrix </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>RF_Traits::StackEntry_t </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1611" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1604" bodyend="1713"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class RF</type>
          </param>
          <param>
            <type>class PR</type>
          </param>
          <param>
            <type>class SM</type>
          </param>
          <param>
            <type>class ST</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_after_tree</definition>
        <argsstring>(RF &amp;rf, PR &amp;pr, SM &amp;sm, ST &amp;st, int index)</argsstring>
        <name>visit_after_tree</name>
        <reimplementedby refid="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76">visit_after_tree</reimplementedby>
        <reimplementedby refid="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76">visit_after_tree</reimplementedby>
        <reimplementedby refid="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76">visit_after_tree</reimplementedby>
        <reimplementedby refid="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76">visit_after_tree</reimplementedby>
        <reimplementedby refid="classvigra_1_1rf_1_1algorithms_1_1ClusterImportanceVisitor_1a7118d9515b477dfdb5e9899e118a5d76">visit_after_tree</reimplementedby>
        <reimplementedby refid="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76">visit_after_tree</reimplementedby>
        <reimplementedby refid="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76">visit_after_tree</reimplementedby>
        <param>
          <type>RF &amp;</type>
          <declname>rf</declname>
        </param>
        <param>
          <type>PR &amp;</type>
          <declname>pr</declname>
        </param>
        <param>
          <type>SM &amp;</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>ST &amp;</type>
          <declname>st</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>do something after each tree has been learned</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rf</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the random forest object that called this visitor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pr</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the preprocessor that processed the input </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sm</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the sampler object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>st</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the first stack entry </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of current tree </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="162" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="161" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class RF</type>
          </param>
          <param>
            <type>class PR</type>
          </param>
          <param>
            <type>class SM</type>
          </param>
          <param>
            <type>class ST</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_after_tree</definition>
        <argsstring>(RF &amp;rf, PR &amp;pr, SM &amp;sm, ST &amp;st, int index)</argsstring>
        <name>visit_after_tree</name>
        <param>
          <type>RF &amp;</type>
          <declname>rf</declname>
        </param>
        <param>
          <type>PR &amp;</type>
          <declname>pr</declname>
        </param>
        <param>
          <type>SM &amp;</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>ST &amp;</type>
          <declname>st</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="280" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="279" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class RF</type>
          </param>
          <param>
            <type>class PR</type>
          </param>
          <param>
            <type>class SM</type>
          </param>
          <param>
            <type>class ST</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_after_tree</definition>
        <argsstring>(RF &amp;rf, PR &amp;pr, SM &amp;sm, ST &amp;st, int index)</argsstring>
        <name>visit_after_tree</name>
        <reimplements refid="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76">visit_after_tree</reimplements>
        <param>
          <type>RF &amp;</type>
          <declname>rf</declname>
        </param>
        <param>
          <type>PR &amp;</type>
          <declname>pr</declname>
        </param>
        <param>
          <type>SM &amp;</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>ST &amp;</type>
          <declname>st</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>simply increase the tree count </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="637" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="636" bodyend="639"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class RF</type>
          </param>
          <param>
            <type>class PR</type>
          </param>
          <param>
            <type>class SM</type>
          </param>
          <param>
            <type>class ST</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_after_tree</definition>
        <argsstring>(RF &amp;rf, PR &amp;pr, SM &amp;sm, ST &amp;st, int index)</argsstring>
        <name>visit_after_tree</name>
        <reimplements refid="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76">visit_after_tree</reimplements>
        <param>
          <type>RF &amp;</type>
          <declname>rf</declname>
        </param>
        <param>
          <type>PR &amp;</type>
          <declname>pr</declname>
        </param>
        <param>
          <type>SM &amp;</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>ST &amp;</type>
          <declname>st</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>does the basic calculation per tree </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="797" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="796" bodyend="820"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class RF</type>
          </param>
          <param>
            <type>class PR</type>
          </param>
          <param>
            <type>class SM</type>
          </param>
          <param>
            <type>class ST</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_after_tree</definition>
        <argsstring>(RF &amp;rf, PR &amp;pr, SM &amp;sm, ST &amp;st, int index)</argsstring>
        <name>visit_after_tree</name>
        <reimplements refid="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76">visit_after_tree</reimplements>
        <param>
          <type>RF &amp;</type>
          <declname>rf</declname>
        </param>
        <param>
          <type>PR &amp;</type>
          <declname>pr</declname>
        </param>
        <param>
          <type>SM &amp;</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>ST &amp;</type>
          <declname>st</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>do something after each tree has been learned</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rf</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the random forest object that called this visitor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pr</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the preprocessor that processed the input </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sm</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the sampler object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>st</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the first stack entry </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of current tree </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="902" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="901" bodyend="978"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class RF</type>
          </param>
          <param>
            <type>class PR</type>
          </param>
          <param>
            <type>class SM</type>
          </param>
          <param>
            <type>class ST</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_after_tree</definition>
        <argsstring>(RF &amp;rf, PR &amp;pr, SM &amp;sm, ST &amp;st, int index)</argsstring>
        <name>visit_after_tree</name>
        <reimplements refid="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76">visit_after_tree</reimplements>
        <param>
          <type>RF &amp;</type>
          <declname>rf</declname>
        </param>
        <param>
          <type>PR &amp;</type>
          <declname>pr</declname>
        </param>
        <param>
          <type>SM &amp;</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>ST &amp;</type>
          <declname>st</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>do something after each tree has been learned</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rf</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the random forest object that called this visitor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pr</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the preprocessor that processed the input </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sm</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the sampler object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>st</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the first stack entry </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of current tree </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1108" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1107" bodyend="1187"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class RF</type>
          </param>
          <param>
            <type>class PR</type>
          </param>
          <param>
            <type>class SM</type>
          </param>
          <param>
            <type>class ST</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_after_tree</definition>
        <argsstring>(RF &amp;rf, PR &amp;pr, SM &amp;sm, ST &amp;st, int index)</argsstring>
        <name>visit_after_tree</name>
        <reimplements refid="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76">visit_after_tree</reimplements>
        <param>
          <type>RF &amp;</type>
          <declname>rf</declname>
        </param>
        <param>
          <type>PR &amp;</type>
          <declname>pr</declname>
        </param>
        <param>
          <type>SM &amp;</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>ST &amp;</type>
          <declname>st</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>calculate permutation based impurity after every tree has been learned default behaviour is that this happens out of place. If you have very big data sets and want to avoid copying of data set the in_place_ flag to true. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1434" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1433" bodyend="1436"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class RF</type>
          </param>
          <param>
            <type>class PR</type>
          </param>
          <param>
            <type>class SM</type>
          </param>
          <param>
            <type>class ST</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_after_tree</definition>
        <argsstring>(RF &amp;rf, PR &amp;pr, SM &amp;sm, ST &amp;st, int index)</argsstring>
        <name>visit_after_tree</name>
        <reimplements refid="group__MachineLearning_1ga7118d9515b477dfdb5e9899e118a5d76">visit_after_tree</reimplements>
        <param>
          <type>RF &amp;</type>
          <declname>rf</declname>
        </param>
        <param>
          <type>PR &amp;</type>
          <declname>pr</declname>
        </param>
        <param>
          <type>SM &amp;</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>ST &amp;</type>
          <declname>st</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>do something after each tree has been learned</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rf</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the random forest object that called this visitor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pr</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the preprocessor that processed the input </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sm</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the sampler object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>st</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the first stack entry </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of current tree </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1454" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1454" bodyend="1462"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga0bb047133b5a592d0ade412044bd1495" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class RF</type>
          </param>
          <param>
            <type>class PR</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_at_beginning</definition>
        <argsstring>(RF const &amp;rf, PR const &amp;pr)</argsstring>
        <name>visit_at_beginning</name>
        <reimplementedby refid="classvigra_1_1rf_1_1algorithms_1_1ClusterImportanceVisitor_1a0bb047133b5a592d0ade412044bd1495">visit_at_beginning</reimplementedby>
        <reimplementedby refid="group__MachineLearning_1ga0bb047133b5a592d0ade412044bd1495">visit_at_beginning</reimplementedby>
        <param>
          <type>RF const &amp;</type>
          <declname>rf</declname>
        </param>
        <param>
          <type>PR const &amp;</type>
          <declname>pr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>do something before learning starts</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rf</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the random forest object that called this visitor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pr</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the Processor class used. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="182" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="181" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1gaffd2adc4dcde9e125aab33b2dc1d5c8b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class RF</type>
          </param>
          <param>
            <type>class PR</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_at_beginning</definition>
        <argsstring>(RF &amp;rf, PR &amp;pr)</argsstring>
        <name>visit_at_beginning</name>
        <param>
          <type>RF &amp;</type>
          <declname>rf</declname>
        </param>
        <param>
          <type>PR &amp;</type>
          <declname>pr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="288" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="287" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga1de14e8b5f94d36956d5632e40d7a0bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class RF</type>
          </param>
          <param>
            <type>class PR</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_at_beginning</definition>
        <argsstring>(RF &amp;rf, const PR &amp;pr)</argsstring>
        <name>visit_at_beginning</name>
        <param>
          <type>RF &amp;</type>
          <declname>rf</declname>
        </param>
        <param>
          <type>const PR &amp;</type>
          <declname>pr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize, set the number of trees </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="618" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="617" bodyend="621"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1gaffd2adc4dcde9e125aab33b2dc1d5c8b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class RF</type>
          </param>
          <param>
            <type>class PR</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_at_beginning</definition>
        <argsstring>(RF &amp;rf, PR &amp;pr)</argsstring>
        <name>visit_at_beginning</name>
        <param>
          <type>RF &amp;</type>
          <declname>rf</declname>
        </param>
        <param>
          <type>PR &amp;</type>
          <declname>pr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="884" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="883" bodyend="898"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1gaffd2adc4dcde9e125aab33b2dc1d5c8b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class RF</type>
          </param>
          <param>
            <type>class PR</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_at_beginning</definition>
        <argsstring>(RF &amp;rf, PR &amp;pr)</argsstring>
        <name>visit_at_beginning</name>
        <param>
          <type>RF &amp;</type>
          <declname>rf</declname>
        </param>
        <param>
          <type>PR &amp;</type>
          <declname>pr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1087" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1086" bodyend="1104"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga0bb047133b5a592d0ade412044bd1495" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class RF</type>
          </param>
          <param>
            <type>class PR</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_at_beginning</definition>
        <argsstring>(RF const &amp;rf, PR const &amp;pr)</argsstring>
        <name>visit_at_beginning</name>
        <reimplements refid="group__MachineLearning_1ga0bb047133b5a592d0ade412044bd1495">visit_at_beginning</reimplements>
        <param>
          <type>RF const &amp;</type>
          <declname>rf</declname>
        </param>
        <param>
          <type>PR const &amp;</type>
          <declname>pr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>do something before learning starts</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rf</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the random forest object that called this visitor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pr</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the Processor class used. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1471" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1471" bodyend="1474"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga7fd53731c61fa0f3d765275b68a78d00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class RF</type>
          </param>
          <param>
            <type>class PR</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_at_beginning</definition>
        <argsstring>(RF const &amp;rf, PR &amp;pr)</argsstring>
        <name>visit_at_beginning</name>
        <param>
          <type>RF const &amp;</type>
          <declname>rf</declname>
        </param>
        <param>
          <type>PR &amp;</type>
          <declname>pr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1540" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1539" bodyend="1560"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1gab8c2515ae9343881cc5999fc61821fdc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class RF</type>
          </param>
          <param>
            <type>class PR</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_at_end</definition>
        <argsstring>(RF const &amp;rf, PR const &amp;pr)</argsstring>
        <name>visit_at_end</name>
        <reimplementedby refid="group__MachineLearning_1gab8c2515ae9343881cc5999fc61821fdc">visit_at_end</reimplementedby>
        <reimplementedby refid="group__MachineLearning_1gab8c2515ae9343881cc5999fc61821fdc">visit_at_end</reimplementedby>
        <param>
          <type>RF const &amp;</type>
          <declname>rf</declname>
        </param>
        <param>
          <type>PR const &amp;</type>
          <declname>pr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>do something after all trees have been learned</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rf</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the random forest object that called this visitor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pr</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the preprocessor that processed the input </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="172" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="171" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga8680ab265a8c9c57f39c75bd51a186e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class RF</type>
          </param>
          <param>
            <type>class PR</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_at_end</definition>
        <argsstring>(RF &amp;rf, PR &amp;pr)</argsstring>
        <name>visit_at_end</name>
        <param>
          <type>RF &amp;</type>
          <declname>rf</declname>
        </param>
        <param>
          <type>PR &amp;</type>
          <declname>pr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="295" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="294" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga8680ab265a8c9c57f39c75bd51a186e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class RF</type>
          </param>
          <param>
            <type>class PR</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_at_end</definition>
        <argsstring>(RF &amp;rf, PR &amp;pr)</argsstring>
        <name>visit_at_end</name>
        <param>
          <type>RF &amp;</type>
          <declname>rf</declname>
        </param>
        <param>
          <type>PR &amp;</type>
          <declname>pr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Does the normalisation </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="826" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="825" bodyend="837"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga8680ab265a8c9c57f39c75bd51a186e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class RF</type>
          </param>
          <param>
            <type>class PR</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_at_end</definition>
        <argsstring>(RF &amp;rf, PR &amp;pr)</argsstring>
        <name>visit_at_end</name>
        <param>
          <type>RF &amp;</type>
          <declname>rf</declname>
        </param>
        <param>
          <type>PR &amp;</type>
          <declname>pr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Normalise variable importance after the number of trees is known. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="984" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="983" bodyend="998"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga8680ab265a8c9c57f39c75bd51a186e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class RF</type>
          </param>
          <param>
            <type>class PR</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_at_end</definition>
        <argsstring>(RF &amp;rf, PR &amp;pr)</argsstring>
        <name>visit_at_end</name>
        <param>
          <type>RF &amp;</type>
          <declname>rf</declname>
        </param>
        <param>
          <type>PR &amp;</type>
          <declname>pr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Normalise variable importance after the number of trees is known. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1193" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1192" bodyend="1214"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga8680ab265a8c9c57f39c75bd51a186e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class RF</type>
          </param>
          <param>
            <type>class PR</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_at_end</definition>
        <argsstring>(RF &amp;rf, PR &amp;pr)</argsstring>
        <name>visit_at_end</name>
        <param>
          <type>RF &amp;</type>
          <declname>rf</declname>
        </param>
        <param>
          <type>PR &amp;</type>
          <declname>pr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Normalise variable importance after the number of trees is known. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1442" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1441" bodyend="1444"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1gab8c2515ae9343881cc5999fc61821fdc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class RF</type>
          </param>
          <param>
            <type>class PR</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_at_end</definition>
        <argsstring>(RF const &amp;rf, PR const &amp;pr)</argsstring>
        <name>visit_at_end</name>
        <reimplements refid="group__MachineLearning_1gab8c2515ae9343881cc5999fc61821fdc">visit_at_end</reimplements>
        <param>
          <type>RF const &amp;</type>
          <declname>rf</declname>
        </param>
        <param>
          <type>PR const &amp;</type>
          <declname>pr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>do something after all trees have been learned</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rf</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the random forest object that called this visitor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pr</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the preprocessor that processed the input </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1465" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1465" bodyend="1468"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1gab8c2515ae9343881cc5999fc61821fdc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class RF</type>
          </param>
          <param>
            <type>class PR</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_at_end</definition>
        <argsstring>(RF const &amp;rf, PR const &amp;pr)</argsstring>
        <name>visit_at_end</name>
        <reimplements refid="group__MachineLearning_1gab8c2515ae9343881cc5999fc61821fdc">visit_at_end</reimplements>
        <param>
          <type>RF const &amp;</type>
          <declname>rf</declname>
        </param>
        <param>
          <type>PR const &amp;</type>
          <declname>pr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>do something after all trees have been learned</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rf</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the random forest object that called this visitor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pr</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the preprocessor that processed the input </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="1563" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="1562" bodyend="1601"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga29d5e6cebbbae7f0a170f82ed7a98fc3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TR</type>
          </param>
          <param>
            <type>class IntT</type>
          </param>
          <param>
            <type>class TopT</type>
          </param>
          <param>
            <type>class Feat</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_external_node</definition>
        <argsstring>(TR &amp;tr, IntT index, TopT node_t, Feat &amp;features)</argsstring>
        <name>visit_external_node</name>
        <param>
          <type>TR &amp;</type>
          <declname>tr</declname>
        </param>
        <param>
          <type>IntT</type>
          <declname>index</declname>
        </param>
        <param>
          <type>TopT</type>
          <declname>node_t</declname>
        </param>
        <param>
          <type>Feat &amp;</type>
          <declname>features</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>do some thing while traversing tree after it has been learned (external nodes)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tr</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the tree object that called this visitor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>index in the topology_ array we currently are at </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node_t</parametername>
</parameternamelist>
<parameterdescription>
<para>type of node we have (will be e_.... - ) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>features</parametername>
</parameternamelist>
<parameterdescription>
<para>feature matrix </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>NodeTags;</para></simplesect>
you can create the node by using a switch on node_tag and using the corresponding Node objects. Or - if you do not care about the type use the <ref refid="classvigra_1_1NodeBase" kindref="compound">NodeBase</ref> class. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="198" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="197" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga6c27902da3b3a19331cd1736be7866b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TR</type>
          </param>
          <param>
            <type>class IntT</type>
          </param>
          <param>
            <type>class TopT</type>
          </param>
          <param>
            <type>class Feat</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_external_node</definition>
        <argsstring>(TR &amp;tr, IntT &amp;index, TopT &amp;node_t, Feat &amp;features)</argsstring>
        <name>visit_external_node</name>
        <param>
          <type>TR &amp;</type>
          <declname>tr</declname>
        </param>
        <param>
          <type>IntT &amp;</type>
          <declname>index</declname>
        </param>
        <param>
          <type>TopT &amp;</type>
          <declname>node_t</declname>
        </param>
        <param>
          <type>Feat &amp;</type>
          <declname>features</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="303" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="302" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga0be1525336a154f011efa8f86e56db7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TR</type>
          </param>
          <param>
            <type>class IntT</type>
          </param>
          <param>
            <type>class TopT</type>
          </param>
          <param>
            <type>class Feat</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_internal_node</definition>
        <argsstring>(TR &amp;tr, IntT index, TopT node_t, Feat &amp;features)</argsstring>
        <name>visit_internal_node</name>
        <reimplementedby refid="group__MachineLearning_1ga0be1525336a154f011efa8f86e56db7c">visit_internal_node</reimplementedby>
        <param>
          <type>TR &amp;</type>
          <declname>tr</declname>
        </param>
        <param>
          <type>IntT</type>
          <declname>index</declname>
        </param>
        <param>
          <type>TopT</type>
          <declname>node_t</declname>
        </param>
        <param>
          <type>Feat &amp;</type>
          <declname>features</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>do something when visiting a internal node after it has been learned</para><para><simplesect kind="see"><para><ref refid="group__MachineLearning_1ga29d5e6cebbbae7f0a170f82ed7a98fc3" kindref="member">visit_external_node</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="206" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="205" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga9657b3aef28e1a1fee12d1673bc1afeb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TR</type>
          </param>
          <param>
            <type>class IntT</type>
          </param>
          <param>
            <type>class TopT</type>
          </param>
          <param>
            <type>class Feat</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_internal_node</definition>
        <argsstring>(TR &amp;tr, IntT &amp;index, TopT &amp;node_t, Feat &amp;features)</argsstring>
        <name>visit_internal_node</name>
        <param>
          <type>TR &amp;</type>
          <declname>tr</declname>
        </param>
        <param>
          <type>IntT &amp;</type>
          <declname>index</declname>
        </param>
        <param>
          <type>TopT &amp;</type>
          <declname>node_t</declname>
        </param>
        <param>
          <type>Feat &amp;</type>
          <declname>features</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="310" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="309" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga0be1525336a154f011efa8f86e56db7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class TR</type>
          </param>
          <param>
            <type>class IntT</type>
          </param>
          <param>
            <type>class TopT</type>
          </param>
          <param>
            <type>class Feat</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void visit_internal_node</definition>
        <argsstring>(TR &amp;tr, IntT index, TopT node_t, Feat &amp;features)</argsstring>
        <name>visit_internal_node</name>
        <reimplements refid="group__MachineLearning_1ga0be1525336a154f011efa8f86e56db7c">visit_internal_node</reimplements>
        <param>
          <type>TR &amp;</type>
          <declname>tr</declname>
        </param>
        <param>
          <type>IntT</type>
          <declname>index</declname>
        </param>
        <param>
          <type>TopT</type>
          <declname>node_t</declname>
        </param>
        <param>
          <type>Feat &amp;</type>
          <declname>features</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>do something when visiting a internal node during getToLeaf</para><para>remember as last node id, for finding the parent of the last external node also: adjust class counts and borders </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="714" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="713" bodyend="750"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga94a7dec8e9fdb7896ac8012817e60cc7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>VisitorBase</definition>
        <argsstring>()</argsstring>
        <name>VisitorBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="117" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="115" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1gada0e2559df06b18e133078af5b48c12b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>VisitorNode</definition>
        <argsstring>(Visitor &amp;visitor, Next &amp;next)</argsstring>
        <name>VisitorNode</name>
        <param>
          <type>Visitor &amp;</type>
          <declname>visitor</declname>
        </param>
        <param>
          <type>Next &amp;</type>
          <declname>next</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="254" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="251" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="group__MachineLearning_1ga5144443676bb07863c73684dcf4d5f16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>VisitorNode</definition>
        <argsstring>(Visitor &amp;visitor)</argsstring>
        <name>VisitorNode</name>
        <param>
          <type>Visitor &amp;</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" line="259" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/rf_visitors.hxx" bodystart="256" bodyend="259"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This module provides classification algorithms that map features to labels or label probabilities. Look at the <ref refid="classvigra_1_1RandomForest" kindref="compound">RandomForest</ref> class first for a overview of most of the functionality provided as well as use cases. </para>    </detaileddescription>
  </compounddef>
</doxygen>
