<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="TinyVectorTraits" kind="page">
    <compoundname>TinyVectorTraits</compoundname>
    <title>Numeric and Promote Traits of TinyVector</title>
    <detaileddescription>
<para>The numeric and promote traits for TinyVectors follow the general specifications for <ref refid="NumericPromotionTraits" kindref="compound">Numeric and Promotion Traits</ref>. They are implemented in terms of the traits of the basic types by partial template specialization:</para><para><programlisting><codeline><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE&gt;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">NumericTraits&lt;TinyVector&lt;T,<sp/>SIZE&gt;<sp/>&gt;</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;typename<sp/>NumericTraits&lt;T&gt;::Promote,<sp/>SIZE&gt;<sp/>Promote;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;typename<sp/>NumericTraits&lt;T&gt;::RealPromote,<sp/>SIZE&gt;<sp/>RealPromote;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::isIntegral<sp/>isIntegral;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VigraFalseType<sp/>isScalar;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericTraits&lt;T&gt;::isSigned<sp/>isSigned;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SIZE&gt;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">NormTraits&lt;TinyVector&lt;T,<sp/>SIZE&gt;<sp/>&gt;</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;T,<sp/>SIZE&gt;<sp/>Type;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Type::SquaredNormType<sp/><sp/><sp/><sp/>SquaredNormType;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Type::NormType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NormType;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T2,<sp/>SIZE&gt;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PromoteTraits&lt;TinyVector&lt;T1,<sp/>SIZE&gt;,<sp/>TinyVector&lt;T2,<sp/>SIZE&gt;<sp/>&gt;</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TinyVector&lt;typename<sp/>PromoteTraits&lt;T1,<sp/>T2&gt;::Promote,<sp/>SIZE&gt;<sp/>Promote;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting></para><para><bold>#include</bold> &lt;<ref refid="tinyvector_8hxx_source" kindref="compound">vigra/tinyvector.hxx</ref>&gt;<linebreak/>
 Namespace: vigra</para><para>On compilers that don&apos;t support partial template specialization (e.g. MS VisualC++), the traits classes are explicitly specialized for <computeroutput>TinyVector&lt;VALUETYPE, SIZE&gt;</computeroutput> with <computeroutput>VALUETYPE = unsigned char | int | float | double</computeroutput> and <computeroutput>SIZE = 2 | 3 | 4</computeroutput>. </para>    </detaileddescription>
  </compounddef>
</doxygen>
