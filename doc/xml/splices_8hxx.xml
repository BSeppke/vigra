<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="splices_8hxx" kind="file">
    <compoundname>splices.hxx</compoundname>
    <includes refid="multi__array_8hxx" local="no">vigra/multi_array.hxx</includes>
    <includes local="no">iterator</includes>
    <includedby refid="rf__algorithm_8hxx" local="yes">vigra/random_forest/rf_algorithm.hxx</includedby>
    <incdepgraph>
      <node id="7122">
        <label>functional</label>
      </node>
      <node id="7103">
        <label>limits</label>
      </node>
      <node id="7107">
        <label>sized_int.hxx</label>
        <link refid="sized__int_8hxx_source"/>
        <childnode refid="7098" relation="include">
        </childnode>
        <childnode refid="7103" relation="include">
        </childnode>
      </node>
      <node id="7123">
        <label>iterator</label>
      </node>
      <node id="7094">
        <label>vigra/multi_array.hxx</label>
        <link refid="multi__array_8hxx_source"/>
        <childnode refid="7095" relation="include">
        </childnode>
        <childnode refid="7096" relation="include">
        </childnode>
        <childnode refid="7097" relation="include">
        </childnode>
        <childnode refid="7111" relation="include">
        </childnode>
        <childnode refid="7129" relation="include">
        </childnode>
        <childnode refid="7131" relation="include">
        </childnode>
        <childnode refid="7132" relation="include">
        </childnode>
        <childnode refid="7104" relation="include">
        </childnode>
        <childnode refid="7136" relation="include">
        </childnode>
        <childnode refid="7098" relation="include">
        </childnode>
        <childnode refid="7119" relation="include">
        </childnode>
      </node>
      <node id="7121">
        <label>inspector_passes.hxx</label>
        <link refid="inspector__passes_8hxx_source"/>
        <childnode refid="7098" relation="include">
        </childnode>
      </node>
      <node id="7108">
        <label>promote_traits.hxx</label>
        <link refid="promote__traits_8hxx_source"/>
      </node>
      <node id="7134">
        <label>initimage.hxx</label>
        <link refid="initimage_8hxx_source"/>
        <childnode refid="7133" relation="include">
        </childnode>
        <childnode refid="7126" relation="include">
        </childnode>
        <childnode refid="7135" relation="include">
        </childnode>
      </node>
      <node id="7120">
        <label>algorithm.hxx</label>
        <link refid="algorithm_8hxx_source"/>
        <childnode refid="7107" relation="include">
        </childnode>
        <childnode refid="7104" relation="include">
        </childnode>
        <childnode refid="7121" relation="include">
        </childnode>
        <childnode refid="7096" relation="include">
        </childnode>
        <childnode refid="7122" relation="include">
        </childnode>
        <childnode refid="7123" relation="include">
        </childnode>
      </node>
      <node id="7112">
        <label>cmath</label>
      </node>
      <node id="7101">
        <label>stdexcept</label>
      </node>
      <node id="7135">
        <label>functortraits.hxx</label>
        <link refid="functortraits_8hxx_source"/>
        <childnode refid="7122" relation="include">
        </childnode>
        <childnode refid="7098" relation="include">
        </childnode>
      </node>
      <node id="7125">
        <label>iteratortags.hxx</label>
        <link refid="iteratortags_8hxx_source"/>
        <childnode refid="7123" relation="include">
        </childnode>
      </node>
      <node id="7117">
        <label>string</label>
      </node>
      <node id="7131">
        <label>basicimageview.hxx</label>
        <link refid="basicimageview_8hxx_source"/>
        <childnode refid="7132" relation="include">
        </childnode>
        <childnode refid="7134" relation="include">
        </childnode>
      </node>
      <node id="7126">
        <label>iteratortraits.hxx</label>
        <link refid="iteratortraits_8hxx_source"/>
        <childnode refid="7097" relation="include">
        </childnode>
        <childnode refid="7127" relation="include">
        </childnode>
      </node>
      <node id="7105">
        <label>cfloat</label>
      </node>
      <node id="7133">
        <label>utilities.hxx</label>
        <link refid="utilities_8hxx_source"/>
        <childnode refid="7099" relation="include">
        </childnode>
        <childnode refid="7115" relation="include">
        </childnode>
        <childnode refid="7098" relation="include">
        </childnode>
        <childnode refid="7109" relation="include">
        </childnode>
        <childnode refid="7124" relation="include">
        </childnode>
        <childnode refid="7119" relation="include">
        </childnode>
        <childnode refid="7117" relation="include">
        </childnode>
        <childnode refid="7116" relation="include">
        </childnode>
      </node>
      <node id="7100">
        <label>vigra/configVersion.hxx</label>
        <link refid="configVersion_8hxx_source"/>
      </node>
      <node id="7109">
        <label>tuple.hxx</label>
        <link refid="tuple_8hxx_source"/>
        <childnode refid="7110" relation="include">
        </childnode>
      </node>
      <node id="7111">
        <label>tinyvector.hxx</label>
        <link refid="tinyvector_8hxx_source"/>
        <childnode refid="7112" relation="include">
        </childnode>
        <childnode refid="7113" relation="include">
        </childnode>
        <childnode refid="7114" relation="include">
        </childnode>
        <childnode refid="7096" relation="include">
        </childnode>
        <childnode refid="7099" relation="include">
        </childnode>
        <childnode refid="7115" relation="include">
        </childnode>
        <childnode refid="7098" relation="include">
        </childnode>
        <childnode refid="7104" relation="include">
        </childnode>
        <childnode refid="7118" relation="include">
        </childnode>
        <childnode refid="7119" relation="include">
        </childnode>
        <childnode refid="7124" relation="include">
        </childnode>
      </node>
      <node id="7137">
        <label>sys/types.h</label>
      </node>
      <node id="7119">
        <label>mathutil.hxx</label>
        <link refid="mathutil_8hxx_source"/>
        <childnode refid="7112" relation="include">
        </childnode>
        <childnode refid="7113" relation="include">
        </childnode>
        <childnode refid="7106" relation="include">
        </childnode>
        <childnode refid="7099" relation="include">
        </childnode>
        <childnode refid="7115" relation="include">
        </childnode>
        <childnode refid="7109" relation="include">
        </childnode>
        <childnode refid="7107" relation="include">
        </childnode>
        <childnode refid="7104" relation="include">
        </childnode>
        <childnode refid="7120" relation="include">
        </childnode>
      </node>
      <node id="7099">
        <label>config.hxx</label>
        <link refid="config_8hxx_source"/>
        <childnode refid="7100" relation="include">
        </childnode>
        <childnode refid="7101" relation="include">
        </childnode>
      </node>
      <node id="7104">
        <label>numerictraits.hxx</label>
        <link refid="numerictraits_8hxx_source"/>
        <childnode refid="7102" relation="include">
        </childnode>
        <childnode refid="7103" relation="include">
        </childnode>
        <childnode refid="7105" relation="include">
        </childnode>
        <childnode refid="7106" relation="include">
        </childnode>
        <childnode refid="7098" relation="include">
        </childnode>
        <childnode refid="7107" relation="include">
        </childnode>
        <childnode refid="7108" relation="include">
        </childnode>
      </node>
      <node id="7132">
        <label>imageiterator.hxx</label>
        <link refid="imageiterator_8hxx_source"/>
        <childnode refid="7133" relation="include">
        </childnode>
        <childnode refid="7097" relation="include">
        </childnode>
        <childnode refid="7126" relation="include">
        </childnode>
        <childnode refid="7098" relation="include">
        </childnode>
      </node>
      <node id="7128">
        <label>iteratoradapter.hxx</label>
        <link refid="iteratoradapter_8hxx_source"/>
      </node>
      <node id="7127">
        <label>imageiteratoradapter.hxx</label>
        <link refid="imageiteratoradapter_8hxx_source"/>
        <childnode refid="7123" relation="include">
        </childnode>
      </node>
      <node id="7110">
        <label>utility</label>
      </node>
      <node id="7116">
        <label>sstream</label>
      </node>
      <node id="7129">
        <label>rgbvalue.hxx</label>
        <link refid="rgbvalue_8hxx_source"/>
        <childnode refid="7112" relation="include">
        </childnode>
        <childnode refid="7113" relation="include">
        </childnode>
        <childnode refid="7099" relation="include">
        </childnode>
        <childnode refid="7104" relation="include">
        </childnode>
        <childnode refid="7097" relation="include">
        </childnode>
        <childnode refid="7111" relation="include">
        </childnode>
        <childnode refid="7130" relation="include">
        </childnode>
      </node>
      <node id="7124">
        <label>diff2d.hxx</label>
        <link refid="diff2d_8hxx_source"/>
        <childnode refid="7112" relation="include">
        </childnode>
        <childnode refid="7114" relation="include">
        </childnode>
        <childnode refid="7099" relation="include">
        </childnode>
        <childnode refid="7125" relation="include">
        </childnode>
        <childnode refid="7126" relation="include">
        </childnode>
        <childnode refid="7128" relation="include">
        </childnode>
        <childnode refid="7109" relation="include">
        </childnode>
      </node>
      <node id="7115">
        <label>error.hxx</label>
        <link refid="error_8hxx_source"/>
        <childnode refid="7101" relation="include">
        </childnode>
        <childnode refid="7116" relation="include">
        </childnode>
        <childnode refid="7117" relation="include">
        </childnode>
        <childnode refid="7099" relation="include">
        </childnode>
      </node>
      <node id="7130">
        <label>static_assert.hxx</label>
        <link refid="static__assert_8hxx_source"/>
      </node>
      <node id="7114">
        <label>iosfwd</label>
      </node>
      <node id="7113">
        <label>cstdlib</label>
      </node>
      <node id="7136">
        <label>multi_iterator.hxx</label>
        <link refid="multi__iterator_8hxx_source"/>
        <childnode refid="7137" relation="include">
        </childnode>
        <childnode refid="7111" relation="include">
        </childnode>
        <childnode refid="7125" relation="include">
        </childnode>
      </node>
      <node id="7093">
        <label>vigra/random_forest/splices.hxx</label>
        <link refid="splices.hxx"/>
        <childnode refid="7094" relation="include">
        </childnode>
        <childnode refid="7123" relation="include">
        </childnode>
      </node>
      <node id="7102">
        <label>climits</label>
      </node>
      <node id="7098">
        <label>metaprogramming.hxx</label>
        <link refid="metaprogramming_8hxx_source"/>
        <childnode refid="7099" relation="include">
        </childnode>
        <childnode refid="7102" relation="include">
        </childnode>
        <childnode refid="7103" relation="include">
        </childnode>
        <childnode refid="7096" relation="include">
        </childnode>
      </node>
      <node id="7106">
        <label>complex</label>
      </node>
      <node id="7096">
        <label>algorithm</label>
      </node>
      <node id="7118">
        <label>memory.hxx</label>
        <link refid="memory_8hxx_source"/>
        <childnode refid="7098" relation="include">
        </childnode>
      </node>
      <node id="7097">
        <label>accessor.hxx</label>
        <link refid="accessor_8hxx_source"/>
        <childnode refid="7098" relation="include">
        </childnode>
        <childnode refid="7104" relation="include">
        </childnode>
        <childnode refid="7109" relation="include">
        </childnode>
      </node>
      <node id="7095">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7141">
        <label>vigra/random_forest_hdf5_impex.hxx</label>
        <link refid="random__forest__hdf5__impex_8hxx_source"/>
      </node>
      <node id="7139">
        <label>vigra/random_forest/rf_algorithm.hxx</label>
        <link refid="rf__algorithm_8hxx_source"/>
        <childnode refid="7140" relation="include">
        </childnode>
      </node>
      <node id="7140">
        <label>vigra/random_forest.hxx</label>
        <link refid="random__forest_8hxx_source"/>
        <childnode refid="7141" relation="include">
        </childnode>
      </node>
      <node id="7138">
        <label>vigra/random_forest/splices.hxx</label>
        <link refid="splices.hxx"/>
        <childnode refid="7139" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classvigra_1_1Splice" prot="public">vigra::Splice</innerclass>
    <innerclass refid="classvigra_1_1Splice_3_01int_01_4" prot="public">vigra::Splice&lt; int &gt;</innerclass>
    <innernamespace refid="namespacevigra">vigra</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>SPLICES_HXX</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SPLICES_HXX</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;vigra/multi_array.hxx&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iterator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vigra</highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment">/**<sp/>Idea<sp/>for<sp/>a<sp/>class<sp/>to<sp/>use<sp/>for<sp/>easy<sp/>splicing</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>usage<sp/>(with<sp/>factory<sp/>function<sp/>_spl)</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>//<sp/>copy<sp/>every<sp/>even<sp/>indexed<sp/>element<sp/>to<sp/>a<sp/>5<sp/>x<sp/>5<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>//<sp/>sized<sp/>matrix</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>Matrix&lt;double&gt;<sp/>a(10,<sp/>10)</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>MultiArrayView&lt;2,double&gt;<sp/>b(_spl_shp(_spl(0,2,10),</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_spl(0,2,10)));</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>copy_splice(_spl(0,2,10),_spl(0,2,10),<sp/>a,<sp/>b);</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>it<sp/>is<sp/>also<sp/>possible<sp/>to<sp/>supply<sp/>iterator<sp/>ranges</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>std::vector&lt;int&gt;<sp/>indices;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>indices.push_back(3)<sp/>(...)</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>copy_splice(_spl(indices.begin(),<sp/>indices.end()),</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_spl(a.shape(1)),</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a,<sp/>b)</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>if<sp/>you<sp/>only<sp/>have<sp/>a<sp/>forward<sp/>iterator<sp/>then<sp/>you<sp/>must</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>specify<sp/>the<sp/>size<sp/>of<sp/>the<sp/>splice<sp/>with<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>_spl(set.begin(),<sp/>set.end(),<sp/>set.size());</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>ok..<sp/>what<sp/>we<sp/>actually<sp/>need<sp/>is<sp/>a<sp/>decent<sp/>iota<sp/>iterator</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>or<sp/>something<sp/>like<sp/>xrange<sp/>but<sp/>for<sp/>now<sp/>it<sp/>should<sp/>suffice.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="35" refid="classvigra_1_1Splice" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1Splice" kindref="compound">Splice</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size_;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>begin_;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>end_;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Splice" kindref="compound">Splice</ref>(T<sp/><sp/>&amp;begin,<sp/>T<sp/>&amp;end)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>size_(std::distance(begin,<sp/>end)),</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>begin_(begin),</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_(end)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>operator[](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>ii<sp/>=<sp/>begin_;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::advance(ii,<sp/>index);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*ii;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size()</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size_;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal">};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classvigra_1_1Splice" kindref="compound">Splice</ref>&lt;int&gt;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>begin_;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interval_;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size_;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classvigra_1_1Splice" kindref="compound">Splice</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>begin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>begin_(begin),<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>interval_(1),</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end_(end),</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>size_(end<sp/>-<sp/>begin)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>Splice(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>begin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interval,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end)<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>begin_(begin),<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>interval_(interval),</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end_(end),</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>size_(int(std::<ref refid="group__FixedPointOperations_1gaf8fe85520fc0bc2d77ec8e6cf26f3c5d" kindref="member" tooltip="rounding down.">floor</ref>((double(end)<sp/>-double(begin))/interval)))</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>operator[](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>begin_<sp/>+<sp/>index<sp/>*<sp/>interval_;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ii;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size()</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size_;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal">};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">Splice&lt;T&gt;<sp/>_spl(T<sp/>b,<sp/>T<sp/>e)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Splice&lt;T&gt;(b,<sp/>e);</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">Splice&lt;T&gt;<sp/>_spl(T<sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/>T<sp/>e)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Splice&lt;T&gt;(b,<sp/>size,<sp/>e);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Splice&lt;int&gt;<sp/>_spl(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Splice&lt;int&gt;(0,<sp/>size);</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>MultiArrayShape&lt;2&gt;::type<sp/>_spl_shp(Splice&lt;T&gt;<sp/>f,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Splice&lt;G&gt;<sp/>h)</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classvigra_1_1MultiArrayShape_1a9332e35fe85b77b01fdeeacdea0f3504" kindref="member">MultiArrayShape&lt;2&gt;::type</ref>(f.size(),<sp/>h.size());</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">R,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,<sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">T,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">C,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">T2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">C2<sp/>&gt;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copy_splice(<sp/><sp/>Splice&lt;R&gt;<sp/>_first,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Splice&lt;F&gt;<sp/>_second,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,<sp/>T,<sp/>C&gt;<sp/><sp/>src,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiArrayView&lt;2,<sp/>T2,<sp/>C2&gt;<sp/>dest)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>0<sp/>;<sp/>jj<sp/>&lt;<sp/>_second.size();<sp/>++jj)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0<sp/>;<sp/>ii<sp/>&lt;<sp/>_first.size();<sp/>++ii)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest(ii,<sp/>jj)<sp/>=<sp/>src(_first[ii],<sp/>_second[jj]);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">};</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//SPLICES_HXX</highlight></codeline>
    </programlisting>
    <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/random_forest/splices.hxx"/>
  </compounddef>
</doxygen>
