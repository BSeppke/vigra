<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="numpy__array__converters_8hxx" kind="file">
    <compoundname>numpy_array_converters.hxx</compoundname>
    <includes refid="numpy__array_8hxx" local="yes">numpy_array.hxx</includes>
    <includes refid="metaprogramming_8hxx" local="yes">metaprogramming.hxx</includes>
    <includes local="no">boost/python.hpp</includes>
    <includes local="no">boost/python/to_python_converter.hpp</includes>
    <includes local="no">set</includes>
    <incdepgraph>
      <node id="5847">
        <label>iomanip</label>
      </node>
      <node id="5825">
        <label>functional</label>
      </node>
      <node id="5807">
        <label>limits</label>
      </node>
      <node id="5842">
        <label>python_utility.hxx</label>
        <link refid="python__utility_8hxx_source"/>
        <childnode refid="5794" relation="include">
        </childnode>
        <childnode refid="5800" relation="include">
        </childnode>
        <childnode refid="5795" relation="include">
        </childnode>
        <childnode refid="5819" relation="include">
        </childnode>
        <childnode refid="5815" relation="include">
        </childnode>
      </node>
      <node id="5811">
        <label>sized_int.hxx</label>
        <link refid="sized__int_8hxx_source"/>
        <childnode refid="5802" relation="include">
        </childnode>
        <childnode refid="5807" relation="include">
        </childnode>
      </node>
      <node id="5826">
        <label>iterator</label>
      </node>
      <node id="5798">
        <label>multi_array.hxx</label>
        <link refid="multi__array_8hxx_source"/>
        <childnode refid="5799" relation="include">
        </childnode>
        <childnode refid="5800" relation="include">
        </childnode>
        <childnode refid="5801" relation="include">
        </childnode>
        <childnode refid="5815" relation="include">
        </childnode>
        <childnode refid="5832" relation="include">
        </childnode>
        <childnode refid="5834" relation="include">
        </childnode>
        <childnode refid="5835" relation="include">
        </childnode>
        <childnode refid="5808" relation="include">
        </childnode>
        <childnode refid="5839" relation="include">
        </childnode>
        <childnode refid="5802" relation="include">
        </childnode>
        <childnode refid="5822" relation="include">
        </childnode>
      </node>
      <node id="5824">
        <label>inspector_passes.hxx</label>
        <link refid="inspector__passes_8hxx_source"/>
        <childnode refid="5802" relation="include">
        </childnode>
      </node>
      <node id="5812">
        <label>promote_traits.hxx</label>
        <link refid="promote__traits_8hxx_source"/>
      </node>
      <node id="5837">
        <label>initimage.hxx</label>
        <link refid="initimage_8hxx_source"/>
        <childnode refid="5836" relation="include">
        </childnode>
        <childnode refid="5829" relation="include">
        </childnode>
        <childnode refid="5838" relation="include">
        </childnode>
      </node>
      <node id="5823">
        <label>algorithm.hxx</label>
        <link refid="algorithm_8hxx_source"/>
        <childnode refid="5811" relation="include">
        </childnode>
        <childnode refid="5808" relation="include">
        </childnode>
        <childnode refid="5824" relation="include">
        </childnode>
        <childnode refid="5800" relation="include">
        </childnode>
        <childnode refid="5825" relation="include">
        </childnode>
        <childnode refid="5826" relation="include">
        </childnode>
      </node>
      <node id="5816">
        <label>cmath</label>
      </node>
      <node id="5844">
        <label>numpy_array_taggedshape.hxx</label>
        <link refid="numpy__array__taggedshape_8hxx_source"/>
        <childnode refid="5795" relation="include">
        </childnode>
        <childnode refid="5841" relation="include">
        </childnode>
        <childnode refid="5842" relation="include">
        </childnode>
        <childnode refid="5845" relation="include">
        </childnode>
      </node>
      <node id="5805">
        <label>stdexcept</label>
      </node>
      <node id="5838">
        <label>functortraits.hxx</label>
        <link refid="functortraits_8hxx_source"/>
        <childnode refid="5825" relation="include">
        </childnode>
        <childnode refid="5802" relation="include">
        </childnode>
      </node>
      <node id="5828">
        <label>iteratortags.hxx</label>
        <link refid="iteratortags_8hxx_source"/>
        <childnode refid="5826" relation="include">
        </childnode>
      </node>
      <node id="5795">
        <label>string</label>
      </node>
      <node id="5797">
        <label>numpy/arrayobject.h</label>
      </node>
      <node id="5834">
        <label>basicimageview.hxx</label>
        <link refid="basicimageview_8hxx_source"/>
        <childnode refid="5835" relation="include">
        </childnode>
        <childnode refid="5837" relation="include">
        </childnode>
      </node>
      <node id="5829">
        <label>iteratortraits.hxx</label>
        <link refid="iteratortraits_8hxx_source"/>
        <childnode refid="5801" relation="include">
        </childnode>
        <childnode refid="5830" relation="include">
        </childnode>
      </node>
      <node id="5809">
        <label>cfloat</label>
      </node>
      <node id="5836">
        <label>utilities.hxx</label>
        <link refid="utilities_8hxx_source"/>
        <childnode refid="5803" relation="include">
        </childnode>
        <childnode refid="5819" relation="include">
        </childnode>
        <childnode refid="5802" relation="include">
        </childnode>
        <childnode refid="5813" relation="include">
        </childnode>
        <childnode refid="5827" relation="include">
        </childnode>
        <childnode refid="5822" relation="include">
        </childnode>
        <childnode refid="5795" relation="include">
        </childnode>
        <childnode refid="5820" relation="include">
        </childnode>
      </node>
      <node id="5804">
        <label>vigra/configVersion.hxx</label>
        <link refid="configVersion_8hxx_source"/>
      </node>
      <node id="5813">
        <label>tuple.hxx</label>
        <link refid="tuple_8hxx_source"/>
        <childnode refid="5814" relation="include">
        </childnode>
      </node>
      <node id="5792">
        <label>vigra/numpy_array_converters.hxx</label>
        <link refid="numpy_array_converters.hxx"/>
        <childnode refid="5793" relation="include">
        </childnode>
        <childnode refid="5802" relation="include">
        </childnode>
        <childnode refid="5848" relation="include">
        </childnode>
        <childnode refid="5849" relation="include">
        </childnode>
        <childnode refid="5850" relation="include">
        </childnode>
      </node>
      <node id="5815">
        <label>tinyvector.hxx</label>
        <link refid="tinyvector_8hxx_source"/>
        <childnode refid="5816" relation="include">
        </childnode>
        <childnode refid="5817" relation="include">
        </childnode>
        <childnode refid="5818" relation="include">
        </childnode>
        <childnode refid="5800" relation="include">
        </childnode>
        <childnode refid="5803" relation="include">
        </childnode>
        <childnode refid="5819" relation="include">
        </childnode>
        <childnode refid="5802" relation="include">
        </childnode>
        <childnode refid="5808" relation="include">
        </childnode>
        <childnode refid="5821" relation="include">
        </childnode>
        <childnode refid="5822" relation="include">
        </childnode>
        <childnode refid="5827" relation="include">
        </childnode>
      </node>
      <node id="5840">
        <label>sys/types.h</label>
      </node>
      <node id="5822">
        <label>mathutil.hxx</label>
        <link refid="mathutil_8hxx_source"/>
        <childnode refid="5816" relation="include">
        </childnode>
        <childnode refid="5817" relation="include">
        </childnode>
        <childnode refid="5810" relation="include">
        </childnode>
        <childnode refid="5803" relation="include">
        </childnode>
        <childnode refid="5819" relation="include">
        </childnode>
        <childnode refid="5813" relation="include">
        </childnode>
        <childnode refid="5811" relation="include">
        </childnode>
        <childnode refid="5808" relation="include">
        </childnode>
        <childnode refid="5823" relation="include">
        </childnode>
      </node>
      <node id="5803">
        <label>config.hxx</label>
        <link refid="config_8hxx_source"/>
        <childnode refid="5804" relation="include">
        </childnode>
        <childnode refid="5805" relation="include">
        </childnode>
      </node>
      <node id="5848">
        <label>boost/python.hpp</label>
      </node>
      <node id="5794">
        <label>Python.h</label>
      </node>
      <node id="5808">
        <label>numerictraits.hxx</label>
        <link refid="numerictraits_8hxx_source"/>
        <childnode refid="5806" relation="include">
        </childnode>
        <childnode refid="5807" relation="include">
        </childnode>
        <childnode refid="5809" relation="include">
        </childnode>
        <childnode refid="5810" relation="include">
        </childnode>
        <childnode refid="5802" relation="include">
        </childnode>
        <childnode refid="5811" relation="include">
        </childnode>
        <childnode refid="5812" relation="include">
        </childnode>
      </node>
      <node id="5835">
        <label>imageiterator.hxx</label>
        <link refid="imageiterator_8hxx_source"/>
        <childnode refid="5836" relation="include">
        </childnode>
        <childnode refid="5801" relation="include">
        </childnode>
        <childnode refid="5829" relation="include">
        </childnode>
        <childnode refid="5802" relation="include">
        </childnode>
      </node>
      <node id="5831">
        <label>iteratoradapter.hxx</label>
        <link refid="iteratoradapter_8hxx_source"/>
      </node>
      <node id="5830">
        <label>imageiteratoradapter.hxx</label>
        <link refid="imageiteratoradapter_8hxx_source"/>
        <childnode refid="5826" relation="include">
        </childnode>
      </node>
      <node id="5814">
        <label>utility</label>
      </node>
      <node id="5820">
        <label>sstream</label>
      </node>
      <node id="5845">
        <label>axistags.hxx</label>
        <link refid="axistags_8hxx_source"/>
        <childnode refid="5836" relation="include">
        </childnode>
        <childnode refid="5841" relation="include">
        </childnode>
        <childnode refid="5823" relation="include">
        </childnode>
        <childnode refid="5819" relation="include">
        </childnode>
        <childnode refid="5846" relation="include">
        </childnode>
        <childnode refid="5795" relation="include">
        </childnode>
        <childnode refid="5820" relation="include">
        </childnode>
        <childnode refid="5847" relation="include">
        </childnode>
      </node>
      <node id="5832">
        <label>rgbvalue.hxx</label>
        <link refid="rgbvalue_8hxx_source"/>
        <childnode refid="5816" relation="include">
        </childnode>
        <childnode refid="5817" relation="include">
        </childnode>
        <childnode refid="5803" relation="include">
        </childnode>
        <childnode refid="5808" relation="include">
        </childnode>
        <childnode refid="5801" relation="include">
        </childnode>
        <childnode refid="5815" relation="include">
        </childnode>
        <childnode refid="5833" relation="include">
        </childnode>
      </node>
      <node id="5827">
        <label>diff2d.hxx</label>
        <link refid="diff2d_8hxx_source"/>
        <childnode refid="5816" relation="include">
        </childnode>
        <childnode refid="5818" relation="include">
        </childnode>
        <childnode refid="5803" relation="include">
        </childnode>
        <childnode refid="5828" relation="include">
        </childnode>
        <childnode refid="5829" relation="include">
        </childnode>
        <childnode refid="5831" relation="include">
        </childnode>
        <childnode refid="5813" relation="include">
        </childnode>
      </node>
      <node id="5819">
        <label>error.hxx</label>
        <link refid="error_8hxx_source"/>
        <childnode refid="5805" relation="include">
        </childnode>
        <childnode refid="5820" relation="include">
        </childnode>
        <childnode refid="5795" relation="include">
        </childnode>
        <childnode refid="5803" relation="include">
        </childnode>
      </node>
      <node id="5833">
        <label>static_assert.hxx</label>
        <link refid="static__assert_8hxx_source"/>
      </node>
      <node id="5841">
        <label>array_vector.hxx</label>
        <link refid="array__vector_8hxx_source"/>
        <childnode refid="5819" relation="include">
        </childnode>
        <childnode refid="5821" relation="include">
        </childnode>
        <childnode refid="5808" relation="include">
        </childnode>
        <childnode refid="5799" relation="include">
        </childnode>
        <childnode refid="5800" relation="include">
        </childnode>
        <childnode refid="5818" relation="include">
        </childnode>
      </node>
      <node id="5818">
        <label>iosfwd</label>
      </node>
      <node id="5817">
        <label>cstdlib</label>
      </node>
      <node id="5796">
        <label>iostream</label>
      </node>
      <node id="5839">
        <label>multi_iterator.hxx</label>
        <link refid="multi__iterator_8hxx_source"/>
        <childnode refid="5840" relation="include">
        </childnode>
        <childnode refid="5815" relation="include">
        </childnode>
        <childnode refid="5828" relation="include">
        </childnode>
      </node>
      <node id="5806">
        <label>climits</label>
      </node>
      <node id="5802">
        <label>metaprogramming.hxx</label>
        <link refid="metaprogramming_8hxx_source"/>
        <childnode refid="5803" relation="include">
        </childnode>
        <childnode refid="5806" relation="include">
        </childnode>
        <childnode refid="5807" relation="include">
        </childnode>
        <childnode refid="5800" relation="include">
        </childnode>
      </node>
      <node id="5843">
        <label>numpy_array_traits.hxx</label>
        <link refid="numpy__array__traits_8hxx_source"/>
        <childnode refid="5808" relation="include">
        </childnode>
        <childnode refid="5798" relation="include">
        </childnode>
        <childnode refid="5844" relation="include">
        </childnode>
      </node>
      <node id="5846">
        <label>functorexpression.hxx</label>
        <link refid="functorexpression_8hxx_source"/>
      </node>
      <node id="5849">
        <label>boost/python/to_python_converter.hpp</label>
      </node>
      <node id="5850">
        <label>set</label>
      </node>
      <node id="5810">
        <label>complex</label>
      </node>
      <node id="5800">
        <label>algorithm</label>
      </node>
      <node id="5821">
        <label>memory.hxx</label>
        <link refid="memory_8hxx_source"/>
        <childnode refid="5802" relation="include">
        </childnode>
      </node>
      <node id="5801">
        <label>accessor.hxx</label>
        <link refid="accessor_8hxx_source"/>
        <childnode refid="5802" relation="include">
        </childnode>
        <childnode refid="5808" relation="include">
        </childnode>
        <childnode refid="5813" relation="include">
        </childnode>
      </node>
      <node id="5799">
        <label>memory</label>
      </node>
      <node id="5793">
        <label>numpy_array.hxx</label>
        <link refid="numpy__array_8hxx_source"/>
        <childnode refid="5794" relation="include">
        </childnode>
        <childnode refid="5795" relation="include">
        </childnode>
        <childnode refid="5796" relation="include">
        </childnode>
        <childnode refid="5797" relation="include">
        </childnode>
        <childnode refid="5798" relation="include">
        </childnode>
        <childnode refid="5841" relation="include">
        </childnode>
        <childnode refid="5842" relation="include">
        </childnode>
        <childnode refid="5843" relation="include">
        </childnode>
        <childnode refid="5844" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structvigra_1_1NumpyArrayConverter" prot="public">vigra::NumpyArrayConverter</innerclass>
    <innerclass refid="structvigra_1_1NumpyArrayConverter_3_01MultiArrayView_3_01N_00_01T_00_01Stride_01_4_01_4" prot="public">vigra::NumpyArrayConverter&lt; MultiArrayView&lt; N, T, Stride &gt; &gt;</innerclass>
    <innerclass refid="structvigra_1_1NumpyArrayConverter_3_01NumpyArray_3_01N_00_01T_00_01Stride_01_4_01_4" prot="public">vigra::NumpyArrayConverter&lt; NumpyArray&lt; N, T, Stride &gt; &gt;</innerclass>
    <innerclass refid="structvigra_1_1RegisterNumpyArrayConverters" prot="public">vigra::RegisterNumpyArrayConverters</innerclass>
    <innerclass refid="structvigra_1_1RegisterNumpyArrayConverters_3_01End_00_01End_01_4" prot="public">vigra::RegisterNumpyArrayConverters&lt; End, End &gt;</innerclass>
    <innerclass refid="structboost_1_1python_1_1TypeList" prot="public">boost::python::TypeList</innerclass>
    <innernamespace refid="namespaceboost">boost</innernamespace>
    <innernamespace refid="namespaceboost_1_1python">boost::python</innernamespace>
    <innernamespace refid="namespacevigra">vigra</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="numpy__array__converters_8hxx_1a53e4ad138723bbb7c063588ee5bcb411" prot="public" static="no">
        <name>VIGRA_PYTHON_MULTITYPE_FUNCTOR</name>
        <param><defname>functor_name</defname></param>
        <param><defname>function</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array_converters.hxx" line="235" bodyfile="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array_converters.hxx" bodystart="177" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>2009<sp/>by<sp/>Ullrich<sp/>Koethe<sp/>and<sp/>Hans<sp/>Meine<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>VIGRA<sp/>computer<sp/>vision<sp/>library.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>The<sp/>VIGRA<sp/>Website<sp/>is<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://hci.iwr.uni-heidelberg.de/vigra/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Please<sp/>direct<sp/>questions,<sp/>bug<sp/>reports,<sp/>and<sp/>contributions<sp/>to<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ullrich.koethe@iwr.uni-heidelberg.de<sp/><sp/><sp/><sp/>or<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra@informatik.uni-hamburg.de<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>conditions:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Software.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VIGRA_NUMPY_ARRAY_CONVERTERS_HXX</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_NUMPY_ARRAY_CONVERTERS_HXX</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;numpy_array.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;metaprogramming.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python/to_python_converter.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vigra<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Array&gt;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">PyObject<sp/>*<sp/>returnNumpyArray(Array<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>a)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>pa<sp/>=<sp/>a.pyObject();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pa<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_ValueError,<sp/></highlight><highlight class="stringliteral">&quot;returnNumpyArray():<sp/>Conversion<sp/>to<sp/>Python<sp/>failed,<sp/>array<sp/>has<sp/>no<sp/>data.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Py_INCREF(pa);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pa;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">VIGRA_EXPORT<sp/>std::set&lt;std::string&gt;<sp/>&amp;<sp/>exportedArrayKeys();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ArrayType&gt;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">NumpyArrayConverter<sp/>{};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e&gt;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">NumpyArrayConverter&lt;NumpyArray&lt;N,<sp/>T,<sp/>Stride&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>NumpyArray&lt;N,<sp/>T,<sp/>Stride&gt;<sp/>ArrayType;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ArrayType::ArrayTraits<sp/>ArrayTraits;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>NumpyArrayConverter();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>convertible(PyObject*<sp/>obj);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>Python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>construct(PyObject*<sp/>obj,<sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::python::converter::rvalue_from_python_stage1_data*<sp/>data);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>Python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject*<sp/>convert(ArrayType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>returnNumpyArray(a);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e&gt;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">NumpyArrayConverter&lt;NumpyArray&lt;N,<sp/>T,<sp/>Stride&gt;<sp/>&gt;::NumpyArrayConverter()</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">boost::python;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>converter::registration<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>reg<sp/>=<sp/>converter::registry::query(type_id&lt;ArrayType&gt;());</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>register<sp/>the<sp/>to_python_converter<sp/>only<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>I&apos;m<sp/>not<sp/>sure<sp/>if<sp/>this<sp/>is<sp/>correct.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!reg<sp/>||<sp/>!reg-&gt;rvalue_chain)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_python_converter&lt;ArrayType,<sp/>NumpyArrayConverter&gt;();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>converter::registry::insert(&amp;convertible,<sp/>&amp;construct,<sp/>type_id&lt;ArrayType&gt;());</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e&gt;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>NumpyArrayConverter&lt;NumpyArray&lt;N,<sp/>T,<sp/>Stride&gt;<sp/>&gt;::convertible(PyObject*<sp/>obj)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isCompatible<sp/>=<sp/>obj<sp/>==<sp/>Py_None<sp/>||<sp/>ArrayType::isStrictlyCompatible(obj);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;compatible<sp/>for<sp/>&quot;<sp/>&lt;&lt;<sp/>typeid(NumpyArray&lt;N,<sp/>T,<sp/>Stride&gt;).name()<sp/>&lt;&lt;<sp/>&quot;:<sp/>&quot;<sp/>&lt;&lt;<sp/>isCompatible<sp/>&lt;&lt;<sp/>&quot;\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>isCompatible</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>obj</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/>from<sp/>Python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e&gt;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NumpyArrayConverter&lt;NumpyArray&lt;N,<sp/>T,<sp/>Stride&gt;<sp/>&gt;::construct(PyObject*<sp/>obj,<sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::python::converter::rvalue_from_python_stage1_data*<sp/>data)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>storage<sp/>=<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((boost::python::converter::rvalue_from_python_storage&lt;ArrayType&gt;*<sp/>)<sp/>data)-&gt;storage.bytes;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>ArrayType<sp/>*<sp/>array<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(storage)<sp/>ArrayType();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(obj<sp/>!=<sp/>Py_None)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array-&gt;makeReferenceUnchecked(obj);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>data-&gt;convertible<sp/>=<sp/>storage;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Str</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">e&gt;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">NumpyArrayConverter&lt;MultiArrayView&lt;N,<sp/>T,<sp/>Stride&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>NumpyArrayConverter&lt;NumpyArray&lt;N,<sp/>T,<sp/>Stride&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>NumpyArrayConverter&lt;NumpyArray&lt;N,<sp/>T,<sp/>Stride&gt;<sp/>&gt;<sp/>BaseType;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>MultiArrayView&lt;N,<sp/>T,<sp/>Stride&gt;<sp/>ArrayType;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>NumpyArrayConverter()</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">boost::python;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>converter::registry::insert(&amp;BaseType::convertible,<sp/>&amp;BaseType::construct,<sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_id&lt;ArrayType&gt;());</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal">};</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Iter,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>End&gt;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">RegisterNumpyArrayConverters</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>exec()</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>UnqualifiedType&lt;typename<sp/>boost::mpl::deref&lt;Iter&gt;::type&gt;::type<sp/>Type;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumpyArrayConverter&lt;Type&gt;();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegisterNumpyArrayConverters&lt;typename<sp/>boost::mpl::next&lt;Iter&gt;::type,<sp/>End&gt;::exec();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal">};</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>End&gt;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">RegisterNumpyArrayConverters&lt;End,<sp/>End&gt;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>exec()</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="156"><highlight class="normal">};</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Typelist&gt;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>registerNumpyArrayConverters(Typelist)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>RegisterNumpyArrayConverters&lt;typename<sp/>boost::mpl::begin&lt;Typelist&gt;::type,<sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>boost::mpl::end&lt;Typelist&gt;::type<sp/>&gt;::exec();</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FN&gt;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">FN<sp/>registerConverters(FN<sp/>f)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>registerNumpyArrayConverters(boost::python::detail::get_signature(f));</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f;</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>vigra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">boost<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">python<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_PYTHON_MULTITYPE_FUNCTOR(functor_name,<sp/>function)<sp/>\</highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor">template<sp/>&lt;class<sp/>T&gt;<sp/>\</highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor">struct<sp/>functor_name##Impl<sp/>\</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typedef<sp/>functor_name##Impl<sp/>type;<sp/>\</highlight></codeline>
<codeline lineno="182"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="183"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>void<sp/>def(const<sp/>char<sp/>*<sp/>pythonName)<sp/>\</highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="185"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::python::def(pythonName,<sp/>vigra::registerConverters(&amp;function&lt;T&gt;));<sp/>\</highlight></codeline>
<codeline lineno="186"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="187"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="188"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>A1&gt;<sp/>\</highlight></codeline>
<codeline lineno="189"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>void<sp/>def(const<sp/>char<sp/>*<sp/>pythonName,<sp/>A1<sp/>const<sp/>&amp;<sp/>a1)<sp/>\</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="191"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::python::def(pythonName,<sp/>vigra::registerConverters(&amp;function&lt;T&gt;),<sp/>a1);<sp/>\</highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="193"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="194"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>A1,<sp/>class<sp/>A2&gt;<sp/>\</highlight></codeline>
<codeline lineno="195"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>void<sp/>def(const<sp/>char<sp/>*<sp/>pythonName,<sp/>A1<sp/>const<sp/>&amp;<sp/>a1,<sp/>A2<sp/>const<sp/>&amp;<sp/>a2)<sp/>\</highlight></codeline>
<codeline lineno="196"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="197"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::python::def(pythonName,<sp/>vigra::registerConverters(&amp;function&lt;T&gt;),<sp/>a1,<sp/>a2);<sp/>\</highlight></codeline>
<codeline lineno="198"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="199"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="200"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>A1,<sp/>class<sp/>A2,<sp/>class<sp/>A3&gt;<sp/>\</highlight></codeline>
<codeline lineno="201"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>void<sp/>def(const<sp/>char<sp/>*<sp/>pythonName,<sp/>A1<sp/>const<sp/>&amp;<sp/>a1,<sp/>A2<sp/>const<sp/>&amp;<sp/>a2,<sp/>A3<sp/>const<sp/>&amp;<sp/>a3)<sp/>\</highlight></codeline>
<codeline lineno="202"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="203"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::python::def(pythonName,<sp/>vigra::registerConverters(&amp;function&lt;T&gt;),<sp/>a1,<sp/>a2,<sp/>a3);<sp/>\</highlight></codeline>
<codeline lineno="204"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="205"><highlight class="preprocessor">};<sp/>\</highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="207"><highlight class="preprocessor">template<sp/>&lt;&gt;<sp/>\</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor">struct<sp/>functor_name##Impl&lt;void&gt;<sp/>\</highlight></codeline>
<codeline lineno="209"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="210"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typedef<sp/>void<sp/>type;<sp/>\</highlight></codeline>
<codeline lineno="211"><highlight class="preprocessor">};<sp/>\</highlight></codeline>
<codeline lineno="212"><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="213"><highlight class="preprocessor">template<sp/>&lt;class<sp/>T1,<sp/>\</highlight></codeline>
<codeline lineno="214"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>T2<sp/>=<sp/>void,<sp/>\</highlight></codeline>
<codeline lineno="215"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>T3<sp/>=<sp/>void,<sp/>\</highlight></codeline>
<codeline lineno="216"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>T4<sp/>=<sp/>void,<sp/>\</highlight></codeline>
<codeline lineno="217"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>T5<sp/>=<sp/>void,<sp/>\</highlight></codeline>
<codeline lineno="218"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>T6<sp/>=<sp/>void,<sp/>\</highlight></codeline>
<codeline lineno="219"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>T7<sp/>=<sp/>void,<sp/>\</highlight></codeline>
<codeline lineno="220"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>T8<sp/>=<sp/>void,<sp/>\</highlight></codeline>
<codeline lineno="221"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>T9<sp/>=<sp/>void,<sp/>\</highlight></codeline>
<codeline lineno="222"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>T10<sp/>=<sp/>void&gt;<sp/>\</highlight></codeline>
<codeline lineno="223"><highlight class="preprocessor">struct<sp/>functor_name<sp/>\</highlight></codeline>
<codeline lineno="224"><highlight class="preprocessor">:<sp/>public<sp/>boost::python::TypeList&lt;typename<sp/>functor_name##Impl&lt;T1&gt;::type,<sp/>\</highlight></codeline>
<codeline lineno="225"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::python::TypeList&lt;typename<sp/>functor_name##Impl&lt;T2&gt;::type,<sp/>\</highlight></codeline>
<codeline lineno="226"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::python::TypeList&lt;typename<sp/>functor_name##Impl&lt;T3&gt;::type,<sp/>\</highlight></codeline>
<codeline lineno="227"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::python::TypeList&lt;typename<sp/>functor_name##Impl&lt;T4&gt;::type,<sp/>\</highlight></codeline>
<codeline lineno="228"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::python::TypeList&lt;typename<sp/>functor_name##Impl&lt;T5&gt;::type,<sp/>\</highlight></codeline>
<codeline lineno="229"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::python::TypeList&lt;typename<sp/>functor_name##Impl&lt;T6&gt;::type,<sp/>\</highlight></codeline>
<codeline lineno="230"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::python::TypeList&lt;typename<sp/>functor_name##Impl&lt;T7&gt;::type,<sp/>\</highlight></codeline>
<codeline lineno="231"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::python::TypeList&lt;typename<sp/>functor_name##Impl&lt;T8&gt;::type,<sp/>\</highlight></codeline>
<codeline lineno="232"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::python::TypeList&lt;typename<sp/>functor_name##Impl&lt;T9&gt;::type,<sp/>\</highlight></codeline>
<codeline lineno="233"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::python::TypeList&lt;typename<sp/>functor_name##Impl&lt;T10&gt;::type,<sp/>\</highlight></codeline>
<codeline lineno="234"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::python::TypeList&lt;void,<sp/>void&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>&gt;<sp/>\</highlight></codeline>
<codeline lineno="235"><highlight class="preprocessor">{};</highlight></codeline>
<codeline lineno="236"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Head,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Tail&gt;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">TypeList</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Head<sp/>head;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Tail<sp/>tail;</highlight></codeline>
<codeline lineno="242"><highlight class="normal">};</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>sequel,<sp/>the<sp/>doc<sp/>string<sp/>is<sp/>only<sp/>registered<sp/>with<sp/>the<sp/>last</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment">//<sp/>overload,<sp/>so<sp/>that<sp/>it<sp/>shows<sp/>up<sp/>only<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Head,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Tail&gt;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>multidef(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>functor_name,<sp/>TypeList&lt;Head,<sp/>Tail&gt;)</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>Head::def(functor_name);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>multidef(functor_name,<sp/>Tail());</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Head,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Tail&gt;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>multidef(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>functor_name,<sp/>TypeList&lt;Head,<sp/>Tail&gt;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>help)</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>Head::def(functor_name);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>multidef(functor_name,<sp/>Tail(),<sp/>help);</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Head,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Tail,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Args&gt;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>multidef(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>functor_name,<sp/>TypeList&lt;Head,<sp/>Tail&gt;,<sp/>Args<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>args)</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>Head::def(functor_name,<sp/>args);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>multidef(functor_name,<sp/>Tail(),<sp/>args);</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Head,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Tail,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Args&gt;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>multidef(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>functor_name,<sp/>TypeList&lt;Head,<sp/>Tail&gt;,<sp/>Args<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>args,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>help)</highlight></codeline>
<codeline lineno="269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>Head::def(functor_name,<sp/>args);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>multidef(functor_name,<sp/>Tail(),<sp/>args,<sp/>help);</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Head,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Tail&gt;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>multidef(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>functor_name,<sp/>TypeList&lt;Head,<sp/>TypeList&lt;void,<sp/>Tail&gt;<sp/>&gt;)</highlight></codeline>
<codeline lineno="276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>Head::def(functor_name);</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Head,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Tail,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Args&gt;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>multidef(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>functor_name,<sp/>TypeList&lt;Head,<sp/>TypeList&lt;void,<sp/>Tail&gt;<sp/>&gt;,<sp/>Args<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>args)</highlight></codeline>
<codeline lineno="282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>Head::def(functor_name,<sp/>args);</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Head,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Tail&gt;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>multidef(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>functor_name,<sp/>TypeList&lt;Head,<sp/>TypeList&lt;void,<sp/>Tail&gt;<sp/>&gt;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>help)</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>Head::def(functor_name,<sp/>help);</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Head,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Tail,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Args&gt;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>multidef(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>functor_name,<sp/>TypeList&lt;Head,<sp/>TypeList&lt;void,<sp/>Tail&gt;<sp/>&gt;,<sp/>Args<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>args,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>help)</highlight></codeline>
<codeline lineno="294"><highlight class="normal">{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>Head::def(functor_name,<sp/>args,<sp/>help);</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal">}}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>boost::python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>VIGRA_NUMPY_ARRAY_CONVERTERS_HXX</highlight></codeline>
    </programlisting>
    <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/numpy_array_converters.hxx"/>
  </compounddef>
</doxygen>
