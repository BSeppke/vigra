<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="initimage_8hxx" kind="file">
    <compoundname>initimage.hxx</compoundname>
    <includes refid="utilities_8hxx" local="yes">utilities.hxx</includes>
    <includes refid="iteratortraits_8hxx" local="yes">iteratortraits.hxx</includes>
    <includes refid="functortraits_8hxx" local="yes">functortraits.hxx</includes>
    <includedby refid="basicimageview_8hxx" local="yes">vigra/basicimageview.hxx</includedby>
    <includedby refid="multi__pointoperators_8hxx" local="yes">vigra/multi_pointoperators.hxx</includedby>
    <includedby refid="stdimagefunctions_8hxx" local="yes">vigra/stdimagefunctions.hxx</includedby>
    <includedby refid="localminmax_8hxx" local="yes">vigra/localminmax.hxx</includedby>
    <includedby refid="orientedtensorfilters_8hxx" local="yes">vigra/orientedtensorfilters.hxx</includedby>
    <incdepgraph>
      <node id="3093">
        <label>functional</label>
      </node>
      <node id="3071">
        <label>limits</label>
      </node>
      <node id="3085">
        <label>sized_int.hxx</label>
        <link refid="sized__int_8hxx_source"/>
        <childnode refid="3069" relation="include">
        </childnode>
        <childnode refid="3071" relation="include">
        </childnode>
      </node>
      <node id="3079">
        <label>iterator</label>
      </node>
      <node id="3092">
        <label>inspector_passes.hxx</label>
        <link refid="inspector__passes_8hxx_source"/>
        <childnode refid="3069" relation="include">
        </childnode>
      </node>
      <node id="3086">
        <label>promote_traits.hxx</label>
        <link refid="promote__traits_8hxx_source"/>
      </node>
      <node id="3061">
        <label>vigra/initimage.hxx</label>
        <link refid="initimage.hxx"/>
        <childnode refid="3062" relation="include">
        </childnode>
        <childnode refid="3080" relation="include">
        </childnode>
        <childnode refid="3094" relation="include">
        </childnode>
      </node>
      <node id="3091">
        <label>algorithm.hxx</label>
        <link refid="algorithm_8hxx_source"/>
        <childnode refid="3085" relation="include">
        </childnode>
        <childnode refid="3082" relation="include">
        </childnode>
        <childnode refid="3092" relation="include">
        </childnode>
        <childnode refid="3072" relation="include">
        </childnode>
        <childnode refid="3093" relation="include">
        </childnode>
        <childnode refid="3079" relation="include">
        </childnode>
      </node>
      <node id="3076">
        <label>cmath</label>
      </node>
      <node id="3065">
        <label>stdexcept</label>
      </node>
      <node id="3094">
        <label>functortraits.hxx</label>
        <link refid="functortraits_8hxx_source"/>
        <childnode refid="3093" relation="include">
        </childnode>
        <childnode refid="3069" relation="include">
        </childnode>
      </node>
      <node id="3078">
        <label>iteratortags.hxx</label>
        <link refid="iteratortags_8hxx_source"/>
        <childnode refid="3079" relation="include">
        </childnode>
      </node>
      <node id="3068">
        <label>string</label>
      </node>
      <node id="3080">
        <label>iteratortraits.hxx</label>
        <link refid="iteratortraits_8hxx_source"/>
        <childnode refid="3081" relation="include">
        </childnode>
        <childnode refid="3087" relation="include">
        </childnode>
      </node>
      <node id="3083">
        <label>cfloat</label>
      </node>
      <node id="3062">
        <label>utilities.hxx</label>
        <link refid="utilities_8hxx_source"/>
        <childnode refid="3063" relation="include">
        </childnode>
        <childnode refid="3066" relation="include">
        </childnode>
        <childnode refid="3069" relation="include">
        </childnode>
        <childnode refid="3073" relation="include">
        </childnode>
        <childnode refid="3075" relation="include">
        </childnode>
        <childnode refid="3089" relation="include">
        </childnode>
        <childnode refid="3068" relation="include">
        </childnode>
        <childnode refid="3067" relation="include">
        </childnode>
      </node>
      <node id="3064">
        <label>vigra/configVersion.hxx</label>
        <link refid="configVersion_8hxx_source"/>
      </node>
      <node id="3073">
        <label>tuple.hxx</label>
        <link refid="tuple_8hxx_source"/>
        <childnode refid="3074" relation="include">
        </childnode>
      </node>
      <node id="3089">
        <label>mathutil.hxx</label>
        <link refid="mathutil_8hxx_source"/>
        <childnode refid="3076" relation="include">
        </childnode>
        <childnode refid="3090" relation="include">
        </childnode>
        <childnode refid="3084" relation="include">
        </childnode>
        <childnode refid="3063" relation="include">
        </childnode>
        <childnode refid="3066" relation="include">
        </childnode>
        <childnode refid="3073" relation="include">
        </childnode>
        <childnode refid="3085" relation="include">
        </childnode>
        <childnode refid="3082" relation="include">
        </childnode>
        <childnode refid="3091" relation="include">
        </childnode>
      </node>
      <node id="3063">
        <label>config.hxx</label>
        <link refid="config_8hxx_source"/>
        <childnode refid="3064" relation="include">
        </childnode>
        <childnode refid="3065" relation="include">
        </childnode>
      </node>
      <node id="3082">
        <label>numerictraits.hxx</label>
        <link refid="numerictraits_8hxx_source"/>
        <childnode refid="3070" relation="include">
        </childnode>
        <childnode refid="3071" relation="include">
        </childnode>
        <childnode refid="3083" relation="include">
        </childnode>
        <childnode refid="3084" relation="include">
        </childnode>
        <childnode refid="3069" relation="include">
        </childnode>
        <childnode refid="3085" relation="include">
        </childnode>
        <childnode refid="3086" relation="include">
        </childnode>
      </node>
      <node id="3088">
        <label>iteratoradapter.hxx</label>
        <link refid="iteratoradapter_8hxx_source"/>
      </node>
      <node id="3087">
        <label>imageiteratoradapter.hxx</label>
        <link refid="imageiteratoradapter_8hxx_source"/>
        <childnode refid="3079" relation="include">
        </childnode>
      </node>
      <node id="3074">
        <label>utility</label>
      </node>
      <node id="3067">
        <label>sstream</label>
      </node>
      <node id="3075">
        <label>diff2d.hxx</label>
        <link refid="diff2d_8hxx_source"/>
        <childnode refid="3076" relation="include">
        </childnode>
        <childnode refid="3077" relation="include">
        </childnode>
        <childnode refid="3063" relation="include">
        </childnode>
        <childnode refid="3078" relation="include">
        </childnode>
        <childnode refid="3080" relation="include">
        </childnode>
        <childnode refid="3088" relation="include">
        </childnode>
        <childnode refid="3073" relation="include">
        </childnode>
      </node>
      <node id="3066">
        <label>error.hxx</label>
        <link refid="error_8hxx_source"/>
        <childnode refid="3065" relation="include">
        </childnode>
        <childnode refid="3067" relation="include">
        </childnode>
        <childnode refid="3068" relation="include">
        </childnode>
        <childnode refid="3063" relation="include">
        </childnode>
      </node>
      <node id="3077">
        <label>iosfwd</label>
      </node>
      <node id="3090">
        <label>cstdlib</label>
      </node>
      <node id="3070">
        <label>climits</label>
      </node>
      <node id="3069">
        <label>metaprogramming.hxx</label>
        <link refid="metaprogramming_8hxx_source"/>
        <childnode refid="3063" relation="include">
        </childnode>
        <childnode refid="3070" relation="include">
        </childnode>
        <childnode refid="3071" relation="include">
        </childnode>
        <childnode refid="3072" relation="include">
        </childnode>
      </node>
      <node id="3084">
        <label>complex</label>
      </node>
      <node id="3072">
        <label>algorithm</label>
      </node>
      <node id="3081">
        <label>accessor.hxx</label>
        <link refid="accessor_8hxx_source"/>
        <childnode refid="3069" relation="include">
        </childnode>
        <childnode refid="3082" relation="include">
        </childnode>
        <childnode refid="3073" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3134">
        <label>vigra/splineimageview.hxx</label>
        <link refid="splineimageview_8hxx_source"/>
        <childnode refid="3099" relation="include">
        </childnode>
        <childnode refid="3112" relation="include">
        </childnode>
      </node>
      <node id="3116">
        <label>vigra/quaternion.hxx</label>
        <link refid="quaternion_8hxx_source"/>
        <childnode refid="3115" relation="include">
        </childnode>
        <childnode refid="3117" relation="include">
        </childnode>
      </node>
      <node id="3099">
        <label>vigra/affine_registration.hxx</label>
        <link refid="affine__registration_8hxx_source"/>
      </node>
      <node id="3124">
        <label>vigra/multi_pointoperators.hxx</label>
        <link refid="multi__pointoperators_8hxx_source"/>
        <childnode refid="3098" relation="include">
        </childnode>
        <childnode refid="3125" relation="include">
        </childnode>
        <childnode refid="3127" relation="include">
        </childnode>
        <childnode refid="3128" relation="include">
        </childnode>
        <childnode refid="3129" relation="include">
        </childnode>
        <childnode refid="3130" relation="include">
        </childnode>
        <childnode refid="3131" relation="include">
        </childnode>
        <childnode refid="3132" relation="include">
        </childnode>
      </node>
      <node id="3156">
        <label>vigra/symmetry.hxx</label>
        <link refid="symmetry_8hxx_source"/>
      </node>
      <node id="3158">
        <label>vigra/orientedtensorfilters.hxx</label>
        <link refid="orientedtensorfilters_8hxx_source"/>
      </node>
      <node id="3097">
        <label>vigra/multi_array.hxx</label>
        <link refid="multi__array_8hxx_source"/>
        <childnode refid="3098" relation="include">
        </childnode>
        <childnode refid="3124" relation="include">
        </childnode>
        <childnode refid="3134" relation="include">
        </childnode>
        <childnode refid="3135" relation="include">
        </childnode>
        <childnode refid="3136" relation="include">
        </childnode>
        <childnode refid="3126" relation="include">
        </childnode>
        <childnode refid="3125" relation="include">
        </childnode>
        <childnode refid="3137" relation="include">
        </childnode>
        <childnode refid="3127" relation="include">
        </childnode>
        <childnode refid="3128" relation="include">
        </childnode>
        <childnode refid="3141" relation="include">
        </childnode>
        <childnode refid="3139" relation="include">
        </childnode>
        <childnode refid="3142" relation="include">
        </childnode>
        <childnode refid="3129" relation="include">
        </childnode>
        <childnode refid="3143" relation="include">
        </childnode>
        <childnode refid="3145" relation="include">
        </childnode>
        <childnode refid="3146" relation="include">
        </childnode>
        <childnode refid="3119" relation="include">
        </childnode>
        <childnode refid="3148" relation="include">
        </childnode>
        <childnode refid="3149" relation="include">
        </childnode>
        <childnode refid="3114" relation="include">
        </childnode>
        <childnode refid="3133" relation="include">
        </childnode>
      </node>
      <node id="3115">
        <label>vigra/invariant_features3D.hxx</label>
        <link refid="invariant__features3D_8hxx_source"/>
      </node>
      <node id="3112">
        <label>vigra/affinegeometry.hxx</label>
        <link refid="affinegeometry_8hxx_source"/>
      </node>
      <node id="3104">
        <label>vigra/noise_normalization.hxx</label>
        <link refid="noise__normalization_8hxx_source"/>
      </node>
      <node id="3095">
        <label>vigra/initimage.hxx</label>
        <link refid="initimage.hxx"/>
        <childnode refid="3096" relation="include">
        </childnode>
        <childnode refid="3124" relation="include">
        </childnode>
        <childnode refid="3150" relation="include">
        </childnode>
        <childnode refid="3138" relation="include">
        </childnode>
        <childnode refid="3158" relation="include">
        </childnode>
      </node>
      <node id="3105">
        <label>vigra/quadprog.hxx</label>
        <link refid="quadprog_8hxx_source"/>
      </node>
      <node id="3122">
        <label>vigra/random_forest/rf_region.hxx</label>
        <link refid="rf__region_8hxx_source"/>
        <childnode refid="3121" relation="include">
        </childnode>
        <childnode refid="3108" relation="include">
        </childnode>
      </node>
      <node id="3103">
        <label>vigra/linear_algebra.hxx</label>
        <link refid="linear__algebra_8hxx_source"/>
      </node>
      <node id="3138">
        <label>vigra/localminmax.hxx</label>
        <link refid="localminmax_8hxx_source"/>
        <childnode refid="3139" relation="include">
        </childnode>
        <childnode refid="3104" relation="include">
        </childnode>
        <childnode refid="3140" relation="include">
        </childnode>
      </node>
      <node id="3121">
        <label>vigra/random_forest/rf_split.hxx</label>
        <link refid="rf__split_8hxx_source"/>
        <childnode refid="3107" relation="include">
        </childnode>
        <childnode refid="3108" relation="include">
        </childnode>
      </node>
      <node id="3096">
        <label>vigra/basicimageview.hxx</label>
        <link refid="basicimageview_8hxx_source"/>
        <childnode refid="3097" relation="include">
        </childnode>
        <childnode refid="3125" relation="include">
        </childnode>
      </node>
      <node id="3137">
        <label>vigra/labelvolume.hxx</label>
        <link refid="labelvolume_8hxx_source"/>
        <childnode refid="3138" relation="include">
        </childnode>
        <childnode refid="3133" relation="include">
        </childnode>
      </node>
      <node id="3109">
        <label>vigra/random_forest_hdf5_impex.hxx</label>
        <link refid="random__forest__hdf5__impex_8hxx_source"/>
      </node>
      <node id="3150">
        <label>vigra/stdimagefunctions.hxx</label>
        <link refid="stdimagefunctions_8hxx_source"/>
        <childnode refid="3151" relation="include">
        </childnode>
        <childnode refid="3101" relation="include">
        </childnode>
        <childnode refid="3157" relation="include">
        </childnode>
        <childnode refid="3132" relation="include">
        </childnode>
      </node>
      <node id="3100">
        <label>vigra/linear_solve.hxx</label>
        <link refid="linear__solve_8hxx_source"/>
        <childnode refid="3099" relation="include">
        </childnode>
        <childnode refid="3101" relation="include">
        </childnode>
        <childnode refid="3103" relation="include">
        </childnode>
        <childnode refid="3104" relation="include">
        </childnode>
        <childnode refid="3105" relation="include">
        </childnode>
        <childnode refid="3106" relation="include">
        </childnode>
        <childnode refid="3102" relation="include">
        </childnode>
      </node>
      <node id="3148">
        <label>vigra/random_forest/rf_online_prediction_set.hxx</label>
        <link refid="rf__online__prediction__set_8hxx_source"/>
        <childnode refid="3108" relation="include">
        </childnode>
      </node>
      <node id="3133">
        <label>vigra/watersheds3d.hxx</label>
        <link refid="watersheds3d_8hxx_source"/>
      </node>
      <node id="3142">
        <label>vigra/multi_math.hxx</label>
        <link refid="multi__math_8hxx_source"/>
        <childnode refid="3114" relation="include">
        </childnode>
      </node>
      <node id="3110">
        <label>vigra/singular_value_decomposition.hxx</label>
        <link refid="singular__value__decomposition_8hxx_source"/>
        <childnode refid="3100" relation="include">
        </childnode>
        <childnode refid="3106" relation="include">
        </childnode>
        <childnode refid="3111" relation="include">
        </childnode>
      </node>
      <node id="3153">
        <label>vigra/boundarytensor.hxx</label>
        <link refid="boundarytensor_8hxx_source"/>
      </node>
      <node id="3101">
        <label>vigra/edgedetection.hxx</label>
        <link refid="edgedetection_8hxx_source"/>
        <childnode refid="3102" relation="include">
        </childnode>
      </node>
      <node id="3117">
        <label>vigra/wigner-matrix.hxx</label>
        <link refid="wigner-matrix_8hxx_source"/>
      </node>
      <node id="3141">
        <label>vigra/multi_fft.hxx</label>
        <link refid="multi__fft_8hxx_source"/>
      </node>
      <node id="3152">
        <label>vigra/convolution.hxx</label>
        <link refid="convolution_8hxx_source"/>
        <childnode refid="3153" relation="include">
        </childnode>
        <childnode refid="3154" relation="include">
        </childnode>
        <childnode refid="3101" relation="include">
        </childnode>
        <childnode refid="3155" relation="include">
        </childnode>
        <childnode refid="3156" relation="include">
        </childnode>
        <childnode refid="3114" relation="include">
        </childnode>
      </node>
      <node id="3151">
        <label>vigra/nonlineardiffusion.hxx</label>
        <link refid="nonlineardiffusion_8hxx_source"/>
        <childnode refid="3152" relation="include">
        </childnode>
      </node>
      <node id="3144">
        <label>vigra/numpy_array_converters.hxx</label>
        <link refid="numpy__array__converters_8hxx_source"/>
      </node>
      <node id="3102">
        <label>vigra/slanted_edge_mtf.hxx</label>
        <link refid="slanted__edge__mtf_8hxx_source"/>
      </node>
      <node id="3127">
        <label>vigra/multi_convolution.hxx</label>
        <link refid="multi__convolution_8hxx_source"/>
      </node>
      <node id="3123">
        <label>vigra/random_forest_deprec.hxx</label>
        <link refid="random__forest__deprec_8hxx_source"/>
      </node>
      <node id="3149">
        <label>vigra/sifImport.hxx</label>
        <link refid="sifImport_8hxx_source"/>
      </node>
      <node id="3107">
        <label>vigra/random_forest/rf_ridge_split.hxx</label>
        <link refid="rf__ridge__split_8hxx_source"/>
        <childnode refid="3108" relation="include">
        </childnode>
      </node>
      <node id="3120">
        <label>vigra/random_forest/rf_nodeproxy.hxx</label>
        <link refid="rf__nodeproxy_8hxx_source"/>
        <childnode refid="3119" relation="include">
        </childnode>
        <childnode refid="3121" relation="include">
        </childnode>
        <childnode refid="3107" relation="include">
        </childnode>
        <childnode refid="3108" relation="include">
        </childnode>
      </node>
      <node id="3111">
        <label>vigra/unsupervised_decomposition.hxx</label>
        <link refid="unsupervised__decomposition_8hxx_source"/>
      </node>
      <node id="3147">
        <label>vigra/random_forest/rf_algorithm.hxx</label>
        <link refid="rf__algorithm_8hxx_source"/>
        <childnode refid="3108" relation="include">
        </childnode>
      </node>
      <node id="3108">
        <label>vigra/random_forest.hxx</label>
        <link refid="random__forest_8hxx_source"/>
        <childnode refid="3109" relation="include">
        </childnode>
      </node>
      <node id="3106">
        <label>vigra/regression.hxx</label>
        <link refid="regression_8hxx_source"/>
        <childnode refid="3107" relation="include">
        </childnode>
      </node>
      <node id="3118">
        <label>vigra/matlab.hxx</label>
        <link refid="matlab_8hxx_source"/>
      </node>
      <node id="3119">
        <label>vigra/random_forest/rf_decisionTree.hxx</label>
        <link refid="rf__decisionTree_8hxx_source"/>
        <childnode refid="3108" relation="include">
        </childnode>
      </node>
      <node id="3128">
        <label>vigra/multi_distance.hxx</label>
        <link refid="multi__distance_8hxx_source"/>
        <childnode refid="3129" relation="include">
        </childnode>
      </node>
      <node id="3114">
        <label>vigra/tv_filter.hxx</label>
        <link refid="tv__filter_8hxx_source"/>
      </node>
      <node id="3136">
        <label>vigra/impex.hxx</label>
        <link refid="impex_8hxx"/>
        <childnode refid="3126" relation="include">
        </childnode>
        <childnode refid="3125" relation="include">
        </childnode>
        <childnode refid="3114" relation="include">
        </childnode>
      </node>
      <node id="3129">
        <label>vigra/multi_morphology.hxx</label>
        <link refid="multi__morphology_8hxx_source"/>
      </node>
      <node id="3157">
        <label>vigra/seededregiongrowing.hxx</label>
        <link refid="seededregiongrowing_8hxx_source"/>
        <childnode refid="3132" relation="include">
        </childnode>
        <childnode refid="3140" relation="include">
        </childnode>
      </node>
      <node id="3146">
        <label>vigra/random_forest/splices.hxx</label>
        <link refid="splices_8hxx_source"/>
        <childnode refid="3147" relation="include">
        </childnode>
      </node>
      <node id="3139">
        <label>vigra/multi_localminmax.hxx</label>
        <link refid="multi__localminmax_8hxx_source"/>
        <childnode refid="3133" relation="include">
        </childnode>
      </node>
      <node id="3132">
        <label>vigra/seededregiongrowing3d.hxx</label>
        <link refid="seededregiongrowing3d_8hxx_source"/>
        <childnode refid="3133" relation="include">
        </childnode>
      </node>
      <node id="3155">
        <label>vigra/gradient_energy_tensor.hxx</label>
        <link refid="gradient__energy__tensor_8hxx_source"/>
      </node>
      <node id="3145">
        <label>vigra/numpy_array_traits.hxx</label>
        <link refid="numpy__array__traits_8hxx_source"/>
        <childnode refid="3143" relation="include">
        </childnode>
      </node>
      <node id="3140">
        <label>vigra/watersheds.hxx</label>
        <link refid="watersheds_8hxx_source"/>
        <childnode refid="3133" relation="include">
        </childnode>
      </node>
      <node id="3113">
        <label>vigra/eigensystem.hxx</label>
        <link refid="eigensystem_8hxx_source"/>
        <childnode refid="3103" relation="include">
        </childnode>
        <childnode refid="3114" relation="include">
        </childnode>
      </node>
      <node id="3154">
        <label>vigra/cornerdetection.hxx</label>
        <link refid="cornerdetection_8hxx_source"/>
      </node>
      <node id="3130">
        <label>vigra/multi_tensorutilities.hxx</label>
        <link refid="multi__tensorutilities_8hxx_source"/>
      </node>
      <node id="3135">
        <label>vigra/coordinate_iterator.hxx</label>
        <link refid="coordinate__iterator_8hxx_source"/>
      </node>
      <node id="3098">
        <label>vigra/matrix.hxx</label>
        <link refid="matrix_8hxx_source"/>
        <childnode refid="3099" relation="include">
        </childnode>
        <childnode refid="3100" relation="include">
        </childnode>
        <childnode refid="3110" relation="include">
        </childnode>
        <childnode refid="3112" relation="include">
        </childnode>
        <childnode refid="3113" relation="include">
        </childnode>
        <childnode refid="3115" relation="include">
        </childnode>
        <childnode refid="3116" relation="include">
        </childnode>
        <childnode refid="3103" relation="include">
        </childnode>
        <childnode refid="3118" relation="include">
        </childnode>
        <childnode refid="3105" relation="include">
        </childnode>
        <childnode refid="3119" relation="include">
        </childnode>
        <childnode refid="3120" relation="include">
        </childnode>
        <childnode refid="3122" relation="include">
        </childnode>
        <childnode refid="3121" relation="include">
        </childnode>
        <childnode refid="3106" relation="include">
        </childnode>
        <childnode refid="3108" relation="include">
        </childnode>
        <childnode refid="3123" relation="include">
        </childnode>
        <childnode refid="3111" relation="include">
        </childnode>
        <childnode refid="3117" relation="include">
        </childnode>
      </node>
      <node id="3131">
        <label>vigra/random_forest/rf_visitors.hxx</label>
        <link refid="rf__visitors_8hxx_source"/>
        <childnode refid="3119" relation="include">
        </childnode>
        <childnode refid="3108" relation="include">
        </childnode>
      </node>
      <node id="3126">
        <label>vigra/hdf5impex.hxx</label>
        <link refid="hdf5impex_8hxx_source"/>
        <childnode refid="3109" relation="include">
        </childnode>
      </node>
      <node id="3125">
        <label>vigra/multi_impex.hxx</label>
        <link refid="multi__impex_8hxx_source"/>
        <childnode refid="3126" relation="include">
        </childnode>
      </node>
      <node id="3143">
        <label>vigra/numpy_array.hxx</label>
        <link refid="numpy__array_8hxx_source"/>
        <childnode refid="3144" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacevigra">vigra</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>1998-2002<sp/>by<sp/>Ullrich<sp/>Koethe<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>VIGRA<sp/>computer<sp/>vision<sp/>library.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>The<sp/>VIGRA<sp/>Website<sp/>is<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://hci.iwr.uni-heidelberg.de/vigra/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Please<sp/>direct<sp/>questions,<sp/>bug<sp/>reports,<sp/>and<sp/>contributions<sp/>to<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ullrich.koethe@iwr.uni-heidelberg.de<sp/><sp/><sp/><sp/>or<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra@informatik.uni-hamburg.de<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>conditions:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Software.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VIGRA_INITIMAGE_HXX</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>VIGRA_INITIMAGE_HXX</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;utilities.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;iteratortraits.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;functortraits.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vigra<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="46"><highlight class="comment">/**<sp/>\addtogroup<sp/>InitAlgo<sp/>Algorithms<sp/>to<sp/>Initialize<sp/>Images</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/><sp/>Init<sp/>images<sp/>or<sp/>image<sp/>borders</highlight></codeline>
<codeline lineno="49"><highlight class="comment">*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="50"><highlight class="comment">//@{</highlight></codeline>
<codeline lineno="51"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initLine<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DestIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DestAccessor,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUETYPE&gt;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">initLineImpl(DestIterator<sp/>d,<sp/>DestIterator<sp/>dend,<sp/>DestAccessor<sp/>dest,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VALUETYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v,<sp/>VigraFalseType)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>d<sp/>!=<sp/>dend;<sp/>++d)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest.set(v,<sp/>d);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DestIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DestAccessor,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FUNCTOR&gt;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">initLineImpl(DestIterator<sp/>d,<sp/>DestIterator<sp/>dend,<sp/>DestAccessor<sp/>dest,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FUNCTOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>f,<sp/>VigraTrueType)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>d<sp/>!=<sp/>dend;<sp/>++d)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest.set(f(),<sp/>d);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DestIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DestAccessor,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUETYPE&gt;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">initLine(DestIterator<sp/>d,<sp/>DestIterator<sp/>dend,<sp/>DestAccessor<sp/>dest,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VALUETYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>initLineImpl(d,<sp/>dend,<sp/>dest,<sp/>v,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FunctorTraits&lt;VALUETYPE&gt;::isInitializer());</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DestIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DestAccessor,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FUNCTOR&gt;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">initLineFunctor(DestIterator<sp/>d,<sp/>DestIterator<sp/>dend,<sp/>DestAccessor<sp/>dest,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FUNCTOR<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>d<sp/>!=<sp/>dend;<sp/>++d)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest.set(f(),<sp/>d);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DestIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DestAccessor,<sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskAccessor,<sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">VALUETYPE&gt;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">initLineIfImpl(DestIterator<sp/>d,<sp/>DestIterator<sp/>dend,<sp/>DestAccessor<sp/>dest,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaskIterator<sp/>m,<sp/>MaskAccessor<sp/>mask,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VALUETYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v,<sp/>VigraFalseType)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>d<sp/>!=<sp/>dend;<sp/>++d,<sp/>++m)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mask(m))</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest.set(v,<sp/>d);</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DestIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DestAccessor,<sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskAccessor,<sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FUNCTOR&gt;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">initLineIfImpl(DestIterator<sp/>d,<sp/>DestIterator<sp/>dend,<sp/>DestAccessor<sp/>dest,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaskIterator<sp/>m,<sp/>MaskAccessor<sp/>mask,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FUNCTOR<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>f,<sp/>VigraTrueType)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>d<sp/>!=<sp/>dend;<sp/>++d,<sp/>++m)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mask(m))</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest.set(f(),<sp/>d);</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DestIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DestAccessor,<sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskAccessor,<sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">VALUETYPE&gt;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal">initLineIf(DestIterator<sp/>d,<sp/>DestIterator<sp/>dend,<sp/>DestAccessor<sp/>dest,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaskIterator<sp/>m,<sp/>MaskAccessor<sp/>mask,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VALUETYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>initLineIfImpl(d,<sp/>dend,<sp/>dest,<sp/>m,<sp/>mask,<sp/>v,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FunctorTraits&lt;VALUETYPE&gt;::isInitializer());</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DestIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DestAccessor,<sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskAccessor,<sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FUNCTOR&gt;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">initLineFunctorIf(DestIterator<sp/>d,<sp/>DestIterator<sp/>dend,<sp/>DestAccessor<sp/>dest,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaskIterator<sp/>m,<sp/>MaskAccessor<sp/>mask,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FUNCTOR<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>d<sp/>!=<sp/>dend;<sp/>++d,<sp/>++m)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mask(m))</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest.set(f(),<sp/>d);</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initImage<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="149"><highlight class="comment">/**<sp/>\brief<sp/>Write<sp/>a<sp/>value<sp/>to<sp/>every<sp/>pixel<sp/>in<sp/>an<sp/>image<sp/>or<sp/>rectangular<sp/>ROI.</highlight></codeline>
<codeline lineno="150"><highlight class="comment"></highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>function<sp/>can<sp/>be<sp/>used<sp/>to<sp/>init<sp/>the<sp/>image.</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/><sp/>It<sp/>uses<sp/>an<sp/>accessor<sp/>to<sp/>access<sp/>the<sp/>pixel<sp/>data.<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>initial<sp/>value<sp/>can<sp/>either<sp/>be<sp/>a<sp/>constant<sp/>of<sp/>appropriate<sp/>type<sp/>(compatible<sp/>with<sp/></highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>destination&apos;s<sp/>value_type),<sp/>or<sp/>a<sp/>functor<sp/>with<sp/>compatible<sp/>result_type.<sp/>These<sp/>two<sp/></highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/>cases<sp/>are<sp/>automatically<sp/>distinguished<sp/>when<sp/>&lt;tt&gt;FunctorTraits&lt;FUNCTOR&gt;::isInitializer&lt;/tt&gt;</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/>yields<sp/>&lt;tt&gt;VigraTrueType&lt;/tt&gt;.<sp/>Since<sp/>the<sp/>functor<sp/>is<sp/>passed<sp/>by<sp/>&lt;tt&gt;const&lt;/tt&gt;<sp/>reference,<sp/>its<sp/></highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;operator()&lt;/tt&gt;<sp/>must<sp/>be<sp/>const,<sp/>and<sp/>its<sp/>internal<sp/>state<sp/>may<sp/>need<sp/>to<sp/>be<sp/>&lt;tt&gt;mutable&lt;/tt&gt;.</highlight></codeline>
<codeline lineno="159"><highlight class="comment"></highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declarations:&lt;/b&gt;</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/><sp/>pass<sp/>arguments<sp/>explicitly:</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>ImageIterator,<sp/>class<sp/>Accessor,<sp/>class<sp/>VALUETYPE&gt;</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>initImage(ImageIterator<sp/>upperleft,<sp/>ImageIterator<sp/>lowerright,<sp/></highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Accessor<sp/>a,<sp/>VALUETYPE<sp/>const<sp/>&amp;<sp/>v);</highlight></codeline>
<codeline lineno="168"><highlight class="comment"></highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>ImageIterator,<sp/>class<sp/>Accessor,<sp/>class<sp/>FUNCTOR&gt;</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>initImage(ImageIterator<sp/>upperleft,<sp/>ImageIterator<sp/>lowerright,<sp/></highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Accessor<sp/>a,<sp/>FUNCTOR<sp/>const<sp/>&amp;<sp/>v);</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="174"><highlight class="comment"></highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/><sp/>use<sp/>argument<sp/>objects<sp/>in<sp/>conjunction<sp/>with<sp/>\ref<sp/>ArgumentObjectFactories<sp/>:</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>ImageIterator,<sp/>class<sp/>Accessor,<sp/>class<sp/>VALUETYPE&gt;</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>initImage(triple&lt;ImageIterator,<sp/>ImageIterator,<sp/>Accessor&gt;<sp/>img,<sp/>VALUETYPE<sp/>const<sp/>&amp;<sp/>v);</highlight></codeline>
<codeline lineno="180"><highlight class="comment"></highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>ImageIterator,<sp/>class<sp/>Accessor,<sp/>class<sp/>FUNCTOR&gt;</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>initImage(triple&lt;ImageIterator,<sp/>ImageIterator,<sp/>Accessor&gt;<sp/>img,<sp/>FUNCTOR<sp/>const<sp/>&amp;<sp/>v);</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/initimage.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/><sp/>Initialize<sp/>with<sp/>a<sp/>constant:</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BImage<sp/>img(100,<sp/>100);</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>init<sp/>the<sp/>image<sp/>with<sp/>the<sp/>value<sp/>128</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::initImage(destImageRange(img),<sp/>128);</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="199"><highlight class="comment"></highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/><sp/>Initialize<sp/>with<sp/>a<sp/>functor:</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/><sp/>struct<sp/>Counter<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Counter()<sp/>:<sp/>count(0)<sp/>{}</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>operator()()<sp/>const<sp/>{<sp/>return<sp/>count++;<sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mutable<sp/>int<sp/>count;</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::IImage<sp/>img(100,<sp/>100);</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>write<sp/>the<sp/>current<sp/>count<sp/>in<sp/>every<sp/>pixel</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::initImage(destImageRange(img),<sp/>Counter());</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="217"><highlight class="comment"></highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Required<sp/>Interface:&lt;/b&gt;</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/><sp/>ImageIterator<sp/>upperleft,<sp/>lowerright;</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/><sp/>ImageIterator::row_iterator<sp/>ix<sp/>=<sp/>upperleft.rowIterator();</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/><sp/><sp/><sp/>Accessor<sp/>accessor;</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/><sp/><sp/><sp/>VALUETYPE<sp/>v;</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/><sp/><sp/><sp/>accessor.set(v,<sp/>ix);<sp/></highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="230"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal">doxygen_overloaded_function(template<sp/>&lt;...&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__InitAlgo_1gaf6b3011611521bbc1c3e4dc619d1481e" kindref="member" tooltip="Write a value to every pixel in an image or rectangular ROI.">initImage</ref>)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ImageIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Accessor,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUETYPE&gt;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><ref refid="group__InitAlgo_1gaf6b3011611521bbc1c3e4dc619d1481e" kindref="member" tooltip="Write a value to every pixel in an image or rectangular ROI.">initImage</ref>(ImageIterator<sp/>upperleft,<sp/>ImageIterator<sp/>lowerright,<sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Accessor<sp/>a,<sp/><sp/>VALUETYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>lowerright.x<sp/>-<sp/>upperleft.x;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>upperleft.y<sp/>&lt;<sp/>lowerright.y;<sp/>++upperleft.y)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initLineImpl(upperleft.rowIterator(),<sp/>upperleft.rowIterator()<sp/>+<sp/>w,<sp/>a,<sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FunctorTraits&lt;VALUETYPE&gt;::isInitializer());</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ImageIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Accessor,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUETYPE&gt;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><ref refid="group__InitAlgo_1gaf6b3011611521bbc1c3e4dc619d1481e" kindref="member" tooltip="Write a value to every pixel in an image or rectangular ROI.">initImage</ref>(triple&lt;ImageIterator,<sp/>ImageIterator,<sp/>Accessor&gt;<sp/>img,<sp/>VALUETYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__InitAlgo_1gaf6b3011611521bbc1c3e4dc619d1481e" kindref="member" tooltip="Write a value to every pixel in an image or rectangular ROI.">initImage</ref>(img.first,<sp/>img.second,<sp/>img.third,<sp/>v);</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initImageWithFunctor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="261"><highlight class="comment">/**<sp/>\brief<sp/>Write<sp/>the<sp/>result<sp/>of<sp/>a<sp/>functor<sp/>call<sp/>to<sp/>every<sp/>pixel<sp/>in<sp/>an<sp/>image<sp/>or<sp/>rectangular<sp/>ROI.</highlight></codeline>
<codeline lineno="262"><highlight class="comment"></highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>function<sp/>can<sp/>be<sp/>used<sp/>to<sp/>init<sp/>the<sp/>image<sp/>by<sp/>calling<sp/>the<sp/>given<sp/></highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/><sp/><sp/><sp/>functor<sp/>for<sp/>each<sp/>pixel.<sp/>It<sp/>uses<sp/>an<sp/>accessor<sp/>to<sp/>access<sp/>the<sp/>pixel<sp/>data.<sp/>The<sp/>functor<sp/>is<sp/></highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/><sp/><sp/><sp/>passed<sp/>by<sp/>reference,<sp/>so<sp/>that<sp/>its<sp/>internal<sp/>state<sp/>can<sp/>be<sp/>updated<sp/>in<sp/>each<sp/>call.</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declarations:&lt;/b&gt;</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/><sp/><sp/><sp/>pass<sp/>arguments<sp/>explicitly:</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>ImageIterator,<sp/>class<sp/>Accessor,<sp/>class<sp/>FUNCTOR&gt;</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initImageWithFunctor(ImageIterator<sp/>upperleft,<sp/>ImageIterator<sp/>lowerright,<sp/></highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Accessor<sp/>a,<sp/><sp/>FUNCTOR<sp/>&amp;<sp/>f);</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="278"><highlight class="comment"></highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/><sp/>use<sp/>argument<sp/>objects<sp/>in<sp/>conjunction<sp/>with<sp/>\ref<sp/>ArgumentObjectFactories<sp/>:</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>ImageIterator,<sp/>class<sp/>Accessor,<sp/>class<sp/>FUNCTOR&gt;</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initImageWithFunctor(triple&lt;ImageIterator,<sp/>ImageIterator,<sp/>Accessor&gt;<sp/>img,<sp/>FUNCTOR<sp/>&amp;<sp/>f);</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/initimage.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/><sp/><sp/><sp/>struct<sp/>Counter<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Counter()<sp/>:<sp/>count(0)<sp/>{}</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>operator()()<sp/>const<sp/>{<sp/>return<sp/>count++;<sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mutable<sp/>int<sp/>count;</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::IImage<sp/>img(100,<sp/>100);</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>write<sp/>the<sp/>current<sp/>count<sp/>in<sp/>every<sp/>pixel</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/><sp/><sp/><sp/>Counter<sp/>counter;</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::initImageWithFunctor(destImageRange(img),<sp/>counter);</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="308"><highlight class="comment"></highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Required<sp/>Interface:&lt;/b&gt;</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/><sp/><sp/><sp/>ImageIterator<sp/>upperleft,<sp/>lowerright;</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/><sp/><sp/><sp/>ImageIterator::row_iterator<sp/>ix<sp/>=<sp/>upperleft.rowIterator();</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/><sp/><sp/><sp/>Accessor<sp/>accessor;</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/><sp/><sp/><sp/>Functor<sp/>f;</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/><sp/><sp/><sp/>accessor.set(f(),<sp/>ix);<sp/></highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="321"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal">doxygen_overloaded_function(template<sp/>&lt;...&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__InitAlgo_1gabae1fd1bcc1be861f086b347fefbf355" kindref="member" tooltip="Write the result of a functor call to every pixel in an image or rectangular ROI.">initImageWithFunctor</ref>)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ImageIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Accessor,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FUNCTOR&gt;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><ref refid="group__InitAlgo_1gabae1fd1bcc1be861f086b347fefbf355" kindref="member" tooltip="Write the result of a functor call to every pixel in an image or rectangular ROI.">initImageWithFunctor</ref>(ImageIterator<sp/>upperleft,<sp/>ImageIterator<sp/>lowerright,<sp/></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Accessor<sp/>a,<sp/><sp/>FUNCTOR<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="328"><highlight class="normal">{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>lowerright.x<sp/>-<sp/>upperleft.x;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>upperleft.y<sp/>&lt;<sp/>lowerright.y;<sp/>++upperleft.y)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initLineFunctor(upperleft.rowIterator(),<sp/>upperleft.rowIterator()<sp/>+<sp/>w,<sp/>a,<sp/>f);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ImageIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Accessor,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FUNCTOR&gt;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><ref refid="group__InitAlgo_1gabae1fd1bcc1be861f086b347fefbf355" kindref="member" tooltip="Write the result of a functor call to every pixel in an image or rectangular ROI.">initImageWithFunctor</ref>(triple&lt;ImageIterator,<sp/>ImageIterator,<sp/>Accessor&gt;<sp/>img,<sp/>FUNCTOR<sp/>&amp;<sp/>f)</highlight></codeline>
<codeline lineno="341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__InitAlgo_1gabae1fd1bcc1be861f086b347fefbf355" kindref="member" tooltip="Write the result of a functor call to every pixel in an image or rectangular ROI.">initImageWithFunctor</ref>(img.first,<sp/>img.second,<sp/>img.third,<sp/>f);</highlight></codeline>
<codeline lineno="343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initImageIf<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="351"><highlight class="comment">/**<sp/>\brief<sp/>Write<sp/>value<sp/>to<sp/>pixel<sp/>in<sp/>the<sp/>image<sp/>if<sp/>mask<sp/>is<sp/>true.</highlight></codeline>
<codeline lineno="352"><highlight class="comment"></highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>function<sp/>can<sp/>be<sp/>used<sp/>to<sp/>init<sp/>a<sp/>region-of-interest<sp/>of<sp/>the<sp/>image.</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/><sp/><sp/><sp/>It<sp/>uses<sp/>an<sp/>accessor<sp/>to<sp/>access<sp/>the<sp/>pixel<sp/>data.</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>initial<sp/>value<sp/>can<sp/>either<sp/>be<sp/>a<sp/>constant<sp/>of<sp/>appropriate<sp/>type<sp/>(compatible<sp/>with<sp/></highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>destination&apos;s<sp/>value_type),<sp/>or<sp/>a<sp/>functor<sp/>with<sp/>compatible<sp/>result_type.<sp/>These<sp/>two<sp/></highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/><sp/><sp/><sp/>cases<sp/>are<sp/>automatically<sp/>distinguished<sp/>when<sp/>&lt;tt&gt;FunctorTraits&lt;FUNCTOR&gt;::isInitializer&lt;/tt&gt;</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/><sp/><sp/><sp/>yields<sp/>&lt;tt&gt;VigraTrueType&lt;/tt&gt;.<sp/>Since<sp/>the<sp/>functor<sp/>is<sp/>passed<sp/>by<sp/>&lt;tt&gt;const&lt;/tt&gt;<sp/>reference,<sp/>its<sp/></highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;operator()&lt;/tt&gt;<sp/>must<sp/>be<sp/>const,<sp/>and<sp/>its<sp/>internal<sp/>state<sp/>may<sp/>need<sp/>to<sp/>be<sp/>&lt;tt&gt;mutable&lt;/tt&gt;.</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declarations:&lt;/b&gt;</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/><sp/><sp/><sp/>pass<sp/>arguments<sp/>explicitly:</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>ImageIterator,<sp/>class<sp/>Accessor,<sp/></highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>MaskImageIterator,<sp/>class<sp/>MaskAccessor,</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>VALUETYPE&gt;</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>initImageIf(ImageIterator<sp/>upperleft,<sp/>ImageIterator<sp/>lowerright,<sp/>Accessor<sp/>a,</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaskImageIterator<sp/>mask_upperleft,<sp/>MaskAccessor<sp/>ma,</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VALUETYPE<sp/>const<sp/>&amp;<sp/>v);</highlight></codeline>
<codeline lineno="373"><highlight class="comment"></highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>ImageIterator,<sp/>class<sp/>Accessor,<sp/></highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>MaskImageIterator,<sp/>class<sp/>MaskAccessor,</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>FUNCTOR&gt;</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>initImageIf(ImageIterator<sp/>upperleft,<sp/>ImageIterator<sp/>lowerright,<sp/>Accessor<sp/>a,</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaskImageIterator<sp/>mask_upperleft,<sp/>MaskAccessor<sp/>ma,</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FUNCTOR<sp/>const<sp/>&amp;<sp/>v);</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/><sp/><sp/><sp/>use<sp/>argument<sp/>objects<sp/>in<sp/>conjunction<sp/>with<sp/>\ref<sp/>ArgumentObjectFactories<sp/>:</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>ImageIterator,<sp/>class<sp/>Accessor,<sp/></highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>MaskImageIterator,<sp/>class<sp/>MaskAccessor,</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>VALUETYPE&gt;</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>initImageIf(triple&lt;ImageIterator,<sp/>ImageIterator,<sp/>Accessor&gt;<sp/>img,<sp/></highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;MaskImageIterator,<sp/>MaskAccessor&gt;<sp/>mask,</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VALUETYPE<sp/>const<sp/>&amp;<sp/>v);</highlight></codeline>
<codeline lineno="392"><highlight class="comment"></highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>ImageIterator,<sp/>class<sp/>Accessor,<sp/></highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>MaskImageIterator,<sp/>class<sp/>MaskAccessor,</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class<sp/>FUNCTOR&gt;</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>initImageIf(triple&lt;ImageIterator,<sp/>ImageIterator,<sp/>Accessor&gt;<sp/>img,<sp/></highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;MaskImageIterator,<sp/>MaskAccessor&gt;<sp/>mask,</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FUNCTOR<sp/>const<sp/>&amp;<sp/>v);</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/initimage.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="406"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="408"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BImage<sp/>img(100,<sp/>100);</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BImage<sp/>mask(100,<sp/>100);</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>zero<sp/>the<sp/>ROI</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::initImageIf(destImageRange(img),<sp/></highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maskImage(mask),</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vigra::NumericTraits&lt;vigra::BImage::PixelType&gt;::zero());</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="416"><highlight class="comment"></highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Required<sp/>Interface:&lt;/b&gt;</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="419"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/><sp/><sp/><sp/>ImageIterator<sp/>upperleft,<sp/>lowerright;</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/><sp/><sp/><sp/>MaskImageIterator<sp/>mask_upperleft;</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/><sp/><sp/><sp/>ImageIterator::row_iterator<sp/>ix<sp/>=<sp/>upperleft.rowIterator();</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/><sp/><sp/><sp/>MaskImageIterator::row_iterator<sp/>mx<sp/>=<sp/>mask_upperleft.rowIterator();</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/><sp/><sp/><sp/>Accessor<sp/>accessor;</highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/><sp/><sp/><sp/>MaskAccessor<sp/>mask_accessor;</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/><sp/><sp/><sp/>VALUETYPE<sp/>v;</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/><sp/><sp/><sp/>if(mask_accessor(mx))<sp/>accessor.set(v,<sp/>ix);<sp/></highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="431"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="432"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal">doxygen_overloaded_function(template<sp/>&lt;...&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__InitAlgo_1ga60e83126eb93647e7615d7e50830ae33" kindref="member" tooltip="Write value to pixel in the image if mask is true.">initImageIf</ref>)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Accessor,<sp/></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskAccessor,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">VALUETYPE&gt;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><ref refid="group__InitAlgo_1ga60e83126eb93647e7615d7e50830ae33" kindref="member" tooltip="Write value to pixel in the image if mask is true.">initImageIf</ref>(ImageIterator<sp/>upperleft,<sp/>ImageIterator<sp/>lowerright,<sp/>Accessor<sp/>a,</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaskImageIterator<sp/>mask_upperleft,<sp/>MaskAccessor<sp/>ma,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VALUETYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="442"><highlight class="normal">{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>lowerright.x<sp/>-<sp/>upperleft.x;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>upperleft.y<sp/>&lt;<sp/>lowerright.y;<sp/>++upperleft.y,<sp/>++mask_upperleft.y)</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initLineIfImpl(upperleft.rowIterator(),<sp/></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upperleft.rowIterator()<sp/>+<sp/>w,<sp/>a,<sp/></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask_upperleft.rowIterator(),<sp/>ma,<sp/></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FunctorTraits&lt;VALUETYPE&gt;::isInitializer());</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Accessor,<sp/></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskImageIterator,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MaskAccessor,</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">VALUETYPE&gt;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><ref refid="group__InitAlgo_1ga60e83126eb93647e7615d7e50830ae33" kindref="member" tooltip="Write value to pixel in the image if mask is true.">initImageIf</ref>(triple&lt;ImageIterator,<sp/>ImageIterator,<sp/>Accessor&gt;<sp/>img,<sp/></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pair&lt;MaskImageIterator,<sp/>MaskAccessor&gt;<sp/>mask,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VALUETYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="462"><highlight class="normal">{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__InitAlgo_1ga60e83126eb93647e7615d7e50830ae33" kindref="member" tooltip="Write value to pixel in the image if mask is true.">initImageIf</ref>(img.first,<sp/>img.second,<sp/>img.third,<sp/>mask.first,<sp/>mask.second,<sp/>v);</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initImageBorder<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="comment">/********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="472"><highlight class="comment">/**<sp/>\brief<sp/>Write<sp/>value<sp/>to<sp/>the<sp/>specified<sp/>border<sp/>pixels<sp/>in<sp/>the<sp/>image.</highlight></codeline>
<codeline lineno="473"><highlight class="comment"></highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/><sp/><sp/><sp/>A<sp/>pixel<sp/>is<sp/>initialized<sp/>if<sp/>its<sp/>distance<sp/>to<sp/>the<sp/>border<sp/></highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/><sp/><sp/><sp/>is<sp/>at<sp/>most<sp/>&apos;borderwidth&apos;.<sp/>It<sp/>uses<sp/>an<sp/>accessor<sp/>to<sp/>access<sp/>the<sp/>pixel<sp/>data.</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>initial<sp/>value<sp/>can<sp/>either<sp/>be<sp/>a<sp/>constant<sp/>of<sp/>appropriate<sp/>type<sp/>(compatible<sp/>with<sp/></highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>destination&apos;s<sp/>value_type),<sp/>or<sp/>a<sp/>functor<sp/>with<sp/>compatible<sp/>result_type.<sp/>These<sp/>two<sp/></highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/><sp/><sp/><sp/>cases<sp/>are<sp/>automatically<sp/>distinguished<sp/>when<sp/>&lt;tt&gt;FunctorTraits&lt;FUNCTOR&gt;::isInitializer&lt;/tt&gt;</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/><sp/><sp/><sp/>yields<sp/>&lt;tt&gt;VigraTrueType&lt;/tt&gt;.<sp/>Since<sp/>the<sp/>functor<sp/>is<sp/>passed<sp/>by<sp/>&lt;tt&gt;const&lt;/tt&gt;<sp/>reference,<sp/>its<sp/></highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;tt&gt;operator()&lt;/tt&gt;<sp/>must<sp/>be<sp/>const,<sp/>and<sp/>its<sp/>internal<sp/>state<sp/>may<sp/>need<sp/>to<sp/>be<sp/>&lt;tt&gt;mutable&lt;/tt&gt;.</highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Declarations:&lt;/b&gt;</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/><sp/><sp/><sp/>pass<sp/>arguments<sp/>explicitly:</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>ImageIterator,<sp/>class<sp/>Accessor,<sp/>class<sp/>VALUETYPE&gt;</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>initImageBorder(ImageIterator<sp/>upperleft,<sp/>ImageIterator<sp/>lowerright,<sp/>Accessor<sp/>a,</highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>border_width,<sp/>VALUETYPE<sp/>const<sp/>&amp;<sp/>v);</highlight></codeline>
<codeline lineno="491"><highlight class="comment"></highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>ImageIterator,<sp/>class<sp/>Accessor,<sp/>class<sp/>FUNCTOR&gt;</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>initImageBorder(ImageIterator<sp/>upperleft,<sp/>ImageIterator<sp/>lowerright,<sp/>Accessor<sp/>a,</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>border_width,<sp/>FUNCTOR<sp/>const<sp/>&amp;<sp/>v);</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="497"><highlight class="comment"></highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/><sp/><sp/><sp/>use<sp/>argument<sp/>objects<sp/>in<sp/>conjunction<sp/>with<sp/>\ref<sp/>ArgumentObjectFactories<sp/>:</highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/><sp/><sp/><sp/>namespace<sp/>vigra<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>ImageIterator,<sp/>class<sp/>Accessor,<sp/>class<sp/>VALUETYPE&gt;</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>initImageBorder(triple&lt;ImageIterator,<sp/>ImageIterator,<sp/>Accessor&gt;<sp/>img,<sp/></highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>border_width,<sp/>VALUETYPE<sp/>const<sp/>&amp;<sp/>v);</highlight></codeline>
<codeline lineno="504"><highlight class="comment"></highlight></codeline>
<codeline lineno="505"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>ImageIterator,<sp/>class<sp/>Accessor,<sp/>class<sp/>FUNCTOR&gt;</highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>initImageBorder(triple&lt;ImageIterator,<sp/>ImageIterator,<sp/>Accessor&gt;<sp/>img,<sp/></highlight></codeline>
<codeline lineno="507"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>border_width,<sp/>FUNCTOR<sp/>const<sp/>&amp;<sp/>v);</highlight></codeline>
<codeline lineno="508"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="510"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="511"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Usage:&lt;/b&gt;</highlight></codeline>
<codeline lineno="512"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="513"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;\#include&lt;/b&gt;<sp/>\&lt;vigra/initimage.hxx\&gt;&lt;br&gt;</highlight></codeline>
<codeline lineno="514"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Namespace:<sp/>vigra</highlight></codeline>
<codeline lineno="515"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="516"><highlight class="comment"><sp/><sp/><sp/><sp/>\code</highlight></codeline>
<codeline lineno="517"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::BImage<sp/>img(100,<sp/>100);</highlight></codeline>
<codeline lineno="518"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="519"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>zero<sp/>a<sp/>border<sp/>of<sp/>5<sp/>pixel</highlight></codeline>
<codeline lineno="520"><highlight class="comment"><sp/><sp/><sp/><sp/>vigra::initImageBorder(destImageRange(img),</highlight></codeline>
<codeline lineno="521"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5,<sp/>vigra::NumericTraits&lt;vigra::BImage::PixelType&gt;::zero());</highlight></codeline>
<codeline lineno="522"><highlight class="comment"><sp/><sp/><sp/><sp/>\endcode</highlight></codeline>
<codeline lineno="523"><highlight class="comment"></highlight></codeline>
<codeline lineno="524"><highlight class="comment"><sp/><sp/><sp/><sp/>&lt;b&gt;<sp/>Required<sp/>Interface:&lt;/b&gt;</highlight></codeline>
<codeline lineno="525"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="526"><highlight class="comment"><sp/><sp/><sp/><sp/>see<sp/>\ref<sp/>initImage()</highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="528"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal">doxygen_overloaded_function(template<sp/>&lt;...&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__InitAlgo_1gac8aaba3c94bd12dca0ffc3b785441665" kindref="member" tooltip="Write value to the specified border pixels in the image.">initImageBorder</ref>)</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ImageIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Accessor,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUETYPE&gt;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><ref refid="group__InitAlgo_1gac8aaba3c94bd12dca0ffc3b785441665" kindref="member" tooltip="Write value to the specified border pixels in the image.">initImageBorder</ref>(ImageIterator<sp/>upperleft,<sp/>ImageIterator<sp/>lowerright,<sp/></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Accessor<sp/>a,<sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>border_width,<sp/>VALUETYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="536"><highlight class="normal">{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>lowerright.x<sp/>-<sp/>upperleft.x;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>lowerright.y<sp/>-<sp/>upperleft.y;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hb<sp/>=<sp/>(border_width<sp/>&gt;<sp/>h)<sp/>?<sp/>h<sp/>:<sp/>border_width;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wb<sp/>=<sp/>(border_width<sp/>&gt;<sp/>w)<sp/>?<sp/>w<sp/>:<sp/>border_width;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__InitAlgo_1gaf6b3011611521bbc1c3e4dc619d1481e" kindref="member" tooltip="Write a value to every pixel in an image or rectangular ROI.">initImage</ref>(upperleft,<sp/>upperleft+Diff2D(w,hb),<sp/>a,<sp/>v);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__InitAlgo_1gaf6b3011611521bbc1c3e4dc619d1481e" kindref="member" tooltip="Write a value to every pixel in an image or rectangular ROI.">initImage</ref>(upperleft,<sp/>upperleft+Diff2D(wb,h),<sp/>a,<sp/>v);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__InitAlgo_1gaf6b3011611521bbc1c3e4dc619d1481e" kindref="member" tooltip="Write a value to every pixel in an image or rectangular ROI.">initImage</ref>(upperleft+Diff2D(0,h-hb),<sp/>lowerright,<sp/>a,<sp/>v);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__InitAlgo_1gaf6b3011611521bbc1c3e4dc619d1481e" kindref="member" tooltip="Write a value to every pixel in an image or rectangular ROI.">initImage</ref>(upperleft+Diff2D(w-wb,0),<sp/>lowerright,<sp/>a,<sp/>v);</highlight></codeline>
<codeline lineno="547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ImageIterator,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Accessor,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>VALUETYPE&gt;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><ref refid="group__InitAlgo_1gac8aaba3c94bd12dca0ffc3b785441665" kindref="member" tooltip="Write value to the specified border pixels in the image.">initImageBorder</ref>(triple&lt;ImageIterator,<sp/>ImageIterator,<sp/>Accessor&gt;<sp/>img,<sp/></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>border_width,<sp/>VALUETYPE<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>v)</highlight></codeline>
<codeline lineno="554"><highlight class="normal">{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__InitAlgo_1gac8aaba3c94bd12dca0ffc3b785441665" kindref="member" tooltip="Write value to the specified border pixels in the image.">initImageBorder</ref>(img.first,<sp/>img.second,<sp/>img.third,<sp/>border_width,<sp/>v);</highlight></codeline>
<codeline lineno="556"><highlight class="normal">}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="558"><highlight class="comment">//@}</highlight></codeline>
<codeline lineno="559"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>vigra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>VIGRA_INITIMAGE_HXX</highlight></codeline>
    </programlisting>
    <location file="C:/Users/ukoethe/Arbeit/vigra-git/vigra/include/vigra/initimage.hxx"/>
  </compounddef>
</doxygen>
