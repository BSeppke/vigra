/** @name VIGRA Reference Manual 

    \begin{center}
    {\LARGE {\bf VIGRA - Vision with Generic Algorithms}} \\
    {\bf Version VERSION_VERSION_VERSION}
    {\bf by \URL[Ullrich K&ouml;the]{http://kogs-www.informatik.uni-hamburg.de/~koethe/}}
    \end{center}
    
    VIGRA  is a computer vision library that puts its main emphasize on 
    {\em flexible algorithms}, because
    algorithms represent the principle know-how of this field.
    The library was consequently built
    using {\em generic programming} as introduced by Stepanov
    and Musser  and exemplified in the C++ 
    \URL[Standard Template Library]{WWW_STL_DOCU}.
    By writing a few adapters (image iterators and accessors) 
    you can use VIGRA's algorithms on top of 
    {\em your} data structures, within {\em your} environment. Alternatively,
    you can also use the data structures provided within VIGRA, which can
    be easily adapted to a wide range of applications. VIGRA's flexibility 
    comes almost for free: Since the design uses compile-time polymorphism
    (templates), performance of the compiled program approaches that 
    of a traditional, hand tuned, inflexible, solution.
    
    VIGRA's design is documented in the chapter {\em "Reusable Software in 
    Computer Vision"} by 
    \URL[Ullrich K&ouml;the]{http://kogs-www.informatik.uni-hamburg.de/~koethe/}, 
    in: B. J&auml;hne, H. Hau&szlig;ecker, P. Gei&szlig;ler: "Handbook on 
    Computer Vision and  Applications", volume 3, Acadamic Press, 1999. 
    If you don't have the book,  you may read a 
    \URL[draft of this article]{documents/GenericProg2D.ps}. A shorter article 
    {\em "\URL[STL Style Generic Programming with Images]{http://kogs-www.informatik.uni-hamburg.de/~koethe/papers/GenericProg2DC++Report.ps.gz}"}
    describing some of the 
    ideas has appeared in the January 2000 issue of
    \URL[C++ Report Magazine]{http://www.creport.com/}. The most comprehensive source of information is
    U. K&ouml;the's PhD thesis {\em "\URL[Generische Programmierung f&uuml;r die Bildverarbeitung]{http://kogs-www.informatik.uni-hamburg.de/~koethe/papers/index.html#PhD}"}. 
    However, this is written in German.
        
    VIGRA is subject to this \URL[LICENSE]{../LICENSE}. 
    
    
    {\large {\bf Documentation}}
    
    The documentation can be found in #$VIGRA_PATH/doc/#, the start file is 
    #$VIGRA_PATH/doc/index.html# (this file).
    
*/
//@{

//@Include: ../include/vigra/utilities.hxx 
//@Include: ../include/vigra/error.hxx 
//@Include: ../include/vigra/numerictraits.hxx 

//@Include: ../include/vigra/stdimage.hxx 

/** @name Import and Export
    There are two fundamentally different approaches to interfacing between 
    VIGRA and the rest of the world.
    
    {\bf If you already have an image data type in your system:}
    
    Then I recommend using VIGRA's algorithms directly on top of your
    data type. To do this, you have to provide image iterators and 
    accessors. In many cases, the standard implementations \Ref{ImageIterator}
    and \Ref{StandardAccessor} coming with VIGRA will be applicable. Otherwise,
    you have to write your own versions which isn't very difficult 
    (look at the code of the above implementations for guidance). 
    
    Alternatively, you may use the \Ref{Image Data Structures} provided within 
    VIGRA and convert your data type into one of them. Take a look at
    \Ref{viffToScalarImage} and \Ref{createScalarViffImage} to see how this 
    might be done.
    
    {\bf If you don't have an image data type in your system:}
    
    Use the \Ref{Image Data Structures} provided within VIGRA and use one of the
    import/export facilities above.
    
    @memo Conversion from and to other image data types
*/
//@{

//@Include: ../include/vigra/impex.hxx 
//@Include: ../include/vigra/lug.hxx 
//@Include: ../include/vigra/viff.hxx 
//@Include: ../include/vigra/tiff.hxx 

//@}


/** @name Image processing
    @memo Including image arithmetic, convolution, morphology 
*/
//@{

//@Include: ../include/vigra/stdimagefunctions.hxx
//@Include: ../include/vigra/functorexpression.hxx
//@Include: ../include/vigra/convolution.hxx 
//@Include: ../include/vigra/flatmorphology.hxx

//@}

/** @name Image analysis

    {\bf See also:} \Ref{Functors To Inspect Images} and \Ref{Threshold}

    @memo Segmentation and feature extraction 
*/
//@{

//@Include: ../include/vigra/labelimage.hxx ../include/vigra/localminmax.hxx 
//@Include: ../include/vigra/distancetransform.hxx 
//@Include: ../include/vigra/edgedetection.hxx 

//@Include: ../include/vigra/cornerdetection.hxx 
//@Include: ../include/vigra/seededregiongrowing.hxx 
//Include: ../include/vigra/morphological_appropriate_scale.hxx
//Include: ../include/vigra/feature_adjacency_graph.hxx

//@}

//Include: index_extensions.dxx
//@Include: examples.dxx
//@Include: credits_changelog.dxx
//@Include: installation.dxx

//@}
