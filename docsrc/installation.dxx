/** @name Installation

    VIGRA can be downloaded from \URL[http://kogs-www.informatik.uni-hamburg.de/~koethe/vigra/vigraVERSION_VERSION_VERSION.tar.gz]{http://kogs-www.informatik.uni-hamburg.de/~koethe/vigra/vigraVERSION_VERSION_VERSION.tar.gz}.
    
    VIGRA is known to work with the following compilers:
    
    \begin{itemize}
    \item SGI C++ 7.2 and 7.3 (CC -n32)
    \item \URL[GNU g++ 2.95.1 and newer]{http://gcc.gnu.org/} 
          (formerly EGCS 1.1)
    \item Microsoft Visual C++ 5.0, patchlevel 3
    \end{itemize}

    VIGRA is known NOT to work with the following compilers:

    \begin{itemize}
    \item GNU g++ 2.8.x and earlier
    \item SUN C++ 4.2 (Sun's old compiler, a new version exists, 
        but has not been tried yet)
    \end{itemize}

    VIGRA should work with any standard conforming C++ compiler

    {\bf Unix:}
    
    \begin{itemize}
    \item uncompress and unpack the source distribution
    \item set the following environment variables:
    
    \begin{itemize}
    \item tell the system where the VIGRA sources reside 
    \begin{verbatim}
    > setenv VIGRA_PATH [some path]/vigraVERSION_VERSION_VERSION
    \end{verbatim}    
    \item specify which compiler and makefile will be used 
    (currently supported values:     
    \begin{itemize}
         \item "GCC" for \URL[GNU g++]{http://gcc.gnu.org/} (2.95.1 and 
         newer) and EGCS 1.1, 
         \item "IRIXCC7.2.0" for SGI C++ 7.2.0, 
         \item "IRIXCC7.2.1" for SGI C++ 7.2.1,
         \item "IRIXCC" for SGI C++ 7.3,
         \item "COMPILER" for any compiler not in this list)
    \end{itemize}
    \begin{verbatim}
    > setenv VIGRA_COMPILER GCC       
    \end{verbatim}    
    To add support for a new compiler, edit the file 
    #$VIGRA_PATH/config/COMPILER.mak# in order to tell VIGRA how your 
    compiler is invoked. In this case, you'll have to specify 
    #setenv VIGRA_COMPILER COMPILER#. If your compiler does not conform to
    the C++ standard, you may also need to add compiler specific settings
    in the file #$VIGRA_PATH/include/vigra/config.hxx#.

    \item specify the subdirectory where binaries go (for example, libraries 
     will be installed at
     #$VIGRA_PATH/lib/$VIGRA_PLATFORM#)
    \begin{verbatim}
    > setenv VIGRA_PLATFORM Solaris       
    \end{verbatim}
     This variable can be empty.
    
    \end{itemize}
    
    \item specify if and where JPEG and TIFF libraries are installed: \\
    
    \begin{itemize}
    \item edit #$VIGRA_PATH/src/impex/Makefile#: \\
     {\em either} update the 
     paths to the include files for \URL[libjpeg]{http://www.ijg.org/} and 
    \URL[libtiff]{http://www.libtiff.org/} on your 
    system \\
    {\em or} comment out the lines #HAS_JPEG# and #HAS_TIFF#.
    
    \item edit the LIB macro in #$VIGRA_PATH/src/examples/Makefile#: \\
    {\em either} add the 
    paths to the library files \URL[libjpeg.a]{http://www.ijg.org/} and 
    \URL[libtiff.a]{http://www.libtiff.org/} on your 
    system \\
    {\em or} remove -ljpeg and -ltiff.
    
    \end{itemize}
    
    \item build the library and the \Ref{Examples}:
    
    \begin{verbatim}
    > cd $VIGRA_PATH
    > make
    \end{verbatim}
    \end{itemize}
    
    {\bf Windows:}
    
    \begin{itemize}
    \item uncompress and unpack the source distribution
    \item go into the directory #[some path]/vigra/src/#
    \item load the workspace #vigra.dsw# into VisualC++
    \item set #impex# as active project and
    
    \begin{itemize}
    \item specify if and where JPEG and TIFF libraries are installed: \\
    open the dialog Project:Settings:C++:Preprocessor and {\em either} update 
    the paths to the
    include files for \URL[jpeg.lib]{http://www.ijg.org/} and 
    \URL[tiff.lib]{http://www.libtiff.org/} on your 
    system - {\em or} - remove the defines #HasJPEG# and #HasTIFF#.
    
    \item likewise, enter the path to jpeg.lib and tiff.lib in the dialog
    Project:Settings:Link or remove these libraries from the library list (do this for 
    all projects at once)
    
    \item build the project #impex# (that is, the library #vigraimpex.lib#)
    
    \end{itemize}
    \item build the other projects containing the \Ref{Examples} (These programs can be 
    invoked from the command line.)
    \end{itemize}

    @memo
    
*/
